quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,", used to construct it. More...;  ; class  ClassInfo;  Meta information class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). More...;  ; class  Data;  Container that holds a variable for a component. More...;  ; class  EmptyData;  ; class  DataContentValue;  ; class  DataContentValue< T, false >;  ; class  DataContentValue< T, true >;  ; class  DataFileName;  Data specialized to store filenames, potentially relative to the current directory at the time it was specified. More...;  ; class  DataFileNameVector;  ; class  DataLink;  DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. More...;  ; class  DDGNode;  A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. More...;  ; class  DetachNodeEvent;  ; class  Event;  Base class for all events received by the objects. More...;  ; class  GUIEvent;  This event notifies about GUI interaction. More...;  ; class  HapticDeviceEvent;  This event notifies about haptic device interaction. More...;  ; class  IdleEvent;  This event is propagated along the objects hierarchy at regular interval. More...;  ; class  JoystickEvent;  JoystickEvent Class. More...;  ; class  KeypressedEvent;  This event is propagated along the objects when a key on the keyboard is pressed. More...;  ; class  KeyreleasedEvent;  This event is propagated along the objects when a key on the keyboard is released. More...;  ; class  LinkTraitsDestPtr;  ; c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:3088,interface,interface,3088,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['interface'],['interface']
Integrability,". Data<SReal> sofa::component::odesolver::forward::DampVelocitySolver::d_threshold. Threshold under which the velocities are canceled. . ◆ rate. sofa::core::objectmodel::RenamedData<SReal> sofa::component::odesolver::forward::DampVelocitySolver::rate. ◆ threshold. sofa::core::objectmodel::RenamedData<SReal> sofa::component::odesolver::forward::DampVelocitySolver::threshold. Constructor details. ◆ DampVelocitySolver(). sofa::component::odesolver::forward::DampVelocitySolver::DampVelocitySolver ; (; ). protected . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::forward::DampVelocitySolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::forward::DampVelocitySolver::getSolutionIntegrationFactor ; (; int ; ); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS(). sofa::component::odesolver::forward::DampVelocitySolver::SOFA_CLASS ; (; DampVelocitySolver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::DampVelocitySolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverforwardDampVelocitySolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html:16066,integrat,integration,16066,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,1,['integrat'],['integration']
Integrability,". Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObject() [2/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObject() [3/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node. ◆ getObjects() [1/6]. void sofa::core::objectmodel::BaseContext::getObjects ; (; const ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObjects() [2/6]. void sofa::core::objectmodel::BaseContext::getObjects ; (; const ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:26094,wrap,wrapper,26094,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,". More...;  ; Data< bool > p_advancedRendering;  If true, viewport will be hidden if advancedRendering visual flag is not enabled. More...;  ; Data< bool > p_useFBO;  Use a FBO to render the viewport. More...;  ; Data< bool > p_swapMainView;  Swap this viewport with the main view. More...;  ; Data< bool > p_drawCamera;  Draw a frame representing the camera (see it in main viewport) More...;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglViewport, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void preDrawSce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html:2073,message,messages,2073,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_viewport.html,1,['message'],['messages']
Integrability,". More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:5362,depend,dependent,5362,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,46,['depend'],['dependent']
Integrability,". More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html:5453,depend,dependent,5453,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,1,['depend'],['dependent']
Integrability,". More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronSetTopologyModifier ();  ;  ~TetrahedronSetTopologyModifier () override;  ; void addTetrahedraWarning (const size_t nTetrahedra, const sofa::type::vector< Tetrahedron > &tetrahedraList, const sofa::type::vector< TetrahedronID > &tetrahedraIndexList);  Sends a message to warn that some tetrahedra were added in this topology. More...;  ; void addTetrahedraWarning (const size_t nTetrahedra, const sofa::type::vector< Tetrahedron > &tetrahedraList, const sofa::type::vector< TetrahedronID > &tetrahedraIndexList, const sofa::type::vector< sofa::type::vector< TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some tetrahedra were added in this topology. More...;  ; virtual void addTetrahedraProcess (const sofa::type::vector< Tetrahedron > &tetrahedra);  Actually Add some tetrahedra to this topology. More...;  ; void removeTetrahedraWarning (sofa::type::vector< TetrahedronID > &tetrahedra);  Sends a message to warn that some tetrahedra are about to be deleted. More...;  ; virtual void removeTetrahedraProcess (const sofa::type::vector< TetrahedronID > &indic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:19204,message,message,19204,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,. SOFA - Topic Tag: Windows_11. /windows_7; . /feed; ; Windows_7 – SOFA. /page; . /2; ; SOFA - Topic Tag: Windows_7. /3; ; SOFA - Topic Tag: Windows_7. /4; ; SOFA - Topic Tag: Windows_7. /5; ; SOFA - Topic Tag: Windows_7. /6; ; SOFA - Topic Tag: Windows_7. /7; ; SOFA - Topic Tag: Windows_7. SOFA - Topic Tag: Windows_7. /windows_8; . /feed; ; Windows_8 – SOFA. SOFA - Topic Tag: Windows_8. /windows_81; . /feed; ; Windows_81 – SOFA. SOFA - Topic Tag: Windows_81. /windows10; . /feed; ; Windows10 – SOFA. SOFA - Topic Tag: Windows10. /windows-10; . /feed; ; Windows 10 – SOFA. SOFA - Topic Tag: Windows 10. /windows10-64bits; . /feed; ; Windows10-64bits – SOFA. SOFA - Topic Tag: Windows10-64bits. /windows-10-x64-build; . /feed; ; Windows 10 x64 build – SOFA. SOFA - Topic Tag: Windows 10 x64 build. /windows-7; . /feed; ; windows 7 – SOFA. SOFA - Topic Tag: windows 7. /windows-build; . /feed; ; Windows Build – SOFA. SOFA - Topic Tag: Windows Build. /windows-dependency-pack; . /feed; ; windows dependency pack – SOFA. SOFA - Topic Tag: windows dependency pack. /windows-sofa-v20-12; . /feed; ; Windows; SOFA v20.12 – SOFA. SOFA - Topic Tag: Windows; SOFA v20.12. /writestate; . /feed; ; writestate – SOFA. SOFA - Topic Tag: writestate. /xitact; . /feed; ; Xitact – SOFA. SOFA - Topic Tag: Xitact. /xitact-device; . /feed; ; Xitact Device – SOFA. SOFA - Topic Tag: Xitact Device. /xml; . /feed; ; xml – SOFA. SOFA - Topic Tag: xml. /xml-collision; . /feed; ; XML collision – SOFA. SOFA - Topic Tag: XML collision. /xml-reference; . /feed; ; XML Reference – SOFA. SOFA - Topic Tag: XML Reference. /zeromq; . /feed; ; zeroMQ – SOFA. SOFA - Topic Tag: zeroMQ. /zlib; . /feed; ; zlib – SOFA. SOFA - Topic Tag: zlib. /zmq; . /feed; ; ZMQ – SOFA. SOFA - Topic Tag: ZMQ. /users; . /a0a0; . /engagements; ; SOFA - a0a0's Profile. /replies; ; SOFA - a0a0's Replies. /topics; ; SOFA - a0a0's Topics. SOFA - a0a0's Profile. /aainsanity; . /engagements; ; SOFA - Aboveallinsanity's Profile. /replies; ; SOFA - ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:495727,depend,dependency,495727,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency']
Integrability,". SOFA API: sofa::component::collision::detection::intersection::DiscreteIntersection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::intersection::DiscreteIntersection Class Reference . #include <DiscreteIntersection.h>. Inheritance diagram for sofa::component::collision::detection::intersection::DiscreteIntersection:. [legend]. Public Attributes; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DiscreteIntersection, sofa::core::collision::Intersection);  ; core::collision::ElementIntersector * findIntersector (core::CollisionModel *object1, core::CollisionModel *object2, bool &swapModels) override;  Return the intersector class handling the given pair of collision models, or nullptr if not supported. More...;  ; virtual bool testIntersection (collision::geometry::Cube &cube1, collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:1017,message,messages,1017,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,1,['message'],['messages']
Integrability,". SOFA API: sofa::helper::logging::Message Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::Message Class Reference . #include <Message.h>; Detailed Description; A message is the core object of the msg_* API. A message contains a textual description provided by the user as well as the location in source file (or in a separated file) from where the message have been emitted. A message also contains a ComponentInfo which can be used to provide additional details about the emitter's context. . Static Public Attributes; static TypeSet AnyTypes;  ; static Message emptyMsg;  . Protected Attributes; ComponentInfo::SPtr m_componentinfo;  ; FileInfo::SPtr m_fileInfo;  a trace (name, path) from whom has emitted this message. More...;  ; std::stringstream m_stream;  the actual message More...;  ; Class m_class;  who is the attender of the message (developers or users)? More...;  ; Type m_type;  the message level More...;  ; int m_id;  should it be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:1007,message,message,1007,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,". template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::generateRigid. protected . generates the RigidMass from the mesh integral . ◆ GetCustomTemplateName(). template<class DataTypes , class MassType > . std::string sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::GetCustomTemplateName. static . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters instead of the default one generated automatically by the SOFA_CLASS() macro. . ◆ init(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::init ; (; void ; ). overridevirtual . Initialization method called at graph modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ integrateMesh(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateMesh. protected . integrates the whole mesh ; Protected methods . ◆ integrateTriangle(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateTriangle ; (; type::Vec3 ; kV0, . type::Vec3 ; kV1, . type::Vec3 ; kV2 . ). protected . ◆ reinit(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). protected . ◆ SOFA_CLASS(). template<class DataTypes , class MassType > . sofa::component::engine::gen",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:21508,integrat,integrateMesh,21508,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrateMesh']
Integrability,". ◆ RootNodeChanged. void sofa::gui::qt::QSofaListView::RootNodeChanged ; (; sofa::simulation::Node * ; newroot, . const char * ; newpath . ). signal . ◆ RunSofaDoubleClicked. void sofa::gui::qt::QSofaListView::RunSofaDoubleClicked ; (; QTreeWidgetItem * ; item, . int ; index . ). protectedslot . ◆ RunSofaRightClicked. void sofa::gui::qt::QSofaListView::RunSofaRightClicked ; (; const QPoint & ; point). protectedslot . ◆ SaveNode. void sofa::gui::qt::QSofaListView::SaveNode ; (; ). protectedslot . ◆ setPropertyWidget(). void sofa::gui::qt::QSofaListView::setPropertyWidget ; (; QDisplayPropertyWidget * ; propertyWid). inline . ◆ setRoot(). void sofa::gui::qt::QSofaListView::setRoot ; (; sofa::simulation::Node * ; root). ◆ transformObject(). void sofa::gui::qt::QSofaListView::transformObject ; (; sofa::simulation::Node * ; node, . double ; dx, . double ; dy, . double ; dz, . double ; rx, . double ; ry, . double ; rz, . double ; scale . ). protecteddelete . ◆ update(). void sofa::gui::qt::QSofaListView::update ; (; ). Updates the view so it is synchronized with the simulation graph. The view can be visually de-synchronized with the simulation graph. This happens when the view is ""frozen"" for performance reason. In that case, use isDirty to get current view state or the dirtynessChanged() signal. To resynchronize the view call the update method. . ◆ Updated. void sofa::gui::qt::QSofaListView::Updated ; (; ). signal . ◆ updateMatchingObjectmodel [1/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item). protectedslot . ◆ updateMatchingObjectmodel [2/2]. void sofa::gui::qt::QSofaListView::updateMatchingObjectmodel ; (; QTreeWidgetItem * ; item, . int ;  . ). protectedslot . ◆ UpdateOpenedDialogs. void sofa::gui::qt::QSofaListView::UpdateOpenedDialogs ; (; ). slot . ◆ WakeUpNode. void sofa::gui::qt::QSofaListView::WakeUpNode ; (; ). protectedslot . sofaguiqtQSofaListView; Generated on Mon Nov 11 2024 03:23:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html:11568,synchroniz,synchronized,11568,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_q_sofa_list_view.html,2,['synchroniz'],['synchronized']
Integrability,". ◆ getBeginTime(). template<class DataTypes > . Real sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::getBeginTime ; (; ). inline . ◆ getEndTime(). template<class DataTypes > . Real sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::getEndTime ; (; ). inline . ◆ getP1(). template<class DataTypes > . Vec3R sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::getP1 ; (; ). inline . ◆ getP2(). template<class DataTypes > . Vec3R sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::getP2 ; (; ). inline . ◆ getP3(). template<class DataTypes > . Vec3R sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::getP3 ; (; ). inline . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectPosition(). template<class DataTypes > . void sofa::component::constraint::projective::ParabolicProjectiveConstraint< DataTypes >::projectPosition ; (; const core::MechanicalParams * ; mparams, . DataVecCoord & ; x . ). overridevirtual . Project x to constrained space (x models a position).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:25509,interface,interface,25509,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['interface'],['interface']
Integrability,"...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MakeAliasComponent, core::objectmodel::BaseObject);  ;  MakeAliasComponent ();  ;  ~MakeAliasComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html:2696,depend,dependent,2696,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,1,['depend'],['dependent']
Integrability,"..;  ; Data< int > d_solverMaxIt;  max iteration to spend solving constraints More...;  ; Data< bool > d_derivRotations;  if true, deriv the rotations when updating the violations More...;  ; Data< bool > d_localHapticConstraintAllFrames;  Flag to enable/disable constraint haptic influence from all frames. More...;  ;  Public Attributes inherited from sofa::component::haptics::ForceFeedback; Data< bool > d_activate;  boolean to activate or deactivate the forcefeedback More...;  ; Data< int > d_indice;  Tool indice in the OmniDriver. More...;  ; simulation::Node * context;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mState;  The device try to follow this mechanical state. More...;  ; VecCoord mVal [3];  ; MatrixDeriv mConstraints [3];  ; std::vector< int > mId_buf [3];  ; component::constraint::lagrangian::solver::ConstraintProblem * mCP [3];  ; unsigned char mNextBufferId;  ; unsigned char mCurBufferId;  ; bool mIsCuBufferInUse;  ; sofa::component::constraint::lagrangian::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:1983,message,messages,1983,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['message'],['messages']
Integrability,"..;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SphereLoader, sofa::core::loader::BaseLoader);  ; bool load () override;  ; void applyTransform ();  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html:3700,depend,dependent,3700,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,1,['depend'],['dependent']
Integrability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; LinearSystemData< TMatrix, TVector > m_linearSystem;  ; MappingGraph m_mappingGraph;  Relationships between the mechanical states and their associated components. More...;  ; sofa::type::vector< sofa::core::behavior::BaseForceField * > m_forceFields;  The list of force fields contributing to the matrix assembly. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:11658,message,messages,11658,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,3,['message'],['messages']
Integrability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html:11802,message,messages,11802,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,1,['message'],['messages']
Integrability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::LinearSolver; bool frozen;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html:13022,message,messages,13022,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1_base_matrix_linear_solver.html,1,['message'],['messages']
Integrability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html:9932,message,messages,9932,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,12,['message'],['messages']
Integrability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:11489,message,messages,11489,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,1,['message'],['messages']
Integrability,"..;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html:12604,message,messages,12604,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology_1_1_primitive_update.html,9,['message'],['messages']
Integrability,"..;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual ShaderElementType getSEType () const =0;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ; virtual const core::objectmodel::BaseData * getSEValue () const =0;  ; virtual core::objectmodel::BaseData * getSEValue ()=0;  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html:3010,depend,dependent,3010,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_element.html,1,['depend'],['dependent']
Integrability,"..;  ; void setKeepAlive (bool val) override;  Control the keepAlive flag of the contact. More...;  ; void cleanup () override;  ; std::pair< core::CollisionModel *, core::CollisionModel * > getCollisionModels () override;  Get the pair of collision models which are in contact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html:4614,depend,dependent,4614,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,1,['depend'],['dependent']
Integrability,".0, Deriv(5,0,0) ) will set a translation of 5 in x direction a time 1.0s . ◆ clearIndices(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyVelocity . ◆ clearKeyVelocities(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::clearKeyVelocities. ◆ draw(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectPosition(). template<class TDataTypes > . void sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >::projectPosition ; (; const core::MechanicalParams * ; mparams, . DataVecCoord & ; x . ). overridevirtual . Project x to constrained space (x models a position).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:24007,interface,interface,24007,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['interface'],['interface']
Integrability,".;  ; Data< Real > d_period;  period between outputs More...;  ; Data< bool > d_reinit;  flag enabling reinitialization of the output file at each timestep More...;  ; Real lastTime;  ; Data< Real > d_showFactorSize;  bool to allow the display of the extra torsion More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; std::ofstream * outfile;  ; GearSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOU",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html:2421,message,messages,2421,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_gear_spring_force_field.html,1,['message'],['messages']
Integrability,".;  ; Data< type::vector< unsigned int > > f_primitives;  Vector of primitives (indices) More...;  ; Data< type::vector< int > > f_elementsGroup;  Vector of groups (each element gives its group. More...;  ; Data< type::vector< Real > > f_youngModulus;  Vector of young modulus for each primitive. More...;  ; Data< std::string > p_mapGroupModulus;  Mapping between groups and modulus. More...;  ; Data< Real > p_defaultModulus;  Default value if the primitive is not in a group. More...;  ; Data< type::vector< Real > > p_groupMod;  list of young modulus for each group More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GroupFilterYoungModulus, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html:1844,message,messages,1844,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_group_filter_young_modulus.html,1,['message'],['messages']
Integrability,/feed; ; coulomb – SOFA. SOFA - Topic Tag: coulomb. /cpp-controller; . /feed; ; Cpp controller – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantForceField – SOFA. SOFA - Topic Tag: Damping Gravity fallspeed EulerImplicitSolver ConstantForceField. /data; . /feed; ; Data – SOFA. SOFA - Topic Tag: Data. /data-component; . /feed; ; Data Component – SOFA. SOFA - Topic Tag: Data Component. /datadisplay-pointdata-c; . /feed; ; DataDisplay pointData C++ – SOFA. SOFA - Topic Tag: DataDisplay pointData C++. /debian-package-cmake; . /feed; ; debian package cmake – SOFA. SOFA - Topic Tag: debian package cmake. /debug; . /feed; ; debug – SOFA. SOFA - Topic Tag: debug. /default-shader; . /feed; ; default shader – SOFA. SOFA - Topic Tag: default shader. /deformable; . /feed; ; deformable – SOFA. SOFA - Topic Tag: deformable. /deformable-object; . /feed; ; Deformable object – SOFA. SOFA - Topic T,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:438888,integrat,integration,438888,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Integrability,"0;  ; virtual unsigned char * getData ()=0;  ; virtual unsigned char * getSegmentID ()=0;  ; virtual void createSegmentation3DTexture (unsigned char **textureData, int &width, int &height, int &depth)=0;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool load ()=0;  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html:3350,depend,dependent,3350,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,1,['depend'],['dependent']
Integrability,"1/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::PolynomialSpringsForceField. protected . ◆ PolynomialSpringsForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::PolynomialSpringsForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2 . ). protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; data_f1, . DataVecDeriv & ; data_f2, . const DataVecCoord & ; data_p1, . const DataVecCoord & ; data_p2, . const DataVecDeriv & ; data_v1, . const DataVecDeriv & ; data_v2 . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:28793,integrat,integrated,28793,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['integrat'],['integrated']
Integrability,"7.12. /flexible-plugin-or-core; . /feed; ; [SOLVED] Flexible plugin or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps assembly. /16; ; SOFA - Topic: [SOLVED] Forceps assembly. /4; ; SOFA - Topic: [SOLVED] Forceps assembly. SOFA - Topic: [SOLVED] Forceps assembly. /forces-not-getting-rendered-with-geomagic-touch; ; SOFA - Topic: [SOLVED] Forces not getting rendered with Geomagic touch. /forces-on-bending-pneunet; ; SOFA - Topic: [SOLVED] Forces on bending pneunet. /forum-help; ; SOFA - Topic: forum help. /forum-is-moving-to-github-discussions; ; SOFA - Topic: W",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:306382,integrat,integration,306382,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Integrability,"::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual bool isPaused ()=0;  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html:1989,depend,dependent,1989,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation.html,1,['depend'],['dependent']
Integrability,"::BaseContext::getGravity ; (; ); const. virtual . Gravity in local coordinates. ; Gravity in the world coordinate system. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getMass(). behavior::BaseMass * sofa::core::objectmodel::BaseContext::getMass ; (; ); const. virtual . Mass. . ◆ getMechanicalState(). core::behavior::BaseMechanicalState * sofa::core::objectmodel::BaseContext::getMechanicalState ; (; ); const. virtual . Mechanical Degrees-of-Freedom. ; Reimplemented in sofa::simulation::Node. ◆ getMeshTopology(). core::topology::BaseMeshTopology * sofa::core::objectmodel::BaseContext::getMeshTopology ; (; SearchDirection ; dir = SearchUp); const. virtual . Mesh Topology (unified interface for both static and dynamic topologies) . ◆ getMeshTopologyLink(). core::topology::BaseMeshTopology * sofa::core::objectmodel::BaseContext::getMeshTopologyLink ; (; SearchDirection ; dir = SearchUp); const. virtual . Mesh Topology (unified interface for both static and dynamic topologies) ; Reimplemented in sofa::simulation::graph::DAGNode, and sofa::simulation::Node. ◆ getNameHelper(). ComponentNameHelper& sofa::core::objectmodel::BaseContext::getNameHelper ; (; ). inline . Returns utilitary object to uniquely name objects in the context. . ◆ getObject() [1/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . const std::string & ; path . ); const. virtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObject() [2/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:24630,interface,interface,24630,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['interface'],['interface']
Integrability,"::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMatrixAccumulatorComponent, objectmodel::BaseObject);  ;  ~BaseMatrixAccumulatorComponent () override=default;  ;  BaseMatrixAccumulatorComponent ();  ; void associateObject (ComponentType *object);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html:2477,depend,dependent,2477,api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_matrix_accumulator_component.html,1,['depend'],['dependent']
Integrability,"::FreeMotionAnimationLoop::FreeMotionAnimationLoop ; (; ). protected . ◆ ~FreeMotionAnimationLoop(). sofa::component::animationloop::FreeMotionAnimationLoop::~FreeMotionAnimationLoop ; (; ). overrideprotected . The ConstraintSolver used in this animation loop (required) . Function details. ◆ computeFreeMotion(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotion ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ computeFreeMotionAndCollisionDetection(). void sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection ; (; const sofa::core::ExecParams * ; params, . const core::ConstraintParams & ; cparams, . SReal ; dt, . sofa::core::MultiVecId ; pos, . sofa::core::MultiVecId ; freePos, . sofa::core::MultiVecDerivId ; freeVel, . simulation::common::MechanicalOperations * ; mop . ). protected . ◆ init(). void sofa::component::animationloop::FreeMotionAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::FreeMotionAnimationLoop::SOFA_CLASS ; (; FreeMotionAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::FreeMotionAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopFreeMotionAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:19543,integrat,integrations,19543,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['integrat'],['integrations']
Integrability,"::ProjectiveConstraintSet< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Component computing constraints within a simulated body. ; This class define the abstract API common to constraints using a given type of DOFs. A ProjectiveConstraintSet computes constraints applied to one simulated body given its current position and velocity. . Public Attributes; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, DataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; virtual type::vector< core::BaseState * > getModels () override;  Return the lists of models this constraint applies to. More...;  ; void applyConstraint (const MechanicalParams *,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html:1565,message,messages,1565,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_projective_constraint_set.html,1,['message'],['messages']
Integrability,"::TetrahedronSetTopologyModifier Class Reference . #include <TetrahedronSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing tetrahedra . Public Attributes; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (TetrahedronSetTopologyModifier, TriangleSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; virtual void addTetrahedra (const sofa::type::vector< Tetrahedron > &tetrahedra);  add a se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:1354,message,messages,1354,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['messages']
Integrability,"::backward::EulerImplicitSolver Class Reference . #include <EulerImplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::backward::EulerImplicitSolver:. [legend]; Detailed Description; Semi-implicit time integrator using backward Euler scheme for first and second degree ODEs. (default: second); 2nd Order ***; This is based on [Baraff and Witkin, Large Steps in Cloth Simulation, SIGGRAPH 1998] The integration scheme is based on the following equations:; ; The unknown is ; Newton's law is ; is the mass matrix. is the stiffness implemented (or not) by the force fields. is the damping implemented (or not) by the force fields. An additional, uniform Rayleigh damping is imposed by the solver.; This corresponds to the following equation system:. Moreover, the projective constraints filter out the forbidden motions. This is equivalent with multiplying vectors with a projection matrix . Finally, the equation system set by this ode solver is:. 1st Order ***; This integration scheme is based on the following equation:. Applied to this mechanical system:. . Trapezoidal Rule ***; The trapezoidal scheme is based on. With this and the same techniques as for the implicit Euler scheme we receive for *** 2nd Order *** equations. and for *** 1st Order ***; . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_rayleighStiffness;  ; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; sofa::core::objectmodel::RenamedData< SReal > f_velocityDamping;  ; sofa::core::objectmodel::RenamedData< bool > f_firstOrder;  ; sofa::core::objectmodel::RenamedData< bool > f_solveConstraint;  ; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness, > 0. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass, > 0. More...;  ; Data< SReal > d_velocityDamping;  Velocity decay coefficient (no decay if null) More...;  ; Data< bool > d_firstOrder;  Use backward Euler scheme for first order ODE system, wh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:1295,integrat,integration,1295,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['integrat'],['integration']
Integrability,"::castTo(Base*) replace dynamic_cast<T*>(Base*);; sofa:core::objectmodel::base::GetClass<T>() replace T::GetClass();. These functions are called ""opaque"" as they work with only forward declaration of the involved types in comparison to class methods the requires the full class declaration to be used.; It is highly recommended to use as much as possible opaque function in header files as this allow to reduce the dependency tree.; Opaque function may be slower at runtime (by one function call) but this is true only if LTO isn't able to optimize them properly. If you have experience/feedback with LTO please join the discussion in https://github.com/sofa-framework/sofa/discussions/1822 Defines the baseline functions for a type all the types in-herit from Base. These are non-opaque function that needs to be specialized in order to implement an opaque version for a given type. . ◆ cleanup(). SOFA_CORE_API void sofa::core::cleanup ; (; ). Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ findTemplatedCreator(). void sofa::core::findTemplatedCreator ; (; objectmodel::BaseContext * ; context, . const ObjectFactory::Creator::SPtr & ; creator, . const std::string & ; templateName, . std::map< std::string, std::vector< std::string >> & ; creatorsErrors, . std::vector< std::pair< std::string, ObjectFactory::Creator::SPtr > > & ; creators, . objectmodel::BaseObjectDescription * ; arg . ). ◆ init(). SOFA_CORE_API void sofa::core::init ; (; ). Initialize the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_CORE_API bool sofa::core::isCleanedUp ; (; ). Return true if and only if the SofaCore library has been cleaned up. . ◆ isInitialized(). SOFA_CORE_API bool sofa::core::isInitialized ; (; ). Return true if and only if the SofaCore library has been initialized. . ◆ SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND() [1/26]. sofa::core::SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:20061,depend,dependencies,20061,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['depend'],['dependencies']
Integrability,"::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::vradius. ellipsoid radius . Constructor details. ◆ InteractionEllipsoidForceField(). template<typename TDataTypes1 , typename TDataTypes2 > . sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >::InteractionEllipsoidForceField ; (; ). inlineprotected . Function details. ◆ addDForce(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::addDForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv1 & ; df1, . DataVecDeriv2 & ; df2, . const DataVecDeriv1 & ; dx1, . const DataVecDeriv2 & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += K dx $; This method must be implemented by the component, and is usually called by the generic MixedInteractionForceField::addDForce() method. ; Implements sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >. ◆ addForce(). template<class DataTypes1 , class DataTypes2 > . void sofa::component::mechanicalload::InteractionEllipsoidForceField< DataTypes1, DataTypes2 >::addForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv1 & ; f1, . DataVecDeriv2 & ; f2, . const DataVecCoord1 & ; x1, . const DataVecCoord2 & ; x2, . const DataVecDeriv1 & ; v1, . const DataVecDeriv2 & ; v2 . ). overridevirtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:24936,integrat,integrated,24936,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,1,['integrat'],['integrated']
Integrability,"::core::loader::ImageLoader Class Reference . #include <ImageLoader.h>. Inheritance diagram for sofa::core::loader::ImageLoader:. [legend]. Public Member Functions;  SOFA_CLASS (ImageLoader, BaseLoader);  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool load ()=0;  ; virtual bool canLoad ();  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html:1285,depend,dependent,1285,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,1,['depend'],['dependent']
Integrability,"::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; bool loadedDiffusivity;  Boolean if the diffusion coefficients have loaded from file. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Real > edgeDiffusionCoefficient;  Vector saving the edge diffusion coefficients. More...;  ; MechObject::SPtr mechanicalObject;  Pointer to mechanical mechanicalObject. More...;  ; sofa::core::topology::BaseMeshTopology::SPtr m_topology;  Pointer to topology. More...;  ; sofa::Size nbEdges;  Saving the number of edges. More...;  ;  Protected Attributes inherited from sofa::core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html:2361,message,messages,2361,api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1diffusion_1_1_tetrahedron_diffusion_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"::detection::algorithm::RayTraceDetection:. [legend]; Detailed Description; It is a Ray Trace based collision detection algorithm. ; For each point in one object, we trace a ray following the opposite of the point's normal up to find a triangle in the other object. Both triangles are tested to evaluate if they are in colliding state. It must be used with a TriangleOctreeModel,as an octree is used to traverse the object. . Public Member Functions;  SOFA_CLASS (RayTraceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html:1619,depend,dependent,1619,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_detection.html,1,['depend'],['dependent']
Integrability,"::fem::hyperelastic::material::MaterialParameters< DataTypes > Struct Template Reference . #include <HyperelasticMaterial.h>; Detailed Description; template<typename DataTypes>; struct sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >; structure that store the parameters required to that are necessary to compute the strain energy The material parameters might be constant in space (homogeneous material) or not . Public Attributes; std::vector< Real > parameterArray;  ; std::vector< Coord > anisotropyDirection;  ; std::vector< Real > parameterAlpha;  ; std::vector< Real > parameterTau;  . Attribute details. ◆ anisotropyDirection. template<typename DataTypes > . std::vector<Coord> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::anisotropyDirection. the direction of anisotropy in the rest configuration : the size of the array is 0 if the material is isotropic, 1 if it is transversely isotropic and 2 for orthotropic materials (assumed to be orthogonal to each other) . ◆ parameterAlpha. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterAlpha. for viscous part, give the real alphai and taui such as alpha(t)= alpha0+sum(1,N)alphaiexp(-t/taui) . ◆ parameterArray. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterArray. an array of Real values that correspond to the material parameters : the size depends on the material, e.g. 2 Lame coefficients for St-Venant Kirchhoff materials . ◆ parameterTau. template<typename DataTypes > . std::vector<Real> sofa::component::solidmechanics::fem::hyperelastic::material::MaterialParameters< DataTypes >::parameterTau. sofacomponentsolidmechanicsfemhyperelasticmaterialMaterialParameters; Generated on Mon Nov 11 2024 03:01:05 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html:1889,depend,depends,1889,api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_material_parameters.html,1,['depend'],['depends']
Integrability,"::forward::CentralDifferenceSolver:. [legend]; Detailed Description; Explicit time integrator using central difference (also known as Verlet of Leap-frop).; See alsohttp://www.dynasupport.com/support/tutorial/users.guide/time.integration . http://en.wikipedia.org/wiki/Leapfrog_method . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CentralDifferenceSolver, sofa::core::behavior::OdeSolver);  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ;  Public Member Functions ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html:1448,message,messages,1448,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,1,['message'],['messages']
Integrability,":BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  ;  Static Public Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, tru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:2870,message,messages,2870,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,2,['message'],['messages']
Integrability,":BaseVector *dest, core::ConstVecId src, unsigned int &offset) override;  ; void copyFromBaseVector (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; void copyToBaseMatrix (linearalgebra::BaseMatrix *dest, core::ConstMatrixDerivId src, unsigned int &offset) override;  Copy data to a global BaseMatrix from the state stored in a local vector. More...;  ; void addToBaseVector (linearalgebra::BaseVector *dest, core::ConstVecId src, unsigned int &offset) override;  ; void addFromBaseVectorSameSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; void addFromBaseVectorDifferentSize (core::VecId dest, const linearalgebra::BaseVector *src, unsigned int &offset) override;  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; virtual type::Vec3 getTranslation () const;  ; virtual type::Vec3 getRotation () const;  ; type::Vec3 getScale () const override;  ; Integration related methods; void beginIntegration (SReal dt) override;  Called at the beginning of each integration step. More...;  ; void endIntegration (const core::ExecParams *params, SReal dt) override;  Called at the end of each integration step. More...;  ; void accumulateForce (const core::ExecParams *params, core::VecDerivId f=core::VecDerivId::force()) override;  Add stored external forces to F. More...;  ; void vAvail (const core::ExecParams *params, core::VecCoordId &v) override;  Increment the index of the given VecCoordId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAvail (const core::ExecParams *params, core::VecDerivId &v) override;  Increment the index of the given VecDerivId, so that all 'allocated' vectors in this state have a lower index. More...;  ; void vAlloc (const core::ExecParams *params, core::VecCoordId v, const core::VecIdProperties &p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:13683,integrat,integration,13683,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['integrat'],['integration']
Integrability,":BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; virtual core::behavior::BaseMechanicalState * getMouseContainer ()=0;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html:2883,depend,dependent,2883,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_base_mouse_interactor.html,1,['depend'],['dependent']
Integrability,":LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. More...;  ; SingleLink< GenericConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_ODESolver;  Link towards the ODE solver used to recover the integration factors. More...;  ; Data< SReal > d_complianceFactor;  Factor applied to the position factor and velocity factor used to calculate compliance matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::list< core::behavior::ConstraintSolver * > constraintsolvers;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::stri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html:1664,message,messages,1664,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,1,['message'],['messages']
Integrability,":OglMatrix2Variable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix2Variable:. [legend]; Detailed Description; Matrix VARIABLE . Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix2Variable, OglVariable< type::vector< float > >);  ;  OglMatrix2Variable ();  ; virtual ~OglMatrix2Variable ();  ; virtual void setTranspose (const bool &v);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ;  Public Member Functions inherited from sofa::gl::component::shade",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html:1266,message,messages,1266,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2_variable.html,1,['message'],['messages']
Integrability,":Quat< Real >::operator* ; (; const Quat< Real > & ; q1); const -> Quat. inlineconstexpr . ◆ operator*() [2/2]. template<class Real > . constexpr auto sofa::type::Quat< Real >::operator* ; (; const Real & ; r); const -> Quat. inlineconstexpr . ◆ operator*=() [1/2]. template<class Real > . constexpr void sofa::type::Quat< Real >::operator*= ; (; const Quat< Real > & ; q1). inlineconstexpr . ◆ operator*=() [2/2]. template<class Real > . void sofa::type::Quat< Real >::operator*= ; (; const Real & ; r). inline . ◆ operator+(). template<class Real > . auto sofa::type::Quat< Real >::operator+ ; (; const Quat< Real > & ; q1); const -> Quat. Given two quaternions, add them together to get a third quaternion. Adding quaternions to get a compound rotation is analogous to adding translations to get a compound translation.; Given two rotations, e1 and e2, expressed as quaternion rotations, figure out the equivalent single rotation and stuff it into dest. NOTE: This routine is written so that q1 or q2 may be the same as dest (or each other). . ◆ operator+=(). template<class Real > . void sofa::type::Quat< Real >::operator+= ; (; const Quat< Real > & ; q2). ◆ operator/(). template<class Real > . auto sofa::type::Quat< Real >::operator/ ; (; const Real & ; r); const -> Quat. inline . ◆ operator/=(). template<class Real > . void sofa::type::Quat< Real >::operator/= ; (; const Real & ; r). inline . ◆ operator==(). template<class Real > . bool sofa::type::Quat< Real >::operator== ; (; const Quat< Real > & ; q); const. ◆ operator[]() [1/2]. template<class Real > . constexpr Real& sofa::type::Quat< Real >::operator[] ; (; Size ; index). inlineconstexpr . ◆ operator[]() [2/2]. template<class Real > . constexpr const Real& sofa::type::Quat< Real >::operator[] ; (; Size ; index); const. inlineconstexpr . ◆ ptr() [1/2]. template<class Real > . Real* sofa::type::Quat< Real >::ptr ; (; ). inline . Cast into a standard C array of elements. . ◆ ptr() [2/2]. template<class Real > . const Real* ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html:11605,rout,routine,11605,api/master/sofa/html/classsofa_1_1type_1_1_quat.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_quat.html,1,['rout'],['routine']
Integrability,":RGBAColor > d_color;  display color More...;  ; SingleLink< ConstantForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; size_t m_systemSize;  Save system size for update of indices (doUpdateInternal) More...;  ; bool m_isTotalForceUsed;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html:2570,message,messages,2570,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_constant_force_field.html,1,['message'],['messages']
Integrability,":VecDerivId > &derivVecs) override;  Called by the state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ; virtual void initPointAdded (PointID indice, const core::topology::PointAncestorElem &ancestorElem, const type::vector< VecCoord * > &coordVecs, const type::vector< VecDeriv * > &derivVecs);  Process the added point initialization according to the topology and local coordinates. More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html:4774,depend,dependent,4774,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,1,['depend'],['dependent']
Integrability,":container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::NumericalIntegrationDescriptor ; (; ). inline . empty constructor . Function details. ◆ addQuadratureMethod(). template<typename Real , int N> . void sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::addQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order, . QuadraturePointArray ; qpa . ). add a quadrature method in the map . ◆ getIntegrationOrders(). template<typename Real , int N> . std::set< typename NumericalIntegrationDescriptor< Real, N >::IntegrationOrder > sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getIntegrationOrders ; (; const QuadratureMethod ; qt); const. returns the quadrature integration orders available for a given method . ◆ getQuadratureMethod(). template<typename Real , int N> . NumericalIntegrationDescriptor< Real, N >::QuadraturePointArray sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order . ); const. returns the set of quadrature points associated with a given quadrature method and integration order . ◆ getQuadratureMethods(). template<typename Real , int N> . std::set< typename NumericalIntegrationDescriptor< Real, N >::QuadratureMethod > sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getQuadratureMethods. returns all the indices corresponding to all available quadrature methods . Enum details. ◆ QuadratureMethod. template<typename Real , int N> . enum sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor::QuadratureMethod. EnumeratorGAUSS_LEGENDRE_METHOD ; GAUSS_LOBATO_ME",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html:2815,integrat,integration,2815,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,1,['integrat'],['integration']
Integrability,":copyToBaseVector ; (; linearalgebra::BaseVector * ; dest, . ConstVecId ; src, . unsigned int & ; offset . ). pure virtual . Copy data to a global BaseVector from the state stored in a local vector. ; Parameters. offsetthe offset in the BaseVector where the scalar values will be used. It will be updated to the first scalar value after the ones used by this operation when this method returns . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ copyToBuffer(). virtual void sofa::core::behavior::BaseMechanicalState::copyToBuffer ; (; SReal * ; dst, . ConstVecId ; src, . unsigned int ; n . ); const. pure virtual . Copy data to an external, user-allocated buffer. ; Exact element count must be provided for consistency checks. . ◆ endIntegration(). virtual void sofa::core::behavior::BaseMechanicalState::endIntegration ; (; const ExecParams * ; params, . SReal ;  . ). inlinevirtual . Called at the end of each integration step. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ exportGnuplot(). virtual void sofa::core::behavior::BaseMechanicalState::exportGnuplot ; (; SReal ; ). inlinevirtual . Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ getConstraintJacobian(). virtual void sofa::core::behavior::BaseMechanicalState::getConstraintJacobian ; (; const ConstraintParams * ; params, . sofa::linearalgebra::BaseMatrix * ; J, . unsigned int & ; off . ). pure virtual . build the jacobian of the constraint in a baseMatrix ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ getConstraintJacobianTimesVecDeriv(). virtual SReal sofa::core::behavior::BaseMechanicalState::getConstraintJacobianTimesVecDeriv ; (; unsigned int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:32200,integrat,integration,32200,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['integrat'],['integration']
Integrability,":core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ getAnimate(). bool sofa::core::objectmodel::BaseContext::getAnimate ; (; ); const. virtual . Animation flag. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getDefault(). BaseContext * sofa::core::objectmodel::BaseContext::getDefault ; (; ). static . Get the default Context object, that contains the default values for all parameters and can be used when no local context is defined. . ◆ getDt(). SReal sofa::core::objectmodel::BaseContext::getDt ; (; ); const. virtual . Simulation timestep. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getGravity(). const BaseContext::Vec3 & sofa::core::objectmodel::BaseContext::getGravity ; (; ); const. virtual . Gravity in local coordinates. ; Gravity in the world coordinate system. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getMass(). behavior::BaseMass * sofa::core::objectmodel::BaseContext::getMass ; (; ); const. virtual . Mass. . ◆ getMechanicalState(). core::behavior:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:22995,wrap,wrapper,22995,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,":core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; bool useTopology;  true if the springs are initialized from the topology More...;  ; sofa::type::vector< core::topology::BaseMeshTopology::Edge > edgeArray;  indices in case we don't use the topology More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:2608,message,messages,2608,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html:2008,message,messages,2008,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; bool m_edgeTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  Protected Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyContainer; bool m_pointTopologyDirty = false;  Boolean used to know if the topology Data of this container is dirty. More...;  ;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html:2292,message,messages,2292,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInHexahedron > m_edgesInHexahedron;  provides the set of edges for each hexahedron. More...;  ; sofa::type::vector< QuadsInHexahedron > m_quadsInHexahedron;  provides the set of quads for each hexahedron. More...;  ; sofa::type::vector< HexahedraAroundVertex > m_hexahedraAroundVertex;  for each vertex provides the set of hexahedra adjacent to that vertex. More...;  ; sofa::type::vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html:2787,message,messages,2787,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad. More...;  ; sofa::type::vector< QuadsAroundVertex > m_quadsAroundVertex;  for each vertex provides the set of quads adjacent to that vertex. More...;  ; sofa::type::vector< QuadsAroundEdge > m_quadsAroundEdge;  for each edge provides the set of quads adjacent to that edge. More...;  ; bool m_quadTopologyDirty = false;  Boole",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html:2479,message,messages,2479,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set of edges for each tetrahedron. More...;  ; sofa::type::vector< TrianglesInTetrahedron > m_trianglesInTetrahedron;  provides the set of triangles for each tetrahedron. More...;  ; sofa::type::vector< TetrahedraAroundVertex > m_tetrahedraAroundVertex;  for each vertex provides the set of tetrahedra adjacent to that vertex. More...",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html:2823,message,messages,2823,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< EdgesInTriangle > m_edgesInTriangle;  provides the 3 edges in each triangle. More...;  ; sofa::type::vector< TrianglesAroundVertex > m_trianglesAroundVertex;  for each vertex provides the set of triangles adjacent to that vertex. More...;  ; sofa::type::vector< TrianglesAroundEdge > m_trianglesAroundEdge;  for each edge provides the set of triangles adjacent to that edge. More...;  ; sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html:2631,message,messages,2631,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DynamicSparseGridTopologyContainer, HexahedronSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyContainer;  SOFA_CLASS (HexahedronSetTopologyContainer, QuadSetTopologyContainer);  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:4242,message,messages,4242,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,1,['message'],['messages']
Integrability,":core::topology::TopologyContainer; Data< std::list< const TopologyChange * > > m_changeList;  Array of topology modifications that have already occurred (addition) or will occur next (deletion). More...;  ; Data< std::list< const TopologyChange * > > m_stateChangeList;  Array of state modifications that have already occurred (addition) or will occur next (deletion). More...;  ; std::array< std::set< TopologyHandler * >, sofa::geometry::NumberOfElementType > m_topologyHandlerListPerElement {};  List of topology engines which will interact on all topological Data. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultilevelHexahedronSetTopologyContainer, HexahedronSetTopologyContainer);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void clear () override;  ; void getHexaNeighbors (const Index hexaId, type::vector< Index > &neighbors);  ; void getHexaFaceNeighbors (const Index hexaId, const Index faceId, type::vector< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html:3058,message,messages,3058,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_multilevel_hexahedron_set_topology_container.html,1,['message'],['messages']
Integrability,":dispatchSystemSolution ; (; core::MultiVecDerivId ; v). ◆ dispatchSystemSolution() [2/3]. void sofa::component::linearsystem::TypedMatrixLinearSystem< GraphScatteredMatrix, GraphScatteredVector >::dispatchSystemSolution ; (; core::MultiVecDerivId ; v). ◆ dispatchSystemSolution() [3/3]. template<class TMatrix , class TVector > . void sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::dispatchSystemSolution ; (; core::MultiVecDerivId ; v). virtual . Reimplemented in sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ getContributionFactor(). template<class TMatrix , class TVector > . template<core::matrixaccumulator::Contribution c> . static SReal sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::getContributionFactor ; (; const sofa::core::MechanicalParams * ; mparams, . const sofa::core::matrixaccumulator::get_component_type< c > * ; object . ). inlinestaticprotected . Returns the factor to apply to the contributions depending on the contribution type . ◆ GetCustomTemplateName(). template<class TMatrix , class TVector > . static std::string sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::GetCustomTemplateName ; (; ). inlinestatic . ◆ getRHSVector(). template<class TMatrix , class TVector > . TVector * sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::getRHSVector. virtual . Return the RHS of the linear system. ; Reimplemented in sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ getSolutionVector(). template<class TMatrix , class TVector > . TVector * sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::getSolutionVector. virtual . Return the solution of the linear system. ; Reimplemented in sofa::component::linearsystem::CompositeLinearSystem< TMatrix, TVector >. ◆ getSolveContext(). template<class TMatrix , class TVector > . core::objectmodel::BaseContext * sofa::component::linearsystem::T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html:22718,depend,depending,22718,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,1,['depend'],['depending']
Integrability,":objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Attribute details. ◆ m_lastElementIndex. template<class T = void*> . Index sofa::core::topology::BaseTopologyData< T >::m_lastElementIndex = 0. protected . to handle properly the removal of items, the container must keep the last element index and update it during operations (add/remove). Note that this index is mandatory and can't be retrieved directly from the topology in the case when several topology events are queued. i.e: If 2 removalElements events are queued, the second event still point to a topology not yet updated by the first event. . ◆ m_topology. template<class T = void*> . sofa::core::topology::BaseMeshTopology* sofa::core::topology::BaseTopologyData< T >::m_topology = nullptr. protected . Pointer to the Topology this TopologyData is depending on. . Constructor details. ◆ BaseTopologyData(). template<class T = void*> . sofa::core::topology::BaseTopologyData< T >::BaseTopologyData ; (; const sofa::core::objectmodel::BaseData::BaseInitData & ; init). inlineexplicit . Constructor used via the Base::initData() methods. . Function details. ◆ add() [1/6]. template<class T = void*> . virtual void sofa::core::topology::BaseTopologyData< T >::add ; (; const sofa::type::vector< Topology::EdgeID > & ; , . const sofa::type::vector< Topology::Edge > & ; , . const sofa::type::vector< sofa::type::vector< Topology::EdgeID > > & ; , . const sofa::type::vector< sofa::type::vector< SReal > > & ; , . const sofa::type::vector< EdgeAncestorElem > & ;  . ). inlinevirtual . Temporary Hack: find a way to have a generic description of topological element: add Edge . ◆ add() [2/6]. template<class T = void*> . virtual void sofa::core::topology::BaseTopologyData< T >::add ; (; const sofa::type::vector< Topology::HexahedronID > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html:14462,depend,depending,14462,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,1,['depend'],['depending']
Integrability,":objectmodel::RenamedData< Real > m_drawForceScale;  ; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > m_drawForceColor;  ; sofa::core::objectmodel::RenamedData< Real > m_volumeAfterTC;  ; sofa::core::objectmodel::RenamedData< Real > m_surfaceAreaAfterTC;  ; Data< Real > d_p0;  IN: Rest pressure when V = V0. More...;  ; Data< Real > d_B;  IN: Bulk modulus (resistance to uniform compression) More...;  ; Data< Real > d_gamma;  IN: Bulk modulus (resistance to uniform compression) More...;  ; Data< Real > d_injectedVolume;  IN: Injected (or extracted) volume since the start of the simulation. More...;  ; Data< Real > d_maxInjectionRate;  IN: Maximum injection rate (volume per second) More...;  ; Data< Real > d_initialVolume;  OUT: Initial volume, as computed from the surface rest position. More...;  ; Data< Real > d_currentInjectedVolume;  OUT: Current injected (or extracted) volume (taking into account maxInjectionRate) More...;  ; Data< Real > d_v0;  OUT: Rest volume (as computed from initialVolume + injectedVolume) More...;  ; Data< Real > d_currentVolume;  OUT: Current volume, as computed from the last surface position. More...;  ; Data< Real > d_currentPressure;  OUT: Current pressure, as computed from the last surface position. More...;  ; Data< Real > d_currentStiffness;  OUT: dP/dV at current volume and pressure. More...;  ; Data< SeqTriangles > d_pressureTriangles;  OUT: list of triangles where a pressure is applied (mesh triangles + tessellated quads) More...;  ; Data< Real > d_initialSurfaceArea;  OUT: Initial surface area, as computed from the surface rest position. More...;  ; Data< Real > d_currentSurfaceArea;  OUT: Current surface area, as computed from the last surface position. More...;  ; Data< Real > d_drawForceScale;  DEBUG: scale used to render force vectors. More...;  ; Data< sofa::type::RGBAColor > d_drawForceColor;  DEBUG: color used to render force vectors. More...;  ; Data< Real > d_volumeAfterTC;  OUT: Volume after a topology chan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:3012,inject,injectedVolume,3012,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inject'],['injectedVolume']
Integrability,":odesolver::backward::NewmarkImplicitSolver::d_velocityDamping. Velocity decay coefficient (no decay if null) . ◆ pID. sofa::core::MultiVecDerivId sofa::component::odesolver::backward::NewmarkImplicitSolver::pID. protected . Constructor details. ◆ NewmarkImplicitSolver(). sofa::component::odesolver::backward::NewmarkImplicitSolver::NewmarkImplicitSolver ; (; ). protected . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order.; This method is used to compute the compliance for contact corrections. For example, a backward-Euler dynamic implicit integrator would use: Input: x_t v_t a_{t+dt} x_{t+dt} 1 dt dt^2 v_{t+dt} 0 1 dt; If the linear system is expressed on s = a_{t+dt} dt, then the final factors are: Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getPositionIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getPositionIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the position. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:18161,integrat,integrator,18161,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['integrat'],['integrator']
Integrability,":simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ getMatrixDimension() [1/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::core::behavior::MultiMatrixAccessor * ; matrix). inline . ◆ getMatrixDimension() [2/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::Size * const ; nbRow, . sofa::Size * const ; nbCol, . sofa::core::behavior::MultiMatrixAccessor * ; matrix = nullptr . ). ◆ integrateVelocity(). void sofa::simulation::common::MechanicalOperations::integrateVelocity ; (; core::MultiVecDerivId ; res, . core::ConstMultiVecCoordId ; x, . core::ConstMultiVecDerivId ; v, . SReal ; dt . ). res = x + v.dt . ◆ multiVector2BaseVector(). void sofa::simulation::common::MechanicalOperations::multiVector2BaseVector ; (; core::ConstMultiVecId ; src, . linearalgebra::BaseVector * ; dest, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ multiVectorPeqBaseVector(). void sofa::simulation::common::MechanicalOperations::multiVectorPeqBaseVector ; (; core::MultiVecDerivId ; dest, . const linearalgebra::BaseVector * ; src, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ operator const core::MechanicalParams *(). sofa::simulation::common::MechanicalOperations::operator const core::MechanicalParams * ; (; ). inline . ◆ operator->(). core::MechanicalParams* sofa::simulation::common::MechanicalOperations::operator-> ; (; ). inline . ◆ print() [1/2]. void sofa::simulation::common::MechanicalOperations::print ; (; core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:12648,integrat,integrateVelocity,12648,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['integrat'],['integrateVelocity']
Integrability,":type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesProcess (const sofa::type::vector< Edge > &edges);  Effectively add some edges to this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; virtual void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false);  Effectively Remove a subset of edges. Eventually remove isolated vertices. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:16662,message,message,16662,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"; ); const. overridevirtual . Reimplemented from sofa::core::objectmodel::BaseNode. ◆ getContext() [1/2]. const core::objectmodel::BaseContext * sofa::simulation::Node::getContext ; (; ); const. overridevirtual . Get this node context. ; Implements sofa::core::objectmodel::BaseNode. ◆ getContext() [2/2]. core::objectmodel::BaseContext * sofa::simulation::Node::getContext ; (; ). overridevirtual . Get this node context. ; Implements sofa::core::objectmodel::BaseNode. ◆ getDebug(). bool sofa::simulation::Node::getDebug ; (; ); const. ◆ getMechanicalState(). core::behavior::BaseMechanicalState * sofa::simulation::Node::getMechanicalState ; (; ); const. overridevirtual . Mechanical Degrees-of-Freedom. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getMeshTopologyLink(). core::topology::BaseMeshTopology * sofa::simulation::Node::getMeshTopologyLink ; (; SearchDirection ; dir = SearchUp); const. overridevirtual . Mesh Topology (unified interface for both static and dynamic topologies) ; Reimplemented from sofa::core::objectmodel::BaseContext.; Reimplemented in sofa::simulation::graph::DAGNode. ◆ getNodeInGraph(). Node * sofa::simulation::Node::getNodeInGraph ; (; const std::string & ; absolutePath); const. Get a node in the scene graph matching the given absolute path. . ◆ getNodeObject() [1/2]. template<class Object > . Object* sofa::simulation::Node::getNodeObject ; (; ). inline . ◆ getNodeObject() [2/2]. template<class Object > . void sofa::simulation::Node::getNodeObject ; (; Object *& ; result). inline . Return an object of this node deriving from a given class, or nullptr if not found. Note that only the first object is returned. . ◆ getNodeObjects() [1/4]. template<class Object = sofa::core::objectmodel::BaseObject> . std::vector<Object*> sofa::simulation::Node::getNodeObjects ; (; ). inline . Returns a list of object of type passed as a parameter. This function is return object by copy but should be compatible with Return Value Optimization so the co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:39501,interface,interface,39501,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interface']
Integrability,; . /feed; ; Windows_7 – SOFA. /page; . /2; ; SOFA - Topic Tag: Windows_7. /3; ; SOFA - Topic Tag: Windows_7. /4; ; SOFA - Topic Tag: Windows_7. /5; ; SOFA - Topic Tag: Windows_7. /6; ; SOFA - Topic Tag: Windows_7. /7; ; SOFA - Topic Tag: Windows_7. SOFA - Topic Tag: Windows_7. /windows_8; . /feed; ; Windows_8 – SOFA. SOFA - Topic Tag: Windows_8. /windows_81; . /feed; ; Windows_81 – SOFA. SOFA - Topic Tag: Windows_81. /windows10; . /feed; ; Windows10 – SOFA. SOFA - Topic Tag: Windows10. /windows-10; . /feed; ; Windows 10 – SOFA. SOFA - Topic Tag: Windows 10. /windows10-64bits; . /feed; ; Windows10-64bits – SOFA. SOFA - Topic Tag: Windows10-64bits. /windows-10-x64-build; . /feed; ; Windows 10 x64 build – SOFA. SOFA - Topic Tag: Windows 10 x64 build. /windows-7; . /feed; ; windows 7 – SOFA. SOFA - Topic Tag: windows 7. /windows-build; . /feed; ; Windows Build – SOFA. SOFA - Topic Tag: Windows Build. /windows-dependency-pack; . /feed; ; windows dependency pack – SOFA. SOFA - Topic Tag: windows dependency pack. /windows-sofa-v20-12; . /feed; ; Windows; SOFA v20.12 – SOFA. SOFA - Topic Tag: Windows; SOFA v20.12. /writestate; . /feed; ; writestate – SOFA. SOFA - Topic Tag: writestate. /xitact; . /feed; ; Xitact – SOFA. SOFA - Topic Tag: Xitact. /xitact-device; . /feed; ; Xitact Device – SOFA. SOFA - Topic Tag: Xitact Device. /xml; . /feed; ; xml – SOFA. SOFA - Topic Tag: xml. /xml-collision; . /feed; ; XML collision – SOFA. SOFA - Topic Tag: XML collision. /xml-reference; . /feed; ; XML Reference – SOFA. SOFA - Topic Tag: XML Reference. /zeromq; . /feed; ; zeroMQ – SOFA. SOFA - Topic Tag: zeroMQ. /zlib; . /feed; ; zlib – SOFA. SOFA - Topic Tag: zlib. /zmq; . /feed; ; ZMQ – SOFA. SOFA - Topic Tag: ZMQ. /users; . /a0a0; . /engagements; ; SOFA - a0a0's Profile. /replies; ; SOFA - a0a0's Replies. /topics; ; SOFA - a0a0's Topics. SOFA - a0a0's Profile. /aainsanity; . /engagements; ; SOFA - Aboveallinsanity's Profile. /replies; ; SOFA - Aboveallinsanity's Replies. /topics; ; SOF,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:495777,depend,dependency,495777,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency']
Integrability,"; Data< CPos > d_origin;  A point in the line. More...;  ; Data< CPos > d_direction;  Direction of the line. More...;  ; SingleLink< LineProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< LineProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are sol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html:2287,message,messages,2287,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_line_projective_constraint.html,1,['message'],['messages']
Integrability,"; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SOFA_ABSTRACT_CLASS (SOFA_TEMPLATE(SingleStateAccessor, DataTypes), StateAccessor);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  . Protected Member Functions;  HexahedralFEMForceField ();  ; virtual ~HexahedralFEMForceField ();  ; virtual void computeElementStiffness (ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes);  ; Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; void computeMaterialStiffness (MaterialStiffness &m, double youngModulus, double poissonRatio);  compute the hookean material matrix More...;  ; void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; void initLarge (const int i);  ; void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  ; virtual void accumulateForceLarge (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ; void initPolar (const int i);  ; void computeRotationPolar (Transformation &r, type::Vec< 8, Coord > &nodes);  ; virtual void accumulateForcePolar (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:18480,integrat,integrateStiffness,18480,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Integrability,"; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html:6291,depend,dependent,6291,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_rotation_projective_constraint.html,5,['depend'],['dependent']
Integrability,"; virtual void computeCollisionResponse ()=0;  Add collision response in the simulation graph. More...;  ; void computeCollisions ();  ; const BroadPhaseDetection * getBroadPhaseDetection () const;  Broad phase collision detection method accessor. More...;  ; const NarrowPhaseDetection * getNarrowPhaseDetection () const;  Narrow phase collision detection method accessor. More...;  ; virtual std::set< std::string > getResponseList () const =0;  get the set of response available with the current collision pipeline More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html:3336,depend,dependent,3336,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_pipeline.html,1,['depend'],['dependent']
Integrability,"; void glTranslateNv (const double *p);  ; template<> ; void glTranslateNv< 2 > (const double *p);  ; template<> ; void glTranslateNv< 1 > (const double *p);  ; template<class Coord > ; void glTranslateT (const Coord &c);  ; template<> ; void glTranslateT< double > (const double &c);  ; template<> ; void glTranslateT< float > (const float &c);  ; void glScale (const float &c1, const float &c2, const float &c3);  ; void glScale (const double &c1, const double &c2, const double &c3);  ; void glRotate (const GLfloat &value, const float &c1, const float &c2, const float &c3);  ; void glRotate (const GLdouble &value, const double &c1, const double &c2, const double &c3);  ; void glMultMatrix (const float *p);  ; void glMultMatrix (const double *p);  . Variables; bool GLSLIsSupported = false;  . Detailed Description; Forward declaration. ; Function Documentation. ◆ cleanup(). SOFA_GL_API void sofa::gl::cleanup ; (; ). Clean up the resources used by the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ CombineHeaders(). std::string sofa::gl::CombineHeaders ; (; std::string ; header, . const std::string & ; shaderStage, . std::string ; source . ). ◆ drawArrow(). template<typename V > . void sofa::gl::drawArrow ; (; const V & ; p1, . const V & ; p2, . const float & ; rad, . const int ; subd = 8 . ). ◆ drawCone(). template<typename V > . void sofa::gl::drawCone ; (; const V & ; p1, . const V & ; p2, . const float & ; radius1, . const float & ; radius2, . const int ; subd = 8 . ). ◆ drawCylinder(). template<typename V > . void sofa::gl::drawCylinder ; (; const V & ; p1, . const V & ; p2, . const float & ; rad, . const int ; subd = 8 . ). ◆ drawEllipsoid(). template<typename V > . void sofa::gl::drawEllipsoid ; (; const V & ; center, . const float & ; radx, . const float & ; rady, . const float & ; radz, . const int ; subd1 = 8, . const int ; subd2 = 8 . ). ◆ drawEmptyParallelepiped(). template<typename V > . void sofa::gl::drawEmptyParallelepiped ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html:5672,depend,dependencies,5672,api/master/sofa/html/namespacesofa_1_1gl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html,1,['depend'],['dependencies']
Integrability,"; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; MechanicalState< DataTypes > * getMState ();  ; const MechanicalState< DataTypes > * getMState () const;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html:2902,depend,dependent,2902,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_single_state_accessor.html,1,['depend'],['dependent']
Integrability,"; void init (void) override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void handleEvent (core::objectmodel::Event *event) override;  Handle an event. More...;  ; sofa::Size getNumberOfContacts () const;  ; type::vector< double > getDistances () const;  ; type::vector< type::vector< core::collision::DetectionOutput > > getContactsVector () const;  ; std::vector< std::tuple< unsigned int, sofa::type::Vec3, unsigned int, sofa::type::Vec3 > > getContactPoints () const;  ; std::vector< std::tuple< unsigned int, unsigned int, unsigned int, unsigned int > > getContactElements () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html:2624,depend,dependent,2624,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,1,['depend'],['dependent']
Integrability,"; void setViewport (unsigned int w, unsigned int h);  ; double getZNear ();  ; double getZFar ();  ; void setView (const type::Vec3 &position, const Quat &orientation);  ; void setDefaultView (const type::Vec3 &gravity=type::Vec3(0, -9.81, 0));  ; virtual void getModelViewMatrix (double mat[16]);  ; virtual void getProjectionMatrix (double mat[16]);  ; void getOpenGLModelViewMatrix (double mat[16]);  ; void getOpenGLProjectionMatrix (double mat[16]);  ; Quat getOrientationFromLookAt (const type::Vec3 &pos, const type::Vec3 &lookat);  ; type::Vec3 getLookAtFromOrientation (const type::Vec3 &pos, const double &distance, const Quat &orientation);  ; type::Vec3 getPositionFromOrientation (const type::Vec3 &lookAt, const double &distance, const Quat &orientation);  ; virtual void internalUpdate ();  ; void computeZ ();  ; virtual bool isStereo ();  ; virtual void setCurrentSide (Side);  ; virtual Side getCurrentSide ();  ; virtual void setStereoEnabled (bool);  ; virtual bool getStereoEnabled ();  ; virtual void setStereoMode (StereoMode);  ; virtual StereoMode getStereoMode ();  ; virtual void setStereoStrategy (StereoStrategy);  ; virtual StereoStrategy getStereoStrategy ();  ; virtual void setStereoShift (double);  ; virtual double getStereoShift ();  ; void computeClippingPlane (const core::visual::VisualParams *vp, double &zNear, double &zFar);  ; virtual void drawCamera (const core::visual::VisualParams *);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:12542,depend,dependent,12542,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['depend'],['dependent']
Integrability,";  . Public Member Functions;  SOFA_CLASS (ReadTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadTopology ();  ; void processReadTopology (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html:4609,depend,dependent,4609,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,1,['depend'],['dependent']
Integrability,";  . Public Member Functions;  VTKDataIO ();  ;  ~VTKDataIO () override;  ; const void * getData () override;  ; void resize (int n) override;  ; void swap () override;  ; virtual bool read (const string &s, int n, int binary) override;  ; virtual bool read (const string &s, int binary) override;  ; virtual bool read (istream &in, int n, int binary) override;  ; virtual bool write (ofstream &out, int n, int groups, int binary) override;  ; BaseData * createSofaData () override;  ;  Public Member Functions inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO;  BaseVTKDataIO ();  ;  ~BaseVTKDataIO () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html:2794,depend,dependent,2794,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,1,['depend'],['dependent']
Integrability,";  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::BaseController Class Reference . #include <BaseController.h>; BaseController Class. Interface of user interaction on SOFA Components. Empty class to provide an interface for the Factory. ; More... Inheritance diagram for sofa::core::behavior::BaseController:. [legend]; Detailed Description; BaseController Class. Interface of user interaction on SOFA Components. Empty class to provide an interface for the Factory. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller.html:1173,depend,dependent,1173,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_controller.html,1,['depend'],['dependent']
Integrability,";  ; Data< float > d_size;  Size of the squared grid. More...;  ; Data< int > d_nbSubdiv;  Number of subdivisions. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the lines in the grid. default=(0.34,0.34,0.34,1.0) More...;  ; Data< float > d_thickness;  Thickness of the lines in the grid. More...;  ; core::objectmodel::lifecycle::RemovedData d_draw {this, ""v23.06"", ""23.12"", ""draw"", ""Use the 'enable' data field instead of 'draw'""};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; PLANE internalPlane;  Pre-computed points used to draw the grid. More...;  ; sofa::type::vector< Vec3 > m_drawnPoints;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited fro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html:1476,message,messages,1476,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_grid.html,1,['message'],['messages']
Integrability,";  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes));  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;  ; Real computeRestEdgeLength (const EdgeID i) const;  computes the initial length of edge no i and returns it More...;  ; Real computeRestSquareEdgeLength (const EdgeID i) const;  computes the initial square length of edge no i and returns it More...;  ; void computeEdgeAABB (const EdgeID i, CPos &minCoord, CPos &maxCoord) const;  ; Coord computeEdgeCenter (const EdgeID i) const;  ; Coord computeEdgeDirection (const EdgeID i) const;  ; Coord computeRestEdgeDirection (const EdgeID i) const;  ; void getEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; void getRestEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; bool isPointOnEdge (const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) const;  ; sofa::type::vector< SReal > computeEdgeBarycentricCoordinates (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, bool useRestPosition=false) const;  Compute the barycentric coor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:3036,interface,interface,3036,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,";  ; SingleLink< ReadTopology, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 2 > > > edges;  ; Data< type::vector< type::fixed_array< unsigned int, 3 > > > triangles;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > quads;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > tetrahedra;  ; Data< type::vector< type::fixed_array< unsigned int, 8 > > > hexahedra;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ EdgesError. unsigned int sofa::component::playback::CompareTopology::EdgesError. protected . Number of error by container. . ◆ HexahedraError. unsigned int sofa::component::playback::CompareTopology::HexahedraError. protected . ◆ listError. std::vector<unsigned int> sofa::component::playback::CompareTopology::listError. protected . ◆ QuadsError. unsigned int sofa::component::playback::CompareTopology::QuadsEr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:15354,message,messages,15354,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,1,['message'],['messages']
Integrability,";  ; SingleLink< ReadTopology, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 2 > > > edges;  ; Data< type::vector< type::fixed_array< unsigned int, 3 > > > triangles;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > quads;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > tetrahedra;  ; Data< type::vector< type::fixed_array< unsigned int, 8 > > > hexahedra;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; std::ifstream * infile;  ; double nextTime;  ; double lastTime;  ; double loopTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attribute",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html:2125,message,messages,2125,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_topology.html,1,['message'],['messages']
Integrability,";  ; Transform & operator*= (const Transform &f2);  Combine two transforms. If (*this) locates frame B (child) wrt frame A (parent) and if f2 locates frame C (child) wrt frame B (parent) then the result locates frame C wrt to Frame A. More...;  ; SpatialVector< TReal > CreateSpatialVector ();  ; SpatialVector< TReal > DTrans ();  ; SpatialVector< TReal > operator* (const SpatialVector< TReal > &sv) const;  ; SpatialVector< TReal > operator/ (const SpatialVector< TReal > &sv) const;  Project a spatial vector from parent to child (the inverse of operator *). This method computes (*this).inversed()*sv without inverting (*this). More...;  ; void writeOpenGlMatrix (double *m) const;  Write an OpenGL matrix encoding the transformation of the coordinate system of the child wrt the coordinate system of the parent. More...;  ; void printInternal (std::ostream &) const;  Print the internal values (i.e. using Featherstone's conventions, see class documentation) More...;  ; Time integration; Methods used in time integration . Transform & operator+= (const SpatialVector< TReal > &a);  ; Transform & operator+= (const Transform &a);  ; template<class Real2 > ; Transform & operator*= (Real2 a);  ; template<class Real2 > ; Transform operator* (Real2 a) const;  . Static Public Member Functions; static Transform identity ();  The identity transform (child = parent) More...;  . Friends; std::ostream & operator<< (std::ostream &out, const Transform &t);  ; std::istream & operator>> (std::istream &in, Transform &t);  read from an input stream More...;  . Attribute details. ◆ orientation_. template<class TReal > . Rot sofa::type::Transform< TReal >::orientation_. protected . child wrt parent . ◆ origin_. template<class TReal > . Vec sofa::type::Transform< TReal >::origin_. protected . parent wrt child . Constructor details. ◆ Transform() [1/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform. The default constructor does not initialize the transform. . ◆ Transform() [2/4",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:4834,integrat,integration,4834,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,2,['integrat'],['integration']
Integrability,";  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUpdate. protected . ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::ModifyObject::data_. protected . ◆ dialogFlags_. const ModifyObjectFlags sofa::gui::qt::ModifyObject::dialogFlags_. protected . ◆ dialogTab. QTabWidget* sofa::gui::qt::ModifyObject::dialogTab. protected . ◆ Id_. void* sofa::gui::qt::ModifyObject::Id_. protected . ◆ item_. QTreeWidgetItem* sofa::gui::qt::ModifyObject::item_. protected . ◆ m_numMessages. int sofa::gui::qt::ModifyObject::m_numMessages. protected . ◆ m_tabs. std::vector< QTabulationModifyObject* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyObject::ModifyObject ; (; void * ; Id, . QTreeWidgetItem * ; item_clicked, . QWidget * ; parent, . const ModifyObjectFlags & ; dialogFlags, . const char * ; name = nullptr, . bool ; modal = false, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). explicit . ◆ ~ModifyObject(). sofa::gui::qt::ModifyObject::~ModifyObject ; (; ). inlineoverride . Function details. ◆ accept. void sofa::gui::qt::ModifyObject::accept ; (; ). overrideslot . ◆ beginDataModification. void sofa::gui::qt::ModifyObject::beginDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ beginObjectModification. void sofa::gui::qt::ModifyObject::beginObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ clearMessages. void sofa::gui::qt::ModifyObject::clearMessages ; (; ). protectedslot . ◆ closeEvent.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:3097,message,messageEdit,3097,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['message'],['messageEdit']
Integrability,";  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyModifier;  TriangleSetTopologyModifier ();  ;  ~TriangleSetTopologyModifier () override;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList);  Sends a message to warn that some triangles were added in this topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were ad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:21799,message,message,21799,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,";  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< float >; Data< float > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html:12686,message,messages,12686,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_variable.html,1,['message'],['messages']
Integrability,";  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2246,message,message,2246,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,";  Protected Attributes inherited from sofa::core::collision::CollisionAlgorithm; Instance instance;  Current collision 'pipeline' instance, allowing to store multiple internal states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:2201,integrat,integration,2201,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['integrat'],['integration']
Integrability,";  Render internal data of this object, for debugging purposes. More...;  ; void computeTetrahedronAABB (const TetraID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTetrahedronCenter (const TetraID i) const;  ; Coord computeTetrahedronCircumcenter (const TetraID i) const;  ; bool isPointInTetrahedron (const TetraID i, const sofa::type::Vec< 3, Real > &p) const;  ; bool isPointInTetrahedron (const TetraID ind_t, const sofa::type::Vec< 3, Real > &pTest, sofa::type::Vec< 4, Real > &barycentricCoordinates) const;  return (if the point is in the tetrahedron) the barycentric coordinates of the point in the tetrahedron More...;  ; void getTetrahedronVertexCoordinates (const TetraID i, Coord[4]) const;  ; void getRestTetrahedronVertexCoordinates (const TetraID i, Coord[4]) const;  ; Real computeTetrahedronVolume (const TetraID i) const;  computes the volume of tetrahedron no i and returns it More...;  ; void computeTetrahedronVolume (BasicArrayInterface< Real > &ai) const;  computes the tetrahedron volume of all tetrahedra are store in the array interface More...;  ; Real computeRestTetrahedronVolume (const TetraID i) const;  computes the tetrahedron volume of tetrahedron no i and returns it More...;  ; Real computeRestTetrahedronVolume (const Tetrahedron &t) const;  ; Real computeDihedralAngle (const TetraID tetraId, const EdgeID edgeId) const;  ; void getTetraInBall (const TetraID ind_ta, const TetraID ind_tb, sofa::type::vector< TetrahedronID > &indices) const;  finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) More...;  ; void getTetraInBall (const TetraID ind_ta, Real r, sofa::type::vector< TetrahedronID > &indices) const;  finds the indices of all tetrahedra in the ball of center ind_ta and of radius dist(ind_ta, ind_tb) More...;  ; void getTetraInBall (const Coord &c, Real r, sofa::type::vector< TetrahedronID > &indices) const;  Finds the indices of all tetrahedra in the ball of center c and of radius r. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:5686,interface,interface,5686,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,";  flag enabling output of F vector More...;  ; Data< type::vector< double > > d_time;  set time to write outputs (by default export at t=0) More...;  ; Data< double > d_period;  period between outputs More...;  ; Data< type::vector< unsigned int > > d_DOFsX;  set the position DOFs to write More...;  ; Data< type::vector< unsigned int > > d_DOFsV;  set the velocity DOFs to write More...;  ; Data< double > d_stopAt;  stop the simulation when the given threshold is reached More...;  ; Data< double > d_keperiod;  set the period to measure the kinetic energy increase More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::BaseMechanicalState * mmodel;  ; std::ofstream * outfile;  ; unsigned int nextIteration;  ; double lastTime;  ; bool kineticEnergyThresholdReached;  ; double timeToTestEnergyIncrease;  ; double savedKineticEnergy;  ; bool firstExport;  ; bool periodicExport;  ; bool validInit;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:2111,message,messages,2111,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['message'],['messages']
Integrability,"< SReal > d_drawSize;  Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) More...;  ; SingleLink< PlaneProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PlaneProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html:2285,message,messages,2285,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_plane_projective_constraint.html,1,['message'],['messages']
Integrability,"< SReal > d_drawSize;  Size of the rendered particles (0 -> point based rendering, >0 -> radius of spheres) More...;  ; SingleLink< PointProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PointProjectiveConstraintInternalData< DataTypes > > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attribute",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:2436,message,messages,2436,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['message'],['messages']
Integrability,"< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MakeDataAliasComponent, core::objectmodel::BaseObject);  ;  MakeDataAliasComponent ();  ;  ~MakeDataAliasComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html:2878,depend,dependent,2878,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,1,['depend'],['dependent']
Integrability,"<< (std::ostream &out, const FullMatrix< float > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< float > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullMatrix< Real > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< float > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< double > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullVector< Real > &v);  ; SOFA_LINEARALGEBRA_API void init ();  Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isInitialized ();  Return true if and only if the Sofa.LinearAlgebra library has been initialized. More...;  ; SOFA_LINEARALGEBRA_API void cleanup ();  Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isCleanedUp ();  Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. More...;  ; template<class Real > ; std::ostream & operator<< (std::ostream &out, const RotationMatrix< Real > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< float > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< double > &v);  ; template<typename _Scalar , int _Options, typename _StorageIndex > ; void flagValueIndices (Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, _Options, _StorageIndex > &matrix);  ; template<class TMatrix > ; void transpose (const TMatrix &self, type::vector< typename TMatrix::Index > &outer, type::vector< typename TMatrix::Index > &inner, type::vector< typename TMatrix::Index > &perm);  ; template<typename Real , typename Integer > ; void solveL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:7757,depend,dependencies,7757,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['depend'],['dependencies']
Integrability,"<OglSceneFrame.h>. Inheritance diagram for sofa::gl::component::rendering3d::OglSceneFrame:. [legend]. Public Attributes; Data< bool > d_drawFrame;  Display the frame or not. More...;  ; Data< sofa::helper::OptionsGroup > d_style;  Style of the frame. More...;  ; Data< sofa::helper::OptionsGroup > d_alignment;  Alignment of the frame in the view. More...;  ; Data< int > d_viewportSize;  Size of the viewport where the frame is rendered. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglSceneFrame, VisualModel);  ;  OglSceneFrame ();  ; void doDrawVisual (const core::visual::VisualParams *) override;  ;  Public Member Functions inherited from sofa::core::visual::VisualModel;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html:1313,message,messages,1313,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_scene_frame.html,1,['message'],['messages']
Integrability,"=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader; BaseVTKDataIO * inputPoints;  ; BaseVTKDataIO * inputNormals;  ; BaseVTKDataIO * inputPolygons;  ; BaseVTKDataIO * inputCells;  ; BaseVTKDataIO * inputCellOffsets;  ; BaseVTKDataIO * inputCellTypes;  ; type::vector< BaseVTKDataIO * > inputPointDataVector;  ; type::vector< BaseVTKDataIO * > inputCellDataVector;  ; bool isLittleEndian;  ; int numberOfPoints;  ; int numberOfCells;  ; int numberOfLines;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html:12244,message,messages,12244,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,1,['message'],['messages']
Integrability,"> . Container* sofa::simulation::Node::getNodeObjects ; (; Container * ; result). inline . Returns a list of object of type passed as a parameter. . ◆ getObject() [1/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridepure virtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObject() [2/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridepure virtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObject() [3/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getObject() [4/4]. core::objectmodel::BaseObject * sofa::simulation::Node::getObject ; (; const std::string & ; name); const. Find an object given its name. . ◆ getObjects() [1/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:42148,wrap,wrapper,42148,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,"> > f_output_triangles;  Output Triangles of the merged mesh. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > f_output_quads;  Output Quads of the merged mesh. More...;  ; Data< type::vector< type::vector< unsigned int > > > f_output_polygons;  Output Polygons of the merged mesh. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 4 > > > f_output_tetrahedra;  Output Tetrahedra of the merged mesh. More...;  ; Data< type::vector< type::fixed_array< unsigned int, 8 > > > f_output_hexahedra;  Output Hexahedra of the merged mesh. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergeMeshes, DataTypes), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> valu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html:2688,message,messages,2688,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_meshes.html,1,['message'],['messages']
Integrability,">() ) { ... } . ◆ getNodeObjects() [2/4]. template<class Container > . Container& sofa::simulation::Node::getNodeObjects ; (; Container & ; result). inline . Returns a list of object of type passed as a parameter. . ◆ getNodeObjects() [3/4]. template<class Object , class Container > . void sofa::simulation::Node::getNodeObjects ; (; Container * ; list). inline . List all objects of this node deriving from a given class. . ◆ getNodeObjects() [4/4]. template<class Container > . Container* sofa::simulation::Node::getNodeObjects ; (; Container * ; result). inline . Returns a list of object of type passed as a parameter. . ◆ getObject() [1/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridepure virtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObject() [2/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridepure virtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObject() [3/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:41694,wrap,wrapper,41694,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,">, sofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >, sofa::component::collision::response::contact::CollisionResponse, and sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase. ◆ setSrc() [1/2]. void sofa::core::objectmodel::BaseObject::setSrc ; (; const std::string & ; v, . const BaseObject * ; loader, . std::vector< std::string > * ; attributeList = nullptr . ). Sets a source Object and parses it to collect dependent Data Use it before scene graph insertion . ◆ setSrc() [2/2]. void sofa::core::objectmodel::BaseObject::setSrc ; (; const std::string & ; v, . std::vector< std::string > * ; attributeList = nullptr . ). Sets a source Object and parses it to collect dependent Data. . ◆ SOFA_CLASS(). sofa::core::objectmodel::BaseObject::SOFA_CLASS ; (; BaseObject ; , . Base ;  . ). ◆ storeResetState(). void sofa::core::objectmodel::BaseObject::storeResetState ; (; ). virtual . Save the initial state for later uses in reset() ; Reimplemented in sofa::core::behavior::BaseAnimationLoop, sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, and sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >. ◆ trackInternalData(). void sofa::core::objectmodel::BaseObject::trackInternalData ; (; const BaseData & ; data). protected . Method called to add the Data to the DataTracker (listing the Data to track) . ◆ updateInternal(). void sofa::core::objectmodel::BaseObject::updateInternal ; (; ). Update method called when variables (used to compute other internal variables) are modified. . Related details. ◆ BaseNode. friend class BaseNode. friend . BaseNode can s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:79732,depend,dependent,79732,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['depend'],['dependent']
Integrability,">:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecReal > radius;  ; sofa::core::objectmodel::RenamedData< SReal > defaultRadius;  ; Data< VecReal > d_radius;  Radius of each sphere. More...;  ; Data< SReal > d_defaultRadius;  Default radius. More...;  ; Data< bool > d_showImpostors;  Draw spheres as impostors instead of ""real"" spheres. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; SingleLink< SphereCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html:1592,message,messages,1592,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_sphere_collision_model.html,1,['message'],['messages']
Integrability,A - Topic: [SOLVED] Questions regarding the installation of SofaPython3 plugin. /random-linear-force-field; ; SOFA - Topic: [SOLVED] Random Linear Force Field. /rayleigh-numerical-damping; . /feed; ; Rayleigh/Numerical damping – SOFA. SOFA - Topic: Rayleigh/Numerical damping. /read-data-from-external-file; ; SOFA - Topic: [SOLVED] Read data from external file. /reading-indices-of-fixedconstraint-from-an-ascii-file; ; SOFA - Topic: [SOLVED] Reading indices of FixedConstraint from an ascii file. /reading-stl-file-vertices-from-my-own-component; ; SOFA - Topic: [SOLVED] reading STL file vertices from my own component. /realistic-behavior-of-a-liver-and-its-skin; ; SOFA - Topic: [SOLVED] Realistic behavior of a liver and its skin. /realtime-fea-visualization-with-ros; ; SOFA - Topic: Realtime FEA visualization with ROS. /receive-realtime-force-feedback-in-batch-mode; ; SOFA - Topic: Receive realtime force feedback in batch mode. /recommendation-of-the-versions-for-sofa-dependencies; ; SOFA - Topic: Recommendation of the Versions for SOFA Dependencies. /recordedcamera-in-sofapython; ; SOFA - Topic: [SOLVED] RecordedCamera in SofaPython ?. /recording-images-of-scenes; . /page; . /2; ; SOFA - Topic: Recording images of scenes. SOFA - Topic: Recording images of scenes. /regarding-modeler; ; SOFA - Topic: Regarding Modeler. /register-for-the-sofa-week-2019-now; . /feed; ; Register for the SOFA Week 2019 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2019 now!. /register-for-the-sofa-week-2020-now; . /feed; ; Register for the SOFA Week 2020 now! – SOFA. SOFA - Topic: Register for the SOFA Week 2020 now!. /removing-and-adding-compliance-nodes-in-simulation-compliant-module; ; SOFA - Topic: [SOLVED] Error while Adding Compliance nodes in the simulation (Compliant module). /rendering-a-scene-in-stereoscopic-3d; ; SOFA - Topic: [SOLVED] Rendering a scene in stereoscopic 3D. /request-for-new-section-under-components-to-explain-how-to-makeedituse; ; SOFA - Topic: [SOLVED] Req,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:375737,depend,dependencies,375737,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependencies']
Integrability,"A API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::logging::Message Class Reference . #include <Message.h>; Detailed Description; A message is the core object of the msg_* API. A message contains a textual description provided by the user as well as the location in source file (or in a separated file) from where the message have been emitted. A message also contains a ComponentInfo which can be used to provide additional details about the emitter's context. . Static Public Attributes; static TypeSet AnyTypes;  ; static Message emptyMsg;  . Protected Attributes; ComponentInfo::SPtr m_componentinfo;  ; FileInfo::SPtr m_fileInfo;  a trace (name, path) from whom has emitted this message. More...;  ; std::stringstream m_stream;  the actual message More...;  ; Class m_class;  who is the attender of the message (developers or users)? More...;  ; Type m_type;  the message level More...;  ; int m_id;  should it be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:1068,message,message,1068,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"API computeForce (SReal x, SReal y, SReal z, SReal, SReal, SReal, SReal, SReal &fx, SReal &fy, SReal &fz);  ; void SOFA_COMPONENT_HAPTICS_API computeWrench (const sofa::type::Transform< SReal > &world_H_tool, const sofa::type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &W_tool_world);  ;  Public Member Functions inherited from sofa::component::haptics::MechanicalStateForceFeedback< TDataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html:6794,depend,dependent,6794,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_l_c_p_force_feedback.html,1,['depend'],['dependent']
Integrability,"A_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void addToTotalForces (core::ConstVecDerivId forceId);  ; virtual void removeFromTotalForces (core::ConstVecDerivId forceId);  ; BaseData vectors access API based on VecId; virtual objectmodel::BaseData * baseWrite (VecId v)=0;  ; virtual const objectmodel::BaseData * baseRead (ConstVecId v) const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html:1855,depend,dependent,1855,api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_state.html,1,['depend'],['dependent']
Integrability,"A_CLASS (SOFA_TEMPLATE(MechanicalStateForceFeedback, TDataTypes), ForceFeedback);  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html:2473,depend,dependent,2473,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback_t.html,1,['depend'],['dependent']
Integrability,"AnyTypessofa::helper::logging::Messagestatic; CEmpty enum valuesofa::helper::logging::Message; Class enum namesofa::helper::logging::Message; ClassCount enum valuesofa::helper::logging::Message; componentInfo() constsofa::helper::logging::Messageinline; context() constsofa::helper::logging::Messageinline; Deprecated enum valuesofa::helper::logging::Message; Dev enum valuesofa::helper::logging::Message; empty() constsofa::helper::logging::Message; emptyMsgsofa::helper::logging::Messagestatic; Error enum valuesofa::helper::logging::Message; Fatal enum valuesofa::helper::logging::Message; fileInfo() constsofa::helper::logging::Messageinline; Info enum valuesofa::helper::logging::Message; Log enum valuesofa::helper::logging::Message; m_classsofa::helper::logging::Messageprotected; m_componentinfosofa::helper::logging::Messageprotected; m_fileInfosofa::helper::logging::Messageprotected; m_idsofa::helper::logging::Messageprotected; m_streamsofa::helper::logging::Messageprotected; m_typesofa::helper::logging::Messageprotected; message() constsofa::helper::logging::Messageinline; Message()sofa::helper::logging::Messageinline; Message(const Message &msg)sofa::helper::logging::Message; Message(Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo)sofa::helper::logging::Message; messageAsString() constsofa::helper::logging::Messageinline; operator<<(const T &x)sofa::helper::logging::Messageinline; operator<<(const FileInfo::SPtr &fi)sofa::helper::logging::Message; operator=(const Message &msg)sofa::helper::logging::Message; Runtime enum valuesofa::helper::logging::Message; sender() constsofa::helper::logging::Messageinline; TEmpty enum valuesofa::helper::logging::Message; type() constsofa::helper::logging::Messageinline; Type enum namesofa::helper::logging::Message; TypeCount enum valuesofa::helper::logging::Message; TypeSet typedefsofa::helper::logging::Message; Warning enum valuesofa::helper::logging::Message.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html:1336,message,message,1336,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message-members.html,2,['message'],"['message', 'messageAsString']"
Integrability,"Attributes; Data< type::vector< sofa::type::Vec< 3, Real > > > d_scales;  Scale transformation added to the rigid transformation. More...;  ; type::vector< Matrix4x4 > SxInverses;  inverse initial positions More...;  ;  Public Attributes inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; Data< VecCoord > d_x0;  Rest position. More...;  ; Data< VecCoord > d_x;  Current position. More...;  ; Data< type::vector< type::Mat4x4 > > d_displacements;  Displacement transforms with respect to original rigid positions. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DisplacementMatrixEngine, DataTypes), SOFA_TEMPLATE2(DisplacementTransformEngine, DataTypes, type::Mat4x4));  ;  DisplacementMatrixEngine ();  DisplacementMatrixEngine. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:1530,message,messages,1530,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['message'],['messages']
Integrability,"BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; DataFileName d_repositoryPath;  Path to add to the pool of resources. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::sceneutility::BaseAddResourceRepository; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:11788,message,messages,11788,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,2,['message'],['messages']
Integrability,"BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void addQuadsProcess (const sofa::type::vector< Quad > &quads);  Effectively Add some quads to this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; virtual void removeQuadsProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of quads. Eventually remove isolated edges and vertices. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:16384,message,message,16384,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['message'],['message']
Integrability,"BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(AffineMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  – Constraint interface More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void draw (const core::visual::VisualParams *vparam",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:5892,interface,interface,5892,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"BaseState *from);  If the type is compatible set the input model and return true, otherwise do nothing and return false. More...;  ; virtual bool setTo (BaseState *to);  If the type is compatible set the output model and return true, otherwise do nothing and return false. More...;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; virtual sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:12486,depend,dependent,12486,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,1,['depend'],['dependent']
Integrability,"CT_CLASS (BaseMouseInteractor, core::BehaviorModel);  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void cleanup () override;  ; void addInteractionPerformer (InteractionPerformer *i);  ; bool removeInteractionPerformer (InteractionPerformer *i);  ; void updatePosition (SReal dt) override;  Computation of a new simulation step. More...;  ; void handleEvent (core::objectmodel::Event *e) override;  Handle an event. More...;  ; bool isMouseAttached () const;  ; void setMouseAttached (bool b);  ; MouseCollisionModel * getMouseRayModel ();  ; void setMouseRayModel (MouseCollisionModel *model);  ; BodyPicked getBodyPicked () const;  ; void setBodyPicked (BodyPicked picked);  ; SReal getDistanceFromMouse () const;  ; void setDistanceFromMouse (SReal d);  ;  Public Member Functions inherited from sofa::core::BehaviorModel;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html:3594,depend,dependent,3594,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1performer_1_1_mouse_interactor.html,1,['depend'],['dependent']
Integrability,"Classes |; Functions . sofa::simulation::common Namespace Reference . Classes; struct  CleanupCheck;  ; class  MechanicalOperations;  ; class  VectorOperations;  ; struct  VisitorExecuteFunc;  . Functions; SOFA_SIMULATION_COMMON_API sofa::helper::Creator< xml::NodeElement::Factory, Node > NodeClass (""default"");  ; SOFA_SIMULATION_COMMON_API void init ();  Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isInitialized ();  Return true if and only if the SofaSimulationCommon library has been initialized. More...;  ; SOFA_SIMULATION_COMMON_API void cleanup ();  Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_COMMON_API bool isCleanedUp ();  Return true if and only if the SofaSimulationCommon library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::cleanup ; (; ). Clean up the resources used by the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ init(). SOFA_SIMULATION_COMMON_API void sofa::simulation::common::init ; (; ). Initialize the SofaSimulationCommon library, as well as its dependencies: SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isCleanedUp ; (; ). Return true if and only if the SofaSimulationCommon library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_COMMON_API bool sofa::simulation::common::isInitialized ; (; ). Return true if and only if the SofaSimulationCommon library has been initialized. . ◆ NodeClass(). SOFA_SIMULATION_COMMON_API sofa::helper::Creator<xml::NodeElement::Factory, Node> sofa::simulation::common::NodeClass ; (; ""default"" ; ). sofasimulationcommon; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html:1284,depend,dependencies,1284,api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1common.html,2,['depend'],['dependencies']
Integrability,"CollisionResponse::~CollisionResponse ; (; ). overrideprotecteddefault . Function details. ◆ changeInstance(). void sofa::component::collision::response::contact::CollisionResponse::changeInstance ; (; Instance ; inst). overrideprotectedvirtual . Implements sofa::core::collision::CollisionAlgorithm. ◆ cleanup(). void sofa::component::collision::response::contact::CollisionResponse::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ contactCreationError(). void sofa::component::collision::response::contact::CollisionResponse::contactCreationError ; (; std::stringstream & ; errorStream, . const core::CollisionModel * ; model1, . const core::CollisionModel * ; model2, . std::string & ; responseUsed . ). protected . Write messages in stringstream in case a contact failed to be created. . ◆ create(). template<class T > . static T::SPtr sofa::component::collision::response::contact::CollisionResponse::create ; (; T * ; , . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . ◆ createContacts(). void sofa::component::collision::response::contact::CollisionResponse::createContacts ; (; const DetectionOutputMap & ; outputs). overridevirtual . outputsVec fixes the reproducibility problems by storing contacts in the collision detection saved order if not given, it is still working but with eventual reproducibility problems ; Implements sofa::core::collision::ContactManager. ◆ createNewContacts(). void sofa::component::collision::response::contact::CollisionResponse::createNewContacts ; (; const DetectionOutputMap & ; outputsMap, . Size & ; nbContact . ). protected . Create contacts if it has not been created before. . ◆ draw(). void sofa::component::collision::response::contact",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:18862,message,messages,18862,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['message'],['messages']
Integrability,"ConstraintAttachButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:1541,depend,dependent,1541,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,1,['depend'],['dependent']
Integrability,"Coord of intersection point, 0 if no intersection. . ◆ compute2PointsBarycoefs(). template<class DataTypes > . sofa::type::vector< SReal > sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::compute2PointsBarycoefs ; (; const sofa::type::Vec< 3, Real > & ; p, . PointID ; ind_p1, . PointID ; ind_p2 . ); const. delete . ◆ computeEdgeAABB(). template<class DataTypes > . void sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeAABB ; (; const EdgeID ; i, . CPos & ; minCoord, . CPos & ; maxCoord . ); const. ◆ computeEdgeBarycentricCoordinates(). template<class DataTypes > . auto sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeBarycentricCoordinates ; (; const sofa::type::Vec< 3, Real > & ; p, . PointID ; ind_p1, . PointID ; ind_p2, . bool ; useRestPosition = false . ); const. Compute the barycentric coordinates of input point p between edge of indices [ind_p1; ind_p2] using either current position or restPosition depending on useRestPosition value. ; Parameters. pposition of the point to compute the coefficients. ; ind_p1PointID of first vertex to be used to compute the barycentric coordinates of input point. ; ind_p2PointID of second vertex to be used to compute the barycentric coordinates of input point. ; useRestPositionbool false to use position, true to use rest_position. . Returnsthe 2 barycentric coordinates inside a vector<SReal>. . ◆ computeEdgeCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeCenter ; (; const EdgeID ; i); const. ◆ computeEdgeDirection(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeDirection ; (; const EdgeID ; i); const. ◆ computeEdgeLength() [1/2]. template<class DataTypes > . void sofa::component::topology::conta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:23703,depend,depending,23703,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,1,['depend'],['depending']
Integrability,"DLSolver< TMatrix, TVector, TThreadManager >:. [legend]; Detailed Description; template<class TMatrix, class TVector, class TThreadManager = NoThreadManager>; class sofa::component::linearsolver::direct::AsyncSparseLDLSolver< TMatrix, TVector, TThreadManager >; This linear solver is based on SparseLDLSolver, a direct linear solver which factorizes the linear system matrix. Its particularity is its asynchronous factorization.; The synchronous version performs the following operations (synchronously): 1) Build the matrix 2) Factorize the matrix 3) Solve the system based on the factorization; In the asynchronous version, the factorization is performed asynchronously. A consequence is that the solving process uses a factorization which may not be up to date. In practice, the factorization is at least one time step old. Because of this, the solver computes an approximation of the solution, based on an old factorization. It changes the behavior compared to a synchronous version, but it also changes the behavior depending on the duration of the factorization step. It may introduce instabilities. . Protected Attributes; InvertData m_secondInvertData;  ; InvertData * m_mainThreadInvertData { nullptr };  ; InvertData * m_asyncThreadInvertData { nullptr };  ; std::future< void > m_asyncResult;  Result of the asynchronous task. More...;  ; bool waitForAsyncTask { true };  ; std::atomic< bool > newInvertDataReady { false };  ; bool m_hasUpdatedMatrix { false };  ;  Protected Attributes inherited from sofa::component::linearsolver::direct::SparseLDLSolver< TMatrix, TVector, NoThreadManager >; type::vector< sofa::SignedIndex > Jlocal2global;  ; sofa::linearalgebra::FullMatrix< Real > JLinvDinv;  ; sofa::linearalgebra::FullMatrix< Real > JLinv;  ; sofa::linearalgebra::CompressedRowSparseMatrix< Real > Mfiltered;  ;  Protected Attributes inherited from sofa::component::linearsolver::direct::SparseLDLSolverImpl< TMatrix, TVector, NoThreadManager >; Data< bool > d_precomputeSymbolicDec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html:1566,depend,depending,1566,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1direct_1_1_async_sparse_l_d_l_solver.html,1,['depend'],['depending']
Integrability,"Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Constructor details. ◆ MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::MultiTagAnimationLoop ; (; ). ◆ ~MultiTagAnimationLoop(). sofa::component::animationloop::MultiTagAnimationLoop::~MultiTagAnimationLoop ; (; ). override . Function details. ◆ clear(). void sofa::component::animationloop::MultiTagAnimationLoop::clear ; (; ). virtual . ◆ init(). void sofa::component::animationloop::MultiTagAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiTagAnimationLoop::SOFA_CLASS ; (; MultiTagAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiTagAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiTagAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:16079,integrat,integrations,16079,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,1,['integrat'],['integrations']
Integrability,"Data< VecDeriv > velocity;  ; sofa::core::objectmodel::RenamedData< VecCoord > old_position;  ; Data< Real > d_stiffness;  Blending between current pos and target pos. More...;  ; Data< VecCoord > d_position;  Target positions. More...;  ; Data< VecDeriv > d_velocity;  Velocities. More...;  ; Data< VecCoord > d_old_position;  Old positions. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; PositionBasedDynamicsProjectiveConstraintInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html:2159,message,messages,2159,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_position_based_dynamics_projective_constraint.html,1,['message'],['messages']
Integrability,"DiagonalVelocityDampingForceField< DataTypes >, sofa::component::mechanicalload::ConstantForceField< DataTypes >, sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >, sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >, sofa::component::mechanicalload::OscillatingTorsionPressureForceField< DataTypes >, sofa::component::mechanicalload::LinearForceField< DataTypes >, sofa::component::mechanicalload::EdgePressureForceField< DataTypes >, and sofa::component::mechanicalload::SurfacePressureForceField< DataTypes >. ◆ addDForce() [2/2]. template<class DataTypes > . void sofa::core::behavior::ForceField< DataTypes >::addDForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dfId . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes ; This method retrieves the force and dx vector from the MechanicalState and call the internal addDForce(VecDeriv&,const VecDeriv&,SReal,SReal) method implemented by the component. ; Implements sofa::core::behavior::BaseForceField. ◆ addForce() [1/2]. template<class TDataTypes > . virtual void sofa::core::behavior::ForceField< TDataTypes >::addForce ; (; const MechanicalParams * ; , . DataVecDeriv & ; f, . const DataVecCoord & ; x, . const DataVecDeriv & ; v . ). pure virtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represented as a matrix, this method computes ; This is the method that should be implemented by the component ; Implemented in sofa::component::solidmechanics::fem::elastic::FastTetr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html:24780,integrat,integrated,24780,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_force_field.html,1,['integrat'],['integrated']
Integrability,"Direction dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; Parameters Setters; virtual void setDt (SReal);  Simulation timestep. More...;  ; virtual void setAnimate (bool);  Animation flag. More...;  ; virtual void setSleeping (bool);  Sleeping state of the context. More...;  ; virtual void setChangeSleepingState (bool);  Sleeping state change of the context. More...;  ; Variables Setters; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; Adding/Removing objects. Note that these methods can fail if the context doesn't support attached obj",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:7419,wrap,wrapper,7419,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"Direction dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void executeVisitor (simulation::Visitor *, bool precomputedOrder=false);  apply an action More...;  ; virtual void propagateEvent (const core::ExecParams *params, Eve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:8515,wrap,wrapper,8515,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['wrap'],['wrapper']
Integrability,"Direction dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *ma",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:22670,wrap,wrapper,22670,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['wrap'],['wrapper']
Integrability,"Fs position More...;  ; VecCoord xP;  position at the previous step for constrained DOFs position More...;  ; SingleLink< LinearVelocityProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyVelocity More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyVelocities ();  ; void addKeyVelocity (Real time, Deriv movement);  ; void init () over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:2530,message,messages,2530,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['message'],['messages']
Integrability,"GLINK > d_mapper;  ; SingleLink< BarycentricMapping< In, Out >, BaseMeshTopology, BaseLink::FLAG_STRONGLINK > d_input_topology;  ; SingleLink< BarycentricMapping< In, Out >, BaseMeshTopology, BaseLink::FLAG_STRONGLINK > d_output_topology;  . Protected Attributes; linearalgebra::BaseMatrix * internalMatrix;  internally store a matrix for getJ/Compliant More...;  ; type::vector< linearalgebra::BaseMatrix * > js;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE2(BarycentricMapping, TIn, TOut), SOFA_TEMPLATE2(LinearMapping, TIn, TOut));  ; void init () override;  ; void reinit () override;  ; void apply (const core::MechanicalParams *mparams, Data< typename Out::VecCoord > &out, const Data< typename In::VecCoord > &in) override;  ; void applyJ (const core::MechanicalParams *mparams, Data< typename Out::VecDeriv > &out, const Data< typename In::VecDeriv > &in) override;  ; void applyJT (const core::MechanicalParams *mparams, Data< typename In::VecDeriv > &out, const Data< typename Out::VecDeriv > &in) override;  ; void applyJT (const core::ConstraintParams *cparams, Data< typename In::MatrixDeriv > &out, const Data< typename Out::MatrixDeriv > &in) override;  ; const sofa::linearalgebra::BaseMatrix * getJ () override;  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs () override;  ; void draw (const core::visual::VisualParams *vparams) override;  ; void handleTopologyChange (core::topology::Topology *t) override;  ; TopologyBarycentricMapper< InDataTypes, OutDataTypes > * getMapper ();  interface for continuous friction contact More...;  ;  Public Member Functions inherited from sofa::component::mapping::linear::crtp::CRTPLinearMapping< TMapping >;  SOFA_CLASS (SOFA_TEMPLATE(CRTPLinearMapping, TMapping), TMapping);  ; virtual bool isLinear () const override;  . Protected Member Functions;  BarycentricMapping (core::State< In > *from, core::State< Out > *to, typename Mapper::SPtr m_mapper);  ;  BarycentricMapping (core::State< In > *from=null",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapping.html:2284,interface,interface,2284,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_barycentric_mapping.html,1,['interface'],['interface']
Integrability,"GLinearSolver(). template<class TMatrix , class TVector > . sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::CGLinearSolver. protected . Linear system solver using the conjugate gradient iterative algorithm. . Function details. ◆ cgstep_alpha() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsolver::iterative::CGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_alpha ; (; const core::ExecParams * ; params, . Vector & ; x, . Vector & ; r, . Vector & ; p, . Vector & ; q, . Real ; alpha . ). inlineprotected . ◆ cgstep_alpha() [2/3]. template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::cgstep_alpha ; (; const core::ExecParams * ; params, . Vector & ; x, . Vector & ; r, . Vector & ; p, . Vector & ; q, . Real ; alpha . ). inlineprotected . This method is separated from the rest to be able to use custom/optimized versions depending on the types of vectors. It computes: x += p*alpha, r -= q*alpha . ◆ cgstep_alpha() [3/3]. void sofa::component::linearsolver::iterative::CGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_alpha ; (; const core::ExecParams * ; params, . Vector & ; x, . Vector & ; r, . Vector & ; p, . Vector & ; q, . Real ; alpha . ). inlineprotected . ◆ cgstep_beta() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsolver::iterative::CGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_beta ; (; const core::ExecParams * ; , . Vector & ; p, . Vector & ; r, . Real ; beta . ). inlineprotected . ◆ cgstep_beta() [2/3]. void sofa::component::linearsolver::iterative::CGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_beta ; (; const core::ExecParams",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_c_g_linear_solver.html:8256,depend,depending,8256,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_c_g_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_c_g_linear_solver.html,1,['depend'],['depending']
Integrability,"Get the pair of collision models which are in contact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html:3194,depend,dependent,3194,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,1,['depend'],['dependent']
Integrability,"Hexahedra, const type::fixed_array< unsigned int, 8 > &p);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7);  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void parse (objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:6276,depend,dependent,6276,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['depend'],['dependent']
Integrability,"Id ; v). inline . ◆ setDx() [3/3]. MechanicalParams& sofa::core::MechanicalParams::setDx ; (; ConstVecDerivId ; v). inline . Set the IDs of dx vector (for implicit schemes) . ◆ setEnergy(). MechanicalParams& sofa::core::MechanicalParams::setEnergy ; (; bool ; v). inline . Specify if the potential and kinematic energies should be computed ? . ◆ setExecParams(). MechanicalParams * sofa::core::MechanicalParams::setExecParams ; (; const core::ExecParams * ; params). ◆ setF() [1/3]. template<class StateSet > . MechanicalParams& sofa::core::MechanicalParams::setF ; (; const StateSet & ; g, . ConstVecDerivId ; v . ). inline . ◆ setF() [2/3]. MechanicalParams& sofa::core::MechanicalParams::setF ; (; ConstMultiVecDerivId ; v). inline . ◆ setF() [3/3]. MechanicalParams& sofa::core::MechanicalParams::setF ; (; ConstVecDerivId ; v). inline . Set the IDs of force vector. . ◆ setImplicit(). MechanicalParams& sofa::core::MechanicalParams::setImplicit ; (; bool ; v). inline . Specify if the time integration scheme is implicit. . ◆ setImplicitPosition(). void sofa::core::MechanicalParams::setImplicitPosition ; (; SReal ; i). inline . ◆ setImplicitVelocity(). void sofa::core::MechanicalParams::setImplicitVelocity ; (; SReal ; i). inline . ◆ setKFactor(). MechanicalParams& sofa::core::MechanicalParams::setKFactor ; (; SReal ; v). inline . Set Stiffness matrix contributions factor (for implicit schemes) . ◆ setKFactorUsed(). void sofa::core::MechanicalParams::setKFactorUsed ; (; bool ; b); const. inline . Checks wether or nor kFactor is used in ForceFields. Temporary here for compatibility reasons. . ◆ setMFactor(). MechanicalParams& sofa::core::MechanicalParams::setMFactor ; (; SReal ; v). inline . Set Mass matrix contributions factor (for implicit schemes) . ◆ setSupportOnlySymmetricMatrix(). MechanicalParams& sofa::core::MechanicalParams::setSupportOnlySymmetricMatrix ; (; bool ; b). inline . Set the flag (for implicit schemes) specifying if solvers are only specialized for symmetri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:16062,integrat,integration,16062,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['integrat'],['integration']
Integrability,"Info::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2512,message,message,2512,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"InfoManager > . bool sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::empty ; (; ); const. inline . ◆ end() [1/2]. template<class T , class MemoryManager , class DataTypeInfoManager > . iterator sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::end ; (; ). inline . ◆ end() [2/2]. template<class T , class MemoryManager , class DataTypeInfoManager > . const_iterator sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::end ; (; ); const. inline . ◆ erase(). template<class T , class MemoryManager , class DataTypeInfoManager > . iterator sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::erase ; (; iterator ; position). inline . ◆ fastResize(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::fastResize ; (; Size ; s, . Size ; WARP_SIZE = MemoryManager::BSIZE . ). inline . resize the vector without calling constructors or destructors, and without synchronizing the device and host copy . ◆ getCached(). template<class T , class MemoryManager , class DataTypeInfoManager > . const T& sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::getCached ; (; Size ; i); const. inline . ◆ getSingle(). template<class T , class MemoryManager , class DataTypeInfoManager > . const T& sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::getSingle ; (; Size ; i); const. inline . ◆ hostRead(). template<class T , class MemoryManager , class DataTypeInfoManager > . const T* sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::hostRead ; (; ); const. inline . ◆ hostReadAt(). template<class T , class MemoryManager , class DataTypeInfoManager > . const T* sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::hostReadAt ; (; int ; i); const. inline . ◆ hostWrite(). template<class T , class MemoryManager , class DataTypeInfoManager > . T* sofa::type::vector_device< T, MemoryManag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:13663,synchroniz,synchronizing,13663,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['synchroniz'],['synchronizing']
Integrability,"Inheritance diagram for sofa::component::engine::transform::Indices2ValuesMapper< DataTypes >:. [legend]. Public Attributes; Data< sofa::type::vector< Real > > f_inputValues;  Already existing values (can be empty) More...;  ; Data< sofa::type::vector< Real > > f_indices;  Indices to map value on. More...;  ; Data< sofa::type::vector< Real > > f_values;  Values to map indices on. More...;  ; Data< sofa::type::vector< Real > > f_outputValues;  New map between indices and values. More...;  ; Data< Real > p_defaultValue;  Default value for indices without any value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(Indices2ValuesMapper, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Publi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html:1431,message,messages,1431,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_indices2_values_mapper.html,1,['message'],['messages']
Integrability,"InitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class TetrahedronSetGeometryAlgorithms;  . Additional Inherited Members;  Protected Attributes inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyModifier; Data< sofa::type::vector< TriangleID > > list_Out;  triangles with at least one null values. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:30529,depend,depends,30529,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['depend'],['depends']
Integrability,"Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getPositionIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getPositionIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the position. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::NewmarkImplicitSolver::getVelocityIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the velocity. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS2(). sofa::component::odesolver::backward::NewmarkImplicitSolver::SOFA_CLASS2 ; (; NewmarkImplicitSolver ; , . sofa::core::behavior::OdeSolver ; , . sofa::core::behavior::LinearSolverAccessor ;  . ). ◆ solve(). void sofa::component::odesolver::backward::NewmarkImplicitSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverbackwardNewmarkImplicitSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:20036,integrat,integration,20036,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['integrat'],['integration']
Integrability,"It is able to process events, if listening enabled (default is false). . Protected Attributes; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; data access; Access to external data . SReal getTime () const;  Current time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::Base; virtual const BaseClass * getClass () const;  ; void addDeprecatedAttribute (lifecycle::DeprecatedData *attribute);  ; void addUpdateCallback (const std::string &name, std::initializer_list< BaseData * > inputs, std::function< sofa::core::objectmodel::ComponentState(const DataTracker &)> funct",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:1834,depend,dependent,1834,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['depend'],['dependent']
Integrability,"List of all members . sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes > Class Template Reference . #include <BarycentricStickContact.h>. Inheritance diagram for sofa::component::collision::response::contact::BarycentricStickContact< TCollisionModel1, TCollisionModel2, ResponseDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_keepAlive;  ; Data< bool > d_keepAlive;  set to true to keep this contact alive even after collisions are no longer detected More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; CollisionModel1 * model1;  ; CollisionModel2 * model2;  ; Intersection * intersectionMethod;  ; mapper::ContactMapper< CollisionModel1, DataTypes1 > mapper1;  ; mapper::ContactMapper< CollisionModel2, DataTypes2 > mapper2;  ; ResponseForceField::SPtr ff;  ; core::objectmodel::BaseContext * parent;  ; ContactIndexMap contactIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html:1359,message,messages,1359,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_stick_contact.html,1,['message'],['messages']
Integrability,"List of all members . sofa::gui::component::FixPickedParticleButtonSetting Class Reference . #include <FixPickedParticleButtonSetting.h>. Inheritance diagram for sofa::gui::component::FixPickedParticleButtonSetting:. [legend]. Public Attributes; Data< SReal > stiffness;  Stiffness of the spring to fix a particule. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html:1251,message,messages,1251,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,1,['message'],['messages']
Integrability,"LoadedCallback(). void sofa::helper::system::PluginManager::addOnPluginLoadedCallback ; (; const std::string & ; key, . std::function< void(const std::string &, const Plugin &)> ; callback . ). ◆ checkDuplicatedPlugin(). bool sofa::helper::system::PluginManager::checkDuplicatedPlugin ; (; const Plugin & ; plugin, . const std::string & ; pluginPath . ). ◆ cleanup(). void sofa::helper::system::PluginManager::cleanup ; (; ). ◆ findPlugin(). std::string sofa::helper::system::PluginManager::findPlugin ; (; const std::string & ; pluginName, . const std::string & ; suffix = getDefaultSuffix(), . bool ; ignoreCase = true, . bool ; recursive = true, . int ; maxRecursiveDepth = 3 . ). ◆ getDefaultSuffix(). std::string sofa::helper::system::PluginManager::getDefaultSuffix ; (; ). static . Get the default suffix applied to plugin names to find the actual lib to load Returns ""_d"" in debug configuration and an empty string otherwise . Get the default suffix applied to plugin names to find the actual lib to load (depends on platform, version, debug/release build) . ◆ getEntryFromPlugin(). template<typename Entry > . bool sofa::helper::system::PluginManager::getEntryFromPlugin ; (; const Plugin * ; plugin, . Entry & ; entry . ). inline . ◆ getInstance(). PluginManager & sofa::helper::system::PluginManager::getInstance ; (; ). static . ◆ getPlugin(). Plugin * sofa::helper::system::PluginManager::getPlugin ; (; const std::string & ; plugin, . const std::string & ; = getDefaultSuffix(), . bool ; = true . ). ◆ getPluginByName(). Plugin * sofa::helper::system::PluginManager::getPluginByName ; (; const std::string & ; pluginName). ◆ getPluginMap(). PluginMap& sofa::helper::system::PluginManager::getPluginMap ; (; ). inline . ◆ GetPluginNameFromPath(). std::string sofa::helper::system::PluginManager::GetPluginNameFromPath ; (; const std::string & ; pluginPath). static . ◆ init() [1/2]. void sofa::helper::system::PluginManager::init ; (; void ; ). ◆ init() [2/2]. void sofa::helper::system:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html:4515,depend,depends,4515,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_plugin_manager.html,1,['depend'],['depends']
Integrability,"MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3550,message,message,3550,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['message'],['message']
Integrability,"MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_N",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:4358,depend,dependencies,4358,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['depend'],['dependencies']
Integrability,"Mass< DataTypes >::getPotentialEnergy. override . $ e = M g x $; This method retrieves the positions vector and call the internal getPotentialEnergy(const MechanicalParams*, const VecCoord&) method implemented by the component. . ◆ getPotentialEnergy() [4/4]. template<class DataTypes > . SReal sofa::core::behavior::Mass< DataTypes >::getPotentialEnergy. override . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >. ◆ integrateVolume(). template<class DataTypes > . HexahedralFEMForceFieldAndMass< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::integrateVolume ; (; int ; signx, . int ; signy, . int ; signz, . Real ; l0, . Real ; l1, . Real ; l2 . ). protected . ◆ isDiagonal(). template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::isDiagonal ; (; ); const. inlineoverridevirtual . Implements sofa::core::behavior::BaseMass. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >. ◆ setDensity(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:40690,integrat,integrateVolume,40690,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateVolume']
Integrability,"Matrix *W)=0;  ; virtual void getComplianceMatrix (linearalgebra::BaseMatrix *m) const =0;  Fill the matrix m with the full Compliance Matrix. More...;  ; virtual void getComplianceWithConstraintMerge (linearalgebra::BaseMatrix *, std::vector< int > &);  For multigrid approach => constraints are merged. More...;  ; virtual bool hasConstraintNumber (int);  ; virtual void resetForUnbuiltResolution (SReal *, std::list< unsigned int > &);  ; virtual void addConstraintDisplacement (SReal *, int, int);  ; virtual void setConstraintDForce (SReal *, int, int, bool);  ; virtual void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *, int, int);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html:5229,depend,dependent,5229,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,1,['depend'],['dependent']
Integrability,"Member Functions |; List of all members . sofa::gl::component::shader::PostProcessManager Class Reference . #include <PostProcessManager.h>. Inheritance diagram for sofa::gl::component::shader::PostProcessManager:. [legend]. Public Attributes; sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PostProcessManager, core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doInitVisual (const core::visual::VisualParams *vparams) override;  ; void preDrawScene (core::visua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html:1226,message,messages,1226,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_post_process_manager.html,1,['message'],['messages']
Integrability,"More...;  ; Data< std::set< int > > d_constraintGroups;  list of ID of groups of constraints to be handled by this solver. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graph;  Graph of residuals at each iteration. More...;  ; Data< int > d_showLevels;  Number of constraint levels to display. More...;  ; Data< SReal > d_showCellWidth;  Distance between each constraint cells. More...;  ; Data< type::Vec3 > d_showTranslation;  Position of the first cell. More...;  ; Data< type::Vec3 > d_showLevelTranslation;  Translation between levels. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LCPConstraintSolver, ConstraintSolverImpl);  ; bool prepareStates (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; bool buildSystem (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ; bool solveSystem (const core::ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null()) override;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:4607,message,messages,4607,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['message'],['messages']
Integrability,"More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). More...;  ; class  Data;  Container that holds a variable for a component. More...;  ; class  EmptyData;  ; class  DataContentValue;  ; class  DataContentValue< T, false >;  ; class  DataContentValue< T, true >;  ; class  DataFileName;  Data specialized to store filenames, potentially relative to the current directory at the time it was specified. More...;  ; class  DataFileNameVector;  ; class  DataLink;  DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. More...;  ; class  DDGNode;  A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. More...;  ; class  DetachNodeEvent;  ; class  Event;  Base class for all events received by the objects. More...;  ; class  GUIEvent;  This event notifies about GUI interaction. More...;  ; class  HapticDeviceEvent;  This event notifies about haptic device interaction. More...;  ; class  IdleEvent;  This event is propagated along the objects hierarchy at regular interval. More...;  ; class  JoystickEvent;  JoystickEvent Class. More...;  ; class  KeypressedEvent;  This event is propagated along the objects when a key on the keyboard is pressed. More...;  ; class  KeyreleasedEvent;  This event is propagated along the objects when a key on the keyboard is released. More...;  ; class  LinkTraitsDestPtr;  ; class  LinkTraitsDestPtr< TDestType, false >;  ; class  LinkTraitsDestPtr< TDestType, true >;  ; class  LinkTraitsValueType;  ; class  LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:3191,depend,dependency,3191,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['depend'],['dependency']
Integrability,"More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html:6229,depend,dependent,6229,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_transform_position.html,15,['depend'],['dependent']
Integrability,"Moving a model with key controls. /moving-an-object-by-keyboard; ; SOFA - Topic: [SOLVED] Moving an object by keyboard. /moving-the-starting-point-of-a-beam; ; SOFA - Topic: [SOLVED] Moving the starting point of a beam. /moving-to-github-discussions-lets-vote; ; SOFA - Topic: Moving to GitHub discussions –> let’s vote!. /multimaterial-soft-robotic-finger-simulation-issue; ; SOFA - Topic: Multimaterial soft robotic finger simulation issue. /multiple-errors-when-building-sofa-on-win7-vs2012; ; SOFA - Topic: [SOLVED] Multiple Errors when building SOFA on Win7, VS2012. /multiple-objects-in-a-obj-file; ; SOFA - Topic: Multiple objects in a .obj file. /multiple-tags-for-an-object; ; SOFA - Topic: [SOLVED] Multiple tags for an object?. /multithreading-in-python; ; SOFA - Topic: [SOLVED] Multithreading in Python; SOFA - Topic: [SOLVED] Multithreading in Python. /multithreading-plugin-in-pyscn; ; SOFA - Topic: [SOLVED] Multithreading plugin in .pyscn. /muscle-contraction-simulation; ; SOFA - Topic: [SOLVED] Muscle contraction simulation. /narrow-phases; ; SOFA - Topic: Narrow phases ?. /natural-vibration-problem-using-a-cantilever-beam; ; SOFA - Topic: Natural vibration problem using a cantilever beam. /navigation-recorded-camera; ; SOFA - Topic: Navigation Recorded Camera. /navigationrecordedcamera-scn-not-working; ; SOFA - Topic: [SOLVED] NavigationRecordedCamera.scn not working ?. /ncremental-iterative-nonlinear-fea-with-deformation-dependent-loads; ; SOFA - Topic: Incremental-Iterative Nonlinear FEA with deformation-dependent loads. /need-help-with-the-rigidify-function-from-stlib-physics-mixedmaterial; ; SOFA - Topic: Need Help With the Rigidify function from stlib.physics.mixedmaterial. /needle-insertion-into-soft-tissue; ; SOFA - Topic: [SOLVED] Needle Insertion into Soft Tissue. /needle-insertion-simulation; ; SOFA - Topic: Needle Insertion Simulation. /needle-insertion-simulation-problem; ; SOFA - Topic: Needle insertion simulation problem. /need-very-old-version-of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:352368,contract,contraction-simulation,352368,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['contract'],"['contraction', 'contraction-simulation']"
Integrability,"Node * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::OdeSolver::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::OdeSolver::SOFA_ABSTRACT_CLASS ; (; OdeSolver ; , . objectmodel::BaseObject ;  . ). ◆ solve() [1/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . MultiVecCoordId ; , . MultiVecDerivId ;  . ). pure virtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implemented in sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::forward::RungeKutta4Solver, sofa::component::odesolver::forward::RungeKutta2Solver, sofa::component::odesolver::forward::EulerExplicitSolver, sofa::component::odesolver::forward::DampVelocitySolver, sofa::component::odesolver::forward::CentralDifferenceSolver, sofa::component::odesolver::backward::VariationalSymplecticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ solve() [2/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; params, . SReal ; dt . ). inlinevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt. . sofacorebehaviorOdeSolver;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:19270,integrat,integration,19270,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['integrat'],['integration']
Integrability,OFA. /new-framework-for-soft-robots-with-sofa; ; SOFA – New framework for soft robots with SOFA. /new-geomagic-plugin; ; SOFA – New Geomagic plugin. /new-job-available-at-anatoscope; ; SOFA – New job available at Anatoscope!. /new-plugin-for-visco-elasticity; ; SOFA – New plugin for Visco-Elasticity!. /new-publications-with-sofa; ; SOFA – New publications with SOFA : May 2017. /new-publications-with-sofa-sept-2017; ; SOFA – New publications with SOFA : Sept 2017. /new-sofa-achievements-share-it; ; SOFA – New SOFA achievements? Share it!. /new-sofa-papers-accepted; ; SOFA – New SOFA papers accepted!. /new-sofa-release-v16-08-available; ; SOFA – New SOFA release (v16.08) available!. /next-sofa-technical-committee-in-sophia; ; SOFA – Next SOFA Technical Committee in Sophia!. /opening-ceremony-of-our-new-building; ; SOFA – Opening ceremony of our new building!. /open-source-release-of-ros-connector; ; SOFA – Open-source release of ROS connector!. /our-membership-contract-now-available; ; SOFA – Our Membership contract now available. /page; . /10; ; SOFA – News. /11; ; SOFA – News. /12; ; SOFA – News. /13; ; SOFA – News. /14; ; SOFA – News. /15; ; SOFA – News. /16; ; SOFA – News. /17; ; SOFA – News. /18; ; SOFA – News. /19; ; SOFA – News. /2; ; SOFA – News. /20; ; SOFA – News. /21; ; SOFA – News. /22; ; SOFA – News. /23; ; SOFA – News. /24; ; SOFA – News. /25; ; SOFA – News. /26; ; SOFA – News. /27; ; SOFA – News. /28; ; SOFA – News. /3; ; SOFA – News. /4; ; SOFA – News. /5; ; SOFA – News. /6; ; SOFA – News. /7; ; SOFA – News. /8; ; SOFA – News. /9; ; SOFA – News. /participation-at-fosdem-2019; ; SOFA – Participation at FOSDEM 2019. /presentation-of-sofa-at-icube-igg-cnrs-strasbourg; ; SOFA – Presentation of SOFA at iCube (IGG) CNRS Strasbourg. /presentation-of-sofa-in-lecce-italy; ; SOFA – Presentation of SOFA in Lecce – Italy. /prizes-for-defrost-success-in-soft-robotics; ; SOFA – Prizes for Defrost: success in soft-robotics. /publication-about-cardiac-electrophysiolog,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:5574,contract,contract-now-available,5574,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['contract'],"['contract', 'contract-now-available']"
Integrability,"OFA. SOFA - Topic Tag: CGAL Configuration. /cgalplugin; . /feed; ; CGALplugin – SOFA. SOFA - Topic Tag: CGALplugin. /cgal-plugin; . /feed; ; CGAL plugin – SOFA. SOFA - Topic Tag: CGAL plugin. /chain; . /feed; ; chain – SOFA. SOFA - Topic Tag: chain. /change-control-point-indices; . /feed; ; change control point indices – SOFA. SOFA - Topic Tag: change control point indices. /change-texture; . /feed; ; change texture – SOFA. SOFA - Topic Tag: change texture. /clamp; . /feed; ; clamp – SOFA. SOFA - Topic Tag: clamp. /clang; . /feed; ; Clang – SOFA. SOFA - Topic Tag: Clang. /client; . /feed; ; client – SOFA. SOFA - Topic Tag: client. /cloth; . /feed; ; cloth – SOFA. SOFA - Topic Tag: cloth. /cmake; . /feed; ; cmake – SOFA. SOFA - Topic Tag: cmake. /cmake-3-18-5-20-06-01; . /feed; ; Cmake 3.18.5 20.06.01 – SOFA. SOFA - Topic Tag: Cmake 3.18.5 20.06.01. /cmake-3-19-0; . /feed; ; CMake 3.19.0 – SOFA. SOFA - Topic Tag: CMake 3.19.0. /cmake-build-external-dependency; . /feed; ; CMake build ""external dependency"" – SOFA. SOFA - Topic Tag: CMake build ""external dependency"". /cmake-error; . /feed; ; CMake error – SOFA. SOFA - Topic Tag: CMake error. /cmake-gui; . /feed; ; cmake gui – SOFA. SOFA - Topic Tag: cmake gui. /cmakelists-txt; . /feed; ; CMakeLists.txt – SOFA. SOFA - Topic Tag: CMakeLists.txt. /collapse-model; . /feed; ; collapse model – SOFA. SOFA - Topic Tag: collapse model. /collision; . /feed; ; collision – SOFA. SOFA - Topic Tag: collision. /collision-detection; . /feed; ; collision detection – SOFA. SOFA - Topic Tag: collision detection. /collision-detection-narrow-phase; . /feed; ; Collision Detection; Narrow Phase – SOFA. SOFA - Topic Tag: Collision Detection; Narrow Phase. /collisionmodel; . /feed; ; CollisionModel – SOFA. SOFA - Topic Tag: CollisionModel. /collision-model; . /feed; ; collision model – SOFA. SOFA - Topic Tag: collision model. /collision-not-working; . /feed; ; Collision not working – SOFA. SOFA - Topic Tag: Collision not working. /collisions; . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:434151,depend,dependency,434151,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency']
Integrability,"OFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void buildConstraintMatrix (const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html:3407,depend,dependent,3407,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,2,['depend'],['dependent']
Integrability,OLVED] Omni Buttons Controller. /one-object-with-different-collision-definitions-for-different-parts; ; SOFA - Topic: [SOLVED] One object with different collision definitions for different parts. /onkeypressedevent-not-working; ; SOFA - Topic: onKeypressedEvent not working. /on-the-rotation-of-a-mesh-model-oglmodel; . /feed; ; [SOLVED] On the rotation of a mesh model (OglModel) – SOFA. SOFA - Topic: [SOLVED] On the rotation of a mesh model (OglModel). /opengl-and-directx; ; SOFA - Topic: opengl and directX. /opengl-error-when-compiling-sofa-on-macos; ; SOFA - Topic: [SOLVED] OpenGL Error when Compiling SOFA on MacOS. /open-obj-or-stl-files; . /feed; ; [SOLVED] Open .OBJ or .STL files – SOFA. SOFA - Topic: [SOLVED] Open .OBJ or .STL files. /open-position-for-an-engineer-in-computer-science; . /page; . /4; ; SOFA - Topic: Open position for an Engineer in Computer Science. SOFA - Topic: Open position for an Engineer in Computer Science. /optimization-integrator; . /feed; ; [SOLVED] Optimization integrator – SOFA. SOFA - Topic: [SOLVED] Optimization integrator. /order-independent-transparency; ; SOFA - Topic: [SOLVED] Order Independent Transparency. /orientantion-in-end-effector; ; SOFA - Topic: Orientantion in End-Effector. /oriented-sliding-constraint-actuator; ; SOFA - Topic: Oriented Sliding Constraint/Actuator. /parameter-value-update; . /embed; ; SOFA - Topic: Parameter value update. SOFA - Topic: Parameter value update. /paraview-and-sofa-working-together; ; SOFA - Topic: Paraview and SOFA working together. /parse-error; ; SOFA - Topic: Parse error. /particlemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; . /feed; ; [SOLVED] Performance issues ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:359741,integrat,integrator,359741,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integrator']
Integrability,"OrderingMethod:. [legend]. Public Member Functions;  SOFA_CLASS (COLAMDOrderingMethod, BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int >>);  ; std::string methodName () const override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::COLAMDOrdering< int > >;  SOFA_CLASS (BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod);  ; void computePermutation (const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod;  ~BaseOrderingMethod () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method.html:1497,depend,dependent,1497,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_c_o_l_a_m_d_ordering_method.html,1,['depend'],['dependent']
Integrability,"PI: sofa::core::objectmodel::Base Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::core::objectmodel::Base Class Reference . #include <Base.h>; Base class for everything. ; More... Inheritance diagram for sofa::core::objectmodel::Base:. [legend]; Detailed Description; Base class for everything. ; This class contains all functionality shared by every objects in SOFA. Most importantly it defines how to retrieve information about an object (name, type, data fields). All classes deriving from Base should use the SOFA_CLASS macro within their declaration (see BaseClass.h). . Public Attributes; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions; virtual const BaseClass *",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:1025,message,messages,1025,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['message'],['messages']
Integrability,"Params * ; , . BaseVector * ; , . const MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const MechanicalParams * ; mparams, . const MultiMatrixAccessor * ; matrix . ). overridevirtual . Implement applyConstraint for direct solvers. ; Matrix Integration interface. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::draw ; (; const VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . inherited from the BaseObject interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ isPointInPlane(). template<class DataTypes > . bool sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::isPointInPlane ; (; const Coord & ; p); const. protected . ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:23159,interface,interface,23159,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['interface'],['interface']
Integrability,"PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:24621,message,message,24621,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,"PointProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::PlaneProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::LineProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::DirectionProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >, and sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >. ◆ applyConstraint() [3/3]. void sofa::core::behavior::BaseProjectiveConstraintSet::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). virtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented in sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >, and sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >. ◆ getGroup(). int sofa::core::behavior::BaseProjectiveConstraintSet::getGroup ; (; ); const. inline . Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html:19677,interface,interface,19677,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_projective_constraint_set.html,1,['interface'],['interface']
Integrability,"Proximity() is false) More...;  ; virtual void setContactDistance (SReal);  Set the contact distance (must return 0 if useProximity() is false) More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html:6238,depend,dependent,6238,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_discrete_intersection.html,2,['depend'],['dependent']
Integrability,"QUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::objectmodel::BaseObject);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::objectmodel::ContextObject);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::objectmodel::ConfigurationSetting);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseAnimationLoop);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseMass);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::OdeSolver);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::ConstraintSolver);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseLinearSolver);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseMechanicalState);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseForceField);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseInteractionForceField);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseProjectiveConstraintSet);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::behavior::BaseConstraintSet);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::topology::Topology);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::topology::BaseMeshTopology);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::topology::BaseTopologyObject);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::collision::Pipeline);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::VisualLoop);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::Shader);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::VisualModel);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::VisualManager);  ; SOFA_CORE_API void init ();  Initialize the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:12757,depend,dependencies,12757,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['depend'],['dependencies']
Integrability,"RECATED__MATRIXSUBTRACTION. using sofa::linearalgebra::SOFA_ATTRIBUTE_DEPRECATED__MATRIXSUBTRACTION = typedef MatrixSubtraction<M1, M2>. Enumeration Type Documentation. ◆ MatrixCategory. enum sofa::linearalgebra::MatrixCategory. EnumeratorMATRIX_IDENTITY ; MATRIX_DIAGONAL ; MATRIX_BAND ; MATRIX_SPARSE ; MATRIX_FULL . Function Documentation. ◆ addBlockMat(). template<class TMatrix , class TBlockMatrix > . void sofa::linearalgebra::addBlockMat ; (; TMatrix & ; self, . Index ; row, . Index ; col, . const TBlockMatrix & ; _M . ). ◆ addMultTransposeEigen(). template<typename LhsMatrixDeriv , typename RhsMatrixDeriv , typename Real > . void sofa::linearalgebra::addMultTransposeEigen ; (; LhsMatrixDeriv & ; lhs, . const Eigen::SparseMatrix< Real, Eigen::RowMajor > & ; jacobian, . const RhsMatrixDeriv & ; rhs . ). Computes lhs += jacobian^T * rhs. . ◆ cleanup(). SOFA_LINEARALGEBRA_API void sofa::linearalgebra::cleanup ; (; ). Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. . ◆ CompressedRowSparseMatrixVecDerivMult(). template<class RowType , class VecDeriv , typename Real = typename VecDeriv::value_type::Real> . Real sofa::linearalgebra::CompressedRowSparseMatrixVecDerivMult ; (; const RowType ; row, . const VecDeriv & ; vec . ). ◆ computeRowColumnCoordinateFromIndexInLowerTriangularMatrix(). void sofa::linearalgebra::computeRowColumnCoordinateFromIndexInLowerTriangularMatrix ; (; const sofa::Index ; flatIndex, . sofa::Index & ; row, . sofa::Index & ; col . ). inline . A lower triangular matrix can be stored as a linear array. This function converts the index in this linear array to 2d coordinates (row and column) of an element in the matrix.; Example of a 6x6 lower triangular matrix: [ 0 ] [ 1 2 ] [ 3 4 5 ] [ 6 7 8 9 ] [10 11 12 13 14 ] [15 16 17 18 19 20]; 0 => (0, 0) 7 => (3, 1) 18 => (5, 3) . ◆ convertCompressedRowSparseMatrixRowToVecDeriv(). template<class RowType , class VecDeriv > . void sofa::linearal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:13216,depend,dependencies,13216,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['depend'],['dependencies']
Integrability,"RE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::topology::Topology);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::topology::BaseMeshTopology);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::topology::BaseTopologyObject);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::collision::Pipeline);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::VisualLoop);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::Shader);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::VisualModel);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::core::visual::VisualManager);  ; SOFA_CORE_API void init ();  Initialize the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_CORE_API bool isInitialized ();  Return true if and only if the SofaCore library has been initialized. More...;  ; SOFA_CORE_API void cleanup ();  Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_CORE_API bool isCleanedUp ();  Return true if and only if the SofaCore library has been cleaned up. More...;  ; void findTemplatedCreator (objectmodel::BaseContext *context, const ObjectFactory::Creator::SPtr &creator, const std::string &templateName, std::map< std::string, std::vector< std::string >> &creatorsErrors, std::vector< std::pair< std::string, ObjectFactory::Creator::SPtr > > &creators, objectmodel::BaseObjectDescription *arg);  ; void to_json (nlohmann::json &json, const sofa::core::ObjectFactory::Creator::SPtr &creator);  ; void to_json (nlohmann::json &json, const sofa::core::ObjectFactory::ClassEntry::SPtr &entry);  ;  SOFA_DEFINE_OPAQUE_FUNCTIONS_BETWEEN_BASE_AND (sofa::simulation::Node);  ;  SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND (sofa::simulation::Node);  . Variables; template class SOFA_CORE_API Multi2Mapping< Vec1Types, Rigid3Types, Rigid3Types >;  ; template class SOFA",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:13032,depend,dependencies,13032,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['depend'],['dependencies']
Integrability,"Real > > > d_graphConstraints;  Graph of each constraint's error at the end of the resolution. More...;  ; Data< std::map< std::string, sofa::type::vector< SReal > > > d_graphForces;  Graph of each constraint's force at each step of the resolution. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::vector< core::behavior::BaseConstraintCorrection * > constraintCorrections;  ; sofa::helper::system::thread::CTime * timer;  ; SReal timeScale;  ; SReal time;  ; unsigned int numConstraints;  ; bool bufCP1;  ; SReal compTime;  ; SReal iterationTime;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Pr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:2754,message,messages,2754,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['message'],['messages']
Integrability,"Real ; alpha . ). inlineprotected . ◆ cgstep_beta() [1/3]. SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void sofa::component::linearsolver::iterative::CGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_beta ; (; const core::ExecParams * ; , . Vector & ; p, . Vector & ; r, . Real ; beta . ). inlineprotected . ◆ cgstep_beta() [2/3]. void sofa::component::linearsolver::iterative::CGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_beta ; (; const core::ExecParams * ; , . Vector & ; p, . Vector & ; r, . Real ; beta . ). inlineprotected . ◆ cgstep_beta() [3/3]. template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::cgstep_beta ; (; const core::ExecParams * ; params, . Vector & ; p, . Vector & ; r, . Real ; beta . ). inlineprotected . This method is separated from the rest to be able to use custom/optimized versions depending on the types of vectors. It computes: p = p*beta + r . ◆ init(). template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::init ; (; void ; ). override . Initialization function checking input Data. . ◆ reinit(). template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::reinit ; (; ). inlineoverride . ◆ resetSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::resetSystem. override . Clear graph and clean the RHS / LHS vectors. . ◆ setSystemMBKMatrix(). template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::CGLinearSolver< TMatrix, TVector >::setSystemMBKMatrix ; (; const sofa::core::MechanicalParams * ; mparams). override . For unbuilt approach (e.g. with GraphScattered types), it passes the coefficie",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_c_g_linear_solver.html:9660,depend,depending,9660,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_c_g_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_c_g_linear_solver.html,1,['depend'],['depending']
Integrability,"Real getPotentialEnergy (const MechanicalParams *mparams, const DataVecCoord1 &x1, const DataVecCoord2 &x2) const =0;  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:16854,message,messages,16854,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,1,['message'],['messages']
Integrability,"Reference . #include <LineAxis.h>. Inheritance diagram for sofa::component::visual::LineAxis:. [legend]. Public Attributes; Data< std::string > d_axis;  Axis to draw. More...;  ; Data< float > d_size;  Size of the squared grid. More...;  ; Data< float > d_thickness;  Thickness of the lines in the grid. More...;  ; core::objectmodel::lifecycle::RemovedData d_draw {this, ""v23.06"", ""23.12"", ""draw"", ""Use the 'enable' data field instead of 'draw'""};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool m_drawX;  ; bool m_drawY;  ; bool m_drawZ;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html:1288,message,messages,1288,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,1,['message'],['messages']
Integrability,"Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::sceneutility::MessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a MessageHandler to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::MessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a MessageHandler to the main logger. . Public Attributes; Data< std::string > d_type;  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html:1090,message,messages,1090,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,1,['message'],['messages']
Integrability,"Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes > Class Template Reference . #include <MooneyRivlin.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::MooneyRivlin< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""MooneyRivlin"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html:1089,depend,depends,1089,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_mooney_rivlin.html,1,['depend'],['depends']
Integrability,"RenamedData< Real > m_currentPressure;  ; sofa::core::objectmodel::RenamedData< Real > m_currentStiffness;  ; sofa::core::objectmodel::RenamedData< SeqTriangles > m_pressureTriangles;  ; sofa::core::objectmodel::RenamedData< Real > m_initialSurfaceArea;  ; sofa::core::objectmodel::RenamedData< Real > m_currentSurfaceArea;  ; sofa::core::objectmodel::RenamedData< Real > m_drawForceScale;  ; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > m_drawForceColor;  ; sofa::core::objectmodel::RenamedData< Real > m_volumeAfterTC;  ; sofa::core::objectmodel::RenamedData< Real > m_surfaceAreaAfterTC;  ; Data< Real > d_p0;  IN: Rest pressure when V = V0. More...;  ; Data< Real > d_B;  IN: Bulk modulus (resistance to uniform compression) More...;  ; Data< Real > d_gamma;  IN: Bulk modulus (resistance to uniform compression) More...;  ; Data< Real > d_injectedVolume;  IN: Injected (or extracted) volume since the start of the simulation. More...;  ; Data< Real > d_maxInjectionRate;  IN: Maximum injection rate (volume per second) More...;  ; Data< Real > d_initialVolume;  OUT: Initial volume, as computed from the surface rest position. More...;  ; Data< Real > d_currentInjectedVolume;  OUT: Current injected (or extracted) volume (taking into account maxInjectionRate) More...;  ; Data< Real > d_v0;  OUT: Rest volume (as computed from initialVolume + injectedVolume) More...;  ; Data< Real > d_currentVolume;  OUT: Current volume, as computed from the last surface position. More...;  ; Data< Real > d_currentPressure;  OUT: Current pressure, as computed from the last surface position. More...;  ; Data< Real > d_currentStiffness;  OUT: dP/dV at current volume and pressure. More...;  ; Data< SeqTriangles > d_pressureTriangles;  OUT: list of triangles where a pressure is applied (mesh triangles + tessellated quads) More...;  ; Data< Real > d_initialSurfaceArea;  OUT: Initial surface area, as computed from the surface rest position. More...;  ; Data< Real > d_currentSurfaceArea;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:2652,inject,injection,2652,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inject'],['injection']
Integrability,"SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:9560,depend,dependent,9560,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,6,['depend'],['dependent']
Integrability,"Slaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ParabolicProjectiveConstraint, DataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, DataTypes));  ; void addConstraint (unsigned index);  ; void setP1 (const Vec3R &p);  ; void setP2 (const Vec3R &p);  ; void setP3 (const Vec3R &p);  ; void setBeginTime (const Real &t);  ; void setEndTime (const Real &t);  ; Vec3R getP1 ();  ; Vec3R getP2 ();  ; Vec3R getP3 ();  ; Real getBeginTime ();  ; Real getEndTime ();  ; void init () override;  – Constraint interface More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html:3993,interface,interface,3993,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_parabolic_projective_constraint.html,1,['interface'],['interface']
Integrability,"TetrahedronTopology then . checkTriangleTopology and finally . checkEdgeTopology. At each level the topology is checked through the main element container and also the cross topology containers; Each method return a bool and will display msg_error if problems are detected. . Public Attributes; Data< bool > d_eachStep;  bool to check topology at each step. More...;  ; SingleLink< TopologyChecker, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology::SPtr m_topology;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:2055,message,messages,2055,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['message'],['messages']
Integrability,"Types > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::projectMatrix ; (; sofa::linearalgebra::BaseMatrix * ; M, . unsigned ; offset . ). overridevirtual . Implement projectMatrix for assembled solver of compliant. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ projectPosition(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::projectPosition ; (; const MechanicalParams * ; mparams, . DataVecCoord & ; xData . ). overridevirtual . project x to constrained space (x models a position) ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectResponse(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::projectResponse ; (; const MechanicalParams * ; mparams, . DataVecDeriv & ; resData . ). overridevirtual . – Constraint interface ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectVelocity(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::projectVelocity ; (; const MechanicalParams * ; mparams, . DataVecDeriv & ; vData . ). overridevirtual . project dx to constrained space (dx models a velocity) ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ removeConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::removeConstraint ; (; Index ; index). ◆ selectVerticesAlongPlane(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::selectVerticesAlongPlane. ◆ setDirection(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::setDirection ; (; Coord ; dir). ◆ setDminAndDmax(). template<class DataTypes > . vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:25566,interface,interface,25566,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['interface'],['interface']
Integrability,"VecId freePos, sofa::core::MultiVecDerivId freeVel, simulation::common::MechanicalOperations *mop);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:13932,integrat,integrate,13932,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['integrat'],['integrate']
Integrability,"VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html:11992,message,messages,11992,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_rendering_s_r_g_b.html,1,['message'],['messages']
Integrability,Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – SOFA. SOFA - Topic Tag: Incision2D. /input; . /feed; ; input – SOFA. SOFA - Topic Tag: input. /input-and-output-in-sofa-scn-file; . /feed; ; Input and Output in SOFA .scn file – SOFA. SOFA - Topic Tag: Input and Output in SOFA .scn file. /installation; . /feed; ; installation – SOFA. SOFA - Topic Tag: installation. /installation-error; . /feed; ; Installation error – SOFA. SOFA - Topic Tag: Installation error. /instrument; . /feed; ; instrument – SOFA. SOFA - Topic Tag: instrument. /integrator-optimization-vec-multivec-deriv-coord-types; . /feed; ; integrator optimization vec multivec deriv coord types – SOFA. SOFA - Topic Tag: integrator optimization vec multivec deriv coord types. /interaction; . /feed; ; interaction – SOFA. SOFA - Topic Tag: interaction. /interactions; . /feed; ; interactions – SOFA. SOFA - Topic Tag: interactions. /interventionalradiologycontroller-inl; . /feed; ; InterventionalRadiologyController.inl – SOFA. SOFA - Topic Tag: InterventionalRadiologyController.inl. /is-sofa-right-for-this; . /feed; ; Is SOFA right for this? – SOFA. SOFA - Topic Tag: Is SOFA right for this?. /jacobian; . /feed; ; Jacobian – SOFA. SOFA - Topic Tag: Jacobian. /joint-constraint; . /feed; ; joint constraint – SOFA. SOFA - Topic Tag: joint constraint. /jointspringforcefield; . /feed; ; JointSpringForceField – SOFA. SOFA - Topic Tag: JointSpringForceField. /keyboard; . /feed; ; keyboard – SOFA. SOFA - Topic Tag: keyboard. /keyboard-handle-event-key-pressed; . /feed; ; keyboard handle event key pressed – SOFA. SOFA - Topic Tag: keyboard handle event key press,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:450329,integrat,integrator,450329,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integrator']
Integrability,"[6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or down from the current context. . ◆ get() [7/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; SearchDirection ; dir = SearchUp); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [8/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:21293,wrap,wrapper,21293,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (StatsSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html:3053,depend,dependent,3053,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_stats_setting.html,1,['depend'],['dependent']
Integrability,"_hexahedra;  Hexahedra of mesh subset. More...;  ; core::objectmodel::RenamedData< SeqPositions > inputPosition;  ; core::objectmodel::RenamedData< SeqEdges > inputEdges;  ; core::objectmodel::RenamedData< SeqTriangles > inputTriangles;  ; core::objectmodel::RenamedData< SeqQuads > inputQuads;  ; core::objectmodel::RenamedData< SetIndices > indices;  ; core::objectmodel::RenamedData< SeqPositions > position;  ; core::objectmodel::RenamedData< SeqEdges > edges;  ; core::objectmodel::RenamedData< SeqTriangles > triangles;  ; core::objectmodel::RenamedData< SeqQuads > quads;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshSubsetEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html:2517,message,messages,2517,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_subset_engine.html,1,['message'],['messages']
Integrability,"_residual_is_growing. Data<bool> sofa::component::odesolver::backward::StaticSolver::d_should_diverge_when_residual_is_growing. protected . Divergence criterion: The newton iterations will stop when the residual is greater than the one from the previous iteration. . Constructor details. ◆ StaticSolver(). sofa::component::odesolver::backward::StaticSolver::StaticSolver ; (; ). Function details. ◆ getIntegrationFactor() [1/2]. SReal sofa::component::odesolver::backward::StaticSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order.; This method is used to compute the compliance for contact corrections. For example, a backward-Euler dynamic implicit integrator would use: Input: x_t v_t a_{t+dt} x_{t+dt} 1 dt dt^2 v_{t+dt} 0 1 dt; If the linear system is expressed on s = a_{t+dt} dt, then the final factors are: Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getIntegrationFactor() [2/2]. SReal sofa::component::odesolver::backward::StaticSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative, . SReal ; dt . ); const. inline . ◆ getPositionIntegrationFactor() [1/2]. SReal sofa::component::odesolver::backward::StaticSolver::getPositionIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the position; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt². ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getPositionIntegrationFactor() [2/2]. virtual SReal sofa::component::odesolver::backward::StaticSolver::getPositionIntegrationFacto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:18442,integrat,integrator,18442,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['integrat'],['integrator']
Integrability,"_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::MultiMapping< TIn, TOut >; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< true >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Protected Attributes; type::vector< linearalgebra::BaseMatrix * > baseMatrices;  Jacobian of the mapping, in a vector. More...;  ; type::vector< Direction > directions;  Unit vectors in the directions of the lines. More.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html:3087,message,messages,3087,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_multi_mapping.html,1,['message'],['messages']
Integrability,"a &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:22455,integrat,integrateVolume,22455,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['integrat'],['integrateVolume']
Integrability,a beam node with ‘LinearMovementConstraint’. /linker-errors-while-compiling-v15-12-in-vs-2015-on-windows-8-1; . /feed; ; [SOLVED] Linker Errors while compiling v15.12 in VS 2015 on Windows 8.1 – SOFA. SOFA - Topic: [SOLVED] Linker Errors while compiling v15.12 in VS 2015 on Windows 8.1. /linking-error-with-xitact-plugin; . /page; . /2; ; SOFA - Topic: Linking error with Xitact Plugin. /5; ; SOFA - Topic: Linking error with Xitact Plugin. /6; ; SOFA - Topic: Linking error with Xitact Plugin. /7; ; SOFA - Topic: Linking error with Xitact Plugin. SOFA - Topic: Linking error with Xitact Plugin. /linking-geomagicdevice-position-with-mechanicalobject3d-position-in-cpp; ; SOFA - Topic: [SOLVED] Linking GeomagicDevice.position with MechanicalObject3d.position in cpp. /linking-issues-with-plugin-when-loading-it; ; SOFA - Topic: Linking issues with plugin when loading it. /link-problems; ; SOFA - Topic: [SOLVED] [Solved] Link problems. /link-sofa-as-an-external-dependency-in-a-c-project; ; SOFA - Topic: Link SOFA as an external dependency in a c++ project. /list-of-all-available-fields-for-vtkexporter; ; SOFA - Topic: List of all available fields for VTKExporter?. /liver-fem-implementation; ; SOFA - Topic: Liver FEM implementation. /lmconstraints-with-flexible-simulation; ; SOFA - Topic: [SOLVED] LMConstraints with Flexible simulation. /load-a-python-scene-from-a-c-unit-test; ; SOFA - Topic: [SOLVED] Load a Python scene from a C++ unit test. /loading-off-files; ; SOFA - Topic: [SOLVED] Loading OFF files. /loading-sofas-dlls-for-python3-8-on-windows; ; SOFA - Topic: [SOLVED] Loading SOFA’s dlls for Python3.8+ on Windows. /load-model-built-by-solidworks; ; SOFA - Topic: load model built by solidworks. /load-msh-and-vtk-file-in-xml-and-read-with-sofa; . /feed; ; [SOLVED] Load msh and vtk file in XML and read with sofa – SOFA. SOFA - Topic: [SOLVED] Load msh and vtk file in XML and read with sofa. /local-pivot-points-for-obj-files; ; SOFA - Topic: local pivot points for .obj files,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:341659,depend,dependency-in-a-c-project,341659,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['depend'],"['dependency', 'dependency-in-a-c-project']"
Integrability,"a stream. More...;  ; virtual std::string getValueString () const =0;  Get a string representation of the value held in this Data. More...;  ; virtual std::string getDefaultValueString () const =0;  Get a string representation of the default value held in this Data. More...;  ; virtual std::string getValueTypeString () const =0;  Get the name of the type of the value held in this Data. More...;  ; virtual const sofa::defaulttype::AbstractTypeInfo * getValueTypeInfo () const =0;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:3067,message,message,3067,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability,"a(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa::type::Vec3 & ; pos, . const sofa::type::Quat< SReal > & ; rot . ). Create a coord of the specified type from a Vec3 and a Quater. . ◆ EXPECT_MAT_DOUBLE_EQ(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_DOUBLE_EQ ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual . ). ◆ EXPECT_MAT_NEAR(). template<sofa::Size L, sofa::Size C, class real > . void sofa::testing::EXPECT_MAT_NEAR ; (; sofa::type::Mat< L, C, real > const & ; expected, . sofa::type::Mat< L, C, real > const & ; actual, . real ; abs_error . ). ◆ EXPECT_VEC_DOUBLE_EQ(). template<sofa::Size N, class real > . void sofa::testing::EXPECT_VEC_DOUBLE_EQ ; (; sofa::type::Vec< N, real > const & ; expected, . sofa::type::Vec< N, real > const & ; actual . ). ◆ init(). SOFA_TESTING_API void sofa::testing::init ; (; ). Initialize the Sofa.Testing library, as well as its dependencies. . ◆ initializeOnce(). void sofa::testing::initializeOnce ; (; ). ◆ isCleanedUp(). SOFA_TESTING_API bool sofa::testing::isCleanedUp ; (; ). Return true if and only if the Sofa.Testing library has been cleaned up. . ◆ isInitialized(). SOFA_TESTING_API bool sofa::testing::isInitialized ; (; ). Return true if and only if theSofa.Testing library has been initialized. . ◆ setRot(). template<class DataTypes > . void sofa::testing::setRot ; (; typename DataTypes::Coord & ; coord, . const sofa::type::Quat< SReal > & ; rot . ). Variable Documentation. ◆ g_minDeltaErrorRatio. const SReal sofa::testing::g_minDeltaErrorRatio = .1. acceptable ratio between finite difference delta and error threshold . sofatesting; Generated on Mon Nov 11 2024 03:34:35 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:5816,depend,dependencies,5816,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['depend'],['dependencies']
Integrability,"a::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahedron>(sofa::InvalidID);  ; static constexpr EdgesInTetrahedron InvalidEdgesInTetrahedron = type::makeHomogeneousArray<EdgesInTetrahedron>(sofa::InvalidID);  ; static constexpr QuadsInHexahedron InvalidQuadsInHexahedron = type::makeHomogeneousArray<QuadsInHexahedron>(sofa::InvalidID);  ; static constexpr EdgesInHexahedron InvalidEdgesInHexahedron = type::makeHomogeneousArray<EdgesInHexahedron>(sofa::InvalidID);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::Topology; static constexpr Index InvalidID = sofa::InvalidID;  ; static const auto InvalidSet = sofa::topology::InvalidSet;  ; static constexpr auto InvalidEdge = sofa::topology::InvalidEdge;  ; static constexpr auto InvalidTriangle = sofa::topology::InvalidTriangle;  ; static constexpr auto InvalidQuad = sofa::topology::InvalidQuad;  ; static constexpr auto InvalidTe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:22746,message,messages,22746,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['message'],['messages']
Integrability,"a::component::sceneutility::BaseAddResourceRepository Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::sceneutility::BaseAddResourceRepository Class Referenceabstract . #include <AddResourceRepository.h>. Inheritance diagram for sofa::component::sceneutility::BaseAddResourceRepository:. [legend]. Public Attributes; DataFileName d_repositoryPath;  Path to add to the pool of resources. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; FileRepository * m_repository;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html:1032,message,messages,1032,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_base_add_resource_repository.html,1,['message'],['messages']
Integrability,"a::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual std::pair< core::CollisionModel *, core::CollisionModel * > getCollisionModels ()=0;  Get the pair of collision models which are in contact. More...;  ; virtual void setDetectionOutputs (DetectionOutputVector *outputs)=0;  Set the generic description of a contact point. More...;  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html:2644,depend,dependent,2644,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_base_ray_contact.html,1,['depend'],['dependent']
Integrability,"a< Real > m_initialSurfaceArea;  ; sofa::core::objectmodel::RenamedData< Real > m_currentSurfaceArea;  ; sofa::core::objectmodel::RenamedData< Real > m_drawForceScale;  ; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > m_drawForceColor;  ; sofa::core::objectmodel::RenamedData< Real > m_volumeAfterTC;  ; sofa::core::objectmodel::RenamedData< Real > m_surfaceAreaAfterTC;  ; Data< Real > d_p0;  IN: Rest pressure when V = V0. More...;  ; Data< Real > d_B;  IN: Bulk modulus (resistance to uniform compression) More...;  ; Data< Real > d_gamma;  IN: Bulk modulus (resistance to uniform compression) More...;  ; Data< Real > d_injectedVolume;  IN: Injected (or extracted) volume since the start of the simulation. More...;  ; Data< Real > d_maxInjectionRate;  IN: Maximum injection rate (volume per second) More...;  ; Data< Real > d_initialVolume;  OUT: Initial volume, as computed from the surface rest position. More...;  ; Data< Real > d_currentInjectedVolume;  OUT: Current injected (or extracted) volume (taking into account maxInjectionRate) More...;  ; Data< Real > d_v0;  OUT: Rest volume (as computed from initialVolume + injectedVolume) More...;  ; Data< Real > d_currentVolume;  OUT: Current volume, as computed from the last surface position. More...;  ; Data< Real > d_currentPressure;  OUT: Current pressure, as computed from the last surface position. More...;  ; Data< Real > d_currentStiffness;  OUT: dP/dV at current volume and pressure. More...;  ; Data< SeqTriangles > d_pressureTriangles;  OUT: list of triangles where a pressure is applied (mesh triangles + tessellated quads) More...;  ; Data< Real > d_initialSurfaceArea;  OUT: Initial surface area, as computed from the surface rest position. More...;  ; Data< Real > d_currentSurfaceArea;  OUT: Current surface area, as computed from the last surface position. More...;  ; Data< Real > d_drawForceScale;  DEBUG: scale used to render force vectors. More...;  ; Data< sofa::type::RGBAColor > d_drawForceColor;  DE",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:2859,inject,injected,2859,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inject'],['injected']
Integrability,"a< bool > d_parallelCollisionDetectionAndFreeMotion;  If true, executes free motion step and collision detection step in parallel. More...;  ; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel during the free motion step. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< FreeMotionAnimationLoop, sofa::core::behavior::ConstraintSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_constraintSolver;  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:1872,message,messages,1872,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['message'],['messages']
Integrability,"a< sofa::type::vector< Vec3 > > f_edgeVectors;  Vectors of the edges contained in the ROI. More...;  ; Data< sofa::type::vector< Vec3 > > f_triangleVectors;  Vectors of the triangles contained in the ROI. More...;  ; Data< sofa::type::vector< Vec3 > > f_tetrahedronVectors;  Vectors of the tetrahedra contained in the ROI. More...;  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > p_fieldType;  field type of output elements More...;  ; Data< bool > p_drawVectors;  draw vectors line More...;  ; Data< float > p_vectorLength;  vector length visualisation. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ValuesFromPositions, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html:2756,message,messages,2756,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_positions.html,1,['message'],['messages']
Integrability,"aFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::haptics::ForceFeedback; Data< bool > d_activate;  boolean to activate or deactivate the forcefeedback More...;  ; Data< int > d_indice;  Tool indice in the OmniDriver. More...;  ; simulation::Node * context;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html:12326,message,messages,12326,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,1,['message'],['messages']
Integrability,"aTypes >::~FixedPlaneProjectiveConstraint. protected . Function details. ◆ addConstraint(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::addConstraint ; (; Index ; index). ◆ applyConstraint() [1/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const MechanicalParams * ; , . BaseVector * ; , . const MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; const MechanicalParams * ; mparams, . const MultiMatrixAccessor * ; matrix . ). overridevirtual . Implement applyConstraint for direct solvers. ; Matrix Integration interface. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConstraint< DataTypes >::draw ; (; const VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::FixedPlaneProjectiveConst",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:22733,interface,interface,22733,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['interface'],['interface']
Integrability,"actForceField ; (; ). inlineprotected . Function details. ◆ addContact(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::addContact ; (; sofa::Index ; m1, . sofa::Index ; m2, . sofa::Index ; index1, . sofa::Index ; index2, . const Deriv & ; norm, . Real ; dist, . Real ; ks, . Real ; mu_s = 0.0f, . Real ; mu_v = 0.0f, . sofa::Index ; oldIndex = 0 . ). ◆ addDForce(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::addDForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >::addForce ; (; const sofa::core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:23171,integrat,integrated,23171,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['integrat'],['integrated']
Integrability,"add alias to other components. ; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected object from this per-file namespace are then imported into their parent namespace. for ease of use . Public Attributes; Data< std::string > d_componentname;  The component class for which to create an alias. More...;  ; Data< std::string > d_dataname;  The data field for which to create an alias. More...;  ; Data< std::string > d_alias;  The alias of the data field. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MakeDataAliasComponent, core::objectmodel::BaseObject);  ;  MakeDataAliasComponent ();  ;  ~MakeDataAliasComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html:1642,message,messages,1642,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makedataaliascomponent_1_1_make_data_alias_component.html,1,['message'],['messages']
Integrability,"age to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [4/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [5/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). overrideprotectedvirtual . Add some points to this topology. ; See alsoaddPointsWarning ; Reimplemented from sofa::component::topology::container::dynamic::PointSetTopologyModifier.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, and sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ fuseEdges(). void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::fuseEdges ; (; const sofa::type::vector< sofa::type::vector< EdgeID > > & ; edgesPairs, . con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:28915,message,message,28915,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"agehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA API: sofa::helper::system::DynamicLibrary::Handle Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::system::FileEventListener Class Reference; SOFA API: Member List; SOFA API: sofa::helper::system::FileMonitor Class Reference; SOFA API: Member ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:164457,rout,routingmessagehandler,164457,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['rout'],['routingmessagehandler']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; type::vector< EdgesAroundVertex > m_edgesAroundVertex;  ; type::vector< EdgesAroundVertex > m_orientedEdgesAroundVertex;  ; type::vector< EdgesInTriangle > m_edgesInTriangle;  ; type::vector< EdgesInQuad > m_edgesInQuad;  provides the 4 edges in each quad More...;  ; type::vector< EdgesInTetrahedron > m_edgesInTetrahedron;  provides the set o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html:2638,message,messages,2638,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_mesh_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 dx;  Distance between points in the grid. Must be perpendicular to each other. More...;  ; type::Vec3 dy;  ; type::Vec3 dz;  ; SReal inv_dx2;  Inverse value of dx, dy and dz. More...;  ; SReal inv_dy2;  ; SReal inv_dz2;  ;  Protected Attributes inherited from sofa::component::topology::container::constant::MeshTopology; Size nbPoints;  ; bool validTetrahedra;  ; bool validHexahedra;  ; type::vecto",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html:4013,message,messages,4013,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_regular_grid_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< type::vector< Connexion * > > _connexions;  ; std::map< int, std::pair< type::vector< Connexion * >, int > > _mapHexa_Connexion;  ;  Protected Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; sofa::core::objectmodel::RenamedData< sofa::type::Vec< 3, int > > n;  ; sofa::core::objectmodel::RenamedData< type::Vec3 > _min;  ; sofa::core::objectmodel::Renamed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html:6132,message,messages,6132,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_ramification_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CylinderGridTopology, GridTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; Vec3 getPointInGrid (int i, int j, int k) const override;  Overload method of. More...;  ; void setCenter (SReal x, SReal y, SReal z);  Set Cylinder grid center by. More...;  ; void setAxis (SReal x, SReal y, SReal z);  Set Cylinder axis center by. More...;  ; void setRadius (SReal rad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html:3990,message,messages,3990,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_cylinder_grid_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (GridTopology, MeshTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3i, sofa::type::Vec3i);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void init () override;  BaseObject method should be overwritten by children. More...;  ; void reinit () override;  BaseObject method should be overwritten by",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_grid_topology.html:3494,message,messages,3494,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_grid_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SphereGridTopology, GridTopology);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; type::Vec3 getPoint (Index i) const override;  Overload method of. More...;  ; type::Vec3 getPointInGrid (int i, int j, int k) const override;  Overload method of. More...;  ; void setCenter (SReal x, SReal y, SReal z);  Set Sphere grid center by. More...;  ; void setAxis (SReal x, SReal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html:3924,message,messages,3924,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sphere_grid_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const float WEIGHT27 [8][27];  ; static const Index cornerIndicesFromFineToCoarse [8][8];  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::Invali",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html:5691,message,messages,5691,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::component::topology::container::grid::SparseGridTopology; static const float WEIGHT27 [8][27];  ; static const Index cornerIndicesFromFineToCoarse [8][8];  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html:47664,message,messages,47664,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1grid_1_1_sparse_grid_multiple_topology.html,1,['message'],['messages']
Integrability,"ahedra;  List of tetrahedron indices. More...;  ; Data< SeqHexahedra > d_seqHexahedra;  List of hexahedron indices. More...;  ; Data< SeqUV > d_seqUVs;  List of uv coordinates. More...;  ; int revision;  ; Data< bool > d_drawEdges;  if true, draw the topology Edges More...;  ; Data< bool > d_drawTriangles;  if true, draw the topology Triangles More...;  ; Data< bool > d_drawQuads;  if true, draw the topology Quads More...;  ; Data< bool > d_drawTetra;  if true, draw the topology Tetrahedra More...;  ; Data< bool > d_drawHexa;  if true, draw the topology hexahedra More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:36504,message,messages,36504,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,2,['message'],['messages']
Integrability,"aintSolver*> sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::constraintsolvers. protected . ◆ d_complianceFactor. Data< SReal > sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::d_complianceFactor. Factor applied to the position factor and velocity factor used to calculate compliance matrix. . ◆ l_linearSolver. SingleLink<GenericConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::l_linearSolver. Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. . ◆ l_ODESolver. SingleLink<GenericConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::l_ODESolver. Link towards the ODE solver used to recover the integration factors. . Constructor details. ◆ GenericConstraintCorrection(). sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::GenericConstraintCorrection ; (; ). protected . ◆ ~GenericConstraintCorrection(). sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::~GenericConstraintCorrection ; (; ). overrideprotected . Function details. ◆ addComplianceInConstraintSpace(). void sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::addComplianceInConstraintSpace ; (; const core::ConstraintParams * ; cparams, . linearalgebra::BaseMatrix * ; W . ). overridevirtual . Implements sofa::core::behavior::BaseConstraintCorrection. ◆ addConstraintSolver(). void sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection::addConstraintSolver ; (; core::behavior::ConstraintSolver * ; s). overridevirtual . Keeps track of the constraint solver; Parameters. sis the constraint solver",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html:17470,integrat,integration,17470,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,1,['integrat'],['integration']
Integrability,"alData1) const;  ;  Static Protected Member Functions inherited from sofa::linearalgebra::BaseMatrix; static InternalBlockAccessor * getInternal (BlockConstAccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockConstAccessor *b);  ; static InternalBlockAccessor * getInternal (BlockAccessor *b);  ; static const InternalBlockAccessor * getInternal (const BlockAccessor *b);  ; static InternalColBlockIterator * getInternal (ColBlockConstIterator *b);  ; static const InternalColBlockIterator * getInternal (const ColBlockConstIterator *b);  ; static InternalRowBlockIterator * getInternal (RowBlockConstIterator *b);  ; static const InternalRowBlockIterator * getInternal (const RowBlockConstIterator *b);  . Attribute details. ◆ compatibilityMessage. template<matrixaccumulator::Contribution c> . constexpr const char* sofa::core::behavior::AddToMatrixCompatMatrix< c >::compatibilityMessage. staticconstexpr . Initial value:= ""This message appears only for compatibility""; "" of the deprecated API addKToMatrix, addBToMatrix and addMToMatrix. Update your code with ""; ""the new API buildStiffnessMatrix, buildDampingMatrix or buildMassMatrix to remove this warning. "". ◆ component. template<matrixaccumulator::Contribution c> . sofa::core::matrixaccumulator::get_component_type<c>* sofa::core::behavior::AddToMatrixCompatMatrix< c >::component { nullptr }. ◆ matrices. template<matrixaccumulator::Contribution c> . sofa::core::matrixaccumulator::get_matrix_builder_type<c>* sofa::core::behavior::AddToMatrixCompatMatrix< c >::matrices { nullptr }. ◆ mstate1. template<matrixaccumulator::Contribution c> . sofa::core::behavior::BaseMechanicalState* sofa::core::behavior::AddToMatrixCompatMatrix< c >::mstate1 { nullptr }. ◆ mstate2. template<matrixaccumulator::Contribution c> . sofa::core::behavior::BaseMechanicalState* sofa::core::behavior::AddToMatrixCompatMatrix< c >::mstate2 { nullptr }. Constructor details. ◆ ~AddToMatrixCompatMatrix(). template<matrixaccumulator::Cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html:14080,message,message,14080,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_add_to_matrix_compat_matrix.html,1,['message'],['message']
Integrability,"algorithm::CollisionPipeline Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Static Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::CollisionPipeline Class Reference . #include <CollisionPipeline.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::CollisionPipeline:. [legend]. Public Attributes; Data< bool > d_doPrintInfoMessage;  ; Data< bool > d_doDebugDraw;  ; Data< int > d_depth;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int defaultDepthValue = 6;  . Public Member Functions;  SOFA_CLASS (CollisionPipeline, sofa::simulation::PipelineImpl);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; std::set< std::string > getResponseList () const override;  get the set of response available with the current collision pipeline More...;  ;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html:1068,message,messages,1068,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_collision_pipeline.html,1,['message'],['messages']
Integrability,"alidator (ValidatorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html:2936,message,message,2936,api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_single.html,1,['message'],['message']
Integrability,"alized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; LinkFromModels1 fromModels1;  Input Models container. New inputs are added through addInputModel(In* ). More...;  ; LinkFromModels2 fromModels2;  ; LinkToModels toModels;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELIN",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html:1806,message,messages,1806,api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi2_mapping.html,1,['message'],['messages']
Integrability,"alue of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, const ElementType &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)> p_onCreationCallback;  ;  Public Attributes inherited from sofa::core::objectmodel::Data< T >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:19250,message,message,19250,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,1,['message'],['message']
Integrability,"alue of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, const ElementType &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)> p_onCreationCallback;  ;  Public Attributes inherited from sofa::core::objectmodel::Data< T >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< T >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html:19695,message,message,19695,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_data.html,1,['message'],['message']
Integrability,"am & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2558,message,message,2558,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"am & readValue (std::istream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< std::string >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< std::string >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html:10630,message,message,10630,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,1,['message'],['message']
Integrability,"ame {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (ViewerSetting, ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html:3127,depend,dependent,3127,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_viewer_setting.html,1,['depend'],['dependent']
Integrability,"ame); const. Find an object given its name. . ◆ getObjects() [1/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridepure virtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObjects() [2/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getOdeSolver(). core::behavior::OdeSolver * sofa::simulation::Node::getOdeSolver ; (; ); const. overridevirtual . Reimplemented from sofa::core::objectmodel::BaseNode. ◆ getRootContext(). BaseContext* sofa::simulation::Node::getRootContext ; (; ); const. inlineoverridevirtual . Get the root context of the graph. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getShader() [1/2]. core::visual::Shader * sofa::simulation::Node::getShader ; (; ); const. overridevirtual . Shader. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getShader() [2/2]. core::visual::Shader * sofa::simulation::Node::getShader ; (; const sofa::core::objectmodel::TagSet & ; t); const. virtual . ◆ getState(). core::BaseState * sofa::simulation::Node::getState ; (; ); const. overridevirtual . Degrees-of-Freedom. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:43864,wrap,wrapper,43864,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,"ame;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearVelocityProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyVelocity More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyVelocities ();  ; void addKeyVelocity (Real time, Deriv movement);  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >;  SOFA_CLASS2 (SOFA_TEMPLATE(ProjectiveConstraintSet, TDataTypes), BaseProjectiveConstraintSet, SOFA_TEMPLATE(SingleStateAccessor, TDataTypes));  ; virtual bool isActive () const;  if false, the const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html:3534,interface,interface,3534,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_velocity_projective_constraint.html,1,['interface'],['interface']
Integrability,"amic graph node deletion. More...;  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual std::string getContactResponse (core::CollisionModel *model1, core::CollisionModel *model2)=0;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html:3174,depend,dependent,3174,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact_manager.html,1,['depend'],['dependent']
Integrability,"amic::HexahedronSetTopologyModifier Class Reference . #include <HexahedronSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier:. [legend]; Detailed Description; A class that modifies the topology by adding and removing hexahedra . Public Attributes; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (HexahedronSetTopologyModifier, QuadSetTopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra);  add a set of hexahedra More...;  ; virtual void addHexahedra (const sofa::type::vector< Hexahedron > &hexahedra, const sofa::ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html:1349,message,messages,1349,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,1,['message'],['messages']
Integrability,"among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Gravity, core::objectmodel::ContextObject);  ; void apply () override;  Modify the context of the Node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ContextObject;  SOFA_ABSTRACT_CLASS (ContextObject, BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html:2402,depend,dependent,2402,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_gravity.html,1,['depend'],['dependent']
Integrability,"an::correction::UncoupledConstraintCorrection< TDataTypes >::d_correctionPositionFactor. Factor applied to the constraint forces when correcting the positions. . ◆ d_correctionVelocityFactor. template<class TDataTypes > . Data< Real > sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::d_correctionVelocityFactor. Factor applied to the constraint forces when correcting the velocities. . ◆ d_defaultCompliance. template<class TDataTypes > . Data< Real > sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::d_defaultCompliance. Default compliance value for new dof or if all should have the same (in which case compliance vector should be empty) . ◆ d_useOdeSolverIntegrationFactors. template<class TDataTypes > . Data< bool > sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::d_useOdeSolverIntegrationFactors. Use odeSolver integration factors instead of correctionVelocityFactor and correctionPositionFactor. . ◆ d_verbose. template<class TDataTypes > . Data<bool> sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::d_verbose. Dump the constraint matrix at each iteration. . ◆ defaultCompliance. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<Real> sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::defaultCompliance. ◆ f_verbose. template<class TDataTypes > . sofa::core::objectmodel::RenamedData<bool> sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::f_verbose. ◆ l_topology. template<class TDataTypes > . SingleLink<UncoupledConstraintCorrection<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >::l_topology. Link to be set to the topolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:21620,integrat,integration,21620,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['integrat'],['integration']
Integrability,"ance;  ; unsigned int dimensionAppCompliance;  ; unsigned int nbRows;  ; unsigned int nbCols;  ; unsigned int dof_on_node;  ; unsigned int nbNodes;  ; type::vector< int > _indexNodeSparseCompliance;  ; type::vector< Deriv > _sparseCompliance;  ; Real Fbuf [6];  ; Real DXbuf;  ; type::vector< int > id_to_localIndex;  ; type::vector< unsigned int > localIndex_to_id;  ; std::list< unsigned int > active_local_force;  ; linearalgebra::FullMatrix< Real > localW;  ; SReal * constraint_force;  ; VecDeriv constraint_D;  ; VecDeriv constraint_F;  ; std::list< int > constraint_dofs;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::list< int > m_activeDofs;  ;  Protected Attributes inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >; MechanicalState< DataTypes > * mstate;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html:3007,message,messages,3007,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_precomputed_constraint_correction.html,1,['message'],['messages']
Integrability,"and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3288,message,message,3288,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['message'],['message']
Integrability,"andomness) More...;  ; Data< unsigned int > numberOfInPoints;  Number of points inside. More...;  ; Data< unsigned int > numberOfTests;  Number of tests to find if the point is inside or not (odd number) More...;  ; Data< VecCoord > f_vertices;  Vertices. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Triangle > > f_triangles;  Triangles indices. More...;  ; Data< VecCoord > f_inPoints;  Points inside the surface. More...;  ; Data< VecCoord > f_outPoints;  Points outside the surface. More...;  ; unsigned int safeCounter;  ; unsigned int safeLimit;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecCoord directions;  ; helper::TriangleOctreeRoot trianglesOctree;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html:2170,message,messages,2170,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_random_point_distribution_in_surface.html,1,['message'],['messages']
Integrability,"apped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; API for global matrix assembly (used in the Compliant plugin); virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html:6854,depend,dependent,6854,api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_base_mapping.html,1,['depend'],['dependent']
Integrability,"arameter paths and the ini files and respective keys specified by the parameter iniFilesAndKeys. . ◆ ~FileRepository(). sofa::helper::system::FileRepository::~FileRepository ; (; ). Function details. ◆ addFirstPath(). void sofa::helper::system::FileRepository::addFirstPath ; (; const std::string & ; path). Adds a path to the front of the set of paths. . ◆ addLastPath(). void sofa::helper::system::FileRepository::addLastPath ; (; const std::string & ; path). Adds a path to the back of the set of paths. . ◆ cleanPath(). std::string sofa::helper::system::FileRepository::cleanPath ; (; const std::string & ; path). static . Replaces every occurrences of ""//"" by ""/"" . ◆ clear(). void sofa::helper::system::FileRepository::clear ; (; ). Remove all known paths. . ◆ displayPaths(). void sofa::helper::system::FileRepository::displayPaths ; (; ); const. inline . ◆ entrySeparator(). static char sofa::helper::system::FileRepository::entrySeparator ; (; ). inlinestatic . OS-dependant character separating entries in list of paths. . ◆ findFile(). bool sofa::helper::system::FileRepository::findFile ; (; std::string & ; filename, . const std::string & ; basedir = """", . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basediroverride current directory (optional) ; filenamerequested file as input, resolved file path as output . Returnstrue if the file was found in one of the directories, false otherwise . ◆ findFileFromFile(). bool sofa::helper::system::FileRepository::findFileFromFile ; (; std::string & ; filename, . const std::string & ; basefile, . std::ostream * ; errlog = &std::cerr . ). Find file using the stored set of paths. Parameters. basefileoverride current directory by using the parent directory of the given file ; filenamerequested file as input, resolved file path as output . Returnstrue if the file was found in one of the directories, false otherwise . ◆ findFileIn(). bool sofa::helper::system::FileRepository::findFileIn ; (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:6922,depend,dependant,6922,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['depend'],['dependant']
Integrability,"aseData &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class PointSetGeometryAlgorithms;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:16805,depend,depends,16805,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['depend'],['depends']
Integrability,"aseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; virtual void addPointsProcess (const sofa::Size nPoints);  Extend the point container storage by nPoints. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; virtual void removePointsProcess (const sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:12246,message,message,12246,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"aseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PatchTestMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearConstraints ();  ; void addConstraint (Index index);  ; void removeConstraint (Index index);  ; void init () override;  – Constraint interface More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  Cancel the possible forces. More...;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  Cancel the possible velocities. More...;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  Apply the computed movements to the border mesh points between beginConstraintTime and endConstraintTime. More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void projectJacobianMatrix (const core::MechanicalParams *, DataMatrixDeriv &) override;  ; void getFinalPositions (VecCoord &finalPos, DataVecCoord &xData);  Compute the theoretical final positions. More...;  ; void draw (const core::visual::VisualParams *vpara",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:5425,interface,interface,5425,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"ases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:10319,message,messages,10319,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,1,['message'],['messages']
Integrability,"ass:. [legend]; Detailed Description; Render pass element: render the relevant tagged objects in a FBO. . Public Attributes; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Att",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html:1531,message,messages,1531,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_pass.html,1,['message'],['messages']
Integrability,"astic::HexahedralFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::initLarge ; (; const int ; i). protected . ◆ initPolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::initPolar ; (; const int ; i). protected . ◆ integrateStiffness(). template<class DataTypes > . HexahedralFEMForceField< DataTypes >::Mat33 sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::integrateStiffness ; (; int ; signx0, . int ; signy0, . int ; signz0, . int ; signx1, . int ; signy1, . int ; signz1, . const Real ; u, . const Real ; v, . const Real ; w, . const Mat33 & ; J_1 . ). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >. ◆ setMethod(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::setMethod ; (; int ; val). inline . ◆ SOFA_ATTRIBUTE_DISABLED(). template<class DataTypes > . sofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:32822,integrat,integrateStiffness,32822,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Integrability,"at &radx, const float &rady, const float &radz, const int subd1=8, const int subd2=8);  ; template<typename V > ; void drawWireSphere (const V &center, const float &rad, const int subd1=8, const int subd2=8);  ; template<typename V > ; void drawTorus (const float *coordinateMatrix, const float &bodyRad=0.0, const float &rad=1.0, const int precision=20, const V &color=sofa::type::fixed_array< int, 3 >(255, 215, 180));  ; template<typename V > ; void drawEmptyParallelepiped (const V &vert1, const V &vert2, const V &vert3, const V &vert4, const V &vecFromFaceToOppositeFace, const float &rad=1.0, const int precision=8, const V &color=sofa::type::RGBAColor::red());  ; SOFA_GL_API void glfntInit (void);  ; SOFA_GL_API void glfntWriteBitmap (float x, float y, char *s);  ; SOFA_GL_API void glfntClose (void);  ; std::string CombineHeaders (std::string header, const std::string &shaderStage, std::string source);  ; SOFA_GL_API void init ();  Initialize the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_GL_API bool isInitialized ();  Return true if and only if the Sofa.GL library has been initialized. More...;  ; SOFA_GL_API void cleanup ();  Clean up the resources used by the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_GL_API bool isCleanedUp ();  Return true if and only if the Sofa.GL library has been cleaned up. More...;  ; template<int N> ; void glVertexNv (const float *);  ; template<> ; void glVertexNv< 3 > (const float *p);  ; template<> ; void glVertexNv< 2 > (const float *p);  ; template<> ; void glVertexNv< 1 > (const float *p);  ; template<int N> ; void glVertexNv (const double *p);  ; template<> ; void glVertexNv< 2 > (const double *p);  ; template<> ; void glVertexNv< 1 > (const double *p);  ; template<class Coord > ; void glVertexT (const Coord &c);  ; template<> ; void glVertexT< double > (const double &c);  ; template<> ; void glVertexT< float > (const float &c);  ; temp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html:2238,depend,dependencies,2238,api/master/sofa/html/namespacesofa_1_1gl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html,1,['depend'],['dependencies']
Integrability,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; integrationStepssofa::component::animationloop::MultiStepAnimationLoop; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_int",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:7614,integrat,integrate,7614,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,1,['integrat'],['integrate']
Integrability,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; iterationTimesofa::component::animationloop::ConstraintAnimationLoopprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; launchCollisionDetection(const core::ExecParams *params)sofa::component::animationloop::ConstraintAnimationLoopprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html:10103,integrat,integrate,10103,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop-members.html,1,['integrat'],['integrate']
Integrability,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_constraintSolversofa::component::animationloop::FreeMotionAnimationLoopprotected; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html:8480,integrat,integrate,8480,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop-members.html,1,['integrat'],['integrate']
Integrability,"ataflags)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html:7478,integrat,integrate,7478,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop-members.html,2,['integrat'],['integrate']
Integrability,"ate the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:7095,depend,dependent,7095,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['depend'],['dependent']
Integrability,"ate<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:5514,wrap,wrapper,5514,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['wrap'],['wrapper']
Integrability,"ateNormals ();  ; Initial transformations accessors.; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:7340,depend,dependent,7340,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['depend'],['dependent']
Integrability,"ation;  . Public Attributes; SingleLink< TriangularBiquadraticSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::objectmodel::RenamedData< type::vector< TriangleRestInformation > > triangleInfo;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeRestInformation > > edgeInfo;  ; sofa::core::objectmodel::RenamedData< VecCoord > _initialPoints;  ; sofa::core::objectmodel::RenamedData< Real > f_poissonRatio;  ; sofa::core::objectmodel::RenamedData< Real > f_youngModulus;  ; sofa::core::objectmodel::Rena",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html:1740,message,messages,1740,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_biquadratic_springs_force_field.html,1,['message'],['messages']
Integrability,"ative, int outputDerivative, SReal dt) const;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative, SReal dt) const;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:6706,depend,dependent,6706,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,2,['depend'],['dependent']
Integrability,"ator elem1, core::CollisionElementIterator elem2);  ; virtual bool useContinuous () const;  returns true if algorithm uses continuous detection More...;  ; virtual void beginBroadPhase ();  Actions to accomplish when the broadPhase is started. By default do nothing. More...;  ; virtual void endBroadPhase ();  Actions to accomplish when the broadPhase is finished. By default do nothing. More...;  ; virtual void beginNarrowPhase ();  Actions to accomplish when the narrow Phase is started. By default do nothing. More...;  ; virtual void endNarrowPhase ();  Actions to accomplish when the narrow Phase is finished. By default do nothing. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:7278,depend,dependent,7278,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,4,['depend'],['dependent']
Integrability,"ave been emitted. A message also contains a ComponentInfo which can be used to provide additional details about the emitter's context. . Static Public Attributes; static TypeSet AnyTypes;  ; static Message emptyMsg;  . Protected Attributes; ComponentInfo::SPtr m_componentinfo;  ; FileInfo::SPtr m_fileInfo;  a trace (name, path) from whom has emitted this message. More...;  ; std::stringstream m_stream;  the actual message More...;  ; Class m_class;  who is the attender of the message (developers or users)? More...;  ; Type m_type;  the message level More...;  ; int m_id;  should it be stored here or in the handler that needs it? More...;  . Public Member Functions;  Message ();  ;  Message (const Message &msg);  ;  Message (Class mclass, Type type, const ComponentInfo::SPtr &=ComponentInfo::SPtr(), const FileInfo::SPtr &fileInfo=EmptyFileInfo);  ; Message & operator= (const Message &msg);  ; const FileInfo::SPtr & fileInfo () const;  ; const ComponentInfo::SPtr & componentInfo () const;  ; const std::stringstream & message () const;  ; Class context () const;  ; Type type () const;  ; const std::string & sender () const;  ; const std::string messageAsString () const;  ; bool empty () const;  ; template<class T > ; Message & operator<< (const T &x);  ; template<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:1557,message,message,1557,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,2,['message'],"['message', 'messageAsString']"
Integrability,"back > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(LinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrai",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:5393,interface,interface,5393,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"bal Mechanical Vector to constrained space using offset parameter. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ; virtual void applyConstraint (sofa::core::behavior::ZeroDirichletCondition *);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html:3432,depend,dependent,3432,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_projective_constraint_set.html,2,['depend'],['dependent']
Integrability,"based rendering, >0 -> radius of spheres) More...;  ; Data< CPos > d_direction;  Direction of the line. More...;  ; SingleLink< DirectionProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< DirectionProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ; type::vector< CPos > m_origin;  ; SparseMatrix jacobian;  projection matrix in local state More...;  ; SparseMatrix J;  auxiliary variable More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is us",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html:2229,message,messages,2229,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_direction_projective_constraint.html,1,['message'],['messages']
Integrability,"be created ; ancestorsfor each edge to be created provides an array of edge ancestors (optional) ; baryCoefsfor each edge provides the barycentric coordinates (sum to 1) associated with each ancestor (optional) . ◆ addEdgesProcess(). void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesProcess ; (; const sofa::type::vector< Edge > & ; edges). protectedvirtual . Effectively add some edges to this topology. ; See alsoaddEdgesWarning ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, and sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ addEdgesWarning() [1/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [2/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ addEdgesWarning() [3/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< core::topology::EdgeAncestorElem > & ; ancestorElems . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ ad",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:27003,message,message,27003,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"be drawn: - 0: Line - 1:Cylinder - 2: Arrow. More...;  ; Data< float > d_showArrowSize;  size of the axis More...;  ; Data< sofa::type::RGBAColor > d_springColor;  spring color More...;  ; Data< float > d_showIndicesScale;  Scale for indices display (default=0.02) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecIndex m_firstObjectIndices;  ; VecIndex m_secondObjectIndices;  ; type::vector< JacobianMatrix > m_differential;  ; VecReal m_springLength;  ; VecReal m_strainValue;  ; VecCoord m_weightedCoordinateDifference;  ; type::vector< type::vector< unsigned int > > m_polynomialsMap;  ; VecReal m_initialSpringLength;  ; VecReal m_strainSign;  ; std::vector< int > m_computeSpringsZeroLength;  ; const unsigned int m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html:2664,message,messages,2664,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_springs_force_field.html,1,['message'],['messages']
Integrability,"bject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html:10659,message,messages,10659,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,1,['message'],['messages']
Integrability,"bject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set corre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html:11834,message,messages,11834,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_contact_listener.html,1,['message'],['messages']
Integrability,"bjectDescription * ; arg). overridevirtual . Parse the given description to assign values to this object's fields and potentially other parameters. ; Reimplemented from sofa::core::objectmodel::Base. ◆ precomputeTraversalOrder(). virtual void sofa::simulation::Node::precomputeTraversalOrder ; (; const sofa::core::ExecParams * ; ). inlinevirtual . Possible optimization with traversal precomputation, not mandatory and does nothing by default. ; Reimplemented in sofa::simulation::graph::DAGNode. ◆ printComponents(). void sofa::simulation::Node::printComponents ; (; ). ◆ propagateEvent(). void sofa::simulation::Node::propagateEvent ; (; const sofa::core::ExecParams * ; params, . sofa::core::objectmodel::Event * ; event . ). overridevirtual . Propagate an event. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ reinit(). void sofa::simulation::Node::reinit ; (; const sofa::core::ExecParams * ; params). Apply modifications to the components. ; ReInitialize the components of this node and all the nodes which depend on it. . ◆ removeChild(). void sofa::simulation::Node::removeChild ; (; BaseNode::SPtr ; node). finalvirtual . Remove a child node. ; Remove a child. ; Implements sofa::core::objectmodel::BaseNode. ◆ removeControllers(). void sofa::simulation::Node::removeControllers ; (; ). virtual . Remove odesolvers and mastercontroler. . ◆ removeListener(). void sofa::simulation::Node::removeListener ; (; MutationListener * ; obj). virtual . ◆ removeObject(). bool sofa::simulation::Node::removeObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; obj). finalvirtual . Remove an object. ; Implements sofa::core::objectmodel::BaseNode. ◆ setDebug(). Node * sofa::simulation::Node::setDebug ; (; bool ; b). ◆ setDefaultVisualContextValue(). void sofa::simulation::Node::setDefaultVisualContextValue ; (; ). virtual . Called after initialization to set the default value of the visual context. . ◆ setSleeping(). void sofa::simulation::Node::setSleeping ; (; bool ; val). ove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:49465,depend,depend,49465,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['depend'],['depend']
Integrability,"butes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes));  ; void computeQuadAABB (const QuadID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeQuadCenter (const QuadID i) const;  ; void getQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; void getRestQuadVertexCoordinates (const QuadID i, Coord[4]) const;  ; Real computeQuadArea (const QuadID i) const;  Computes the area of quad no i and returns it. More...;  ; void computeQuadArea (BasicArrayInterface< Real > &ai) const;  Computes the quad area of all quads are store in the array interface. More...;  ; Real computeRestQuadArea (const QuadID i) const;  Computes the initial area of quad no i and returns it. More...;  ; type::Vec< 3, double > computeQuadNormal (const QuadID ind_q) const;  Computes the normal vector of a quad indexed by ind_q (not normed) More...;  ; bool isQuadInPlane (const QuadID ind_q, const PointID ind_p, const type::Vec< 3, Real > &plane_vect) const;  Tests if a quad indexed by ind_q (and incident to the vertex indexed by ind_p) is included or not in the plane defined by (ind_p, plane_vect) More...;  ; bool isPointInQuad (const QuadID ind_q, const sofa::type::Vec< 3, Real > &p) const;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void writeMSHfile (const char *filename) const;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html:3519,interface,interface,3519,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"butes; sofa::core::objectmodel::RenamedData< VecReal > compliance;  ; sofa::core::objectmodel::RenamedData< Real > defaultCompliance;  ; sofa::core::objectmodel::RenamedData< bool > f_verbose;  ; core::topology::PointData< VecReal > d_compliance;  Compliance value on each dof. If Rigid compliance (7 values): 1st value for translations, 6 others for upper-triangular part of symmetric 3x3 rotation compliance matrix. More...;  ; Data< Real > d_defaultCompliance;  Default compliance value for new dof or if all should have the same (in which case compliance vector should be empty) More...;  ; Data< bool > d_verbose;  Dump the constraint matrix at each iteration. More...;  ; Data< Real > d_correctionVelocityFactor;  Factor applied to the constraint forces when correcting the velocities. More...;  ; Data< Real > d_correctionPositionFactor;  Factor applied to the constraint forces when correcting the positions. More...;  ; Data< bool > d_useOdeSolverIntegrationFactors;  Use odeSolver integration factors instead of correctionVelocityFactor and correctionPositionFactor. More...;  ; SingleLink< UncoupledConstraintCorrection< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:1986,integrat,integration,1986,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['integrat'],['integration']
Integrability,"c Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::odesolver::backward::NewmarkImplicitSolver Class Reference . #include <NewmarkImplicitSolver.h>. Inheritance diagram for sofa::component::odesolver::backward::NewmarkImplicitSolver:. [legend]; Detailed Description; Implicit time integrator using Newmark scheme.; This integration scheme is based on the following equations:; $x_{t+h} = x_t + h v_t + h^2/2 ( (1-2\beta) a_t + 2\beta a_{t+h} )$ $v_{t+h} = v_t + h ( (1-\gamma) a_t + \gamma a_{t+h} )$; Applied to a mechanical system where $ M a_t + (r_M M + r_K K) v_t + K x_t = f_ext$, we need to solve the following system:; $ M a_{t+h} + (r_M M + r_K K) v_{t+h} + K x_{t+h} = f_ext $ $ M a_{t+h} + (r_M M + r_K K) ( v_t + h ( (1-\gamma) a_t + \gamma a_{t+h} ) ) + K ( x_t + h v_t + h^2/2 ( (1-2\beta) a_t + 2\beta a_{t+h} ) ) = f_ext $ $ ( M + h \gamma (r_M M + r_K K) + h^2 \beta K ) a_{t+h} = f_ext - (r_M M + r_K K) ( v_t + h (1-\gamma) a_t ) - K ( x_t + h v_t + h^2/2 (1-2\beta) a_t ) $ $ ( (1 + h \gamma r_M) M + (h^2 \beta + h \gamma r_K) K ) a_{t+h} = f_ext - (r_M M + r_K K) v_t - K x_t - (r_M M + r_K K) ( h (1-\gamma) a_t ) - K ( h v_t + h^2/2 (1-2\beta) a_t ) $ $ ( (1 + h \gamma r_M) M + (h^2 \beta + h \gamma r_K) K ) a_{t+h} = a_t - (r_M M + r_K K) ( h (1-\gamma) a_t ) - K ( h v_t + h^2/2 (1-2\beta) a_t ) $; The current implementation first computes $a_t$ directly (as in the explicit solvers), then solves the previous system to compute $a_{t+dt}$, and finally computes the new position and velocity. . Public Attributes; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< SReal > d_velocityDamping;  Velocity decay coefficient (no decay if null) More...;  ; Data< SReal > d_gamma;  Newmark scheme gamma coefficient. More...;  ; Data< SReal > d_beta;  Ne",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:573,integrat,integration,573,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['integrat'],['integration']
Integrability,"c Attributes; SingleLink< VolumeMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  ;  Static Public Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, tru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html:1603,message,messages,1603,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_volume_mapping.html,1,['message'],['messages']
Integrability,"c Attributes; unsigned int constraintId;  ;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Contact > contacts;  ; Real epsilon;  ; bool yetIntegrated;  ; SReal customTolerance;  ; PreviousForcesContainer prevForces;  ; bool * contactsStatus;  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:1682,message,messages,1682,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['message'],['messages']
Integrability,"c T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ CollisionAnimationLoop(). sofa::simulation::CollisionAnimationLoop::CollisionAnimationLoop ; (; ). protected . ◆ ~CollisionAnimationLoop(). sofa::simulation::CollisionAnimationLoop::~CollisionAnimationLoop ; (; ). overrideprotected . Function details. ◆ computeCollision(). void sofa::simulation::CollisionAnimationLoop::computeCollision ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Activate collision pipeline. . ◆ getSolverSequence(). const CollisionAnimationLoop::Solvers & sofa::simulation::CollisionAnimationLoop::getSolverSequence ; (; ). protected . ◆ integrate(). void sofa::simulation::CollisionAnimationLoop::integrate ; (; const core::ExecParams * ; params, . SReal ; dt . ). protectedvirtual . Activate OdeSolvers. . ◆ internalCollisionComputation(). void sofa::simulation::CollisionAnimationLoop::internalCollisionComputation ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Function performing the actual collision computation. . ◆ postCollisionComputation(). void sofa::simulation::CollisionAnimationLoop::postCollisionComputation ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Function meant to be called after the actual collision computation. . ◆ preCollisionComputation(). void sofa::simulation::CollisionAnimationLoop::preCollisionComputation ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Function meant to be called before the actual collision computation. . sofasimulationCollisionAnimation",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:15916,integrat,integrate,15916,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['integrat'],['integrate']
Integrability,"c3 &lookAt, const double &distance, const Quat &orientation);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void computeZ ();  ; virtual bool isStereo ();  ; virtual void setCurrentSide (Side);  ; virtual Side getCurrentSide ();  ; virtual void setStereoEnabled (bool);  ; virtual bool getStereoEnabled ();  ; virtual void setStereoMode (StereoMode);  ; virtual StereoMode getStereoMode ();  ; virtual void setStereoStrategy (StereoStrategy);  ; virtual StereoStrategy getStereoStrategy ();  ; virtual void setStereoShift (double);  ; virtual double getStereoShift ();  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeClippingPlane (const core::visual::VisualParams *vp, double &zNear, double &zFar);  ; virtual void drawCamera (const core::visual::VisualParams *);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html:8936,depend,dependent,8936,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,1,['depend'],['dependent']
Integrability,"cParams *params, SReal dt) override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html:4668,depend,dependent,4668,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_free_motion_animation_loop.html,1,['depend'],['dependent']
Integrability,"cTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal > &rot);  Create a coord of the specified type from a Vec3 and a Quater. More...;  ; template<sofa::Size N, class real > ; void EXPECT_VEC_DOUBLE_EQ (sofa::type::Vec< N, real > const &expected, sofa::type::Vec< N, real > const &actual);  ; template<sofa::Size L, sofa::Size ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1477,depend,dependencies,1477,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['depend'],['dependencies']
Integrability,"cal DOF indices. Any computation involving only indices outside of this range are discarded (useful for parallelization using mesh partitioning) More...;  ; Data< bool > d_bilateral;  option bilateral : if true, the force field is applied on both side of the plane More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< Contact > > contacts;  ; Data< sofa::type::vector< Contact > > d_contacts;  Contacts. More...;  ; SphereForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field.html:2409,message,messages,2409,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_sphere_force_field.html,1,['message'],['messages']
Integrability,"ce. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::BruteForceDetection Class Referencefinal . #include <BruteForceDetection.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::BruteForceDetection:. [legend]. Public Member Functions;  SOFA_CLASS (BruteForceDetection, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:1192,depend,dependent,1192,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,1,['depend'],['dependent']
Integrability,"cefield is attached. More...;  ; Data< bool > object2_forces;  enable/disable propagation of forces to object 2 More...;  ; Data< bool > object2_invert;  inverse transform from object 2 (use when object 1 is in local coordinates within a frame defined by object 2) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< sofa::type::vector< Contact > > contacts;  Contacts. More...;  ; InteractionEllipsoidForceFieldInternalData< DataTypes1, DataTypes2 > data;  ; struct sofa::component::mechanicalload::InteractionEllipsoidForceField::TempVars vars;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html:2215,message,messages,2215,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_interaction_ellipsoid_force_field.html,1,['message'],['messages']
Integrability,cene; ; SOFA - Topic: [SOLVED] set up camera following a tool in the scene. /shadows-depend-on-absolute-scale-of-object; ; SOFA - Topic: [SOLVED] Shadows depend on absolute scale of object?. /sig-11-sigsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /s,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:386848,contract,contracting-actuator,386848,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['contract'],['contracting-actuator']
Integrability,"ceneutility::infocomponent::InfoComponent Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::sceneutility::infocomponent::InfoComponent Class Reference . #include <InfoComponent.h>. Inheritance diagram for sofa::component::sceneutility::infocomponent::InfoComponent:. [legend]; Detailed Description; Despite this component does absolutely nothing... it is very useful as it can be used to retain information scene graph. . Public Member Functions;  SOFA_CLASS (InfoComponent, BaseObject);  ;  InfoComponent ();  ;  ~InfoComponent () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1infocomponent_1_1_info_component.html:1127,depend,dependent,1127,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1infocomponent_1_1_info_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1infocomponent_1_1_info_component.html,1,['depend'],['dependent']
Integrability,"chanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix)=0;  Add Mass contribution to global Matrix assembling. More...;  ; virtual void buildMassMatrix (sofa::core::behavior::MassMatrixAccumulator *matrices);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html:4816,depend,dependent,4816,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,1,['depend'],['dependent']
Integrability,"chanicalState * ; object1, . MechanicalState * ; object2 . ). protected . ◆ JointSpringForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::JointSpringForceField. protected . ◆ ~JointSpringForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::~JointSpringForceField. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . Given the curren",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:27314,integrat,integrated,27314,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['integrat'],['integrated']
Integrability,"class sofa::core::Mapping< TIn, TOut >; Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. . Public Attributes; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SingleLink< Mapping< In, Out >, State< In >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input Model, also called parent. More...;  ; SingleLink< Mapping< In, Out >, State< Out >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output Model, also called child. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:1713,message,messages,1713,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,1,['message'],['messages']
Integrability,"class  GUIEvent;  This event notifies about GUI interaction. More...;  ; class  HapticDeviceEvent;  This event notifies about haptic device interaction. More...;  ; class  IdleEvent;  This event is propagated along the objects hierarchy at regular interval. More...;  ; class  JoystickEvent;  JoystickEvent Class. More...;  ; class  KeypressedEvent;  This event is propagated along the objects when a key on the keyboard is pressed. More...;  ; class  KeyreleasedEvent;  This event is propagated along the objects when a key on the keyboard is released. More...;  ; class  LinkTraitsDestPtr;  ; class  LinkTraitsDestPtr< TDestType, false >;  ; class  LinkTraitsDestPtr< TDestType, true >;  ; class  LinkTraitsValueType;  ; class  LinkTraitsValueType< TDestType, TDestPtr, strongLink, false >;  ; class  LinkTraitsValueType< TDestType, TDestPtr, strongLink, true >;  ; class  LinkTraitsContainer;  ; class  SinglePtr;  Class to hold 0-or-1 pointer. The interface is similar to std::vector (size/[]/begin/end), plus an automatic conversion to one pointer. More...;  ; class  LinkTraitsContainer< TDestType, TDestPtr, TValueType, false >;  ; class  LinkTraitsContainer< TDestType, TDestPtr, TValueType, true >;  ; class  TLink;  Container of all links in the scenegraph, from a given type of object (Owner) to another (Dest) More...;  ; class  MultiLink;  Container of vectors of links in the scenegraph, from a given type of object (Owner) to another (Dest) More...;  ; class  MouseEvent;  MouseEvent Class. More...;  ; class  RenamedData;  ; class  ScriptEvent;  Generic Event class to send a message through the simulation graph. More...;  ; class  New;  new operator for classes with smart pointers (such as all components deriving from Base) More...;  ; class  SPtr_dynamic_cast;  dynamic_cast operator for SPtr More...;  ; class  SPtr_static_cast;  static_cast operator for SPtr More...;  ; class  SPtr_const_cast;  const_cast operator for SPtr More...;  ; class  Tag;  A Tag is a string (internal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:4428,interface,interface,4428,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['interface'],['interface']
Integrability,"class. More...;  ; class  TClassInfo;  ; class  ConfigurationSetting;  Base class for all the configuration settings of SOFA. More...;  ; class  Context;  Implementation of BaseContext, storing all shared parameters in Datas. More...;  ; class  ContextObject;  Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). More...;  ; class  Data;  Container that holds a variable for a component. More...;  ; class  EmptyData;  ; class  DataContentValue;  ; class  DataContentValue< T, false >;  ; class  DataContentValue< T, true >;  ; class  DataFileName;  Data specialized to store filenames, potentially relative to the current directory at the time it was specified. More...;  ; class  DataFileNameVector;  ; class  DataLink;  DataLink stores a connection between two object of type Data<XXX> The class is templated by the Data type to connect. The class implements the AbstractDataLink interface. More...;  ; class  DDGNode;  A DDGNode is a vertex in the data dependencies graph. The data dependency graph is used to update the data when some of other changes and it is at the root of the implementation of the data update mecanisme as well as DataEngines. More...;  ; class  DetachNodeEvent;  ; class  Event;  Base class for all events received by the objects. More...;  ; class  GUIEvent;  This event notifies about GUI interaction. More...;  ; class  HapticDeviceEvent;  This event notifies about haptic device interaction. More...;  ; class  IdleEvent;  This event is propagated along the objects hierarchy at regular interval. More...;  ; class  JoystickEvent;  JoystickEvent Class. More...;  ; class  KeypressedEvent;  This event is propagated along the objects when a key on the keyboard is pressed. More...;  ; class  KeyreleasedEvent;  This event is propagated along the objects when a key on the keyboard is released. More...;  ; class  LinkTraitsDestPtr;  ; class  LinkTraitsDestPtr< TDestType, false >;  ; class  LinkTraitsDestPtr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html:3162,depend,dependencies,3162,api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1objectmodel.html,1,['depend'],['dependencies']
Integrability,"clude <MappedObject.h>. Inheritance diagram for sofa::component::statecontainer::MappedObject< DataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< VecCoord > f_X;  ; sofa::core::objectmodel::RenamedData< VecDeriv > f_V;  ; Data< VecCoord > d_X;  position vector More...;  ; Data< VecDeriv > d_V;  velocity vector More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; MappedObjectInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html:1401,message,messages,1401,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,1,['message'],['messages']
Integrability,"collision::response::contact::BaseRayContact; const sofa::type::vector< core::collision::DetectionOutput * > & getDetectionOutputs () const;  ; void createResponse (core::objectmodel::BaseContext *) override;  ; void removeResponse () override;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html:3033,depend,dependent,3033,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_ray_contact.html,1,['depend'],['dependent']
Integrability,"component::collision::response::contact::CollisionResponse Class Reference . #include <CollisionResponse.h>. Inheritance diagram for sofa::component::collision::response::contact::CollisionResponse:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > response;  ; sofa::core::objectmodel::RenamedData< std::string > responseParams;  ; Data< sofa::helper::OptionsGroup > d_response;  contact response class More...;  ; Data< std::string > d_responseParams;  contact response parameters (syntax: name1=value1&name2=value2&...) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; ContactMap contactMap;  ; std::map< Instance, ContactMap > storedContactMap;  ; std::map< std::pair< std::string, std::pair< std::string, std::string > >, int > errorMsgCount;  ;  Protected Attributes inherited from sofa::core::collision::ContactManager; Intersection * intersectionMethod;  Current intersection method. More...;  ; ContactVector contacts;  ; std::map< Instance, Intersection * > storedIntersect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:1386,message,messages,1386,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['message'],['messages']
Integrability,"configuration of background settings. ; More... Inheritance diagram for sofa::component::setting::BackgroundSetting:. [legend]; Detailed Description; Class for the configuration of background settings. . Public Attributes; sofa::core::objectmodel::RenamedData< sofa::type::RGBAColor > color;  ; sofa::core::objectmodel::DataFileName image;  Image to be used as background of the viewer. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the background. More...;  ; sofa::core::objectmodel::DataFileName d_image;  Image to be used as background of the viewer. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html:1372,message,messages,1372,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,1,['message'],['messages']
Integrability,"const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:4719,wrap,wrapper,4719,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,2,['wrap'],['wrapper']
Integrability,"const RigidDeriv<N,T>::Pos& sofa::defaulttype::getVCenter ; (; const RigidDeriv< N, T > & ; v). constexpr . ◆ getVCenter() [2/3]. template<typename T > . const Vec<3, T> sofa::defaulttype::getVCenter ; (; const Vec< 6, T > & ; v). ◆ getVCenter() [3/3]. template<sofa::Size N, typename T > . constexpr RigidDeriv<N,T>::Pos& sofa::defaulttype::getVCenter ; (; RigidDeriv< N, T > & ; v). constexpr . ◆ getVOrientation() [1/3]. template<sofa::Size N, typename T > . constexpr const RigidDeriv<N,T>::Rot& sofa::defaulttype::getVOrientation ; (; const RigidDeriv< N, T > & ; v). constexpr . ◆ getVOrientation() [2/3]. template<typename T > . const Vec<3, T> sofa::defaulttype::getVOrientation ; (; const Vec< 6, T > & ; v). ◆ getVOrientation() [3/3]. template<sofa::Size N, typename T > . constexpr RigidDeriv<N,T>::Rot& sofa::defaulttype::getVOrientation ; (; RigidDeriv< N, T > & ; v). constexpr . ◆ init(). SOFA_DEFAULTTYPE_API void sofa::defaulttype::init ; (; ). Initialize the SofaDefaultType library, as well as it dependency: SofaHelper. . ◆ isCleanedUp(). SOFA_DEFAULTTYPE_API bool sofa::defaulttype::isCleanedUp ; (; ). Return true if and only if the SofaDefaultType library has been cleaned up. . ◆ isDouble(). template<class T > . constexpr bool sofa::defaulttype::isDouble ; (; ). constexpr . ◆ isDouble< double >(). template<> . constexpr bool sofa::defaulttype::isDouble< double > ; (; ). constexpr . ◆ isInitialized(). SOFA_DEFAULTTYPE_API bool sofa::defaulttype::isInitialized ; (; ). Return true if and only if the SofaDefaultType library has been initialized. . ◆ isSRealDouble(). constexpr bool sofa::defaulttype::isSRealDouble ; (; ). constexpr . ◆ isSRealFloat(). constexpr bool sofa::defaulttype::isSRealFloat ; (; ). constexpr . ◆ operator*() [1/5]. template<typename real > . constexpr RigidDeriv<2,real> sofa::defaulttype::operator* ; (; const RigidDeriv< 2, real > & ; d, . const RigidMass< 2, real > & ; m . ). constexpr . ◆ operator*() [2/5]. template<typename real > . constex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:19921,depend,dependency,19921,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['depend'],['dependency']
Integrability,"const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TetrahedronSetTopologyModifier ();  ;  ~TetrahedronSetTopologyModifier () override;  ; void addTetrahedraWarning (const size_t nTetrahedra, const sofa::type::vector< Tetrahedron > &tetrahedraList, const sofa::type::vector< TetrahedronID > &tetrahedraIndexList);  Sends a message to warn that some tetrahedra were added in this topology. More...;  ; void addTetrahedraWarning (const size_t nTetrahedra, const sofa::type::vector< Tetrahedron > &tetrahedraList, const sofa::type::vector< TetrahedronID > &tetrahedraIndexList, const sofa::type::vector< sofa::type::vector< TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some tetrahedra were added in this topology. More...;  ; virtual void addTetrahedraProcess (const sofa::type::vector< Tetrahedron > &tetrahedra);  Actually Add some tetrahedra to this topology. More...;  ; void removeTetrahedraWarning (sofa::type::vector< TetrahedronID > &tetrahedra);  Sends a message to warn that some tetrahedra are about to be deleted. More...;  ; virtual void removeTetrahedraProcess (const sofa::type::vector< TetrahedronID > &indices, const bool removeIsolatedItems=false);  Remove a subset of tetrahedra. More...;  ; void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles) override;  Actually Add some triangles to this topology. More...;  ; void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false) over",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:19610,message,message,19610,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"const override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:6546,depend,dependent,6546,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['depend'],['dependent']
Integrability,"constraint groups. More...;  ; Data< SReal > d_currentError;  OUTPUT: current error. More...;  ; Data< bool > d_reverseAccumulateOrder;  True to accumulate constraints from nodes in reversed order (can be necessary when using multi-mappings or interaction constraints not following the node hierarchy) More...;  ; Data< type::vector< SReal > > d_constraintForces;  OUTPUT: constraint forces (stored only if computeConstraintForces=True) More...;  ; Data< bool > d_computeConstraintForces;  The indices of the constraintForces to store in the constraintForce data field. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::fixed_array< GenericConstraintProblem, CP_BUFFER_SIZE > m_cpBuffer;  ; sofa::type::fixed_array< bool, CP_BUFFER_SIZE > m_cpIsLocked;  ; GenericConstraintProblem * current_cp;  ; GenericConstraintProblem * last_cp;  ; sofa::core::MultiVecDerivId m_lambdaId;  ; sofa::core::MultiVecDerivId m_dxId;  ;  Protected Attributes inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolv",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:4636,message,messages,4636,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['message'],['messages']
Integrability,"control point More...;  ; Data< Vec2R > d_sx0;  ; Data< Vec2R > d_sx1;  second interpolation vector More...;  ; SingleLink< HermiteSplineProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HermiteSplineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearConstraints ();  ; void addConstraint (unsigned index);  ; void setBeginTime (const Real &t);  ; void setEndTime (const Real &t);  ; Real getBeginTime ();  ; Real getEndTime ();  ; void computeHermiteCoefs (const Real u, Real &H00, Real &H10, Real",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:2889,message,messages,2889,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['message'],['messages']
Integrability,"core::behavior::ConstraintResolution * > &res, SReal *df);  ; virtual ConstraintProblem * getCP ();  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:15822,integrat,integrate,15822,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['integrat'],['integrate']
Integrability,"core::behavior::OdeSolver. ◆ init(). void sofa::component::odesolver::forward::EulerExplicitSolver::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectResponse(). void sofa::component::odesolver::forward::EulerExplicitSolver::projectResponse ; (; sofa::simulation::common::MechanicalOperations * ; mop, . core::MultiVecDerivId ; vecId . ). staticprotected . Apply projective constraints, such as FixedProjectiveConstraint. . ◆ SOFA_CLASS(). sofa::component::odesolver::forward::EulerExplicitSolver::SOFA_CLASS ; (; EulerExplicitSolver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::EulerExplicitSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. ◆ solveConstraints(). void sofa::component::odesolver::forward::EulerExplicitSolver::solveConstraints ; (; sofa::simulation::common::MechanicalOperations * ; mop, . core::MultiVecDerivId ; acc . ). staticprotected . ◆ solveSystem(). void sofa::component::odesolver::forward::EulerExplicitSolver::solveSystem ; (; core::MultiVecDerivId ; solution, . core::MultiVecDerivId ; rhs . ); const. protected . ◆ updateState(). void sofa::component::odesolver::forward::EulerExplicitSolver::updateState ; (; sofa::simulation::common::VectorOperations * ; vop, . sofa::simulation::common::MechanicalOperations * ; mop, . sofa::core::MultiVecCoordId ; xResult, . sofa::core::MultiVecDerivId ; vResult, . const sofa::core::behavior::MultiVecDeriv & ; acc, . SReal ; dt . ); const. protected . Update state variable (new p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:20450,integrat,integration,20450,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['integrat'],['integration']
Integrability,"cribe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. . Public Attributes; Data< bool > f_applyRestPosition;  set to true to apply this mapping to restPosition at init More...;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; LinkFromModels fromModels;  ; LinkToModels toModels;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html:1806,message,messages,1806,api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_multi_mapping.html,1,['message'],['messages']
Integrability,"cted Member Functions;  TetrahedronSetTopologyModifier ();  ;  ~TetrahedronSetTopologyModifier () override;  ; void addTetrahedraWarning (const size_t nTetrahedra, const sofa::type::vector< Tetrahedron > &tetrahedraList, const sofa::type::vector< TetrahedronID > &tetrahedraIndexList);  Sends a message to warn that some tetrahedra were added in this topology. More...;  ; void addTetrahedraWarning (const size_t nTetrahedra, const sofa::type::vector< Tetrahedron > &tetrahedraList, const sofa::type::vector< TetrahedronID > &tetrahedraIndexList, const sofa::type::vector< sofa::type::vector< TetrahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some tetrahedra were added in this topology. More...;  ; virtual void addTetrahedraProcess (const sofa::type::vector< Tetrahedron > &tetrahedra);  Actually Add some tetrahedra to this topology. More...;  ; void removeTetrahedraWarning (sofa::type::vector< TetrahedronID > &tetrahedra);  Sends a message to warn that some tetrahedra are about to be deleted. More...;  ; virtual void removeTetrahedraProcess (const sofa::type::vector< TetrahedronID > &indices, const bool removeIsolatedItems=false);  Remove a subset of tetrahedra. More...;  ; void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles) override;  Actually Add some triangles to this topology. More...;  ; void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false) override;  Remove a subset of triangles. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:19926,message,message,19926,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"ction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15775,integrat,integrationSteps,15775,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,2,['integrat'],"['integrationSteps', 'integrations']"
Integrability,"ctors can be allocated to store other temporary values. Vectors can be assigned efficiently by just swapping pointers.; In addition to state vectors, the current constraint system matrix is also stored, containing the coefficient of each constraint defined over the DOFs in this body. . Classes; class  ConstraintBlock;  ; class  VMultiOpEntry;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMechanicalState, BaseState);  ;  SOFA_BASE_CAST_IMPLEMENTATION (BaseMechanicalState);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Methods allowing to have access to the geometry without a template class (generic but not efficient); virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ; Mechanical integration related methods; Note: all these methods can now be implemented generically using VecId-based operations . virtual void beginIntegration (SReal);  Called at the beginning of each integration step. More...;  ; virtual void endIntegration (const ExecParams *params, SReal);  Called at the end of each integration step. More...;  ; virtual void resetForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Set F = 0. More...;  ; virtual void resetAcc (const ExecParams *params, VecDerivId a=VecDerivId::dx());  Set Acc =0. More...;  ; virtual void accumulateForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Add stored external forces to F. More...;  ; Constraints related methods; virtual void resetConstraint (const ConstraintParams *params)=0;  Reset the constraint matrix. More...;  ; virtual void getConstraintJacobian (const ConstraintParams *params, sofa::linearalgebra::BaseMatrix *J, unsigned int &off)=0;  build the jacobian of the constraint in a baseMatrix More...;  ; virtual void buildIdentityBlocksInJacobian (const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0;  fill the jacobian",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:2167,integrat,integration,2167,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['integrat'],['integration']
Integrability,"current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node. ◆ getObjects() [1/6]. void sofa::core::objectmodel::BaseContext::getObjects ; (; const ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObjects() [2/6]. void sofa::core::objectmodel::BaseContext::getObjects ; (; const ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node. ◆ getObjects() [3/6]. template<class Container > . Container& sofa::core::objectmodel::BaseContext::getObjects ; (; Container & ; result, . SearchDirection ; dir = SearchUp . ). inline . Returns a list of object of type passed as a parameter. eg: sofa::type::vector<VisualModel*> results; context->getObjects(results) ; . ◆ getObjects() [4/6]. template<class Object , class Container > . void sofa::core::objectmodel::BaseContext::getObjects ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ). inline . List all objects of this node deriving from a given class. . ◆ getObjects() [5/6]. template<class Container > . Container* sofa::core::objectmodel::BaseContext::getObjects ; (; Container * ; result, . SearchDirection ; dir = SearchUp . ). inline . Returns a list of object of type passed as a parameter. . ◆ getObjects() [6/6]. template<class Object = sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:27053,wrap,wrapper,27053,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"d I start to read the code. /11; ; SOFA - Topic: [SOLVED] Where should I start to read the code. /3; ; SOFA - Topic: [SOLVED] Where should I start to read the code. SOFA - Topic: [SOLVED] Where should I start to read the code. /which-matrix-should-i-use; ; SOFA - Topic: [SOLVED] which matrix should I use ?. /why-both-fem-and-pdeode-solvers; . /feed; ; [SOLVED] Why both FEM and PDE/ODE Solvers? – SOFA. SOFA - Topic: [SOLVED] Why both FEM and PDE/ODE Solvers?. /why-no-one-answered-my-question%EF%BC%9F; . /feed; ; [SOLVED] Why no one answered my question？ – SOFA. SOFA - Topic: [SOLVED] Why no one answered my question？. /windows-10-gtx-970-download-install-execute-crash-wtf; . /feed; ; windows 10, gtx 970, download, install, execute, crash, wtf ? – SOFA. SOFA - Topic: windows 10, gtx 970, download, install, execute, crash, wtf ?. /windows-compile-error-msbuild-exe-sofa-17-12; ; SOFA - Topic: Windows compile error – MSBuild.exe (sofa 17.12). /windows-dependency-pack-for-vs-2019; ; SOFA - Topic: [SOLVED] Windows Dependency Pack for VS 2019. /windows-documentation-still-up-to-date; . /feed; ; [SOLVED] Windows documentation – still up to date? – SOFA. SOFA - Topic: [SOLVED] Windows documentation – still up to date?. /wonder-about-fem-model-for-bending-flat-element; ; SOFA - Topic: [SOLVED] Wonder about FEM model for REISSNER-MINDLIN FLAT SHELL. /working-example-on-simple-suturing-with-suturepointperformer; ; SOFA - Topic: [SOLVED] Working example on simple suturing with SuturePointPerformer. /working-with-obj-files-in-sofa; ; SOFA - Topic: [SOLVED] Working with .obj-files in SOFA. /write-an-xml-file-with-sofa; ; SOFA - Topic: Write an XML file with SOFA. /writing-a-scene-in-cpp-fails; ; SOFA - Topic: Writing a scene in cpp fails. /wrong-msh-file; ; SOFA - Topic: Wrong msh file. /topic-tag; . /16-12-compilation; . /feed; ; 16.12 compilation – SOFA. SOFA - Topic Tag: 16.12 compilation. /2012_beta; . /feed; ; 2012_beta – SOFA. SOFA - Topic Tag: 2012_beta. /2d; . /feed; ; 2D – ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:421861,depend,dependency-pack-for-vs-,421861,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency-pack-for-vs-']
Integrability,"d called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ d_loadedPlugins. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_loadedPlugins. List of the plugins that are have been loaded. . ◆ d_pluginName. sofa::core::objectmodel::Data<type::vector<std::string> > sofa::simulation::RequiredPlugin::d_pluginName. plugin name (or several names if you need to load different plugins or a plugin with several alternate names) . ◆ d_requireAll. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireAll. Display an error message if any plugin names failed to be loaded. . ◆ d_requireOne. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_requireOne. Display an error message if no plugin names were successfully loaded. . ◆ d_stopAfterFirstNameFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstNameFound. Stop after the first plugin name that is loaded successfully. . ◆ d_stopAfterFirstSuffixFound. sofa::core::objectmodel::Data<bool> sofa::simulation::RequiredPlugin::d_stopAfterFirstSuffixFound. For each plugin name, stop after the first suffix that is loaded successfully. . ◆ d_suffixMap. sofa::core::objectmodel::Data<type::vector<type::fixed_array<std::string,2> > > sofa::simulation::RequiredPlugin::d_suffixMap. standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix . Constructor details. ◆ RequiredPlugin(). sofa::simulation::RequiredPlugin::RequiredPlugin ; (; ). protected . ◆ ~RequiredPlugin(). sofa::simulation::RequiredPlugin::~RequiredPlugin ; (; ). overrideprotecteddefault . Function details. ◆ loadPlu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:14782,message,message,14782,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['message'],['message']
Integrability,"d from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ interpolatePosition() [1/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_if< std::is_same< MyCoord, defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type & ; x . ). ◆ interpolatePosition() [2/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::interpolatePosition ; (; Real ; cT, . typename std::enable_if< std::is_same< MyCoord, sofa::defaulttype::RigidCoord< 3, Real > >::value, VecCoord >::type & ; x . ). protected . ◆ interpolatePosition() [3/4]. template<class TDataTypes > . template<class MyCoord > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >::interpolatePosition ; (; Real ; cT, . typename std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:34668,interface,interface,34668,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"d in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet.; Reimplemented in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet.; Reimplemented in sofa::component::constraint::projective::PartialFixedProjectiveConstraint< DataTypes >. ◆ checkIndices(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::checkIndices. protected . Function check values of given indices. . ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::clearConstraints. ◆ computeBBox(). template<class DataTypes > . void sofa::component::constraint::projective::FixedProjectiveConstraint< DataTypes >::computeBBox ; (; const core::ExecParams * ; , . bool ;  . ). overridevirtual . Bounding Box computation method. Default to empty method. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ computeBBoxForIndices(). template<class DataTypes > .",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:23901,interface,interface,23901,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['interface'],['interface']
Integrability,"d some tetrahedra to this topology. ; See alsoaddTetrahedraWarning . ◆ addTetrahedraWarning() [1/2]. void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedraWarning ; (; const size_t ; nTetrahedra, . const sofa::type::vector< Tetrahedron > & ; tetrahedraList, . const sofa::type::vector< TetrahedronID > & ; tetrahedraIndexList . ). protected . Sends a message to warn that some tetrahedra were added in this topology. ; See alsoaddTetrahedraProcess . ◆ addTetrahedraWarning() [2/2]. void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedraWarning ; (; const size_t ; nTetrahedra, . const sofa::type::vector< Tetrahedron > & ; tetrahedraList, . const sofa::type::vector< TetrahedronID > & ; tetrahedraIndexList, . const sofa::type::vector< sofa::type::vector< TetrahedronID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some tetrahedra were added in this topology. ; See alsoaddTetrahedraProcess . ◆ addTetrahedronProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedronProcess ; (; Tetrahedron ; e). Add a tetrahedron. . ◆ addTrianglesProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTrianglesProcess ; (; const sofa::type::vector< Triangle > & ; triangles). overrideprotectedvirtual . Actually Add some triangles to this topology. ; See alsoaddTrianglesWarning ; Reimplemented from sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ init(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ propagateTopologicalEngineChanges(). void sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:35329,message,message,35329,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"d to compute the barycentric coordinates of input point. ; ind_p2PointID of second vertex to be used to compute the barycentric coordinates of input point. ; useRestPositionbool false to use position, true to use rest_position. . Returnsthe 2 barycentric coordinates inside a vector<SReal>. . ◆ computeEdgeCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeCenter ; (; const EdgeID ; i); const. ◆ computeEdgeDirection(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeDirection ; (; const EdgeID ; i); const. ◆ computeEdgeLength() [1/2]. template<class DataTypes > . void sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeLength ; (; BasicArrayInterface< Real > & ; ai); const. computes the edge length of all edges and stores it in the array interface ; computes the edge length of all edges are store in the array interface . ◆ computeEdgeLength() [2/2]. template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeLength ; (; const EdgeID ; i); const. computes the length of edge no i and returns it . ◆ computeEdgePlaneIntersection(). template<class DataTypes > . bool sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgePlaneIntersection ; (; EdgeID ; edgeID, . sofa::type::Vec< 3, Real > ; pointOnPlane, . sofa::type::Vec< 3, Real > ; normalOfPlane, . sofa::type::Vec< 3, Real > & ; intersection . ). ◆ computeEdgeSegmentIntersection() [1/2]. template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >::computeEdgeSegmentIntersection ; (; const EdgeID ; edgeID, . const type::Vec3 & ; a, . const type::Vec3 & ; b, . bool & ; intersected . ). Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:24837,interface,interface,24837,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,2,['interface'],['interface']
Integrability,"d used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ cubemapFilenameNegX. sofa::core::objectmodel::DataFileName sofa::gl::component::shader::OglTexture::cubemapFilenameNegX. protected . ◆ cubemapFilenameNegY. sofa::core::objectmodel::DataFileName sofa::gl::component::shader::OglTexture::cubemapFilenameNegY. protected . ◆ cubemapFilenameNegZ. sofa::core::objectmodel::DataFileName sofa::gl::component::shader::OglTexture::cubemapFilenameNegZ. protected . ◆ cubemap",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html:17747,message,messages,17747,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture.html,1,['message'],['messages']
Integrability,"d used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ enabled. Data<bool> sofa::gl::component::shader::OglTexturePointer::enabled. protected . enabled ? . ◆ l_oglTexture. LinkTexture sofa::gl::component::shader::OglTexturePointer::l_oglTexture. protected . ◆ textureUnit. Data<unsigned short> sofa::gl::component::shader::OglTexturePointer::textureUnit. protected . Set the texture unit. . Constructor details. ◆ OglTexturePointer(). sofa::gl::component::shader::Ogl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html:16414,message,messages,16414,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture_pointer.html,1,['message'],['messages']
Integrability,"d used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::visual::ShaderElement;  ShaderElement ();  ;  ~ShaderElement () override;  Destructor. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html:16084,message,messages,16084,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_attribute.html,1,['message'],['messages']
Integrability,"d::string * ; data = nullptr, . Base * ; start = nullptr . ). static . ◆ printValue(). void sofa::core::objectmodel::BaseLink::printValue ; (; std::ostream & ; o); const. virtual . Print the value of the associated variable. . ◆ read(). bool sofa::core::objectmodel::BaseLink::read ; (; const std::string & ; str). Read the command line. ; Returns false if:; one or multiple string entries fails to be read. In this case the valid link address are initialized.; the owner is invalid Returns true if:; string is empty; all the linkpath are leading to a valid object or not available there. . ◆ set(). bool sofa::core::objectmodel::BaseLink::set ; (; Base * ; baseptr, . size_t ; index = 0 . ). inline . Change the link's target at the provided index. . ◆ setFlag(). void sofa::core::objectmodel::BaseLink::setFlag ; (; LinkFlagsEnum ; flag, . bool ; b . ). inline . Set one of the flags. . ◆ setHelp(). void sofa::core::objectmodel::BaseLink::setHelp ; (; const std::string & ; val). inline . Set help message. . ◆ setLinkedBase(). void sofa::core::objectmodel::BaseLink::setLinkedBase ; (; Base * ; link). ◆ setName(). void sofa::core::objectmodel::BaseLink::setName ; (; const std::string & ; name). inline . ◆ setOwner(). void sofa::core::objectmodel::BaseLink::setOwner ; (; Base * ; owner). inline . ◆ setPersistent(). void sofa::core::objectmodel::BaseLink::setPersistent ; (; bool ; b). inline . Alias to match BaseData API. . ◆ storePath(). bool sofa::core::objectmodel::BaseLink::storePath ; (; ); const. inline . ◆ updateCounter(). void sofa::core::objectmodel::BaseLink::updateCounter ; (; ). inlineprotected . ◆ updateLinks(). bool sofa::core::objectmodel::BaseLink::updateLinks ; (; ). Update pointers in case the pointed-to objects have appeared Returnsfalse if there are broken links . Enum details. ◆ LinkFlagsEnum. enum sofa::core::objectmodel::BaseLink::LinkFlagsEnum. EnumeratorFLAG_NONE ; FLAG_MULTILINK True if link is an array. . FLAG_STRONGLINK True if link has ownership of lin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:10099,message,message,10099,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['message'],['message']
Integrability,"d::string, std::string >{});  create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, const std::string &name, const std::map< std::string, std::string > &params=std::map< std::string, std::string >{});  create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created object. More...;  ; NodeSPtr SOFA_SIMPLEAPI_API createChild (NodeSPtr node, BaseObjectDescription &desc);  create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). More...;  ; void SOFA_SIMPLEAPI_API dumpScene (NodeSPtr root);  ; template<class T > ; std::string str (const T &t);  . Function Documentation. ◆ cleanup(). SOFA_SIMPLEAPI_API void sofa::simpleapi::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies. . ◆ createChild() [1/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . BaseObjectDescription & ; desc . ). ◆ createChild() [2/4]. Node::SPtr sofa::simpleapi::createChild ; (; Node::SPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createChild() [3/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . BaseObjectDescription & ; desc . ). create a child to the provided node. The parameter ""params"" is for passing specific data argument to the created object (including the node name). . ◆ createChild() [4/4]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createChild ; (; NodeSPtr ; node, . const std::string & ; name, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a child to the provided nodeof given name. The parameter ""params"" is for passing specific data argument to the created",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:3242,depend,dependencies,3242,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['depend'],['dependencies']
Integrability,"d::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ m_topologyContainer. TopologyContainer* sofa::core::topology::TopologyModifier::m_topologyContainer. protected . Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). . Constructor details. ◆ TopologyModifier(). sofa::core::topology::TopologyModifier::TopologyModifier ; (; ). inlineprotected . Constructor. . ◆ ~TopologyModifier(). sofa::core::topology::TopologyModifier::~TopologyModifier ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ addStateChange(). void sofa::core::topology::TopologyModifier::addStateChange ; (; const TopologyChange * ; topologyChange). protected . Adds a StateChange object to the list of the topology this object describes. . ◆ addTopologyChange(). void sofa::core::topology::TopologyModifier::addTopologyChange ; (; const TopologyChange * ; topologyChange). protected . Adds a TopologyChange object to the list of the topology this object describes. . ◆ init(). void sofa::core::topology::TopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented fro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html:14534,depend,depends,14534,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,1,['depend'],['depends']
Integrability,"dAccessor< T, Enable > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::helper::ReadAccessor< T, Enable > Class Template Reference . #include <ReadAccessor.h>. Inheritance diagram for sofa::helper::ReadAccessor< T, Enable >:. [legend]; Detailed Description; template<class T, class Enable = void>; class sofa::helper::ReadAccessor< T, Enable >; A ReadAccessor is a proxy class, holding a reference to a given container and providing access to its data, using an unified interface (similar to std::vector), hiding API differences within containers.; Other advantadges of using a ReadAccessor are :. It can be faster that the default methods and operators of the container, as verifications and changes notifications can be handled in the accessor's constructor and destructor instead of at each item access.; No modifications to the container will be done by mistake; Accesses can be logged for debugging or task dependencies analysis. The default implementation provides only minimal set of methods and operators, sufficient for scalar types but which should be overloaded for more complex types. Various template specializations are typically used, especially for core::objectmodel::Data<T> . Protected Attributes; const container_type * vref;  . Public Member Functions;  ReadAccessor (const container_type &container);  ; const_reference ref () const;  ;  operator const_reference () const;  ; const_pointer operator-> () const;  ; const_reference operator* () const;  . Attribute details. ◆ vref. template<class T , class Enable = void> . const container_type* sofa::helper::ReadAccessor< T, Enable >::vref. protected . Constructor details. ◆ ReadAccessor(). template<class T , class Enable = void> . sofa::helper::ReadAccessor< T, Enable >::ReadAccessor ; (; const container_type & ; container). inlineexplicit . Function details. ◆ operator const_reference(). temp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html:1072,depend,dependencies,1072,api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1_read_accessor.html,1,['depend'],['dependencies']
Integrability,"dAndMass< DataTypes >; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html:2454,message,messages,2454,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass.html,1,['message'],['messages']
Integrability,"dAndRemoved f_youngModulus;  ; void createHexahedronInformation (Index, HexahedronInformation &t, const core::topology::BaseMeshTopology::Hexahedron &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  BaseLinearElasticityFEMForceField ();  ; void setPoissonRatio (Real val);  ; void setYoungModulus (Real val);  ; Real getYoungModulusInElement (sofa::Size elementId) const;  ; Real getPoissonRatioInElement (sofa::Size elementId) const;  . Protected Member Functions;  HexahedralFEMForceFieldAndMass ();  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; Real integrateVolume (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; virtual void computeElementMass (ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes);  compute the mass matrix of an element More...;  ; void computeParticleMasses ();  ; void computeLumpedMasses ();  ;  Protected Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  Mass (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Mass () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:20517,integrat,integrateVolume,20517,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateVolume']
Integrability,"dData< Pos > m_origin;  ; Data< VecId > d_indices;  indices of the selected points More...;  ; Data< Real > d_torque;  torque to apply More...;  ; Data< Pos > d_axis;  direction of the axis (will be normalized) More...;  ; Data< Pos > d_origin;  origin of the axis More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Pos m_u;  normalized axis More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field.html:2055,message,messages,2055,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_torsion_force_field.html,1,['message'],['messages']
Integrability,"d_fixedRadius;  Neighborhood range (for non mechanical particles). More...;  ; Data< int > d_nbClusters;  Number of clusters (-1 means that all input points are selected). More...;  ; Data< VecCoord > d_fixedPosition;  Input positions of fixed (non mechanical) particles. More...;  ; Data< VecCoord > d_position;  Input rest positions. More...;  ; Data< VVI > d_cluster;  Computed clusters. More...;  ; sofa::core::objectmodel::DataFileName input_filename;  import precomputed clusters More...;  ; sofa::core::objectmodel::DataFileName output_filename;  export clusters More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ClusteringEngine, DataTypes), core::DataEngine);  ;  ClusteringEngine ();  ;  ~ClusteringEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html:2062,message,messages,2062,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_clustering_engine.html,1,['message'],['messages']
Integrability,"d_min;  min value for drawing the legend without the need to actually use the range with getEvaluator method which sets the min More...;  ; Data< float > d_max;  max value for drawing the legend without the need to actually use the range with getEvaluator method which sets the max More...;  ; Data< float > d_legendRangeScale;  to change the unit of the min/max value of the legend More...;  ; sofa::helper::ColorMap m_colorMap;  ; GLuint texture;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglColorMap, sofa::core::visual::VisualModel);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doDrawVisual (const core::visual::VisualParams *vparams) override;  ; unsigned int getNbColors ();  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html:2018,message,messages,2018,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_color_map.html,1,['message'],['messages']
Integrability,"date. overridevirtual . Update the output values. ; Implements sofa::core::DataEngine. ◆ generateRigid(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::generateRigid. protected . generates the RigidMass from the mesh integral . ◆ GetCustomTemplateName(). template<class DataTypes , class MassType > . std::string sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::GetCustomTemplateName. static . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters instead of the default one generated automatically by the SOFA_CLASS() macro. . ◆ init(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::init ; (; void ; ). overridevirtual . Initialization method called at graph modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ integrateMesh(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateMesh. protected . integrates the whole mesh ; Protected methods . ◆ integrateTriangle(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateTriangle ; (; type::Vec3 ; kV0, . type::Vec3 ; kV1, . type::Vec3 ; kV2 . ). protected . ◆ reinit(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:21363,integrat,integrateMesh,21363,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrateMesh']
Integrability,"datorFn fn);  ; DestType * get () const;  ; void reset ();  ; void set (DestPtr v);  ; void set (DestPtr v, const std::string &path);  ; void setPath (const std::string &path);  ;  operator DestType * () const;  Convenient operators to make a SingleLink appear as a regular pointer. More...;  ; DestType * operator-> () const;  ; DestType & operator* () const;  ; DestPtr operator= (DestPtr v);  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html:3238,message,message,3238,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_single_link.html,1,['message'],['message']
Integrability,"ddAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges wer",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:15156,message,message,15156,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"de;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:20632,message,message,20632,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,2,['message'],['message']
Integrability,"debugging purposes. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void computeTriangleAABB (const TriangleID i, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeTriangleCenter (const TriangleID i) const;  ; Coord computeRestTriangleCenter (const TriangleID i) const;  ; void computeTriangleCircumcenterBaryCoefs (sofa::type::Vec< 3, Real > &baryCoord, const TriangleID i) const;  ; Coord computeTriangleCircumcenter (const TriangleID i) const;  ; void getTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; void getRestTriangleVertexCoordinates (const TriangleID i, Coord[3]) const;  ; Real computeTriangleArea (const TriangleID i) const;  Computes the area of triangle no i and returns it. More...;  ; void computeTriangleArea (BasicArrayInterface< Real > &ai) const;  Computes the triangle area of all triangles are store in the array interface. More...;  ; Real computeRestTriangleArea (const TriangleID i) const;  Computes the initial area of triangle no i and returns it. More...;  ; sofa::type::vector< SReal > computeTriangleBarycoefs (const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) const;  Computes barycentric coefficients of point p in triangle (a,b,c) indexed by ind_t. More...;  ; sofa::type::vector< SReal > computeRestTriangleBarycoefs (const TriangleID ind_t, const sofa::type::Vec< 3, Real > &p) const;  Computes barycentric coefficients of point p in initial triangle (a,b,c) indexed by ind_t. More...;  ; sofa::type::vector< SReal > compute3PointsBarycoefs (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, PointID ind_p3, bool bRest=false) const;  Computes barycentric coefficients of point p in triangle whose vertices are indexed by (ind_p1,ind_p2,ind_p3) More...;  ; void computeClosestIndexPair (const TriangleID ind",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:11342,interface,interface,11342,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['interface'],['interface']
Integrability,"def StdVectorTypes<type::Vec3, type::Vec3, type::Vec3::value_type> sofa::defaulttype::Vec3Types. 3D DOFs, double precision (default) . ◆ Vec6dTypes. typedef StdVectorTypes< type::Vec6d, type::Vec6d, double > sofa::defaulttype::Vec6dTypes. 6D DOFs, double precision . ◆ Vec6fTypes. typedef StdVectorTypes< type::Vec6f, type::Vec6f, float > sofa::defaulttype::Vec6fTypes. 6f DOFs, single precision . ◆ Vec6Types. typedef StdVectorTypes<type::Vec6, type::Vec6, type::Vec6::value_type> sofa::defaulttype::Vec6Types. 6D DOFs, double precision (default) . ◆ VirtualTypeInfo. template<class T > . using sofa::defaulttype::VirtualTypeInfo = typedef DataTypeInfoDynamicWrapper<DataTypeInfo<T> >. We make an alias to wrap around the old name to the new one. . Enumeration Type Documentation. ◆ TypeInfoType. enum sofa::defaulttype::TypeInfoType. strong . Encodes the different kind of type infos stored in the TypeInfoRegistry. ; In the TyepeInfoRegistry we can store different type of type info depending on how much the developer want to provide precise information (or not) on its data type.; MISSING indicates that there was absolutely no valid information to trust in an AbstractTypeInfo object.; NAMEONLY indicates that only the getName() and getTypeName() function are returning valid information.; COMPLETE indicates that all the function like size/getSize/etc... are implemented. . EnumeratorMISSING ; NAMEONLY ; COMPLETE . Function Documentation. ◆ addMultTransposeEigen(). template<typename LhsDeriv , typename RhsDeriv , typename Real > . void sofa::defaulttype::addMultTransposeEigen ; (; MapMapSparseMatrix< LhsDeriv > & ; lhs, . const Eigen::SparseMatrix< Real, Eigen::RowMajor > & ; jacobian, . const MapMapSparseMatrix< RhsDeriv > & ; rhs . ). Computes lhs += jacobian^T * rhs. . ◆ cleanup(). SOFA_DEFAULTTYPE_API void sofa::defaulttype::cleanup ; (; ). Clean up the resources used by the SofaDefaultType library, as well as its dependency: SofaHelper. . ◆ getAngular() [1/2]. template<sofa::Si",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:17079,depend,depending,17079,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['depend'],['depending']
Integrability,"del::Data< SeqPositions >, sofa::core::objectmodel::Data< sofa::type::vector< sofa::type::fixed_array< unsigned int, 8 > > >, sofa::core::objectmodel::Data< sofa::type::SVector< SkeletonBone > >, sofa::core::objectmodel::Data< Mat< 3, 3, Real > >, and sofa::core::objectmodel::Data< sofa::type::vector< SReal > >. ◆ setAutoLink(). void sofa::core::objectmodel::BaseData::setAutoLink ; (; bool ; b). inline . Set whether this data should be autolinked when using the src="""" syntax. . ◆ setDisplayed(). void sofa::core::objectmodel::BaseData::setDisplayed ; (; bool ; b). inline . Set whether this Data should be displayed in GUIs. . ◆ setFlag(). void sofa::core::objectmodel::BaseData::setFlag ; (; DataFlagsEnum ; flag, . bool ; b . ). inline . Set one of the flags. . ◆ setGroup(). void sofa::core::objectmodel::BaseData::setGroup ; (; const std::string & ; val). inline . Set group. . ◆ setHelp(). void sofa::core::objectmodel::BaseData::setHelp ; (; const std::string & ; val). inline . Set the help message. . ◆ setName(). void sofa::core::objectmodel::BaseData::setName ; (; const std::string & ; name). inline . Set the name of this Data.; This method should not be called directly, the Data registration methods in Base should be used instead. . ◆ setOwner(). void sofa::core::objectmodel::BaseData::setOwner ; (; Base * ; o). inline . Set the owner of this Data. . ◆ setParent() [1/2]. bool sofa::core::objectmodel::BaseData::setParent ; (; BaseData * ; parent, . const std::string & ; path = std::string() . ). Link to a parent data. The value of this data will automatically duplicate the value of the parent data. . ◆ setParent() [2/2]. bool sofa::core::objectmodel::BaseData::setParent ; (; const std::string & ; path). ◆ setPersistent(). void sofa::core::objectmodel::BaseData::setPersistent ; (; bool ; b). inline . Set whether this Data contains persistent information. . ◆ setReadOnly(). void sofa::core::objectmodel::BaseData::setReadOnly ; (; bool ; b). inline . Set whether this Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:144867,message,message,144867,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability,"del::Data< VecValue > f_values;  input values More...;  ; core::objectmodel::Data< VecValue > f_global;  Global values, in which the input values are searched. More...;  ; core::objectmodel::Data< VecIndex > f_indices;  Output indices of the given values, searched in global. More...;  ; core::objectmodel::Data< VecIndex > f_otherIndices;  Output indices of the other values, (NOT the given ones) searched in global. More...;  ; core::objectmodel::Data< bool > f_recursiveSearch;  if set to true, output are indices of the ""global"" data matching with one of the values More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(IndicesFromValues, T), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where y",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values.html:1686,message,messages,1686,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_indices_from_values.html,1,['message'],['messages']
Integrability,"delPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:5444,depend,dependent,5444,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['depend'],['dependent']
Integrability,"der; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileNameVector fragFilename;  Files where fragment shader is defined. More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShader; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_conte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:17903,message,messages,17903,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,2,['message'],['messages']
Integrability,"details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2884,message,message,2884,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"details. ◆ FrameSpringForceField() [1/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::FrameSpringForceField. protected . ◆ FrameSpringForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::FrameSpringForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2 . ). protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . Given the curren",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:24876,integrat,integrated,24876,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['integrat'],['integrated']
Integrability,"dge >;  ; struct  DataTypeInfo< sofa::topology::Triangle >;  ; struct  DataTypeInfo< sofa::topology::Quad >;  ; struct  DataTypeInfo< sofa::topology::Tetrahedron >;  ; struct  DataTypeInfo< sofa::topology::Pyramid >;  ; struct  DataTypeInfo< sofa::topology::Pentahedron >;  ; struct  DataTypeInfo< sofa::topology::Hexahedron >;  ; struct  DataTypeInfo< sofa::type::Vec< N, real > >;  ; struct  DataTypeInfo< sofa::type::VecNoInit< N, real > >;  ; struct  DataTypeInfo< sofa::type::vector< T, Alloc > >;  ; struct  DataTypeInfo< sofa::type::vector< bool, Alloc > >;  ; struct  DataTypeInfo< sofa::type::vector< std::string, Alloc > >;  ; class  TypeInfoId;  Generates unique id for types. More...;  ; class  TypeInfoRegistry;  An unique singleton to register all the type info defined in Sofa. More...;  ; class  TypeInfoRegistryTools;  A dedicated class to hold helper functions for TypeInfoRegistryTools. More...;  . Typedefs; template<class T > ; using VirtualTypeInfo = DataTypeInfoDynamicWrapper< DataTypeInfo< T > >;  We make an alias to wrap around the old name to the new one. More...;  ; typedef StdRigidTypes< 2, double > Rigid2dTypes;  ; typedef RigidMass< 2, double > Rigid2dMass;  ; typedef StdRigidTypes< 2, float > Rigid2fTypes;  ; typedef RigidMass< 2, float > Rigid2fMass;  ; typedef StdRigidTypes< 2, SReal > Rigid2Types;  ; typedef RigidMass< 2, SReal > Rigid2Mass;  un-defined precision type More...;  ; typedef RigidMass< 3, double > Rigid3dMass;  ; typedef RigidMass< 3, float > Rigid3fMass;  ; typedef StdRigidTypes< 3, SReal > Rigid3Types;  un-defined precision type More...;  ; typedef RigidMass< 3, SReal > Rigid3Mass;  un-defined precision type More...;  ; typedef StdVectorTypes< sofa::type::Vec3d, sofa::type::Vec3d, double > Vec3dTypes;  3D DOFs, double precision More...;  ; typedef StdVectorTypes< sofa::type::Vec2d, sofa::type::Vec2d, double > Vec2dTypes;  2D DOFs, double precision More...;  ; typedef StdVectorTypes< sofa::type::Vec1d, sofa::type::Vec1d, double > Ve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:4345,wrap,wrap,4345,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['wrap'],['wrap']
Integrability,"dgesAroundVertex for data handling. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this object describes. More...;  ; void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange object to the list of the topology this object describes. More...;  ;  Protected Member Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:24798,message,message,24798,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,different-collision-definitions-for-different-parts; ; SOFA - Topic: [SOLVED] One object with different collision definitions for different parts. /onkeypressedevent-not-working; ; SOFA - Topic: onKeypressedEvent not working. /on-the-rotation-of-a-mesh-model-oglmodel; . /feed; ; [SOLVED] On the rotation of a mesh model (OglModel) – SOFA. SOFA - Topic: [SOLVED] On the rotation of a mesh model (OglModel). /opengl-and-directx; ; SOFA - Topic: opengl and directX. /opengl-error-when-compiling-sofa-on-macos; ; SOFA - Topic: [SOLVED] OpenGL Error when Compiling SOFA on MacOS. /open-obj-or-stl-files; . /feed; ; [SOLVED] Open .OBJ or .STL files – SOFA. SOFA - Topic: [SOLVED] Open .OBJ or .STL files. /open-position-for-an-engineer-in-computer-science; . /page; . /4; ; SOFA - Topic: Open position for an Engineer in Computer Science. SOFA - Topic: Open position for an Engineer in Computer Science. /optimization-integrator; . /feed; ; [SOLVED] Optimization integrator – SOFA. SOFA - Topic: [SOLVED] Optimization integrator. /order-independent-transparency; ; SOFA - Topic: [SOLVED] Order Independent Transparency. /orientantion-in-end-effector; ; SOFA - Topic: Orientantion in End-Effector. /oriented-sliding-constraint-actuator; ; SOFA - Topic: Oriented Sliding Constraint/Actuator. /parameter-value-update; . /embed; ; SOFA - Topic: Parameter value update. SOFA - Topic: Parameter value update. /paraview-and-sofa-working-together; ; SOFA - Topic: Paraview and SOFA working together. /parse-error; ; SOFA - Topic: Parse error. /particlemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; . /feed; ; [SOLVED] Performance issues with haptics and deformable objects – SOFA. /page,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:359796,integrat,integrator,359796,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integrator']
Integrability,"difier ();  ;  ~DynamicSparseGridTopologyModifier () override;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier;  HexahedronSetTopologyModifier ();  ;  ~HexahedronSetTopologyModifier () override;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; virtual void removeHexahedraWarning (sofa::type::vector< HexahedronID > &hexahedra);  Sends a message to warn that some hexahedra are about to be deleted. More...;  ; void addQuadsProcess (const sofa::type::vector< Quad > &quads) override;  Actually Add some quads to this topology. More...;  ; void removeQuadsProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false) override;  Remove a subset of quads. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:18632,message,message,18632,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,1,['message'],['message']
Integrability,"dinateMatrix, const float &bodyRad=0.0, const float &rad=1.0, const int precision=20, const V &color=sofa::type::fixed_array< int, 3 >(255, 215, 180));  ; template<typename V > ; void drawEmptyParallelepiped (const V &vert1, const V &vert2, const V &vert3, const V &vert4, const V &vecFromFaceToOppositeFace, const float &rad=1.0, const int precision=8, const V &color=sofa::type::RGBAColor::red());  ; SOFA_GL_API void glfntInit (void);  ; SOFA_GL_API void glfntWriteBitmap (float x, float y, char *s);  ; SOFA_GL_API void glfntClose (void);  ; std::string CombineHeaders (std::string header, const std::string &shaderStage, std::string source);  ; SOFA_GL_API void init ();  Initialize the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_GL_API bool isInitialized ();  Return true if and only if the Sofa.GL library has been initialized. More...;  ; SOFA_GL_API void cleanup ();  Clean up the resources used by the Sofa.GL library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_GL_API bool isCleanedUp ();  Return true if and only if the Sofa.GL library has been cleaned up. More...;  ; template<int N> ; void glVertexNv (const float *);  ; template<> ; void glVertexNv< 3 > (const float *p);  ; template<> ; void glVertexNv< 2 > (const float *p);  ; template<> ; void glVertexNv< 1 > (const float *p);  ; template<int N> ; void glVertexNv (const double *p);  ; template<> ; void glVertexNv< 2 > (const double *p);  ; template<> ; void glVertexNv< 1 > (const double *p);  ; template<class Coord > ; void glVertexT (const Coord &c);  ; template<> ; void glVertexT< double > (const double &c);  ; template<> ; void glVertexT< float > (const float &c);  ; template<int N> ; void glTexCoordNv (const float *);  ; template<> ; void glTexCoordNv< 3 > (const float *p);  ; template<> ; void glTexCoordNv< 2 > (const float *p);  ; template<> ; void glTexCoordNv< 1 > (const float *p);  ; template<int N> ; void glTexCoordNv (const dou",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html:2507,depend,dependencies,2507,api/master/sofa/html/namespacesofa_1_1gl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1gl.html,1,['depend'],['dependencies']
Integrability,"directions in which the particles are moved: true (or 1) for fixed, false (or 0) for free. More...;  ; SingleLink< PartialLinearMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< PartialLinearMovementProjectiveConstraintInternalData< DataTypes > > data;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Pro",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:4693,message,messages,4693,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['message'],['messages']
Integrability,"down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObject() [2/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridepure virtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObject() [3/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getObject() [4/4]. core::objectmodel::BaseObject * sofa::simulation::Node::getObject ; (; const std::string & ; name); const. Find an object given its name. . ◆ getObjects() [1/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridepure virtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObjects() [2/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:42626,wrap,wrapper,42626,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; InternalData data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:3473,message,messages,3473,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecMaterialStiffness _materialsStiffnesses;  the material stiffness matrices vector More...;  ; sofa::core::objectmodel::RenamedData< VecElementStiffness > _elementStiffnesses;  ; Data< VecElementStiffness > d_elementStiffnesses;  Stiffness matrices per element (K_i) More...;  ; CompressedMatrix _stiffnesses;  ; SReal m_potentialEnergy;  ; topology::container::grid::SparseGridTopology * _sparseGrid;  ; sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:3893,message,messages,3893,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecMaterialStiffness materialsStiffnesses;  Vector of material stiffness matrices of each tetrahedron. More...;  ; VecStrainDisplacement strainDisplacements;  the strain-displacement matrices vector More...;  ; type::vector< Transformation > rotations;  ; type::vector< VoigtTensor > _plasticStrains;  one plastic strain per element More...;  ; SReal m_potentialEnergy;  ; const VecElement * _indexedElements;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:6602,message,messages,6602,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool _anisotropicMaterial;  ; bool updateMatrix;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html:5023,message,messages,5023,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; bool updateMatrix;  ; ExtraData m_data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html:3750,message,messages,3750,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_fast_tetrahedral_corotational_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Mat< 8, 3, int > _coef;  coef of each vertices to compute the strain stress matrix More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:3334,message,messages,3334,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TetrahedralCorotationalFEMForceField, DataTypes), SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes));  ;  SOFA_ATTRIBUTE_DISABLED ("""", ""v24.12"", ""Use d_youngModulus instead"") DeprecatedAndRemoved _youngModulus;  ; void setMethod (int val);  ; void setUpdateStiffnessMatrix (bool val);  ; void setComputeGlobalMatrix (bool val);  ; void init () override;  Initialization m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html:4525,message,messages,4525,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedral_corotational_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangularAnisotropicFEMForceField, DataTypes), SOFA_TEMPLATE(TriangularFEMForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void draw (const core::visual::VisualPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html:5281,message,messages,5281,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_anisotropic_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Protected Attributes; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseLinearElasticityFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ;  BaseLinearElasticityFEMForceField ();  ; void init () override;  Initialization method called at graph creation and modification, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html:1840,message,messages,1840,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_base_linear_elasticity_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"dulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const int SMALL = 1;  Symbol of small displacements triangle solver. More...;  ; static const int LARGE = 0;  Symbol of large displacements triangle solver. More...;  . Protected Attributes; VecMaterialStiffness _materialsStiffnesses;  the material stiffness matrices vector More...;  ; VecStrainDisplacement _strainDisplacements;  the strain-displacement matrices vector More...;  ; const VecElement",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html:3102,message,messages,3102,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangle_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"d initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs);  Called by the MechanicalObject state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html:1809,depend,dependent,1809,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_geometry_algorithms.html,1,['depend'],['dependent']
Integrability,"d initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtual void updateVisual () final;  ; virtual void clearVisual ();  clear some graphical resources (generally called before the deleteVisitor). More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initialization metho",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html:17476,depend,dependent,17476,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_visual_model.html,1,['depend'],['dependent']
Integrability,"e * getMechModel2 ();  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ; const BaseMechanicalState * getMechModel2 () const;  Retrieve the associated MechanicalState #2 as a BaseMechanicalState. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html:4030,depend,dependent,4030,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_state_accessor.html,1,['depend'],['dependent']
Integrability,"e Reference . #include <MergeSets.h>. Inheritance diagram for sofa::component::engine::generate::MergeSets< T >:. [legend]; Detailed Description; template<class T>; class sofa::component::engine::generate::MergeSets< T >; This class merge 2 coordinate vectors. . Public Attributes; Data< VecIndex > f_in1;  first set of indices More...;  ; Data< VecIndex > f_in2;  second set of indices More...;  ; Data< VecIndex > f_out;  merged set of indices More...;  ; Data< std::string > f_op;  name of operation to compute (union, intersection, difference, symmetric_difference) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergeSets, T), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functions inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html:1342,message,messages,1342,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_sets.html,1,['message'],['messages']
Integrability,"e a given pressure More...;  ; SingleLink< OscillatingTorsionPressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::ofstream file;  ; sofa::type::vector< Real > relMomentToApply;  ; sofa::type::vector< bool > pointActive;  ; sofa::type::vector< Coord > vecFromCenter;  ; sofa::type::vector< Real > distFromCenter;  ; sofa::type::vector< Coord > momentDir;  ; sofa::type::vector< Coord > origVecFromCenter;  ; sofa::type::vector< Coord > origCenter;  ; SReal rotationAngle;  ; sofa::core::topology::BaseMeshTopology * m_top",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html:3285,message,messages,3285,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_oscillating_torsion_pressure_force_field.html,1,['message'],['messages']
Integrability,"e creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Protected Attributes inherited from sofa::core::topology::TopologySubsetData< core::topology::BaseMeshTopology::Point, type::vector< Index > >; sofa::type::vector< Index > m_map2Elements;  same size as this SubsetData but contains id of element link to each data[] More...;  ; bool m_addNewElements;  ;  Protected Attributes inherited from sofa::core::topology::TopologyData< ElementType, VecT >; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< T >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseData; static std::string decodeTypeName (const std::type_info &t);  Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html:20649,depend,depending,20649,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_subset_indices.html,1,['depend'],['depending']
Integrability,"e diagram for sofa::component::engine::select::SelectLabelROI< _T >:. [legend]; Detailed Description; template<class _T>; class sofa::component::engine::select::SelectLabelROI< _T >; Select a subset of labeled points or cells stored in (vector<svector<label>>) given certain labels . Public Attributes; Data< type::vector< type::SVector< T > > > d_labels;  lists of labels associated to each point/cell More...;  ; Data< type::vector< T > > d_selectLabels;  list of selected labels More...;  ; Data< type::vector< sofa::Index > > d_indices;  selected point/cell indices More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SelectLabelROI, _T), DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are mo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html:1403,message,messages,1403,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_label_r_o_i.html,1,['message'],['messages']
Integrability,"e if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; virtual Index getFromIndex (Index ind);  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual bool checkTopologies ();  Method to check the topology mapping maps regarding the upper topology. More...;  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html:5008,depend,dependent,5008,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_simple_tesselated_hexa_topological_mapping.html,3,['depend'],['dependent']
Integrability,"e list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::To",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html:4951,depend,dependent,4951,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_average_coord.html,1,['depend'],['dependent']
Integrability,e-viewer; . /feed; ; Image Viewer – SOFA. SOFA - Topic Tag: Image Viewer. /imgui; . /feed; ; ImGUI – SOFA. SOFA - Topic Tag: ImGUI. /implicit-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – SOFA. SOFA - Topic Tag: Incision2D. /input; . /feed; ; input – SOFA. SOFA - Topic Tag: input. /input-and-output-in-sofa-scn-file; . /feed; ; Input and Output in SOFA .scn file – SOFA. SOFA - Topic Tag: Input and Output in SOFA .scn file. /installation; . /feed; ; installation – SOFA. SOFA - Topic Tag: installation. /installation-error; . /feed; ; Installation error – SOFA. SOFA - Topic Tag: Installation error. /instrument; . /feed; ; instrument – SOFA. SOFA - Topic Tag: instrument. /integrator-optimization-vec-multivec-deriv-coord-types; . /feed; ; integrator optimization vec multivec deriv coord types – SOFA. SOFA - Topic Tag: integrator optimization vec multivec deriv coord types. /interaction; . /feed; ; interaction – SOFA. SOFA - Topic Tag: interaction. /interactions; . /feed; ; interactions – SOFA. SOFA - Topic Tag: interactions. /interventionalradiologycontroller-inl; . /feed; ; InterventionalRadiologyController.inl – SOFA. SOFA - Topic Tag: InterventionalRadiologyController.inl. /is-sofa-right-for-this; . /feed; ; Is SOFA right for this? – SOFA. SOFA - Topic Tag: Is SOFA right for this?. /jacobian; . /feed; ; Jacobian – SOFA. SOFA - Topic Tag: Jacobian. /joint-constraint; . /feed; ; joint constraint – SOFA. SOFA - Topic Tag: joint constraint. /jointspringforcefield; . /feed; ; JointSpringForceField – SOFA. SOFA - Topic Tag: JointSpringForceField. /keyboard; . /feed; ; keyboard – SOFA. SOFA - Topic Tag: keyboard. /keyboard-handle-event-key-pressed; . /feed; ; keyboard handle event key ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:450262,integrat,integrator-optimization-vec-multivec-deriv-coord-types,450262,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integrator-optimization-vec-multivec-deriv-coord-types']
Integrability,"e. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes > Class Template Reference . #include <BoyceAndArruda.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::BoyceAndArruda< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""ArrudaBoyce"";  . Public Member Functions; virtual Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param);  ; virtual void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral);  ; virtual void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor);  ; virtual void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor);  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name. templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html:1099,depend,depends,1099,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_boyce_and_arruda.html,1,['depend'],['depends']
Integrability,"e. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Static Public Attributes |; Public Member Functions |; List of all members . sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes > Class Template Reference . #include <VerondaWestman.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::hyperelastic::material::VerondaWestman< DataTypes >; a Class that describe a generic hyperelastic material : example of Boyce and Arruda The material is described based on continuum mechanics and the description is independent to any discretization method like the finite element method. A material is generically described by a strain energy function and its first and second derivatives. In practice the energy is the sum of several energy terms which depends on 2 quantities : the determinant of the deformation gradient J and the right Cauchy Green deformation tensor . Static Public Attributes; static constexpr std::string_view Name = ""VerondaWestman"";  . Public Member Functions; Real getStrainEnergy (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param) override;  ; void deriveSPKTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, MatrixSym &SPKTensorGeneral) override;  ; void applyElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, const MatrixSym &inputTensor, MatrixSym &outputTensor) override;  ; void ElasticityTensor (StrainInformation< DataTypes > *sinfo, const MaterialParameters< DataTypes > &param, Matrix6 &outputTensor) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::HyperelasticMaterial< DataTypes >; virtual ~HyperelasticMaterial ();  . Attribute details. ◆ Name.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html:1099,depend,depends,1099,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_veronda_westman.html,1,['depend'],['depends']
Integrability,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void setObject1 (MechanicalState *object1);  ; void setObject2 (Mechanical",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html:3793,message,messages,3793,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quad_bending_springs.html,1,['message'],['messages']
Integrability,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TriangleBendingSprings, DataTypes), SOFA_TEMPLATE(SpringForceField, DataTypes));  ; void init () override;  Searches triangle topology and creates the bending springs. More...;  ;  Public Member Functions inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(SpringForceField, DataTypes), SOFA_TEMPLATE(core::behavior::Pa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html:3576,message,messages,3576,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangle_bending_springs.html,1,['message'],['messages']
Integrability,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr auto N = DataTypes::spatial_dimensions;  . Protected Attributes; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringIndicesDirty { true };  ; bool maskInUse;  ; Real m_potentialEnergy;  ; SpringForceFieldInternalData< DataTypes > data;  ; std::array< sofa::core::topology::TopologySubsetIndi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:3210,message,messages,3210,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['message'],['messages']
Integrability,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; static constexpr auto N = DataTypes::spatial_dimensions;  ;  Protected Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; sofa::type::vector< Mat > dfdx;  ; core::objectmodel::DataFileName fileSprings;  ; core::objectmodel::DataCallback c_springCallBack;  ; bool areSpringI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html:21938,message,messages,21938,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_repulsive_spring_force_field.html,1,['message'],['messages']
Integrability,"e...;  ; Data< type::vector< bool > > d_enabled;  List of boolean stating on the fact that the spring is enabled. Must have as same size than indices1 & indices2, or if only one element, it will be applied to all springs. If empty, True will be applied everywhere. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::component::solidmechanics::spring::SpringForceField< DataTypes >; static constexpr auto N = DataTypes::spatial_dimensions;  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html:26146,message,messages,26146,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_mesh_spring_force_field.html,2,['message'],['messages']
Integrability,"e...;  ; SingleLink< DiagonalMass< DataTypes, GeometricalTypes >, sofa::core::behavior::MechanicalState< GeometricalTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_geometryState;  Link to be set to the MechanicalObject associated with the geometry. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  . Protected Attributes; sofa::geometry::ElementType m_massTopologyType;  The type of topology to build the mass from the topology. More...;  ;  Protected Attributes inherited from sofa::core::behavior::Mass< DataTypes >; std::unique_ptr< std::ofstream",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:3564,message,messages,3564,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,1,['message'],['messages']
Integrability,"e...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html:13748,message,messages,13748,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint.html,1,['message'],['messages']
Integrability,"e.h>. Inheritance diagram for sofa::gl::component::rendering3d::ClipPlane:. [legend]. Public Attributes; Data< sofa::type::Vec3 > position;  Point crossed by the clipping plane. More...;  ; Data< sofa::type::Vec3 > normal;  Normal of the clipping plane, pointing toward the clipped region. More...;  ; Data< int > id;  Clipping plane OpenGL ID. More...;  ; Data< bool > active;  Control whether the clipping plane should be applied or not. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; GLboolean wasActive;  ; double saveEq [4];  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrac",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html:1368,message,messages,1368,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_clip_plane.html,1,['message'],['messages']
Integrability,"e::GenerateRigidMass< DataTypes, MassType >::generateRigid. protected . generates the RigidMass from the mesh integral . ◆ GetCustomTemplateName(). template<class DataTypes , class MassType > . std::string sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::GetCustomTemplateName. static . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters instead of the default one generated automatically by the SOFA_CLASS() macro. . ◆ init(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::init ; (; void ; ). overridevirtual . Initialization method called at graph modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ integrateMesh(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateMesh. protected . integrates the whole mesh ; Protected methods . ◆ integrateTriangle(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateTriangle ; (; type::Vec3 ; kV0, . type::Vec3 ; kV1, . type::Vec3 ; kV2 . ). protected . ◆ reinit(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). protected . ◆ SOFA_CLASS(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_CLASS ; (; GenerateRigidMass< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:21535,integrat,integrates,21535,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrates']
Integrability,"e::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void buildConstraintMatrix (const ConstraintParams *cParams, MultiMatrixDerivId cId, unsigned int &cIndex)=0;  ; virtual void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v);  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html:3430,depend,dependent,3430,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,1,['depend'],['dependent']
Integrability,"e::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:18193,message,message,18193,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"e< sofa::defaulttype::RigidDeriv< N, Real > >;  ; class  EigenSparseToMapMapSparseMatrix;  ; struct  EigenSparseToMapMapSparseMatrixVec;  ; class  EigenSparseToMapMapSparseMatrix< sofa::type::Vec< N, Real > >;  ; class  EigenSparseToMapMapSparseMatrix< sofa::defaulttype::RigidDeriv< N, Real > >;  ; class  RigidCoord< 3, real >;  ; class  RigidCoord< 2, real >;  ; class  RigidDeriv< 3, real >;  ; class  RigidDeriv< 2, real >;  ; class  RigidMass< 3, real >;  ; class  RigidMass< 2, real >;  ; class  StdRigidTypes< 3, real >;  ; class  StdRigidTypes< 2, real >;  ; class  SolidTypes;  ; class  TemplateAliases;  Class used to store and resolve template aliases. More...;  ; class  RegisterTemplateAlias;  Helper class used to register a template alias in the TemplateAliases class. More...;  ; struct  DefaultDataTypeInfo;  ; class  DataTypeName;  ; class  HasGetTypeName;  add a compatibility layer to supper the new existing GetTypeName. More...;  ; class  DataTypeInfoDynamicWrapper;  wrap a DataTypeInfo type_traits in an AbstractTypeInfo More...;  ; struct  BoolTypeInfo;  ; struct  FixedArrayTypeInfo;  ; struct  IncompleteTypeInfo;  ; struct  IntegerTypeInfo;  ; struct  ScalarTypeInfo;  ; struct  SetTypeInfo;  ; struct  TextTypeInfo;  ; struct  VectorTypeInfo;  ; class  NameOnlyTypeInfo;  ; class  NoTypeInfo;  ; struct  DataTypeInfo< bool >;  ; struct  BoundingBoxTypeInfo;  ; struct  DataTypeInfo< type::BoundingBox >;  ; struct  DataTypeInfo< sofa::type::fixed_array< T, N > >;  ; struct  DataTypeInfo< char >;  ; struct  DataTypeInfo< unsigned char >;  ; struct  DataTypeInfo< short >;  ; struct  DataTypeInfo< unsigned short >;  ; struct  DataTypeInfo< int >;  ; struct  DataTypeInfo< unsigned int >;  ; struct  DataTypeInfo< long >;  ; struct  DataTypeInfo< unsigned long >;  ; struct  DataTypeInfo< long long >;  ; struct  DataTypeInfo< unsigned long long >;  ; struct  DataTypeInfo< sofa::type::Mat< L, C, real > >;  ; struct  DataTypeInfo< sofa::type::Quat< T > >;  ; class  Data",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:1770,wrap,wrap,1770,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['wrap'],['wrap']
Integrability,"e<class DataTypes , class MassType > . std::string sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::GetCustomTemplateName. static . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters instead of the default one generated automatically by the SOFA_CLASS() macro. . ◆ init(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::init ; (; void ; ). overridevirtual . Initialization method called at graph modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ integrateMesh(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateMesh. protected . integrates the whole mesh ; Protected methods . ◆ integrateTriangle(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateTriangle ; (; type::Vec3 ; kV0, . type::Vec3 ; kV1, . type::Vec3 ; kV2 . ). protected . ◆ reinit(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). protected . ◆ SOFA_CLASS(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_CLASS ; (; GenerateRigidMass< DataTypes, MassType > ; , . core::DataEngine ;  . ). sofacomponentenginegenerateGenerateRigidMass; Generated on Mon Nov 11 2024 02:38:43 for SOFA API by 1.9",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:21734,integrat,integrateTriangle,21734,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrateTriangle']
Integrability,"e<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:13201,integrat,integrate,13201,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,1,['integrat'],['integrate']
Integrability,"e=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionConstraint< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *p0, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html:20444,message,messages,20444,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_sliding_lagrangian_constraint.html,1,['message'],['messages']
Integrability,"e=true)sofa::simulation::common::MechanicalOperations; computeEnergy(SReal &kineticEnergy, SReal &potentialEnergy)sofa::simulation::common::MechanicalOperations; computeForce(core::MultiVecDerivId result, bool clear=true, bool accumulate=true)sofa::simulation::common::MechanicalOperations; computeForce(SReal t, core::MultiVecDerivId f, core::MultiVecCoordId x, core::MultiVecDerivId v)sofa::simulation::common::MechanicalOperations; cparamssofa::simulation::common::MechanicalOperations; ctxsofa::simulation::common::MechanicalOperations; executeVisitorsofa::simulation::common::MechanicalOperationsprotected; getMatrixDimension(sofa::Size *const, sofa::Size *const, sofa::core::behavior::MultiMatrixAccessor *matrix=nullptr)sofa::simulation::common::MechanicalOperations; getMatrixDimension(sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperationsinline; hasShownMissingLinearSolverMapsofa::simulation::common::MechanicalOperationsprotectedstatic; integrateVelocity(core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt)sofa::simulation::common::MechanicalOperations; kFactsofa::simulation::common::MechanicalOperations; MechanicalOperations(const core::MechanicalParams *mparams, core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false)sofa::simulation::common::MechanicalOperations; MechanicalOperations(const core::ExecParams *params, core::objectmodel::BaseContext *ctx, bool precomputedTraversalOrder=false)sofa::simulation::common::MechanicalOperations; mparamssofa::simulation::common::MechanicalOperations; multiVector2BaseVector(core::ConstMultiVecId src, linearalgebra::BaseVector *dest, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; multiVectorPeqBaseVector(core::MultiVecDerivId dest, const linearalgebra::BaseVector *src, const sofa::core::behavior::MultiMatrixAccessor *matrix)sofa::simulation::common::MechanicalOperations; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html:3008,integrat,integrateVelocity,3008,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations-members.html,1,['integrat'],['integrateVelocity']
Integrability,"eConstraint< DataTypes >::getEndTime ; (; ). inline . ◆ init() [1/3]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [2/3]. void SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< defaulttype::Rigid3Types >::init ; (; void ; ). virtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::behavior::SingleStateAccessor< DataTypes >. ◆ init() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). overridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< DataTypes >. ◆ projectPosition(). template<class DataTypes > . void sofa::component::constraint::projective::HermiteSplineProjectiveConstraint< DataTypes >::projectPosition ; (; const core::MechanicalParams * ; mparams, . DataVecCoord & ; x . ). overridevirtual . Project x to constrained space (x models a position).; This method must be implemented by the component, and is usually called by the generic ProjectiveConstraintSet::projectPosition() method. ; Implements sofa::core::b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:27324,interface,interface,27324,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['interface'],['interface']
Integrability,"eContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:3212,depend,dependent,3212,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['depend'],['dependent']
Integrability,"eField< TDataTypes >, sofa::core::behavior::ForceField< _DataTypes >, sofa::core::behavior::ForceField< T >, and sofa::core::behavior::ForceField< DataTypes >. ◆ addClambda(). virtual void sofa::core::behavior::BaseForceField::addClambda ; (; const MechanicalParams * ; , . MultiVecDerivId ; , . MultiVecDerivId ; , . SReal ;  . ). inlinevirtual . Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. ; This method computes . where C is the Compliant matrix (inverse of the Stiffness matrix : ) . ◆ addDForce(). virtual void sofa::core::behavior::BaseForceField::addDForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dfId . ). pure virtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce(). ; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes . where K is the stiffness matrix (associated with forces which derive from a potential), and B is the damping matrix (associated with viscous forces).; Parameters. mparams; mparams->mFactor() is the coefficient for mass contributions (i.e. second-order derivatives term in the ODE); mparams->kFactor() is the coefficient for stiffness contributions (i.e. DOFs term in the ODE); mparams->readDx() input vector . dfIdthe output vector . Implemented in sofa::core::behavior::PairInteractionForceField< TDataTypes >, sofa::core::behavior::PairInteractionForceField< DataTypes >, sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >, sofa::core::behavior::ForceField< TDataTypes >, sofa::core::behavior::ForceField< _DataTypes >, sofa::core::behavior::ForceField< T >, and sofa::core::behavior::ForceField< DataTypes >. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:19221,integrat,integrated,19221,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['integrat'],['integrated']
Integrability,"eHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; Parameters; virtual bool isActive () const;  The Context is active. More...;  ; virtual void setActive (bool);  State of the context. More...;  ; virtual bool isSleeping () const;  Sleeping state of the context. More...;  ; virtual bool canChangeSleepingState () const;  Whether the context can change its sleeping state or not. More...;  ; virtual SReal getTime () const;  Simulation time. More...;  ; virtual SReal getDt () const;  Simulation timestep. More...;  ; virtual bool getAnimate () const;  Animation flag. More...;  ; Containers; virtual core::BaseState * getState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual behavior::BaseMechanicalState * getMechanicalState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual core::topology::Topology * getTopology () const;  Topology. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopologyLink (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; virtual core::visual::Shader * getShader () const;  Global Shader. More...;  ; virtual void * getObject (const ClassInfo &class_info, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:3058,interface,interface,3058,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['interface'],['interface']
Integrability,"eTestCount () const;  ; const DetectionOutputMap & getDetectionOutputs () const;  ; DetectionOutputVector *& getDetectionOutputs (CollisionModel *cm1, CollisionModel *cm2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:4953,depend,dependent,4953,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,1,['depend'],['dependent']
Integrability,"ea &areas);  ; virtual void getConstraintResolution (std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; type::vector< std::string > getIdentifiers ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:5686,depend,dependent,5686,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,3,['depend'],['dependent']
Integrability,"eader.h>. Inheritance diagram for sofa::component::io::mesh::basevtkreader::BaseVTKReader:. [legend]. Classes; class  BaseVTKDataIO;  ; class  VTKDataIO;  . Public Attributes; BaseVTKDataIO * inputPoints;  ; BaseVTKDataIO * inputNormals;  ; BaseVTKDataIO * inputPolygons;  ; BaseVTKDataIO * inputCells;  ; BaseVTKDataIO * inputCellOffsets;  ; BaseVTKDataIO * inputCellTypes;  ; type::vector< BaseVTKDataIO * > inputPointDataVector;  ; type::vector< BaseVTKDataIO * > inputCellDataVector;  ; bool isLittleEndian;  ; int numberOfPoints;  ; int numberOfCells;  ; int numberOfLines;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions; BaseVTKDataIO * newVTKDataIO (const string &typestr);  ; BaseVTKDataIO * newVTKDataIO (const string &typestr, int num);  ;  BaseVTKReader ();  ; bool readVTK (const char *filename);  ; virtual bool readFile (const char *filename)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Ren",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html:1357,message,messages,1357,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,1,['message'],['messages']
Integrability,"eal > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_DOUBLE_EQ (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). tem",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3428,message,message,3428,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['message'],['message']
Integrability,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void hand",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:11786,depend,dependent,11786,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,5,['depend'],['dependent']
Integrability,"eal stiffness);  Set contact stiffness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange (core::topology::Topolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:11832,depend,dependent,11832,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,1,['depend'],['dependent']
Integrability,"earMappingData< HasStabilizedGeometricStiffness >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  ;  Protected Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, false >; SparseMatrixEigen m_jacobian;  Jacobian of the mapping. More...;  ;  Protecte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html:18525,message,messages,18525,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_square_mapping.html,1,['message'],['messages']
Integrability,"earMappingData< HasStabilizedGeometricStiffness >; void checkLinearSolverSymmetry (const core::MechanicalParams *mparams) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  ;  Static Public Member Functions inherited from sofa::core::Mapping< TIn, TOut >; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html:19440,message,messages,19440,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,1,['message'],['messages']
Integrability,"earest to a given point. Computes barycentric coordinates and a distance measure. More...;  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes));  ; void computeHexahedronAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; void computeHexahedronRestAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeHexahedronCenter (const HexaID h) const;  ; Coord computeHexahedronRestCenter (const HexaID h) const;  ; void getHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; void getRestHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; Real computeHexahedronVolume (const HexaID h) const;  computes the volume of hexahedron no h and returns it More...;  ; void computeHexahedronVolume (BasicArrayInterface< Real > &ai) const;  computes the hexahedron volume of all hexahedra are store in the array interface More...;  ; Real computeRestHexahedronVolume (const HexaID h) const;  computes the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:6323,interface,interface,6323,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"earsystem::ConstantSparsityProjectionMethod< TMatrix > Class Template Reference . #include <ConstantSparsityProjectionMethod.h>. Inheritance diagram for sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >:. [legend]; Detailed Description; template<class TMatrix>; class sofa::component::linearsystem::ConstantSparsityProjectionMethod< TMatrix >; Matrix projection method computing the matrix projection taking advantage of the constant sparsity pattern . Public Attributes; Data< bool > d_parallelProduct;  Compute the matrix product in parallel. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< linearalgebra::SparseMatrixProduct< K_Type, J_Type, KJ_Type > > m_matrixProductKJ;  ; std::unique_ptr< linearalgebra::SparseMatrixProduct< JT_Type, KJ_Type, JTKJ_Type > > m_matrixProductJTKJ;  ;  Protected Attributes inherited from sofa::component::linearsystem::MatrixProjectionMethod< TMatrix >; Data< bool > d_areJacobiansConstant;  True if mapping jacobians are considered constant over tim",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html:1348,message,messages,1348,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,1,['message'],['messages']
Integrability,"ect Class Referenceabstract . #include <ContextObject.h>; Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). ; More... Inheritance diagram for sofa::core::objectmodel::ContextObject:. [legend]; Detailed Description; Base class for simulation objects that modify the shared context (such as gravity, local coordinate system, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (ContextObject, BaseObject);  ; virtual void apply ()=0;  modify the Context More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html:1353,depend,dependent,1353,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context_object.html,1,['depend'],['dependent']
Integrability,"ect access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; Parameters Setters; virtual void setDt (SReal);  Simulation timestep. More...;  ; virtual void setAnimate (bool);  Animation flag. More...;  ; virtual void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:6978,wrap,wrapper,6978,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"ect access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:8074,wrap,wrapper,8074,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,3,['wrap'],['wrapper']
Integrability,"ect where the DOFs are stored. More...;  ; float getIndicesScale () const;  ; void initPointsAdded (const type::vector< sofa::Index > &indices, const type::vector< core::topology::PointAncestorElem > &ancestorElems, const type::vector< core::VecCoordId > &coordVecs, const type::vector< core::VecDerivId > &derivVecs) override;  Called by the state change callback to initialize added points according to the topology (topology element & local coordinates) More...;  ;  Public Member Functions inherited from sofa::core::topology::GeometryAlgorithms;  SOFA_CLASS (GeometryAlgorithms, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:17823,depend,dependent,17823,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,6,['depend'],['dependent']
Integrability,"ect. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html:9848,message,messages,9848,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_image_loader.html,1,['message'],['messages']
Integrability,"ect; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofaco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15604,integrat,integration,15604,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['integrat'],['integration']
Integrability,"ected . Function details. ◆ cleanup(). void sofa::component::odesolver::backward::EulerImplicitSolver::cleanup ; (; ). overridevirtual . Called just before deleting this object Any object in the tree below this object that are to be removed will be removed only after this call, so any references this object holds should still be valid. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getIntegrationFactor() [1/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. overridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order.; This method is used to compute the compliance for contact corrections. For example, a backward-Euler dynamic implicit integrator would use: Input: x_t v_t a_{t+dt} x_{t+dt} 1 dt dt^2 v_{t+dt} 0 1 dt; If the linear system is expressed on s = a_{t+dt} dt, then the final factors are: Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getIntegrationFactor() [2/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative, . SReal ; dt . ); const. ◆ getPositionIntegrationFactor() [1/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getPositionIntegrationFactor ; (; ); const. overridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the position; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt². ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getPositionIntegrationFactor() [2/2]. virtual SReal sofa::component::odesolver::backward::EulerImplicitSolver::getPositionIntegratio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:20403,integrat,integrator,20403,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['integrat'],['integrator']
Integrability,"ected Member Functions |; List of all members . sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType > Class Template Reference . #include <DisplacementMatrixEngine.h>. Inheritance diagram for sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >:. [legend]. Public Attributes; Data< VecCoord > d_x0;  Rest position. More...;  ; Data< VecCoord > d_x;  Current position. More...;  ; Data< type::vector< OutputType > > d_displacements;  Displacement transforms with respect to original rigid positions. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< OutputType > inverses;  inverse initial positions More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContex",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html:1294,message,messages,1294,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,1,['message'],['messages']
Integrability,"ection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; Parameters Setters; virtual void setDt (SReal);  Simulation timestep. More...;  ; virtual void setAnimate (bool);  Animation flag. More...;  ; virtual void setSleeping (bool);  Sleeping state of the context. More...;  ; virtual void setChangeSleepingState (bool);  Sleeping state change of the context. More...;  ; Variables Setters; virtual void setM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:7182,wrap,wrapper,7182,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"ection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:8278,wrap,wrapper,8278,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,3,['wrap'],['wrapper']
Integrability,"ectmodel::BaseContext::get ; (; const std::string & ; path); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [2/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [3/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [4/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or down from the current context. . ◆ get() [7/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; SearchDirection ; dir = SearchUp); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [8/15]. template<class T > . void sofa::core::objectmod",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:19878,wrap,wrapper,19878,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"ectmodel::Event *event)=0;  ; virtual void internalUpdate ();  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void computeZ ();  ; virtual bool isStereo ();  ; virtual void setCurrentSide (Side);  ; virtual Side getCurrentSide ();  ; virtual void setStereoEnabled (bool);  ; virtual bool getStereoEnabled ();  ; virtual void setStereoMode (StereoMode);  ; virtual StereoMode getStereoMode ();  ; virtual void setStereoStrategy (StereoStrategy);  ; virtual StereoStrategy getStereoStrategy ();  ; virtual void setStereoShift (double);  ; virtual double getStereoShift ();  ; void draw (const core::visual::VisualParams *) override;  Render internal data of this object, for debugging purposes. More...;  ; void computeClippingPlane (const core::visual::VisualParams *vp, double &zNear, double &zFar);  ; virtual void drawCamera (const core::visual::VisualParams *);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlav",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:9327,depend,dependent,9327,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,1,['depend'],['dependent']
Integrability,"ectmodel::RenamedData< Real > d21;  ; sofa::core::objectmodel::RenamedData< Real > max;  ; sofa::core::objectmodel::RenamedData< bool > f_update;  ; Data< VecCoord > d_points_1;  Points belonging to the first point cloud. More...;  ; Data< VecCoord > d_points_2;  Points belonging to the second point cloud. More...;  ; Data< Real > d_d12;  Distance from point cloud 1 to 2. More...;  ; Data< Real > d_d21;  Distance from point cloud 2 to 1. More...;  ; Data< Real > d_max;  Symmetrical Hausdorff distance. More...;  ; Data< bool > d_update;  Recompute every time step. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HausdorffDistance, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html:1919,message,messages,1919,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_hausdorff_distance.html,1,['message'],['messages']
Integrability,"ector< std::string > getIdentifiers ();  ; virtual void storeLambda (const ConstraintParams *cParams, MultiVecDerivId res, const sofa::linearalgebra::BaseVector *lambda)=0;  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:6082,depend,dependent,6082,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,1,['depend'],['dependent']
Integrability,"ed (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one time the graph. . ◆ isLocked(). bool sofa::gui::qt::SofaSceneGraphWidget::isLocked ; (; ). Returns true if the view updates for any scene graph change is disable. . ◆ lock(). void sofa::gui::qt::SofaSceneGraphWidget::lock ; (; ). ◆ lockingChanged. void sofa::gui::qt::SofaSceneGraphWidget::lockingChanged ; (; bool ; isLocked). signal . Connect to this signal to be notified when the locking status changed. . ◆ setViewToDirty(). void sofa::gui::qt::SofaSceneGraphWidget::setViewToDirty ; (; ). call this method to indicate that the internal model has changed and thus the view is now dirty. . ◆ unLock(). void sofa::gui::qt::SofaSceneGraphWidget::unLock ; (; ). sofaguiqtSofaSceneGraphWidget; Generated on Mon Nov 11 2024 03:25:43 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:1977,synchroniz,synchronized,1977,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,1,['synchroniz'],['synchronized']
Integrability,"ed Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:26417,message,message,26417,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"ed by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ groups. sofa::type::vector<core::objectmodel::BaseContext::SPtr> sofa::core::collision::CollisionGroupManager::groups. protected . integration groups . ◆ storedGroups. std::map<Instance,sofa::type::vector<core::objectmodel::BaseContext::SPtr> > sofa::core::collision::CollisionGroupManager::storedGroups. protected . Constructor details. ◆ ~CollisionGroupManager(). sofa::core::collision::CollisionGroupManager::~CollisionGroupManager ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ changeInstance(). void sofa::core::collision::CollisionGroupManager::changeInstance ; (; Instance ; inst). inlineoverrideprotectedvirtual . Implements sofa::core::collision::CollisionAlgorithm. ◆ clearGroups(). virtual void sofa::core::collision::CollisionGroupManager::clearGroups ; (; objectmodel::BaseContext * ; scene). pure virtual . Clear the integration groups. . ◆ createGroups(). virtual void sofa::core::collision::CollisionGroupManager::createGroups ; (; objectmodel::BaseContext * ; scene, . const sofa::type::vector< Contact::SPtr > & ; contacts . ). pure virtual . Create the integration groups. . ◆ getGroups(). virtual const sofa::type::vector<objectmodel::BaseContext::SPtr>& sofa::core::collision::CollisionGroupManager::getGroups ; (; ). inlinevirtual . Get the integration groups. . ◆ SOFA_ABSTRACT_CLASS(). sofa::core::collision::CollisionGroupManager::SOFA_ABSTRACT_CLASS ; (; CollisionGroupManager ; , . CollisionAlgorithm ;  . ). sofacorecollisionCollisionGroupManager; Generated on Mon Nov 11 2024 03:15:46 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:15406,integrat,integration,15406,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,3,['integrat'],['integration']
Integrability,"ed from sofa::core::objectmodel::BaseLink; unsigned int m_flags;  ; std::string m_name;  ; std::string m_help;  ; int m_counter;  Number of changes since creation. More...;  . Public Member Functions;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:2949,message,message,2949,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,1,['message'],['message']
Integrability,"ed from the rest to be able to use custom/optimized versions depending on the types of vectors. It computes: x += p*alpha, r -= q*alpha . ◆ cgstep_alpha() [2/3]. void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_alpha ; (; Vector & ; x, . Vector & ; p, . double ; alpha . ). inlineprotected . ◆ cgstep_alpha() [3/3]. void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_alpha ; (; Vector & ; x, . Vector & ; p, . double ; alpha . ). inlineprotected . ◆ cgstep_beta() [1/3]. template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< TMatrix, TVector >::cgstep_beta ; (; Vector & ; p, . Vector & ; r, . double ; beta . ). inlineprotected . This method is separated from the rest to be able to use custom/optimized versions depending on the types of vectors. It computes: p = p*beta + r . ◆ cgstep_beta() [2/3]. void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_beta ; (; Vector & ; p, . Vector & ; r, . double ; beta . ). inlineprotected . ◆ cgstep_beta() [3/3]. void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_beta ; (; Vector & ; p, . Vector & ; r, . double ; beta . ). inlineprotected . ◆ handleEvent(). template<class Matrix , class Vector > . void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< Matrix, Vector >::handleEvent ; (; sofa::core::objectmodel::Event * ; event). overrideprotected . ◆ init(). template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< TMa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_shewchuk_p_c_g_linear_solver.html:10229,depend,depending,10229,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_shewchuk_p_c_g_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_shewchuk_p_c_g_linear_solver.html,1,['depend'],['depending']
Integrability,"ed int > d_iterations;  Number of iterations. More...;  ; Data< Real > d_affineRatio;  Blending between affine and rigid. More...;  ; Data< Real > d_fixedweight;  weight of fixed particles. More...;  ; Data< VecCoord > d_fixedPosition0;  rest positions of non mechanical particles. More...;  ; Data< VecCoord > d_fixedPosition;  current (fixed) positions of non mechanical particles. More...;  ; Data< VecCoord > d_position;  Input positions. More...;  ; Data< VVI > d_cluster;  Input clusters. More...;  ; Data< VecCoord > d_targetPosition;  Computed target positions. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ShapeMatching, DataTypes), core::DataEngine);  ;  ShapeMatching ();  ;  ~ShapeMatching () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you p",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html:2225,message,messages,2225,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_shape_matching.html,1,['message'],['messages']
Integrability,"ed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< GLint > >; Data< type::vector< GLint > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html:13098,message,messages,13098,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_vector2_variable.html,4,['message'],['messages']
Integrability,"ed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html:12930,message,messages,12930,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_vector_variable.html,1,['message'],['messages']
Integrability,"edronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initLarge ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initPolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initPolar ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initSmall ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ integrateStiffness(). template<class DataTypes > . HexahedronFEMForceField< DataTypes >::Mat33 sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::integrateStiffness ; (; int ; signx0, . int ; signy0, . int ; signz0, . int ; signx1, . int ; signy1, . int ; signz1, . const Real ; u, . const Real ; v, . const Real ; w, . const Mat33 & ; J_1 . ). staticprotected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ setMethod(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTy",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:41026,integrat,integrateStiffness,41026,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Integrability,"eference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::engine::generate::JoinPoints< DataTypes > Class Template Reference . #include <JoinPoints.h>. Inheritance diagram for sofa::component::engine::generate::JoinPoints< DataTypes >:. [legend]. Public Attributes; Data< VecCoord > f_points;  Points. More...;  ; Data< Real > f_distance;  Distance to merge points. More...;  ; Data< VecCoord > f_mergedPoints;  Merged Points. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(JoinPoints, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member F",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html:1104,message,messages,1104,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_join_points.html,1,['message'],['messages']
Integrability,"egacyVTKReader Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::component::io::mesh::LegacyVTKReader Class Reference . Inheritance diagram for sofa::component::io::mesh::LegacyVTKReader:. [legend]. Public Member Functions; bool readFile (const char *filename) override;  ;  Public Member Functions inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader; BaseVTKDataIO * newVTKDataIO (const string &typestr);  ; BaseVTKDataIO * newVTKDataIO (const string &typestr, int num);  ;  BaseVTKReader ();  ; bool readVTK (const char *filename);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html:1137,depend,dependent,1137,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,1,['depend'],['dependent']
Integrability,"egend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Inval",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:1392,message,message,1392,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['message'],['message']
Integrability,"eginElts = VecCoord(), . const double & ; distMax = 0 . ). Add a 'from' element and recompute the map of distances. ; Parameters. eltthe point from which the distances are computed. ; beginEltsdistance until we stop propagating. ; distMaxdistance until we stop propagating. . ◆ canCreate(). template<class DataTypes > . template<class T > . static bool sofa::component::engine::analyze::Distances< DataTypes >::canCreate ; (; T *& ; obj, . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Pre-construction check method called by ObjectFactory.; This implementation read the object1 and object2 attributes and check if they are compatible with the input and output model types of this mapping. . ◆ computeDistanceMap(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::computeDistanceMap ; (; VecCoord ; beginElts = VecCoord(), . const double & ; distMax = 0 . ). Compute the distance map depending ion the distance type. ; Parameters. eltthe point from which the distances are computed. ; beginEltsdistance until we stop propagating. ; distMaxdistance until we stop propagating. . ◆ create(). template<class DataTypes > . template<class T > . static T::SPtr sofa::component::engine::analyze::Distances< DataTypes >::create ; (; T * ; , . core::objectmodel::BaseContext * ; context, . core::objectmodel::BaseObjectDescription * ; arg . ). inlinestatic . Construction method called by ObjectFactory.; This implementation read the object1 and object2 attributes to find the input and output models of this mapping. . ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ draw(). template<class DataTypes > . void sofa::component::engine::analyze::Distances< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:25541,depend,depending,25541,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['depend'],['depending']
Integrability,"egistry. ; In the TyepeInfoRegistry we can store different type of type info depending on how much the developer want to provide precise information (or not) on its data type.; MISSING indicates that there was absolutely no valid information to trust in an AbstractTypeInfo object.; NAMEONLY indicates that only the getName() and getTypeName() function are returning valid information.; COMPLETE indicates that all the function like size/getSize/etc... are implemented. . EnumeratorMISSING ; NAMEONLY ; COMPLETE . Function Documentation. ◆ addMultTransposeEigen(). template<typename LhsDeriv , typename RhsDeriv , typename Real > . void sofa::defaulttype::addMultTransposeEigen ; (; MapMapSparseMatrix< LhsDeriv > & ; lhs, . const Eigen::SparseMatrix< Real, Eigen::RowMajor > & ; jacobian, . const MapMapSparseMatrix< RhsDeriv > & ; rhs . ). Computes lhs += jacobian^T * rhs. . ◆ cleanup(). SOFA_DEFAULTTYPE_API void sofa::defaulttype::cleanup ; (; ). Clean up the resources used by the SofaDefaultType library, as well as its dependency: SofaHelper. . ◆ getAngular() [1/2]. template<sofa::Size N, typename T > . constexpr const RigidDeriv<N,T>::Rot& sofa::defaulttype::getAngular ; (; const RigidDeriv< N, T > & ; v). constexpr . ◆ getAngular() [2/2]. template<sofa::Size N, typename T > . constexpr RigidDeriv<N,T>::Rot& sofa::defaulttype::getAngular ; (; RigidDeriv< N, T > & ; v). constexpr . ◆ getLinear() [1/2]. template<sofa::Size N, typename T > . constexpr const RigidDeriv<N,T>::Pos& sofa::defaulttype::getLinear ; (; const RigidDeriv< N, T > & ; v). constexpr . ◆ getLinear() [2/2]. template<sofa::Size N, typename T > . constexpr RigidDeriv<N,T>::Pos& sofa::defaulttype::getLinear ; (; RigidDeriv< N, T > & ; v). constexpr . ◆ getTemplateAliasesMap(). TemplateAliasesMap& sofa::defaulttype::getTemplateAliasesMap ; (; ). ◆ getVCenter() [1/3]. template<sofa::Size N, typename T > . constexpr const RigidDeriv<N,T>::Pos& sofa::defaulttype::getVCenter ; (; const RigidDeriv< N, T > & ; v). co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:18029,depend,dependency,18029,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['depend'],['dependency']
Integrability,"ehavior::LinearSolver *linearSolver);  ; void solveSystem (core::behavior::LinearSolver *linearSolver);  ; void print (std::ostream &out, core::behavior::LinearSolver *linearSolver);  ;  SOFA_ATTRIBUTE_DEPRECATED_MECHANICALOPERATIONS_RESETSYSTEM () void m_resetSystem();  ;  SOFA_ATTRIBUTE_DEPRECATED_MECHANICALOPERATIONS_SETSYSTEMMBKMATRIX () void m_setSystemMBKMatrix(SReal mFact;  . Attribute details. ◆ bFact. SReal sofa::simulation::common::MechanicalOperations::bFact. ◆ cparams. core::ConstraintParams sofa::simulation::common::MechanicalOperations::cparams. ◆ ctx. core::objectmodel::BaseContext* sofa::simulation::common::MechanicalOperations::ctx. ◆ executeVisitor. VisitorExecuteFunc sofa::simulation::common::MechanicalOperations::executeVisitor. protected . ◆ hasShownMissingLinearSolverMap. std::map< core::objectmodel::BaseContext *, bool > sofa::simulation::common::MechanicalOperations::hasShownMissingLinearSolverMap. staticprotected . Store if the ""missing linear solver"" error message has already been shown for a given context. . ◆ kFact. SReal SReal sofa::simulation::common::MechanicalOperations::kFact. ◆ mparams. core::MechanicalParams sofa::simulation::common::MechanicalOperations::mparams. Constructor details. ◆ MechanicalOperations() [1/2]. sofa::simulation::common::MechanicalOperations::MechanicalOperations ; (; const core::MechanicalParams * ; mparams, . core::objectmodel::BaseContext * ; ctx, . bool ; precomputedTraversalOrder = false . ). ◆ MechanicalOperations() [2/2]. sofa::simulation::common::MechanicalOperations::MechanicalOperations ; (; const core::ExecParams * ; params, . core::objectmodel::BaseContext * ; ctx, . bool ; precomputedTraversalOrder = false . ). Function details. ◆ accFromF(). void sofa::simulation::common::MechanicalOperations::accFromF ; (; core::MultiVecDerivId ; a, . core::ConstMultiVecDerivId ; f . ). a = M^-1 . f ; Parameters. fa = M^-1 . f . ◆ addMBK_ToMatrix(). void sofa::simulation::common::MechanicalOperations::addMBK_ToMat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:7844,message,message,7844,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['message'],['message']
Integrability,"ehavior::OdeSolver::~OdeSolver ; (; ). overrideprotected . Function details. ◆ computeResidual(). virtual void sofa::core::behavior::OdeSolver::computeResidual ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). inlinevirtual . Compute the residual of the newton iteration; pos_t and vel_t are the position and velocities at the beginning of the time step the result is accumulated in Vecid::force() . ◆ getIntegrationFactor(). virtual SReal sofa::core::behavior::OdeSolver::getIntegrationFactor ; (; int ; , . int ;  . ); const. inlinevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order.; This method is used to compute the constraint corrections and adapt the resolution if using baumgart type scheme For example, a backward-Euler dynamic implicit integrator would use: Input: x_t v_t a_{t+dt} x_{t+dt} 1 dt dt^2 v_{t+dt} 0 1 dt; If the linear system is expressed on s = a_{t+dt} dt, then the final factors are: Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method.; FF: What is the meaning of the parameters ? ; Reimplemented in sofa::component::odesolver::backward::VariationalSymplecticSolver, sofa::component::odesolver::forward::RungeKutta4Solver, sofa::component::odesolver::forward::RungeKutta2Solver, sofa::component::odesolver::forward::EulerExplicitSolver, sofa::component::odesolver::forward::DampVelocitySolver, sofa::component::odesolver::forward::CentralDifferenceSolver, sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ getPositionIntegrationFactor(). virtual SReal sofa::core::behavior::OdeSolver::getPositionIntegrationFactor ; (; ); const. inlinevirtual . Given the solution dx of ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:15274,integrat,integrator,15274,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['integrat'],['integrator']
Integrability,"eimplemented in sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier. ◆ addTrianglesWarning() [1/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addTrianglesWarning ; (; const sofa::Size ; nTriangles, . const sofa::type::vector< Triangle > & ; trianglesList, . const sofa::type::vector< TriangleID > & ; trianglesIndexList . ). protected . Sends a message to warn that some triangles were added in this topology. ; See alsoaddTrianglesProcess . ◆ addTrianglesWarning() [2/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addTrianglesWarning ; (; const sofa::Size ; nTriangles, . const sofa::type::vector< Triangle > & ; trianglesList, . const sofa::type::vector< TriangleID > & ; trianglesIndexList, . const sofa::type::vector< sofa::type::vector< TriangleID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some triangles were added in this topology. ; See alsoaddTrianglesProcess . ◆ InciseAlongEdge(). int sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::InciseAlongEdge ; (; EdgeID ; edge, . int * ; createdPoints = nullptr . ). virtual . Duplicates the given edge. Only works if at least one of its points is adjacent to a border. ; Returnsthe number of newly created points, or -1 if the incision failed. . ◆ init(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ movePointsProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::movePointsProcess ; (; const sofa::type::vector< PointID > & ; id, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:34867,message,message,34867,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"el. More...;  ; virtual bool isTheOutputTopologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual bool checkTopologies ();  Method to check the topology mapping maps regarding the upper topology. More...;  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html:7483,depend,dependent,7483,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1linear_1_1_mesh2_point_topological_mapping.html,2,['depend'],['dependent']
Integrability,"eld, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:23368,integrat,integrateStiffness,23368,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['integrat'],['integrateStiffness']
Integrability,"ember Functions |; List of all members . sofa::component::playback::InputEventReader Class Reference . #include <InputEventReader.h>; InputEventReader Class. ; More... Inheritance diagram for sofa::component::playback::InputEventReader:. [legend]; Detailed Description; InputEventReader Class. ; Reads mouse Linux events from file /dev/input/eventX and propagate them as SOFA MouseEvents. . Public Member Functions;  SOFA_CLASS (InputEventReader, core::objectmodel::BaseObject);  ; void init () override;  SceneGraph callback initialization method. More...;  ; void handleEvent (core::objectmodel::Event *event) override;  handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader.html:1282,depend,dependent,1282,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_input_event_reader.html,1,['depend'],['dependent']
Integrability,"ement defined by its index More...;  ; class  TCollisionElementIterator;  Reference to an collision element defined by its index inside a given collision model. More...;  ; class  CollisionElementIterator;  Reference to an abstract collision element. More...;  ; class  CollisionElementActiver;  ; class  CollisionModel;  Abstract CollisionModel interface. More...;  ; class  ComponentLibrary;  An Generic Component of the Sofa Library. More...;  ; class  ComponentNameHelper;  ; class  ConstraintParams;  ; class  DataEngine;  from a set of Data inputs computes a set of Data outputs More...;  ; struct  DataTracker;  ; class  DataTrackerDDGNode;  A DDGNode with trackable input Data (containing a DataTracker) More...;  ; class  DataTrackerCallback;  ; class  DataTrackerFunctor;  ; class  DerivativeMatrix;  ; class  ExecParams;  Class gathering parameters use by most components methods, and transmitted by all visitors. More...;  ; struct  CleanupCheck;  ; class  Mapping;  Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. More...;  ; class  MatrixAccumulatorInterface;  ; class  MatrixAccumulatorIndexChecker;  ; class  ListMatrixAccumulator;  ; class  MechanicalParams;  Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. More...;  ; class  MechanicalStatesMatrixAccumulators;  ; class  Multi2Mapping;  Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. More...;  ; class  MultiMapping;  Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. More...;  ; class  TMultiVecId;  ; struct  StateVecAccessor;  Helper class to access vectors of a given type in a given State. More...;  ; struct  StateVecAccessor< Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:2981,interface,interface,2981,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['interface'],['interface']
Integrability,"emplate Reference . #include <MathOp.h>. Inheritance diagram for sofa::component::engine::transform::MathOp< VecT >:. [legend]; Detailed Description; template<class VecT>; class sofa::component::engine::transform::MathOp< VecT >; Apply a math operation to combine several inputs . Public Attributes; Data< unsigned int > f_nbInputs;  Number of input values. More...;  ; type::vector< Data< VecValue > * > vf_inputs;  ; sofa::core::objectmodel::Data< sofa::helper::OptionsGroup > f_op;  Selected operation to apply. More...;  ; Data< VecValue > f_output;  Output values. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MathOp, VecT), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pairs. M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html:1338,message,messages,1338,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_math_op.html,1,['message'],['messages']
Integrability,"en source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Static Public Member Functions |; List of all members . sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T > Class Template Reference . #include <BaseVTKReader.h>. Inheritance diagram for sofa::component::io::mesh::basevtkreader::BaseVTKReader::VTKDataIO< T >:. [legend]. Public Attributes; T * data;  ;  Public Attributes inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO; string name;  ; int dataSize;  ; int nestedDataSize;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  VTKDataIO ();  ;  ~VTKDataIO () override;  ; const void * getData () override;  ; void resize (int n) override;  ; void swap () override;  ; virtual bool read (const string &s, int n, int binary) override;  ; virtual bool read (const string &s, int binary) override;  ; virtual bool read (istream &in, int n, int binary) override;  ; virtual bool write (ofstream &out, int n, int groups, int binary) overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html:1152,message,messages,1152,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_v_t_k_data_i_o.html,1,['message'],['messages']
Integrability,"enceabstract . #include <BaseMaterial.h>. Inheritance diagram for sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial:. [legend]; Detailed Description; Generic material class . Public Member Functions;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeStress (type::Vec3 &, type::Vec3 &, unsigned int &);  ; virtual void computeDStress (type::Vec3 &, type::Vec3 &);  ; virtual void computeStress (unsigned int)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html:1410,depend,dependent,1410,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_base_material.html,1,['depend'],['dependent']
Integrability,"enerate::MergePoints< DataTypes >::f_indices2. Indices of the points of the second object. . ◆ f_noUpdate. template<class DataTypes > . Data<bool> sofa::component::engine::generate::MergePoints< DataTypes >::f_noUpdate. do not update the output at each time step (false) . ◆ f_points. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::MergePoints< DataTypes >::f_points. position coordinates resulting from the merge . ◆ f_X1. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::MergePoints< DataTypes >::f_X1. position coordinates of the degrees of freedom of the first object . ◆ f_X2. template<class DataTypes > . Data<VecCoord> sofa::component::engine::generate::MergePoints< DataTypes >::f_X2. Rest position coordinates of the degrees of freedom of the second object. . ◆ f_X2_mapping. template<class DataTypes > . Data<SetIndex> sofa::component::engine::generate::MergePoints< DataTypes >::f_X2_mapping. Mapping of indices to inject position2 inside position1 vertex buffer. . ◆ initDone. template<class DataTypes > . bool sofa::component::engine::generate::MergePoints< DataTypes >::initDone. Constructor details. ◆ MergePoints(). template<class DataTypes > . sofa::component::engine::generate::MergePoints< DataTypes >::MergePoints. protected . ◆ ~MergePoints(). template<class DataTypes > . sofa::component::engine::generate::MergePoints< DataTypes >::~MergePoints ; (; ). inlineoverrideprotected . Function details. ◆ doUpdate(). template<class DataTypes > . void sofa::component::engine::generate::MergePoints< DataTypes >::doUpdate ; (; ). overridevirtual . Where you put your engine's impl. ; Implements sofa::core::DataEngine. ◆ init(). template<class DataTypes > . void sofa::component::engine::generate::MergePoints< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ reinit().",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html:18083,inject,inject,18083,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,1,['inject'],['inject']
Integrability,"ent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUpdate. protected . ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::ModifyObject::data_. protected . ◆ dialogFlags_. const ModifyObjectFlags sofa::gui::qt::ModifyObject::dialogFlags_. protected . ◆ dialogTab. QTabWidget* sofa::gui::qt::ModifyObject::dialogTab. protected . ◆ Id_. void* sofa::gui::qt::ModifyObject::Id_. protected . ◆ item_. QTreeWidgetItem* sofa::gui::qt::ModifyObject::item_. protected . ◆ m_numMessages. int sofa::gui::qt::ModifyObject::m_numMessages. protected . ◆ m_tabs. std::vector< QTabulationModifyObject* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyObject::ModifyObject ; (; void * ; Id, . QTreeWidgetItem * ; item_clicked, . QWidget * ; parent, . const ModifyObjectFlags & ; dialogFlags, . const char * ; name = nullptr, . bool ; modal = false, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). explicit . ◆ ~ModifyObject(). sofa::gui::qt::ModifyObject::~ModifyObject ; (; ). inlineoverride . Function details. ◆ accept. void sofa::gui::qt::ModifyObject::accept ; (; ). overrideslot . ◆ beginDataModification. void sofa::gui::qt::ModifyObject::beginDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ beginObjectModification. void sofa::gui::qt::ModifyObject::beginObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ clearMessages. void sofa::gui::qt::ModifyObject::clearMessages ; (; ). protectedslot . ◆ closeEvent. void sofa::gui::qt::ModifyObject::closeEvent ; (; QCloseEvent * ; ). inlineove",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:3174,message,messageTab,3174,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['message'],['messageTab']
Integrability,"ent surfaces. More...;  ; virtual void drawShadow (const VisualParams *vparams);  Display shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:3002,depend,dependent,3002,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['depend'],['dependent']
Integrability,"ent::shader::OglMatrix4VectorVariable Class Reference . #include <OglVariable.h>. Inheritance diagram for sofa::gl::component::shader::OglMatrix4VectorVariable:. [legend]. Public Attributes; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< type::Mat4x4f > >; Data< type::vector< type::Mat4x4f > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OglMatrix4VectorVariable, OglVariable< type::vector< type::Mat4x4f > >);  ;  OglMatrix4VectorVariable ();  ; virtual ~OglMatrix4VectorVariable ();  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void pushValue () override;  ; virtual void setTranspose (const bool &v);  ;  Public Member Functions inherited from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html:1260,message,messages,1260,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix4_vector_variable.html,1,['message'],['messages']
Integrability,"ent::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >. ◆ initTextures(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::initTextures ; (; ). inlinevirtual . ◆ integrateMass(). template<class DataTypes > . HexahedronFEMForceFieldAndMass< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::integrateMass ; (; int ; signx, . int ; signy, . int ; signz, . Real ; l0, . Real ; l1, . Real ; l2 . ). ◆ isDiagonal(). template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::isDiagonal ; (; ); const. inlineoverridevirtual . Implements sofa::core::behavior::BaseMass. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >. ◆ setDensity(). template<class ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:39742,integrat,integrateMass,39742,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateMass']
Integrability,"entId) const;  . Protected Member Functions;  NonUniformHexahedralFEMForceFieldAndMass ();  ; virtual void computeMechanicalMatricesByCondensation (ElementStiffness &K, ElementMass &M, Real &totalMass, const int elementIndex);  condensate matrice from finest level to the actual mechanical level More...;  ; void initLarge (const int i);  ; void initPolar (const int i);  ; void addMBKdx (const core::MechanicalParams *mparams, core::MultiVecDerivId dfId) override;  ; virtual void computeCorrection (ElementMass &);  Limit the conditioning number of each mbkMatrix as defined by maxConditioning (in derived classes). More...;  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >;  HexahedralFEMForceFieldAndMass ();  ; virtual void computeElementMasses ();  compute the mass matrices More...;  ; Real integrateVolume (int signx, int signy, int signz, Real l0, Real l1, Real l2);  ; virtual void computeElementMass (ElementMass &Mass, Real &totalMass, const type::fixed_array< Coord, 8 > &nodes);  compute the mass matrix of an element More...;  ; void computeParticleMasses ();  ; void computeLumpedMasses ();  ;  Protected Member Functions inherited from sofa::core::behavior::Mass< DataTypes >;  Mass (MechanicalState< DataTypes > *mm=nullptr);  ;  ~Mass () override;  ;  Protected Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >;  ForceField (MechanicalState< DataTypes > *mm=nullptr);  ;  ~ForceField () override;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseForceField;  BaseForceField ();  ;  ~BaseForceField () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html:22469,integrat,integrateVolume,22469,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateVolume']
Integrability,"ented in children classes. More...;  ; virtual bool addTrianglesPreconditions (const sofa::type::vector< Triangle > &triangles);  Precondition to fulfill before adding triangles. No preconditions are needed in this class. This function should be implemented in children classes. More...;  ; virtual void addTrianglesPostProcessing (const sofa::type::vector< Triangle > &triangles);  : Postprocessing to apply to topology triangles. Nothing to do in this class. This function should be implemented in children classes. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:25952,message,message,25952,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"eometryState;  Link to be set to the MechanicalObject associated with the geometry. More...;  ; Data of mass information; Mass density of the object . Data< sofa::type::vector< MassType > > d_massDensity;  ; Data< MassType > d_totalMass;  Total mass of the object. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  . Protected Attributes; sofa::geometry::ElementType m_massTopologyType;  The type of topology to build the mass from the topology. More...;  ; Real m_massLumpingCoeff;  ; MeshMatrixMassInternalData< DataTypes, MassType, GeometricalTypes > data;  Inter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html:3714,message,messages,3714,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_mesh_matrix_mass.html,1,['message'],['messages']
Integrability,er – SOFA. SOFA - Topic Tag: Cpp controller. /cpp-make-error; . /feed; ; cpp make error – SOFA. SOFA - Topic Tag: cpp make error. /cpp-plugins; . /feed; ; cpp plugins – SOFA. SOFA - Topic Tag: cpp plugins. /crash; . /feed; ; crash – SOFA. SOFA - Topic Tag: crash. /crevice; . /feed; ; crevice – SOFA. SOFA - Topic Tag: crevice. /cube; . /feed; ; cube – SOFA. SOFA - Topic Tag: cube. /cuda; . /feed; ; Cuda – SOFA. SOFA - Topic Tag: Cuda. /cuda-benchmark; . /feed; ; CUDA Benchmark – SOFA. SOFA - Topic Tag: CUDA Benchmark. /cutfem; . /feed; ; cutFEM – SOFA. SOFA - Topic Tag: cutFEM. /cut-soft-body; . /feed; ; cut soft body – SOFA. SOFA - Topic Tag: cut soft body. /cutting; . /feed; ; cutting – SOFA. SOFA - Topic Tag: cutting. /cutting-simulation; . /feed; ; Cutting Simulation – SOFA. SOFA - Topic Tag: Cutting Simulation. /damping; . /feed; ; damping – SOFA. SOFA - Topic Tag: damping. /damping-force-field-integration; . /feed; ; damping force field integration – SOFA. SOFA - Topic Tag: damping force field integration. /damping-gravity-fallspeed-eulerimplicitsolver-constantforcefield; . /feed; ; Damping Gravity fallspeed EulerImplicitSolver ConstantForceField – SOFA. SOFA - Topic Tag: Damping Gravity fallspeed EulerImplicitSolver ConstantForceField. /data; . /feed; ; Data – SOFA. SOFA - Topic Tag: Data. /data-component; . /feed; ; Data Component – SOFA. SOFA - Topic Tag: Data Component. /datadisplay-pointdata-c; . /feed; ; DataDisplay pointData C++ – SOFA. SOFA - Topic Tag: DataDisplay pointData C++. /debian-package-cmake; . /feed; ; debian package cmake – SOFA. SOFA - Topic Tag: debian package cmake. /debug; . /feed; ; debug – SOFA. SOFA - Topic Tag: debug. /default-shader; . /feed; ; default shader – SOFA. SOFA - Topic Tag: default shader. /deformable; . /feed; ; deformable – SOFA. SOFA - Topic Tag: deformable. /deformable-object; . /feed; ; Deformable object – SOFA. SOFA - Topic Tag: Deformable object. /deformation; . /feed; ; deformation – SOFA. SOFA - Topic Tag: deforma,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:438990,integrat,integration,438990,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Integrability,"er. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor() [2/2]. SReal sofa::component::odesolver::backward::StaticSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative, . SReal ; dt . ); const. inline . ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::StaticSolver::getVelocityIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS2(). sofa::component::odesolver::backward::StaticSolver::SOFA_CLASS2 ; (; StaticSolver ; , . sofa::core::behavior::OdeSolver ; , . sofa::core::behavior::LinearSolverAccessor ;  . ). ◆ solve(). void sofa::component::odesolver::backward::StaticSolver::solve ; (; const sofa::core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. ◆ squared_increment_norms(). auto sofa::component::odesolver::backward::StaticSolver::squared_increment_norms ; (; ); const -> const std::vector<SReal> & . inline . The list of squared correction increment norms (dx.dot(dx) = ||dx||^2) of every newton iterations of the last solve call. . ◆ squared_residual_norms(). auto sofa::component::odesolver::backward::StaticSolver::squared_residual_norms ; (; ); const -> const std::vector<SReal> & . inline . The list of squared residual norms (r.dot(r) = ||r||^2) of every newton iterations of the last solve call. . sofacomponentodesolverbackwardStaticSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:21065,integrat,integration,21065,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['integrat'],['integration']
Integrability,"er. NodeSequence<sofa::core::visual::VisualManager> sofa::simulation::Node::visualManager. ◆ visualModel. NodeSequence<sofa::core::visual::VisualModel> sofa::simulation::Node::visualModel. Constructor details. ◆ Node(). sofa::simulation::Node::Node ; (; const std::string & ; name = """"). protected . ◆ ~Node(). sofa::simulation::Node::~Node ; (; ). overrideprotectedvirtual . Function details. ◆ addChild(). void sofa::simulation::Node::addChild ; (; BaseNode::SPtr ; node). finalvirtual . Pure Virtual method from BaseNode Add a child node ; Implements sofa::core::objectmodel::BaseNode. ◆ addListener(). void sofa::simulation::Node::addListener ; (; MutationListener * ; obj). virtual . ◆ addObject(). bool sofa::simulation::Node::addObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; obj, . sofa::core::objectmodel::TypeOfInsertion ; insertionLocation = sofa::core::objectmodel::TypeOfInsertion::AtEnd . ). finalvirtual . Add an object and return this. Detect the implemented interfaces and add the object to the corresponding lists. ; Add an object. Detect the implemented interfaces and add the object to the corresponding lists. ; Implements sofa::core::objectmodel::BaseNode. ◆ create() [1/2]. Node::SPtr sofa::simulation::Node::create ; (; const std::string & ; name). static . ◆ create() [2/2]. template<class RealObject > . Node::SPtr sofa::simulation::Node::create ; (; RealObject * ; , . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). static . ◆ createChild(). virtual Node::SPtr sofa::simulation::Node::createChild ; (; const std::string & ; nodeName). pure virtual . Create, add, then return the new child of this Node. ; Implemented in sofa::simulation::graph::DAGNode. ◆ doAddChild(). virtual void sofa::simulation::Node::doAddChild ; (; BaseNode::SPtr ; node). pure virtual . Delegate methods overridden in child classes Add a child node ; Implemented in sofa::simulation::graph::DAGNode. ◆ doAddObject(). bool sofa::simulation::Node::doAddObject ; (; sofa::core::ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:33766,interface,interfaces,33766,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interfaces']
Integrability,"er::dynamic::TriangleSetTopologyModifier::addTrianglesPreconditions ; (; const sofa::type::vector< Triangle > & ; triangles). protectedvirtual . Precondition to fulfill before adding triangles. No preconditions are needed in this class. This function should be implemented in children classes. . ◆ addTrianglesProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addTrianglesProcess ; (; const sofa::type::vector< Triangle > & ; triangles). protectedvirtual . Effectively Add some triangles. Test precondition and apply: ; Reimplemented in sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier. ◆ addTrianglesWarning() [1/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addTrianglesWarning ; (; const sofa::Size ; nTriangles, . const sofa::type::vector< Triangle > & ; trianglesList, . const sofa::type::vector< TriangleID > & ; trianglesIndexList . ). protected . Sends a message to warn that some triangles were added in this topology. ; See alsoaddTrianglesProcess . ◆ addTrianglesWarning() [2/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addTrianglesWarning ; (; const sofa::Size ; nTriangles, . const sofa::type::vector< Triangle > & ; trianglesList, . const sofa::type::vector< TriangleID > & ; trianglesIndexList, . const sofa::type::vector< sofa::type::vector< TriangleID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some triangles were added in this topology. ; See alsoaddTrianglesProcess . ◆ InciseAlongEdge(). int sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::InciseAlongEdge ; (; EdgeID ; edge, . int * ; createdPoints = nullptr . ). virtual . Duplicates the given edge. Only works if at least one of its points is adjacent to a border. ; Returnsthe number of newly created points, or -1 if the incision failed. . ◆ init(). vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:34304,message,message,34304,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"erence . #include <PointsFromIndices.h>. Inheritance diagram for sofa::component::engine::select::PointsFromIndices< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::engine::select::PointsFromIndices< DataTypes >; This class returns the points given a list of indices. . Public Attributes; Data< VecCoord > f_X;  Position coordinates of the degrees of freedom. More...;  ; Data< SetIndex > f_indices;  Indices of the points. More...;  ; Data< VecCoord > f_indices_position;  Coordinates of the points contained in indices. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PointsFromIndices, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices.html:1375,message,messages,1375,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_points_from_indices.html,1,['message'],['messages']
Integrability,"erence delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToData(). template<class WriteData , class Vector > . void sofa::testing::copyToData ; (; WriteData & ; d, . const Vector & ; v . ). Copy the Vector to the Data. They must have the same size. . ◆ createCoord(). template<class DataTypes > . DataTypes::Coord sofa::testing::createCoord ; (; const sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3905,message,message,3905,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['message'],['message']
Integrability,"erence. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::io::mesh::XMLVTKReader Class Reference . Inheritance diagram for sofa::component::io::mesh::XMLVTKReader:. [legend]. Public Member Functions; bool readFile (const char *filename) override;  ;  Public Member Functions inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader; BaseVTKDataIO * newVTKDataIO (const string &typestr);  ; BaseVTKDataIO * newVTKDataIO (const string &typestr, int num);  ;  BaseVTKReader ();  ; bool readVTK (const char *filename);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html:1158,depend,dependent,1158,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_x_m_l_v_t_k_reader.html,1,['depend'],['dependent']
Integrability,"erit. ; More... Inheritance diagram for sofa::core::visual::VisualModel:. [legend]; Detailed Description; An interface which all VisualModel inherit. ; This Interface is used for the VisualModel, which all visible objects must implement.; VisualModels are drawn by calling their draw method. The method update is used to recompute some internal data (such as normals) after the simulation has computed a new timestep.; Most VisualModel are bound by a Mapping to a BehaviorModel or MechanicalState. . Public Attributes; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VisualModel, objectmodel::BaseObject);  ; virtual void drawVisual (const VisualParams *) final;  Display the VisualModel object. More...;  ; void initVisual (const VisualParams *);  Initialize the textures, or other graphical resources. More...;  ; virtual void initVisual () final;  ; void updateVisual (const VisualParams *);  used to update the model if necessary. More...;  ; virtua",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html:1366,message,messages,1366,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_model.html,1,['message'],['messages']
Integrability,"erited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html:1940,depend,dependent,1940,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_algorithm.html,1,['depend'],['dependent']
Integrability,"erride;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html:8133,depend,dependent,8133,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_base_non_linear_mapping.html,1,['depend'],['dependent']
Integrability,"es > . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForceField ; (; SReal ; _ks = 100.0, . SReal ; _kd = 5.0 . ). protected . ◆ SpringForceField() [2/2]. template<class DataTypes > . sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::SpringForceField ; (; MechanicalState * ; object1, . MechanicalState * ; object2, . SReal ; _ks = 100.0, . SReal ; _kd = 5.0 . ). protected . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::SpringForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . Given the current pos",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html:31322,integrat,integrated,31322,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_spring_force_field.html,1,['integrat'],['integrated']
Integrability,"es >::addConstraint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< TDataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). inlineoverridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::AffineMovementProjectiveConstraint< DataTypes >::projectMatrix ; (; sofa::linearalgebra::BaseMatrix * ; , . unsigned ;  . ). overridevirtual . Project the given matrix (Experimental API). Replace M with PMP, where P is the projection matrix corresponding to the projectResponse method. Contrary to applyConstraint(), the diagonal blocks of the result are not reset t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:27545,interface,interface,27545,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"es >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html:19699,message,messages,19699,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mass.html,1,['message'],['messages']
Integrability,"es the direction, 0 doesn't draw arrow More...;  ; SingleLink< LinearForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; LinearForceFieldInternalData< DataTypes > * data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html:2195,message,messages,2195,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_linear_force_field.html,1,['message'],['messages']
Integrability,"es |; Public Member Functions |; List of all members . sofa::core::objectmodel::BaseLink Class Referenceabstract . #include <BaseLink.h>; Abstract base class for all links in the scene grapn, independently of their type. ; More... Inheritance diagram for sofa::core::objectmodel::BaseLink:. [legend]; Detailed Description; Abstract base class for all links in the scene grapn, independently of their type. . Classes; class  BaseInitLink;  This internal class is used by the initLink() methods to store initialization parameters of a Data. More...;  ; class  InitLink;  This internal class is used by the initLink() methods to store initialization parameters of a Data. More...;  . Public Member Functions;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; virtual Base * getOwnerBase () const =0;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; virtual const BaseClass * getDestClass () const =0;  ; virtual const BaseClass * getOwnerClass () const =0;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; virtual size_t getSize () const =0;  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; Serialization API; bool read (const std::stri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:1166,message,message,1166,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['message'],['message']
Integrability,esistance-in-a-simple-model; ; SOFA - Topic: [SOLVED] How to implement mechanical resistance in a simple model. /how-to-import-numpy-is-python-scripting-of-sofa; ; SOFA - Topic: [SOLVED] How to import numpy in python scripting of SOFA?. /how-to-import-sofa-in-softrobot; ; SOFA - Topic: How to import sofa in SoftRobot. /how-to-import-volume-mesh-from-matlab-iso2mesh-toolkit; ; SOFA - Topic: [SOLVED] How to import volume mesh from Matlab iso2mesh toolkit?. /how-to-incise-3d-object; . /page; . /10; ; SOFA - Topic: [SOLVED] How to incise 3d object. /11; ; SOFA - Topic: [SOLVED] How to incise 3d object. /3; ; SOFA - Topic: [SOLVED] How to incise 3d object. /5; ; SOFA - Topic: [SOLVED] How to incise 3d object. SOFA - Topic: [SOLVED] How to incise 3d object. /how-to-increase-fps-of-a-scene-including-more-than-20000-tetrahedral-mesh; ; SOFA - Topic: [SOLVED] How to increase FPS of a scene including more than 20000 tetrahedral mesh. /how-to-integrate-the-new-fem-methods-into-sofa-engine; ; SOFA - Topic: How to integrate the new FEM methods into SOFA engine. /how-to-interact-with-3d-deformable-objects-in-sofa; ; SOFA - Topic: How to interact with 3D deformable objects in SOFA. /how-to-know-the-collision-force-or-energy; ; SOFA - Topic: How to know the collision force or energy. /how-to-learn-mesh-editing-programming; . /feed; ; [SOLVED] How to learn mesh editing programming? – SOFA. SOFA - Topic: [SOLVED] How to learn mesh editing programming?. /how-to-learn-using-sofa; ; SOFA - Topic: How to learn using SOFA. /how-to-look-at-the-example-of-the-source-codec; ; SOFA - Topic: [SOLVED] How to look at the example of the source code(c++) ?. /how-to-make-a-6dof-simulation-act-like-a-4dof-make-3d-act-like-2d-simulation; ; SOFA - Topic: How to make a 6DOF simulation act like a 4DOF (make 3d act like 2d simulation)?. /how-to-make-a-modal-analysis; ; SOFA - Topic: how to: Make a modal analysis. /how-to-make-a-pythonscript-controller-with-sofapython3; ; SOFA - Topic: [SOLVED] How to make,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:324707,integrat,integrate-the-new-fem-methods-into-sofa-engine,324707,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['integrat'],"['integrate', 'integrate-the-new-fem-methods-into-sofa-engine']"
Integrability,"essor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::Constraint< DataTypes >; template<class T > ; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html:17849,message,messages,17849,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_fixed_lagrangian_constraint.html,2,['message'],['messages']
Integrability,"est Tetrahedron to triangles cross container concistency. More...;  ; bool checkTetrahedronToEdgeCrossContainer ();  Method to test Tetrahedron to edges cross container concistency. More...;  ; bool checkTetrahedronToVertexCrossContainer ();  Method to test Tetrahedron to vertices cross container concistency. More...;  ; bool checkHexahedronTopology ();  } More...;  ; bool checkHexahedronContainer ();  Method to test Hexahedron container concistency. More...;  ; bool checkHexahedronToQuadCrossContainer ();  Method to test Hexahedron to quads cross container concistency. More...;  ; bool checkHexahedronToEdgeCrossContainer ();  Method to test Hexahedron to edges cross container concistency. More...;  ; bool checkHexahedronToVertexCrossContainer ();  Method to test Hexahedron to vertices cross container concistency. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html:6277,depend,dependent,6277,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_checker.html,1,['depend'],['dependent']
Integrability,"et;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ; virtual void projectMatrix (sofa::linearalgebra::BaseMatrix *, unsigned);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:8702,depend,dependent,8702,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,2,['depend'],['dependent']
Integrability,"etActive (bool);  State of the context. More...;  ; virtual bool isSleeping () const;  Sleeping state of the context. More...;  ; virtual bool canChangeSleepingState () const;  Whether the context can change its sleeping state or not. More...;  ; virtual SReal getTime () const;  Simulation time. More...;  ; virtual SReal getDt () const;  Simulation timestep. More...;  ; virtual bool getAnimate () const;  Animation flag. More...;  ; Containers; virtual core::BaseState * getState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual behavior::BaseMechanicalState * getMechanicalState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual core::topology::Topology * getTopology () const;  Topology. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopologyLink (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; virtual core::visual::Shader * getShader () const;  Global Shader. More...;  ; virtual void * getObject (const ClassInfo &class_info, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:3245,interface,interface,3245,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['interface'],['interface']
Integrability,"etLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html:10038,message,messages,10038,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_constraint_attach_button_setting.html,1,['message'],['messages']
Integrability,"etMeshTopologyLink(). sofa::core::topology::BaseMeshTopology * sofa::simulation::graph::DAGNode::getMeshTopologyLink ; (; SearchDirection ; dir = SearchUp); const. overridevirtual . Mesh Topology that is relevant for this context (within it or its parents until a mapping is reached that does not preserve topologies). ; Reimplemented from sofa::simulation::Node. ◆ getNbParents(). size_t sofa::simulation::graph::DAGNode::getNbParents ; (; ); const. overridevirtual . returns number of parents ; Implements sofa::core::objectmodel::BaseNode. ◆ getObject() [1/2]. void * sofa::simulation::graph::DAGNode::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridevirtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type,; Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObject() [2/2]. void * sofa::simulation::graph::DAGNode::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridevirtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObjects(). void sofa::simulation::graph::DAGNode::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridevirtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:37209,wrap,wrapper,37209,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['wrap'],['wrapper']
Integrability,"etailed Description; template<class _T>; class sofa::component::engine::select::SelectConnectedLabelsROI< _T >; Select a subset of points or cells labeled from different sources, that are connected given a list of connection pairs . Public Attributes; Data< unsigned int > d_nbLabels;  number of label lists More...;  ; core::objectmodel::vectorData< VecVLabels > d_labels;  ; Data< type::vector< T > > d_connectLabels;  Pairs of label to be connected across different label lists. More...;  ; Data< type::vector< sofa::Index > > d_indices;  selected point/cell indices More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SelectConnectedLabelsROI, _T), DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ;  SelectConnectedLabelsROI ();  ;  ~SelectConnectedLabelsROI () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i.html:1524,message,messages,1524,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_select_connected_labels_r_o_i.html,1,['message'],['messages']
Integrability,"ethod.h>; Abstract base class for ordering methods in sparse linear solvers. ; More... Inheritance diagram for sofa::core::behavior::BaseOrderingMethod:. [legend]; Detailed Description; Abstract base class for ordering methods in sparse linear solvers. ; A permutation is computed and applied on a sparse matrix to improve the computation time when solving a linear system. . Classes; struct  SparseMatrixPattern;  . Public Member Functions;  ~BaseOrderingMethod () override;  ; virtual void computePermutation (const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation)=0;  ; virtual std::string methodName () const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html:1425,depend,dependent,1425,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_ordering_method.html,1,['depend'],['dependent']
Integrability,"etrahedronDegree;  order of Bezier tetrahedra More...;  ; Data< Real > f_radius;  input cylinder radius More...;  ; Data< Real > f_height;  input cylinder height More...;  ; Data< Coord > f_origin;  cylinder origin point More...;  ; Data< bool > f_openSurface;  if the cylinder is open at its 2 ends More...;  ; Data< size_t > f_resolutionCircumferential;  Resolution in the circumferential direction. More...;  ; Data< size_t > f_resolutionRadial;  Resolution in the radial direction. More...;  ; Data< size_t > f_resolutionHeight;  Resolution in the height direction. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GenerateCylinder, DataTypes), core::DataEngine);  ;  GenerateCylinder ();  ;  ~GenerateCylinder () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Wh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder.html:2754,message,messages,2754,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_cylinder.html,1,['message'],['messages']
Integrability,"f outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< void * >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< void * >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inherited from sofa::core::obje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html:11703,message,message,11703,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_topology_data.html,1,['message'],['message']
Integrability,"f the set of paths. More...;  ; void clear ();  Remove all known paths. More...;  ; std::string getFirstPath ();  Get the first path into the set of paths. More...;  ; const std::vector< std::string > & getPaths () const;  ; const std::string getPathsJoined ();  ; const std::string & getDirectAccessProtocolPrefix () const;  ; void setDirectAccessProtocolPrefix (const std::string &protocolPrefix);  ; bool findFile (std::string &filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; std::string getFile (std::string filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; bool findFileFromFile (std::string &filename, const std::string &basefile, std::ostream *errlog=&std::cerr);  ; void print ();  Print the list of path to std::cout. More...;  ; void displayPaths () const;  ; const std::string getTempPath () const;  . Static Public Member Functions; static std::string cleanPath (const std::string &path);  ; static std::string relativeToPath (std::string path, std::string refPath);  ; static char entrySeparator ();  OS-dependant character separating entries in list of paths. More...;  . Static Protected Member Functions; static bool findFileIn (std::string &filename, const std::string &path);  Search file in a given path. More...;  . Friends; std::ostream & operator<< (std::ostream &_flux, FileRepository _fr);  Display all current sofa search paths. More...;  . Attribute details. ◆ directAccessProtocolPrefix. std::string sofa::helper::system::FileRepository::directAccessProtocolPrefix. protected . A protocol like http: or file: which will bypass the file search if found in the filename of the findFile* functions that directly returns the path as if the function succeeded Use case: add the prefix ram: as the direct protocol, this way the FileRepository will not try to look for the file on the hard disk and will directly return then the inherited FileAccess singleton enhanced with the capacity to find ram file will deliver a corr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:3069,depend,dependant,3069,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['depend'],['dependant']
Integrability,"fa::component::sceneutility::AddPluginRepository:. [legend]; Detailed Description; Add a new path to PluginRepository. . Public Member Functions;  SOFA_CLASS (AddPluginRepository, BaseAddResourceRepository);  ;  Public Member Functions inherited from sofa::component::sceneutility::BaseAddResourceRepository;  SOFA_ABSTRACT_CLASS (BaseAddResourceRepository, sofa::core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool updateRepositoryPath ();  ; void cleanup () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository.html:1507,depend,dependent,1507,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_plugin_repository.html,1,['depend'],['dependent']
Integrability,"fault constructor does not initialize the transform. . ◆ Transform() [2/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const Vec & ; origin, . const Rot & ; orientation . ). Origin of the child in parent coordinates, orientation of the child wrt to parent. ; Define using standard conventions. . ◆ Transform() [3/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const Rot & ; q, . const Vec & ; o . ). WARNING: using Featherstone's conventions (see class documentation) ; Define using Featherstone's conventions. . ◆ Transform() [4/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const SpatialVector< TReal > & ; v). Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) ; Define as a given SpatialVector integrated during one second. The spatial vector is given in parent coordinates.; Define child as a given SpatialVector<TReal> integrated during one second, starting from the parent (used for time integration). The spatial vector is given in parent coordinates. . Function details. ◆ backProjectPoint(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectPoint ; (; const Vec & ; pointInParent); const. Project point from parent coordinates to this coordinates. . ◆ backProjectVector(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectVector ; (; const Vec & ; vectorInParent); const. Projected a vector (i.e. a direction or a displacement) from parent coordinates to child coordinates. . ◆ clear(). template<class TReal > . void sofa::type::Transform< TReal >::clear. Reset this to identity. . ◆ CreateSpatialVector(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::CreateSpatialVector. Project a spatial vector from child to parent TODO One should handle differently the transformation of a twist and a wrench ! This applying the adjoint to velocities or its tran",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:6762,integrat,integrated,6762,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,2,['integrat'],"['integrated', 'integration']"
Integrability,"fault value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Protected Attributes; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the Topology this TopologyData is depending on. More...;  ; Index m_lastElementIndex;  ;  Protected Attributes inherited from sofa::core::objectmodel::Data< T >; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions;  TopologyData (const typename sofa::core::topology::BaseTopologyData< VecT >::InitData &data);  Constructor. More...;  ;  ~TopologyData ();  Default Destructor. More...;  ; virtual void createTopologyHandler (sofa::core::topology::BaseMeshTopology *_topology);  Function to create topology handler to manage this Data. More...;  ; void linkToPointDataArray ();  Link Data to topology arrays. More...;  ; void linkToEdgeDataArray ();  Method used to link Data to edge Data array, using the TopologyHandler's method.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:2604,depend,depending,2604,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,1,['depend'],['depending']
Integrability,"fault. ; Reimplemented in sofa::core::objectmodel::Context. ◆ executeVisitor(). void sofa::core::objectmodel::BaseContext::executeVisitor ; (; simulation::Visitor * ; , . bool ; precomputedOrder = false . ). virtual . apply an action ; Reimplemented in sofa::simulation::Node. ◆ get() [1/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const std::string & ; path); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [2/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [3/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [4/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:19537,wrap,wrapper,19537,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,fferent views in sofa. /setting-a-convenient-environment-for-sofa-development; . /feed; ; [SOLVED] Setting a convenient environment for SOFA development – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Setting a convenient environment for SOFA development. /4; ; SOFA - Topic: [SOLVED] Setting a convenient environment for SOFA development. SOFA - Topic: [SOLVED] Setting a convenient environment for SOFA development. /setting-camera-position-orientation-with-sofapython; ; SOFA - Topic: Setting camera position/orientation with SofaPython. /setting-the-fixedcontraint-to-a-surface-mesh; ; SOFA - Topic: [SOLVED] Setting the FixedContraint to a surface mesh. /setting-up-help; ; SOFA - Topic: Setting up help. /setting-up-out-of-tree-build-sofapython-3-plugin; ; SOFA - Topic: Setting up out-of-tree build & SofaPython 3 plugin. /set-up-camera-following-a-tool-in-the-scene; ; SOFA - Topic: [SOLVED] set up camera following a tool in the scene. /shadows-depend-on-absolute-scale-of-object; ; SOFA - Topic: [SOLVED] Shadows depend on absolute scale of object?. /sig-11-sigsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulatin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:385938,depend,depend-on-absolute-scale-of-object,385938,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['depend'],"['depend', 'depend-on-absolute-scale-of-object']"
Integrability,"fficiently by just swapping pointers.; In addition to state vectors, the current constraint system matrix is also stored, containing the coefficient of each constraint defined over the DOFs in this body. . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(MechanicalState, TDataTypes), BaseMechanicalState, SOFA_TEMPLATE(State, TDataTypes));  ; Size getCoordDimension () const override;  ; Size getDerivDimension () const override;  ; virtual void getIndicesInSpace (sofa::type::vector< Index > &, Real, Real, Real, Real, Real, Real) const =0;  Get the indices of the particles located in the given bounding box. More...;  ; void copyToBuffer (SReal *dst, ConstVecId src, unsigned n) const override;  ; void copyFromBuffer (VecId dst, const SReal *src, unsigned n) override;  ; void addFromBuffer (VecId dst, const SReal *src, unsigned n) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseMechanicalState;  SOFA_ABSTRACT_CLASS (BaseMechanicalState, BaseState);  ;  SOFA_BASE_CAST_IMPLEMENTATION (BaseMechanicalState);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ; virtual void beginIntegration (SReal);  Called at the beginning of each integration step. More...;  ; virtual void endIntegration (const ExecParams *params, SReal);  Called at the end of each integration step. More...;  ; virtual void resetForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Set F = 0. More...;  ; virtual void resetAcc (const ExecParams *params, VecDerivId a=VecDerivId::dx());  Set Acc =0. More...;  ; virtual void accumulateForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Add stored external forces to F. More...;  ; virtual void resetConstraint (const ConstraintParams *params)=0;  Reset the constraint matrix. More...;  ; virtual void getConstraintJaco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:3592,integrat,integration,3592,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['integrat'],['integration']
Integrability,"for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::loader::VoxelLoader Class Referenceabstract . #include <VoxelLoader.h>. Inheritance diagram for sofa::core::loader::VoxelLoader:. [legend]. Public Attributes; Data< type::vector< sofa::type::Vec3 > > positions;  Coordinates of the nodes loaded. More...;  ; Data< type::vector< Hexahedron > > hexahedra;  Hexahedra loaded. More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (VoxelLoader, BaseLoader);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, const type::fixed_array< unsigned int, 8 > &p);  ; void addHexahedron (type::vector< Hexahedron > *pHexahedra, unsigned int p0, unsigned int p1, unsigned int p2, unsigned int p3, unsigned int p4, unsigned int p5, unsigned int p6, unsigned int p7);  ; virtual type::Vec3 getVoxelSize () const =0;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html:1123,message,messages,1123,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_voxel_loader.html,1,['message'],['messages']
Integrability,"for sofa::component::sceneutility::AddDataRepository:. [legend]; Detailed Description; Add a new path to DataRepository. . Public Member Functions;  SOFA_CLASS (AddDataRepository, BaseAddResourceRepository);  ;  Public Member Functions inherited from sofa::component::sceneutility::BaseAddResourceRepository;  SOFA_ABSTRACT_CLASS (BaseAddResourceRepository, sofa::core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool updateRepositoryPath ();  ; void cleanup () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html:1495,depend,dependent,1495,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_add_data_repository.html,1,['depend'],['dependent']
Integrability,"for sofa::helper::logging::ComponentInfo:. [legend]; Detailed Description; The base class to keep track of information associated with a message. A component info object have a sender method to return the name string identifying the sender of a message. . Protected Attributes; std::string m_sender;  . Public Member Functions;  ComponentInfo ();  ;  ComponentInfo (const std::string &name);  ; virtual ~ComponentInfo ();  ; const std::string & sender () const;  Returns a string identifying the sender of a message. More...;  ; virtual std::ostream & toStream (std::ostream &out) const;  . Friends; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  . Attribute details. ◆ m_sender. std::string sofa::helper::logging::ComponentInfo::m_sender. protected . Constructor details. ◆ ComponentInfo() [1/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; ). ◆ ComponentInfo() [2/2]. sofa::helper::logging::ComponentInfo::ComponentInfo ; (; const std::string & ; name). ◆ ~ComponentInfo(). sofa::helper::logging::ComponentInfo::~ComponentInfo ; (; ). virtual . Function details. ◆ sender(). const std::string & sofa::helper::logging::ComponentInfo::sender ; (; ); const. Returns a string identifying the sender of a message. . ◆ toStream(). std::ostream & sofa::helper::logging::ComponentInfo::toStream ; (; std::ostream & ; out); const. virtual . Write a textual version of the content of the ComponentInfo. You should override this function when inheriting from the ComponentInfo base class. ; Reimplemented in sofa::helper::logging::SofaComponentInfo. Related details. ◆ operator<< [1/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). friend . ◆ operator<< [2/2]. std::ostream& operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). friend . sofahelperloggingComponentInfo; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html:1648,message,message,1648,api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1logging_1_1_component_info.html,1,['message'],['message']
Integrability,"form damping for the all springs More...;  ; SingleLink< QuadularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< sofa::type::vector< EdgeInformation > > edgeInfo;  Internal edge data. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ; bool updateMatrix;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html:2102,message,messages,2102,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_quadular_bending_springs.html,1,['message'],['messages']
Integrability,"fully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RequiredPlugin, core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadPlugin ();  load a list of plugins requested in Data More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  S",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:2025,message,messages,2025,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['message'],['messages']
Integrability,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; GLint m_lightID;  ; GLuint m_shadowTexWidth;  ; GLuint m_shadowTexHeight;  ; std::unique_ptr< sofa::gl::FrameBufferObject > m_shadowFBO;  ; std::unique_ptr< sofa::gl::FrameBufferObject > m_blurHFBO;  ; std::unique_ptr< sofa::gl::FrameBufferObject > m_blurVFBO;  ; OglShader::SPtr m_depthShader;  ; OglShader::SPtr m_blurShader;  ; GLfloat m_lightMatProj [16];  ; GLfloat m_lightMatModelview [16];  ; bool b_need",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html:2548,message,messages,2548,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light.html,1,['message'],['messages']
Integrability,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DirectionalLight, Light);  ;  DirectionalLight ();  ;  ~DirectionalLight () override;  ; void preDrawShadow (core::visual::VisualParams *vp) override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html:2256,message,messages,2256,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_directional_light.html,1,['message'],['messages']
Integrability,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PositionalLight, Light);  ;  PositionalLight ();  ;  ~PositionalLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *) override;  Draw the light source from an exter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html:2398,message,messages,2398,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_positional_light.html,1,['message'],['messages']
Integrability,"g;  [Shadowing] (VSM only) Light bleeding parameter More...;  ; Data< float > d_VSMMinVariance;  [Shadowing] (VSM only) Minimum variance parameter More...;  ; Data< unsigned short > d_textureUnit;  [Shadowing] Texture unit for the generated shadow texture More...;  ; Data< type::vector< float > > d_modelViewMatrix;  [Shadowing] ModelView Matrix More...;  ; Data< type::vector< float > > d_projectionMatrix;  [Shadowing] Projection Matrix More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SpotLight, PositionalLight);  ;  SpotLight ();  ;  ~SpotLight () override;  ; void drawLight (const core::visual::VisualParams *vparams) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void drawSource (const core::visual::VisualParams *vparams) override;  Draw the light source from an extern",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html:2803,message,messages,2803,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_spot_light.html,1,['message'],['messages']
Integrability,"gend]. Public Member Functions;  SOFA_ABSTRACT_CLASS (SceneLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; virtual bool load ()=0;  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:1448,depend,dependent,1448,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,1,['depend'],['dependent']
Integrability,"generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:14686,depend,dependent,14686,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,2,['depend'],['dependent']
Integrability,"generally called before the deleteVisitor). More...;  ; virtual void fwdDraw (VisualParams *);  Called before objects in the current branch are displayed. More...;  ; virtual void bwdDraw (VisualParams *);  Called after objects in the current branch are displayed. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:12634,depend,dependent,12634,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['depend'],['dependent']
Integrability,"ges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:22012,message,message,22012,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,"gging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::logging::Message::Class. class of messages . EnumeratorDev ; Runtime ; Log ; CEmpty ; ClassCount . ◆ Type. enum sofa::helper::logging::Message::Type. possible levels of messages (ordered) . EnumeratorInfo ; Advice ; Deprecated ; Warning ; Error ; Fatal ; TEmpty ; TypeCount . sofahelperloggingMessage; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3868,message,messageAsString,3868,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,3,['message'],"['messageAsString', 'messages']"
Integrability,"gister the scene in our GUI. More...;  ; void resetScene ();  ; int mainLoop () override;  ; void redraw () override;  Update the GUI. More...;  ; int closeGUI () override;  Close the GUI. More...;  ; sofa::simulation::Node * currentSimulation () override;  Get the rootNode of the sofa scene. More...;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPath (const std::string &);  ; virtual void initViewer (BaseViewer *);  ; virtual void setViewerConfiguration (sofa::component::setting::ViewerSetting *);  ; virtual void setViewerResolution (int, int);  ; virtual void setFullScreen ();  ; virtual void centerWindow ();  ; virtual void setBackgroundColor (const sofa::type::RGBAColor &);  ; virtual void setBackgroundImage (const std::string &);  ; virtual BaseViewer * getViewer ();  ; virtual void registerViewer (BaseViewer *);  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *);  ; virtual void stepMainLoop ();  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  ; virtual void showFPS (double);  Force the displayed FPS value (if any) More...;  . Protected Member Functions;  ~BatchGUI () override;  The destructor should not be called directly. Use the closeGUI() method instead. More...;  ; void startDumpVisitor ();  ; void stopDumpVisitor ();  ; void exportJson (const std::string &timerOutputStr, int iterationNumber) const;  Export a text file (with json extension) containing the timer output string. More...;  ;  Protected Member Fun",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html:2783,message,message,2783,api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1batch_1_1_batch_g_u_i.html,1,['message'],['message']
Integrability,"given a set of required tags, possibly searching up or down from the current context. . ◆ get() [4/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or down from the current context. . ◆ get() [7/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; SearchDirection ; dir = SearchUp); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [8/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = Searc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:20535,wrap,wrapper,20535,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"gle > > f_triangles;  Triangle topology (list of BaseMeshTopology::Triangle) More...;  ; Data< VecCoord > f_extrusionVertices;  Position coordinates of the extrusion. More...;  ; Data< VecCoord > f_surfaceVertices;  Position coordinates of the surface. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Triangle > > f_extrusionTriangles;  Subset triangle topology used for the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::TriangleID > > f_surfaceTriangles;  Indices of the triangles of the surface to extrude. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeSurface, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html:1913,message,messages,1913,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_surface.html,1,['message'],['messages']
Integrability,"gs is added to the global matrix. More...;  ; Data< bool > d_applyProjectiveConstraints;  If true, projective constraints are applied on the global matrix. More...;  ; Data< bool > d_applyMappedComponents;  If true, mapped components contribute to the global matrix. More...;  ; Data< bool > d_checkIndices;  If true, indices are verified before being added in to the global matrix, favoring security over speed. More...;  ; Data< bool > d_parallelAssemblyIndependentMatrices;  If true, independent matrices (global matrix vs mapped matrices) are assembled in parallel. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::tuple< LocalMatrixMaps< Contribution::STIFFNESS, Real >, LocalMatrixMaps< Contribution::MASS, Real >, LocalMatrixMaps< Contribution::DAMPING, Real >, LocalMatrixMaps< Contribution::GEOMETRIC_STIFFNESS, Real > > m_localMatrixMaps;  ; std::map< BaseForceField *, core::behavior::StiffnessMatrix > m_stiffness;  ; std::map< BaseForceField *, core::behavior::DampingMatrix > m_damping;  ; std::map< BaseMapping",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html:2912,message,messages,2912,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,1,['message'],['messages']
Integrability,"gs is added to the global matrix. More...;  ; Data< bool > d_applyProjectiveConstraints;  If true, projective constraints are applied on the global matrix. More...;  ; Data< bool > d_applyMappedComponents;  If true, mapped components contribute to the global matrix. More...;  ; Data< bool > d_checkIndices;  If true, indices are verified before being added in to the global matrix, favoring security over speed. More...;  ; Data< bool > d_parallelAssemblyIndependentMatrices;  If true, independent matrices (global matrix vs mapped matrices) are assembled in parallel. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; static std::string GetCustomTemplateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html:26188,message,messages,26188,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_pattern_system.html,1,['message'],['messages']
Integrability,"guration; . /feed; ; CGAL Configuration – SOFA. SOFA - Topic Tag: CGAL Configuration. /cgalplugin; . /feed; ; CGALplugin – SOFA. SOFA - Topic Tag: CGALplugin. /cgal-plugin; . /feed; ; CGAL plugin – SOFA. SOFA - Topic Tag: CGAL plugin. /chain; . /feed; ; chain – SOFA. SOFA - Topic Tag: chain. /change-control-point-indices; . /feed; ; change control point indices – SOFA. SOFA - Topic Tag: change control point indices. /change-texture; . /feed; ; change texture – SOFA. SOFA - Topic Tag: change texture. /clamp; . /feed; ; clamp – SOFA. SOFA - Topic Tag: clamp. /clang; . /feed; ; Clang – SOFA. SOFA - Topic Tag: Clang. /client; . /feed; ; client – SOFA. SOFA - Topic Tag: client. /cloth; . /feed; ; cloth – SOFA. SOFA - Topic Tag: cloth. /cmake; . /feed; ; cmake – SOFA. SOFA - Topic Tag: cmake. /cmake-3-18-5-20-06-01; . /feed; ; Cmake 3.18.5 20.06.01 – SOFA. SOFA - Topic Tag: Cmake 3.18.5 20.06.01. /cmake-3-19-0; . /feed; ; CMake 3.19.0 – SOFA. SOFA - Topic Tag: CMake 3.19.0. /cmake-build-external-dependency; . /feed; ; CMake build ""external dependency"" – SOFA. SOFA - Topic Tag: CMake build ""external dependency"". /cmake-error; . /feed; ; CMake error – SOFA. SOFA - Topic Tag: CMake error. /cmake-gui; . /feed; ; cmake gui – SOFA. SOFA - Topic Tag: cmake gui. /cmakelists-txt; . /feed; ; CMakeLists.txt – SOFA. SOFA - Topic Tag: CMakeLists.txt. /collapse-model; . /feed; ; collapse model – SOFA. SOFA - Topic Tag: collapse model. /collision; . /feed; ; collision – SOFA. SOFA - Topic Tag: collision. /collision-detection; . /feed; ; collision detection – SOFA. SOFA - Topic Tag: collision detection. /collision-detection-narrow-phase; . /feed; ; Collision Detection; Narrow Phase – SOFA. SOFA - Topic Tag: Collision Detection; Narrow Phase. /collisionmodel; . /feed; ; CollisionModel – SOFA. SOFA - Topic Tag: CollisionModel. /collision-model; . /feed; ; collision model – SOFA. SOFA - Topic Tag: collision model. /collision-not-working; . /feed; ; Collision not working – SOFA. SOFA - Topic",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:434106,depend,dependency,434106,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency']
Integrability,"gyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this object describes. More...;  ; void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange object to the list of the topology this object describes. More...;  ;  Protected Member Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:18896,message,message,18896,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"g shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ BaseNode(). sofa::core::objectmodel::BaseNode::BaseNode ; (; ). protected . ◆ ~BaseNode(). sofa::core::objectmodel::BaseNode::~BaseNode ; (; ). overrideprotected . Function details. ◆ addChild(). virtual void sofa::core::objectmodel::BaseNode::addChild ; (; BaseNode::SPtr ; node). pure virtual . Add a child node. ; Implemented in sofa::simulation::Node. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseNode::addObject ; (; BaseObject::SPtr ; obj, . TypeOfInsertion ; = TypeOfInsertion::AtEnd . ). pure virtual . Add a generic object. ; Implemented in sofa::simulation::Node. ◆ clearObjectContext(). void sofa::core::objectmodel::BaseNode::clearObjectContext ; (; BaseObject::SPtr ; obj). protected . Reset the context of an object. . ◆ detachFromGraph(). virtual void sofa::core::objectmodel::BaseNode::detachFromGraph ; (; ). pure virtual . Remove the current node from the graph: depending on the type of Node, it can have one or several parents. WarningYou must have a SPtr on the node you detach if you want to keep it or the smart pointer mechanism will remove it ! ; Implemented in sofa::simulation::graph::DAGNode. ◆ findLinkDestClass(). Base* sofa::core::objectmodel::BaseNode::findLinkDestClass ; (; const BaseClass * ; destType, . const std::string & ; path, . const BaseLink * ; link . ). overridepure virtual . Reimplemented from sofa::core::objectmodel::Base.; Implemented in sofa::simulation::Node. ◆ getAnimationLoop(). core::behavior::BaseAnimationLoop * sofa::core::objectmodel::BaseNode::getAnimationLoop ; (; ); const. virtual . Reimplemented in sofa::simulation::Node. ◆ getChildren(). virtual Children sofa::core::objectmodel::BaseNode::getChildren ; (; ); const. pure virtual . Get a list of child node. ; Implemented in sofa::simulation::Node. ◆ getCollisionPipeline(). core::collision::Pipeline * sofa::core::objectmodel::BaseNode::getCollisionPipeline ; (; ); const. vir",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:12772,depend,depending,12772,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['depend'],['depending']
Integrability,"h node deletion. More...;  ; void setDefaultResponseType (const std::string &responseT);  ; std::string getDefaultResponseType () const;  ;  Public Member Functions inherited from sofa::core::collision::ContactManager;  SOFA_ABSTRACT_CLASS (ContactManager, CollisionAlgorithm);  ; virtual const ContactVector & getContacts ();  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:5265,depend,dependent,5265,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,2,['depend'],['dependent']
Integrability,"h traversal precomputation, not mandatory and does nothing by default. More...;  ; Set/get objects; virtual void addChild (BaseNode::SPtr node) final;  ; virtual void removeChild (BaseNode::SPtr node) final;  Remove a child node. More...;  ; virtual void moveChild (BaseNode::SPtr node, BaseNode::SPtr prev_parent) final;  Move a node in this from another node. More...;  ; virtual void moveChild (BaseNode::SPtr node) override=0;  Move a node in this from another node. More...;  ; virtual void doAddChild (BaseNode::SPtr node)=0;  ; virtual void doRemoveChild (BaseNode::SPtr node)=0;  Remove a child node. More...;  ; virtual void doMoveChild (BaseNode::SPtr node, BaseNode::SPtr prev_parent)=0;  Move a node from another node. More...;  ; virtual bool addObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd) final;  Add an object and return this. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool removeObject (sofa::core::objectmodel::BaseObject::SPtr obj) final;  Remove an object. More...;  ; virtual void moveObject (sofa::core::objectmodel::BaseObject::SPtr obj) final;  Move an object from another node. More...;  ; sofa::core::objectmodel::BaseObject * getObject (const std::string &name) const;  Find an object given its name. More...;  ; Base * findLinkDestClass (const sofa::core::objectmodel::BaseClass *destType, const std::string &path, const sofa::core::objectmodel::BaseLink *link) override;  ; void * getObject (const sofa::core::objectmodel::ClassInfo &class_info, const sofa::core::objectmodel::TagSet &tags, SearchDirection dir=SearchUp) const override=0;  ; void * getObject (const sofa::core::objectmodel::ClassInfo &class_info, SearchDirection dir=SearchUp) const override;  ; void * getObject (const sofa::core::objectmodel::ClassInfo &class_info, const std::string &path) const override=0;  ; void getObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:9949,interface,interfaces,9949,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interfaces']
Integrability,"has a boolean parameter bar, it does not simply declares it as bool m_bar, but rather like this:; Data<bool> d_bar;; sofa::core::objectmodel::Data< bool >template class SOFA_CORE_API Data< bool >Definition: Data.cpp:59; Then, this Data must be initialized to provide its name and default value. This is typically done in the initialization list of each constructor of the component, using the helper function Base::initData():; Foo::Foo(): d_bar(initData(&d_bar, true, ""bar"", ""Here is a little description of this Data."")) {; // ...; }; And this Data can be assigned a value in XML scene files like so: <Foo bar=""false""/>; . Classes; class  InitData;  This internal class is used by the initData() methods to store initialization parameters of a Data. More...;  . Public Attributes; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Protected Attributes; T m_defaultValue;  ; ValueType m_value;  Value. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Public Member Functions",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:2232,message,message,2232,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['message'],['message']
Integrability,"he points are actually renumbered in the mechanical object's state vectors iff (renumberDOF == true) See alsoMechanicalObject::renumberValues . ◆ renumberPointsProcess(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::renumberPointsProcess ; (; const sofa::type::vector< PointID > & ; index, . const sofa::type::vector< PointID > & ; , . const bool ; renumberDOF = true . ). protectedvirtual . Reorder this topology. ; Important : the points are actually renumbered in the mechanical object's state vectors iff (renumberDOF == true) See alsoMechanicalObject::renumberValues ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ renumberPointsWarning(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::renumberPointsWarning ; (; const sofa::type::vector< PointID > & ; index, . const sofa::type::vector< PointID > & ; inv_index, . const bool ; renumberDOF = true . ). protected . Sends a message to warn that points are about to be reordered. ; See alsorenumberPointsProcess . ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::PointSetTopologyModifier::SOFA_CLASS ; (; PointSetTopologyModifier ; , . core::topology::TopologyModifier ;  . ). ◆ swapPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::swapPoints ; (; const Index ; i1, . const Index ; i2 . ). virtual . Swap points i1 and i2. . Related details. ◆ PointSetGeometryAlgorithms. template<class DataTypes > . friend class PointSetGeometryAlgorithms. friend . sofacomponenttopologycontainerdynamicPointSetTopologyModifier; Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:29087,message,message,29087,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"hedraProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::removeHexahedraProcess ; (; const sofa::type::vector< HexahedronID > & ; indices, . const bool ; removeIsolatedItems = false . ). protectedvirtual . Remove a subset of hexahedra. ; Elements corresponding to these points are removed form the mechanical object's state vectors.; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. See alsoremoveHexahedraWarning ; Parameters. removeIsolatedItemsif true remove isolated quads, edges and vertices . Reimplemented in sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier. ◆ removeHexahedraWarning(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::removeHexahedraWarning ; (; sofa::type::vector< HexahedronID > & ; hexahedra). protectedvirtual . Sends a message to warn that some hexahedra are about to be deleted. ; See alsoremoveHexahedraProcess; Important : parameter indices is not const because it is actually sorted from the highest index to the lowest one. . ◆ removeItems(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::removeItems ; (; const sofa::type::vector< HexahedronID > & ; items). overridevirtual . Generic method to remove a list of items. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ removePointsProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::removePointsProcess ; (; const sofa::type::vector< PointID > & ; indices, . const bool ; removeDOF = true . ). overrideprotectedvirtual . Remove a subset of points. ; Elements corresponding to these points are removed form the mechanical object's state vectors.; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html:36284,message,message,36284,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"hedralFEMForceFieldAndMass< DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::initLarge ; (; const int ; i). protected . ◆ initPolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::initPolar ; (; const int ; i). protected . ◆ integrateStiffness(). template<class DataTypes > . HexahedralFEMForceField< DataTypes >::Mat33 sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::integrateStiffness ; (; int ; signx0, . int ; signy0, . int ; signz0, . int ; signx1, . int ; signy1, . int ; signz1, . const Real ; u, . const Real ; v, . const Real ; w, . const Mat33 & ; J_1 . ). protected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >. ◆ setMethod(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMFo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html:32642,integrat,integrateStiffness,32642,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Integrability,"helper::logging::TracyMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::CountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::countingmessagehandler::MainCountingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LogMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::LoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::loggingmessagehandler::MainLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::MainPerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler::PerComponentLoggingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Class Reference; SOFA API: Member List; SOFA API: sofa::helper::map_ptr_stable_compare< Key, Tp > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::messaging::FileMessage Class Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< T > Class Template Reference; SOFA API: sofa::helper::ptr_stable_compare< T * > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_compare< std::pair< T *, T * > > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::ptr_stable_id< T > Class Template Reference; SOFA API: Member List; SOFA API: sofa::helper::system::DynamicLibrary Class Reference; SOFA API: sofa::helper::system::DynamicLibrary::Handle Class Reference; SOFA API: Member List; SOFA API: Member List; SOFA API: sofa::helper::system::FileEventListe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:164335,rout,routingmessagehandler,164335,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['rout'],['routingmessagehandler']
Integrability,"his topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:22973,message,message,22973,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"how-to-declare-components-in-scene-files; ; SOFA - Topic: [SOLVED] How to declare components in scene files. /how-to-define-an-animation-path; ; SOFA - Topic: [SOLVED] How to define an animation path?. /how-to-determine-the-source-of-an-error; ; SOFA - Topic: [SOLVED] How to determine the source of an stress sigularity?. /how-to-develop-collision-model-that-support-different-proximity; . /feed; ; [SOLVED] How to develop collision model that support different proximity? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /2; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /8; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /9; ; SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. SOFA - Topic: [SOLVED] How to develop collision model that support different proximity?. /how-to-disable-warning-message; ; SOFA - Topic: How to disable warning message. /how-to-do-attachconstraint; ; SOFA - Topic: [SOLVED] How to Do AttachConstraint?. /how-to-do-feasible-and-stable-physical-acceleration-in-force-feedback-scene; . /page; . /2; ; SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. SOFA - Topic: [SOLVED] How to do feasible and stable physical acceleration in force feedback scene?. /how-to-exclude-certain-mesh-elements-from-the-collision-test; ; SOFA - Topic: How to exclude certain mesh elements from the collision test?. /how-to-exert-a-torque-on-an-articulatedsystemmapping; ; SOFA - Topic: How to exert a torque on an ArticulatedSystemMapping?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation; ; SOFA - Topic: [SOLVED] How to export .OBJ files at specified time steps, before ending the animation?. /how-to-export-obj-files-at-specified-time-steps-before-ending-the-animation-2; ; SOFA - Topic: [SOLVED] How to export .OBJ file",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:320771,message,message,320771,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['message'],['message']
Integrability,"how-to-use-the-recordedcamera-component; . /feed; ; [SOLVED] How to use the RecordedCamera component? – SOFA. SOFA - Topic: [SOLVED] How to use the RecordedCamera component?. /how-to-use-the-sofa-mesh-partition-tools; ; SOFA - Topic: [SOLVED] How to use the Sofa mesh partition tools?. /how-to-use-the-xml-api; ; SOFA - Topic: [SOLVED] How to use the XML API?. /how-to-use-tools-for-multi-material-on-windows; ; SOFA - Topic: How to use Tools for multi-material on Windows?. /how-to-vtkexport-pointsettopologycontainer-points; ; SOFA - Topic: How to VTKexport PointSetTopologyContainer points. /how-to-write-a-scene-file; ; SOFA - Topic: [SOLVED] How to write a scene file. /hyperelastic-material-parameters-in-sofa; ; SOFA - Topic: [SOLVED] Hyperelastic Material Parameters in SOFA. /hyperelastic-materials-related-paper; ; SOFA - Topic: [SOLVED] Hyperelastic materials related paper. /i-am-confused-on-the-dependencies-when-compiling-sofa-on-win10-vs2015; . /feed; ; [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015 – SOFA. SOFA - Topic: [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015. /i-could-not-find-the-modeler-module; ; SOFA - Topic: [SOLVED] I could not find the ""Modeler"" module. /image-background; ; SOFA - Topic: [SOLVED] Image Background. /image-plugin-compile-problem; . /feed; ; [SOLVED] Image plugin compile problem – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Image plugin compile problem. /9; ; SOFA - Topic: [SOLVED] Image plugin compile problem. SOFA - Topic: [SOLVED] Image plugin compile problem. /image-viewer-in-image-plugin; ; SOFA - Topic: [SOLVED] Image Viewer in Image Plugin. /implement-a-velocity-constraint; ; SOFA - Topic: Implement a velocity constraint. /implement-our-own-linearsolver; ; SOFA - Topic: [SOLVED] Implement our own LinearSolver. /import-a-vtk-file; . /embed; ; SOFA - Topic: [SOLVED] import a vtk file. /feed; ; [SOLVED] import a vtk file – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:331818,depend,dependencies,331818,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependencies']
Integrability,"iases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::haptics::ForceFeedback; Data< bool > d_activate;  boolean to activate or deactivate the forcefeedback More...;  ; Data< int > d_indice;  Tool indice in the OmniDriver. More...;  ; simulation::Node * context;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:10642,message,messages,10642,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,2,['message'],['messages']
Integrability,"ic::HexahedralFEMForceField< DataTypes >. ◆ getPotentialEnergy() [3/4]. template<class DataTypes > . SReal sofa::core::behavior::Mass< DataTypes >::getPotentialEnergy. override . $ e = M g x $; This method retrieves the positions vector and call the internal getPotentialEnergy(const MechanicalParams*, const VecCoord&) method implemented by the component. . ◆ getPotentialEnergy() [4/4]. template<class DataTypes > . SReal sofa::core::behavior::Mass< DataTypes >::getPotentialEnergy. override . ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >. ◆ integrateVolume(). template<class DataTypes > . HexahedralFEMForceFieldAndMass< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::integrateVolume ; (; int ; signx, . int ; signy, . int ; signz, . Real ; l0, . Real ; l1, . Real ; l2 . ). protected . ◆ isDiagonal(). template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::isDiagonal ; (; ); const. inlineoverridevirtual . Implements sofa::core::behavior::BaseMass. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:40500,integrat,integrateVolume,40500,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateVolume']
Integrability,"ich a spring is not valid. More...;  ; SingleLink< FastTriangularBendingSprings< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::EdgeData< type::vector< EdgeSpring > > d_edgeSprings;  The list of edge springs, one for each edge between two triangles. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; SReal m_potentialEnergy;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html:2292,message,messages,2292,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_fast_triangular_bending_springs.html,1,['message'],['messages']
Integrability,"id sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ getAnimate(). bool sofa::core::objectmodel::BaseContext::getAnimate ; (; ); const. virtual . Animation flag. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getDefault(). BaseContext * sofa::core::objectmodel::BaseContext::getDefault ; (; ). static . Get the default Context object, that contains the default values for all parameters and can be used when no local context is defined. . ◆ getDt(). SReal sofa::core::objectmodel::BaseContext::getDt ; (; ); const. virtual . Simulation timestep. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getGravity(). const BaseContext::Vec3 & sofa::core::objectmodel::BaseContext::getGravity ; (; ); const. virtual . Gravit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:22709,wrap,wrapper,22709,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"idevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearIndices(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearIndices. methods to add/remove some indices, keyTimes, keyMovement . ◆ clearKeyMovements(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::clearKeyMovements. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PartialLinearMovementProjectiveCons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:33597,interface,interface,33597,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"id getNodeObject (Object *&result);  ; template<class Object > ; Object * getNodeObject ();  ; template<class Object , class Container > ; void getTreeObjects (Container *list);  List all objects of this node and sub-nodes deriving from a given class. More...;  ; template<class Container > ; Container * getTreeObjects (Container *result);  List all objects of this node and sub-nodes deriving from a given class. More...;  ; template<class Container > ; Container & getTreeObjects (Container &result);  List all objects of this node and sub-nodes deriving from a given class. More...;  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getTreeObjects ();  ; template<class Object > ; void getTreeObject (Object *&result);  ; template<class Object > ; Object * getTreeObject ();  ; sofa::core::topology::Topology * getTopology () const override;  Topology. More...;  ; sofa::core::topology::BaseMeshTopology * getMeshTopologyLink (SearchDirection dir=SearchUp) const override;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; sofa::core::BaseState * getState () const override;  Degrees-of-Freedom. More...;  ; sofa::core::behavior::BaseMechanicalState * getMechanicalState () const override;  Mechanical Degrees-of-Freedom. More...;  ; sofa::core::visual::Shader * getShader () const override;  Shader. More...;  ; virtual sofa::core::visual::Shader * getShader (const sofa::core::objectmodel::TagSet &t) const;  ; Solvers and main algorithms; sofa::core::behavior::BaseAnimationLoop * getAnimationLoop () const override;  ; sofa::core::behavior::OdeSolver * getOdeSolver () const override;  ; sofa::core::collision::Pipeline * getCollisionPipeline () const override;  ; sofa::core::visual::VisualLoop * getVisualLoop () const override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseNode;  SOFA_ABSTRACT_CLASS (BaseNode, Base);  ; virtual Parents getParents () const =0;  ; virtual size_t getNbPa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:12926,interface,interface,12926,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interface']
Integrability,"id handleStateChange (core::topology::Topology *t);  Handle state Changes from a given Topology. More...;  ; virtual Size getMatrixBlockSize () const;  Get the number of scalars per Deriv value, as necessary to build mechanical matrices and vectors. More...;  ; virtual Size getMatrixSize () const;  Get the number of rows necessary to build mechanical matrices and vectors. More...;  ; virtual void copyToBuffer (SReal *dst, ConstVecId src, unsigned int n) const =0;  Copy data to an external, user-allocated buffer. More...;  ; virtual void copyFromBuffer (VecId dst, const SReal *src, unsigned int n)=0;  Copy data from an external, user-allocated buffer. More...;  ; virtual void addFromBuffer (VecId dst, const SReal *src, unsigned int n)=0;  Add data from an external, user-allocated buffer. More...;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:20046,depend,dependent,20046,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['depend'],['dependent']
Integrability,"in or core? – SOFA. SOFA - Topic: [SOLVED] Flexible plugin or core?. /floating-behaviour-in-soft-actuators-with-bilateralinteractionconstraint; ; SOFA - Topic: Floating behaviour in soft actuators with BilateralInteractionConstraint. /floating-point-exception; ; SOFA - Topic: [SOLVED] Floating point exception. /floor-as-a-projective-constraint; ; SOFA - Topic: [SOLVED] Floor as a projective constraint. /force-feedback-not-working-correctly-when-using-two-haptic-devices; ; SOFA - Topic: [SOLVED] Force feedback not working correctly when using two haptic devices. /forcefields-adddforce; . /feed; ; [SOLVED] Forcefield’s addDForce – SOFA. /page; . /11; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /12; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. /3; ; SOFA - Topic: [SOLVED] Forcefield’s addDForce. SOFA - Topic: [SOLVED] Forcefield’s addDForce. /forcefields-collisions-and-integration; . /feed; ; [SOLVED] Forcefields, collisions and integration – SOFA. SOFA - Topic: [SOLVED] Forcefields, collisions and integration. /forcefield-with-implicit-iterative-solver; ; SOFA - Topic: [SOLVED] ForceField with implicit iterative solver. /forcefield-with-python-controller; ; SOFA - Topic: ForceField with Python controller. /force-induced-topoligical-modification-of-triangular-mesh; ; SOFA - Topic: [SOLVED] Force Induced Topological Modification of Triangular Mesh. /forceps-assembly; . /feed; ; [SOLVED] Forceps assembly – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Forceps assembly. /16; ; SOFA - Topic: [SOLVED] Forceps assembly. /4; ; SOFA - Topic: [SOLVED] Forceps assembly. SOFA - Topic: [SOLVED] Forceps assembly. /forces-not-getting-rendered-with-geomagic-touch; ; SOFA - Topic: [SOLVED] Forces not getting rendered with Geomagic touch. /forces-on-bending-pneunet; ; SOFA - Topic: [SOLVED] Forces on bending pneunet. /forum-help; ; SOFA - Topic: forum help. /forum-is-moving-to-github-discussions; ; SOFA - Topic: WARNING: moving to GitHub Discussions. /free-software-for-volume-m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:306453,integrat,integration,306453,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integration']
Integrability,"in; . /feed; ; CGALplugin – SOFA. SOFA - Topic Tag: CGALplugin. /cgal-plugin; . /feed; ; CGAL plugin – SOFA. SOFA - Topic Tag: CGAL plugin. /chain; . /feed; ; chain – SOFA. SOFA - Topic Tag: chain. /change-control-point-indices; . /feed; ; change control point indices – SOFA. SOFA - Topic Tag: change control point indices. /change-texture; . /feed; ; change texture – SOFA. SOFA - Topic Tag: change texture. /clamp; . /feed; ; clamp – SOFA. SOFA - Topic Tag: clamp. /clang; . /feed; ; Clang – SOFA. SOFA - Topic Tag: Clang. /client; . /feed; ; client – SOFA. SOFA - Topic Tag: client. /cloth; . /feed; ; cloth – SOFA. SOFA - Topic Tag: cloth. /cmake; . /feed; ; cmake – SOFA. SOFA - Topic Tag: cmake. /cmake-3-18-5-20-06-01; . /feed; ; Cmake 3.18.5 20.06.01 – SOFA. SOFA - Topic Tag: Cmake 3.18.5 20.06.01. /cmake-3-19-0; . /feed; ; CMake 3.19.0 – SOFA. SOFA - Topic Tag: CMake 3.19.0. /cmake-build-external-dependency; . /feed; ; CMake build ""external dependency"" – SOFA. SOFA - Topic Tag: CMake build ""external dependency"". /cmake-error; . /feed; ; CMake error – SOFA. SOFA - Topic Tag: CMake error. /cmake-gui; . /feed; ; cmake gui – SOFA. SOFA - Topic Tag: cmake gui. /cmakelists-txt; . /feed; ; CMakeLists.txt – SOFA. SOFA - Topic Tag: CMakeLists.txt. /collapse-model; . /feed; ; collapse model – SOFA. SOFA - Topic Tag: collapse model. /collision; . /feed; ; collision – SOFA. SOFA - Topic Tag: collision. /collision-detection; . /feed; ; collision detection – SOFA. SOFA - Topic Tag: collision detection. /collision-detection-narrow-phase; . /feed; ; Collision Detection; Narrow Phase – SOFA. SOFA - Topic Tag: Collision Detection; Narrow Phase. /collisionmodel; . /feed; ; CollisionModel – SOFA. SOFA - Topic Tag: CollisionModel. /collision-model; . /feed; ; collision model – SOFA. SOFA - Topic Tag: collision model. /collision-not-working; . /feed; ; Collision not working – SOFA. SOFA - Topic Tag: Collision not working. /collisions; . /feed; ; Collisions – SOFA. SOFA - Topic Tag: Collis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:434211,depend,dependency,434211,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency']
Integrability,"ined in the ROI. More...;  ; Data< type::vector< Triangle > > f_trianglesInROI;  Triangles contained in the ROI. More...;  ; Data< type::vector< Tetra > > f_tetrahedraInROI;  Tetrahedra contained in the ROI. More...;  ; Data< bool > p_drawBoxes;  Draw Box(es) More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< bool > p_drawEdges;  Draw Edges. More...;  ; Data< bool > p_drawTriangles;  Draw Triangles. More...;  ; Data< bool > p_drawTetrahedra;  Draw Tetrahedra. More...;  ; Data< float > _drawSize;  rendering size for box and topological elements More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PlaneROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html:2957,message,messages,2957,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_plane_r_o_i.html,1,['message'],['messages']
Integrability,"iner::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [2/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< core::topology::PointAncestorElem > & ; ancestorElems, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [3/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ init(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::QuadSetTopologyModifier. ◆ movePointsProcess(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::movePointsProcess ; (; const sofa::type::vector< PointID > & ; id, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; moveDOF = true . ). protectedvirtual . move input points indices to input new coord",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:21352,message,message,21352,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"ing > d_variables;  Define a list of variables to be used inside the rules. More...;  ; Data< type::vector< Rule > > d_rules;  ;  Public Attributes inherited from sofa::component::collision::response::contact::CollisionResponse; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > response;  ; sofa::core::objectmodel::RenamedData< std::string > responseParams;  ; Data< sofa::helper::OptionsGroup > d_response;  contact response class More...;  ; Data< std::string > d_responseParams;  contact response parameters (syntax: name1=value1&name2=value2&...) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< std::string, Data< std::string > * > variablesData;  ;  Protected Attributes inherited from sofa::component::collision::response::contact::CollisionResponse; ContactMap contactMap;  ; std::map< Instance, ContactMap > storedContactMap;  ; std::map< std::pair< std::string, std::pair< std::string, std::string > >, int > errorMsgCount;  ;  Protected Attributes inherited from sofa::core::collision::Cont",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html:1689,message,messages,1689,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_rule_based_contact_manager.html,1,['message'],['messages']
Integrability,"ing, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:1557,depend,dependent,1557,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,2,['depend'],['dependent']
Integrability,"ingForceField() [3/3]. template<class DataTypes > . sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::VectorSpringForceField ; (; MechanicalState * ; _object1, . MechanicalState * ; _object2 . ). protected . ◆ ~VectorSpringForceField(). template<class DataTypes > . sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::~VectorSpringForceField. overrideprotectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implements sofa::core::behavior::PairInteractionForceField< DataTypes >. ◆ addForce(). template<class DataTypes > . void sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >::addForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). overridevirtual . Given the curre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html:27213,integrat,integrated,27213,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_vector_spring_force_field.html,1,['integrat'],['integrated']
Integrability,"ink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html:1908,depend,dependent,1908,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_linear_solver_accessor.html,1,['depend'],['dependent']
Integrability,"input_indices;  Position indices that need to be smoothed, leave empty for all positions. More...;  ; Data< VecCoord > output_position;  Output position. More...;  ; Data< unsigned int > nb_iterations;  Number of iterations of laplacian smoothing. More...;  ; Data< bool > showInput;  showInput More...;  ; Data< bool > showOutput;  showOutput More...;  ; SingleLink< SmoothMeshEngine< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology. More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:1838,message,messages,1838,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,1,['message'],['messages']
Integrability,"ins the leaves of the hierarchy which are the real elements of the object.; Each element inside CollisionModels except for the last one can have a list of children. There are 2 types of child elements: ; internal children: child elements of the same type as their parent (often corresponding to non-final elements) ; external children: child elements of a different type (often corresponding to the final elements) . Public Attributes; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterations More...;  ; Data< bool > bSimulated;  flag indicating if this object is controlled by a simulation More...;  ; Data< bool > bSelfCollision;  flag indication if the object can self collide More...;  ; Data< SReal > proximity;  Distance to the actual (visual) surface. More...;  ; Data< SReal >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:1981,message,messages,1981,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,1,['message'],['messages']
Integrability,"intersections on edges are closed to given alpha values. More...;  ; Data< bool > d_bSplitTetrahedra;  Split tetrahedra crossing the surface. More...;  ; Data< bool > d_bDraw;  Activate rendering of internal datasets. More...;  ; Real cellsize;  ; int gsize [3];  ; Point g0;  ; int ph0;  ; int hsize [3];  ; Point h0;  ; type::vector< int > pInside;  ; type::vector< type::fixed_array< Real, EDGESHELL > > eBDist;  ; std::map< std::pair< int, int >, int > splitPoints;  ; SeqPoints rays;  ; SeqPoints intersections;  ; SeqPoints insides;  ; SeqPoints snaps;  ; SeqPoints diags;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshTetraStuffing, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html:3545,message,messages,3545,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_tetra_stuffing.html,1,['message'],['messages']
Integrability,"ionRate. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_maxInjectionRate. IN: Maximum injection rate (volume per second) . ◆ d_p0. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_p0. IN: Rest pressure when V = V0. . ◆ d_pressureTriangles. template<class DataTypes > . Data< SeqTriangles > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_pressureTriangles. OUT: list of triangles where a pressure is applied (mesh triangles + tessellated quads) . ◆ d_surfaceAreaAfterTC. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_surfaceAreaAfterTC. OUT: Surface area after a topology change. . ◆ d_v0. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_v0. OUT: Rest volume (as computed from initialVolume + injectedVolume) . ◆ d_volumeAfterTC. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_volumeAfterTC. OUT: Volume after a topology change. . ◆ gradV. template<class DataTypes > . VecDeriv sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::gradV. protected . ◆ l_topology. template<class DataTypes > . SingleLink<TaitSurfacePressureForceField<DataTypes>, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::l_topology. Link to be set to the topology container in the component graph. . ◆ lastTopologyRevision. template<class DataTypes > . int sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::lastTopologyRevision. protected . ◆ m_B. template<class DataTypes > . sofa::core::objectmodel::RenamedData<Real> sofa::component::mechanicalload::Ta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:26814,inject,injectedVolume,26814,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inject'],['injectedVolume']
Integrability,"ions |; Protected Member Functions |; List of all members . sofa::component::haptics::ForceFeedback Class Referenceabstract . #include <ForceFeedback.h>; Base class implementing forcefeedback as a force field. ; More... Inheritance diagram for sofa::component::haptics::ForceFeedback:. [legend]; Detailed Description; Base class implementing forcefeedback as a force field. . Public Attributes; Data< bool > d_activate;  boolean to activate or deactivate the forcefeedback More...;  ; Data< int > d_indice;  Tool indice in the OmniDriver. More...;  ; simulation::Node * context;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void computeForce (SReal x, SReal y, SReal z, SReal u, SReal v, SReal w, SReal q, SReal &fx, SReal &fy, SReal &fz)=0;  ; virtual void computeWrench (const sofa::type::Transform< SReal > &, const sofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html:1200,message,messages,1200,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_force_feedback.html,1,['message'],['messages']
Integrability,"irectly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::OdeSolver::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::OdeSolver::SOFA_ABSTRACT_CLASS ; (; OdeSolver ; , . objectmodel::BaseObject ;  . ). ◆ solve() [1/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . MultiVecCoordId ; , . MultiVecDerivId ;  . ). pure virtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implemented in sofa::component::odesolver::backward::StaticSolver, sofa::component::odesolver::forward::RungeKutta4Solver, sofa::component::odesolver::forward::RungeKutta2Solver, sofa::component::odesolver::forward::EulerExplicitSolver, sofa::component::odesolver::forward::DampVelocitySolver, sofa::component::odesolver::forward::CentralDifferenceSolver, sofa::component::odesolver::backward::VariationalSymplecticSolver, sofa::component::odesolver::backward::NewmarkImplicitSolver, and sofa::component::odesolver::backward::EulerImplicitSolver. ◆ solve() [2/2]. virtual void sofa::core::behavior::OdeSolver::solve ; (; const core::ExecParams * ; params, . SReal ; dt . ). inlinevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt. . sofacorebehaviorOdeSolver; Generated on Mon Nov 11 2024 03:15:16 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:20165,integrat,integration,20165,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['integrat'],['integration']
Integrability,"irtual . Add an object, or return false if not supported. . ◆ canChangeSleepingState(). bool sofa::core::objectmodel::BaseContext::canChangeSleepingState ; (; ); const. virtual . Whether the context can change its sleeping state or not. ; The Context can not change its sleeping state by default. ; Reimplemented in sofa::core::objectmodel::Context. ◆ executeVisitor(). void sofa::core::objectmodel::BaseContext::executeVisitor ; (; simulation::Visitor * ; , . bool ; precomputedOrder = false . ). virtual . apply an action ; Reimplemented in sofa::simulation::Node. ◆ get() [1/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const std::string & ; path); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [2/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [3/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [4/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:19251,wrap,wrapper,19251,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"irtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::simulation::DefaultAnimationLoop. ◆ insertInNode(). bool sofa::core::behavior::BaseAnimationLoop::insertInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can insert itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was inserted ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ removeInNode(). bool sofa::core::behavior::BaseAnimationLoop::removeInNode ; (; objectmodel::BaseNode * ; ). overridevirtual . the component can remove itself directly in the right sequence in the Node so the Node does not have to test its type against all known types Returnstrue if the component was removed ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ABSTRACT_CLASS(). sofa::core::behavior::BaseAnimationLoop::SOFA_ABSTRACT_CLASS ; (; BaseAnimationLoop ; , . objectmodel::BaseObject ;  . ). ◆ step(). virtual void sofa::core::behavior::BaseAnimationLoop::step ; (; const core::ExecParams * ; params, . SReal ; dt . ). pure virtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implemented in sofa::simulation::DefaultAnimationLoop, sofa::component::animationloop::MultiTagAnimationLoop, sofa::component::animationloop::MultiStepAnimationLoop, sofa::component::animationloop::FreeMotionAnimationLoop, and sofa::component::animationloop::ConstraintAnimationLoop. ◆ storeResetState(). void sofa::core::behavior::BaseAnimationLoop::storeResetState ; (; ). overrideprotectedvirtual . Save the initial state for later uses in reset() ; Reimplemented from sofa::core::objectmodel::BaseObject. sofacorebehaviorBaseAnimationLoop; Generated on Mon Nov 11 2024 03:15:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html:16225,integrat,integrations,16225,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,1,['integrat'],['integrations']
Integrability,"irtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html:10373,depend,dependent,10373,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,3,['depend'],['dependent']
Integrability,"isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::BaseAnimationLoopvirtual; integrate(const core::ExecParams *params, SReal dt)sofa::simulation::CollisionAnimationLoopprotectedvirtual; integrationStepssofa::component::animationloop::MultiStepAnimationLoop; internalCollisionComputation(const core::ExecParams *params=core::execparams::defaultInstance())sofa::simulation::CollisionAnimationLoopprotectedvirtual; isComponentStateValid() constsofa::core::objectmodel::Baseinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_nodesofa::core::behavior::BaseAnimationLoop; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_instanciationSourceFileNamesofa::core::objectmodel::Base; m_instanciationSourceFilePossofa::core::objectmodel::Base; m_internalEnginesofa::core::objectmodel::Baseprotected; m_oldAttributessofa::core::objectmodel::Base; m_resetTimesofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html:7723,integrat,integrationStepssofa,7723,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop-members.html,1,['integrat'],['integrationStepssofa']
Integrability,"isitor;  get all up objects respecting specified class_info and tags More...;  ; class  DAGNode;  ; class  DAGSimulation;  ; struct  CleanupCheck;  . Functions; Simulation * getSimulation ()=delete;  ; SOFA_SIMULATION_GRAPH_API void init ();  Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isInitialized ();  Return true if and only if the SofaSimulationGraph library has been initialized. More...;  ; SOFA_SIMULATION_GRAPH_API void cleanup ();  Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. More...;  ; SOFA_SIMULATION_GRAPH_API bool isCleanedUp ();  Return true if and only if the SofaSimulationGraph library has been cleaned up. More...;  . Function Documentation. ◆ cleanup(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::cleanup ; (; ). Clean up the resources used by the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ getSimulation(). Simulation* sofa::simulation::graph::getSimulation ; (; ). delete . Get the (unique) simulation which controls the scene. Automatically creates one if no Simulation has been set. . ◆ init(). SOFA_SIMULATION_GRAPH_API void sofa::simulation::graph::init ; (; ). Initialize the SofaSimulationGraph library, as well as its dependencies: SofaSimulationCommon, SofaCore, SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isCleanedUp ; (; ). Return true if and only if the SofaSimulationGraph library has been cleaned up. . ◆ isInitialized(). SOFA_SIMULATION_GRAPH_API bool sofa::simulation::graph::isInitialized ; (; ). Return true if and only if the SofaSimulationGraph library has been initialized. . sofasimulationgraph; Generated on Mon Nov 11 2024 03:34:14 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html:1433,depend,dependencies,1433,api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation_1_1graph.html,2,['depend'],['dependencies']
Integrability,it-solver; . /feed; ; implicit solver – SOFA. SOFA - Topic Tag: implicit solver. /import-include; . /feed; ; import include – SOFA. SOFA - Topic Tag: import include. /import-mesh; . /feed; ; import mesh – SOFA. SOFA - Topic Tag: import mesh. /incision; . /feed; ; incision – SOFA. SOFA - Topic Tag: incision. /incision2d; . /feed; ; Incision2D – SOFA. SOFA - Topic Tag: Incision2D. /input; . /feed; ; input – SOFA. SOFA - Topic Tag: input. /input-and-output-in-sofa-scn-file; . /feed; ; Input and Output in SOFA .scn file – SOFA. SOFA - Topic Tag: Input and Output in SOFA .scn file. /installation; . /feed; ; installation – SOFA. SOFA - Topic Tag: installation. /installation-error; . /feed; ; Installation error – SOFA. SOFA - Topic Tag: Installation error. /instrument; . /feed; ; instrument – SOFA. SOFA - Topic Tag: instrument. /integrator-optimization-vec-multivec-deriv-coord-types; . /feed; ; integrator optimization vec multivec deriv coord types – SOFA. SOFA - Topic Tag: integrator optimization vec multivec deriv coord types. /interaction; . /feed; ; interaction – SOFA. SOFA - Topic Tag: interaction. /interactions; . /feed; ; interactions – SOFA. SOFA - Topic Tag: interactions. /interventionalradiologycontroller-inl; . /feed; ; InterventionalRadiologyController.inl – SOFA. SOFA - Topic Tag: InterventionalRadiologyController.inl. /is-sofa-right-for-this; . /feed; ; Is SOFA right for this? – SOFA. SOFA - Topic Tag: Is SOFA right for this?. /jacobian; . /feed; ; Jacobian – SOFA. SOFA - Topic Tag: Jacobian. /joint-constraint; . /feed; ; joint constraint – SOFA. SOFA - Topic Tag: joint constraint. /jointspringforcefield; . /feed; ; JointSpringForceField – SOFA. SOFA - Topic Tag: JointSpringForceField. /keyboard; . /feed; ; keyboard – SOFA. SOFA - Topic Tag: keyboard. /keyboard-handle-event-key-pressed; . /feed; ; keyboard handle event key pressed – SOFA. SOFA - Topic Tag: keyboard handle event key pressed. /kill; . /feed; ; kill – SOFA. SOFA - Topic Tag: kill. /knot; . /feed,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:450410,integrat,integrator,450410,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integrator']
Integrability,"ith CUDA. More...;  ; buffer_id_type bufferObject;  Optional associated buffer ID. More...;  . Static Protected Attributes; static int cptid = 0;  . Public Member Functions;  vector_device ();  ;  vector_device (const Size n);  ;  vector_device (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  vector_device (const std::initializer_list< T > &t);  ; bool isHostValid () const;  ; bool isDeviceValid (unsigned gpu) const;  ; void clear ();  ; void operator= (const vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ;  ~vector_device ();  ; Size size () const;  ; Size capacity () const;  ; bool empty () const;  ; void reserve (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void fastResize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector without calling constructors or destructors, and without synchronizing the device and host copy More...;  ; void recreate (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  resize the vector discarding any old values, without calling constructors or destructors, and without synchronizing the device and host copy More...;  ; void invalidateDevice ();  ; void invalidateHost ();  ; void memsetDevice (int v=0);  ; void memsetHost (int v=0);  ; void resize (Size s, Size WARP_SIZE=MemoryManager::BSIZE);  ; void swap (vector_device< T, MemoryManager, DataTypeInfoManager > &v);  ; const device_pointer deviceReadAt (int i, int gpu=MemoryManager::getBufferDevice()) const;  ; const device_pointer deviceRead (int gpu=MemoryManager::getBufferDevice()) const;  ; device_pointer deviceWriteAt (int i, int gpu=MemoryManager::getBufferDevice());  ; device_pointer deviceWrite (int gpu=MemoryManager::getBufferDevice());  ; const T * hostRead () const;  ; T * hostWrite ();  ; const T * hostReadAt (int i) const;  ; T * hostWriteAt (int i);  ; buffer_id_type bufferRead (bool create=false);  Get the Buffer Object ID for reading. More...;  ; buffer_id_type bufferWrite (bool create=false);  Get the Buffer Object ID for w",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:2459,synchroniz,synchronizing,2459,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['synchroniz'],['synchronizing']
Integrability,"iven (else vertexMass vector is being used) More...;  ; SingleLink< UniformMass< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UniformMass, DataTypes), SOFA_TEMPLATE(core::behavior::Mass, DataTypes));  ; sofa::core::objectmodel::ComponentState updateFromTotalMass ();  Functions updating data. More...;  ; sofa::core::object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:2635,message,messages,2635,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,1,['message'],['messages']
Integrability,"ixPickedParticleButtonSetting, MouseButtonSetting);  ; std::string getOperationType () override;  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html:2937,depend,dependent,2937,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_fix_picked_particle_button_setting.html,1,['depend'],['dependent']
Integrability,"ize ; nEdges). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [2/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ addEdgesWarning() [3/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< core::topology::EdgeAncestorElem > & ; ancestorElems . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [4/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [5/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protectedvirtual . Sends a message to warn that some edges were added in t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:27936,message,message,27936,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"ject given its name. . ◆ getAttribute(). const char * sofa::core::objectmodel::BaseObjectDescription::getAttribute ; (; const std::string & ; attr, . const char * ; defaultVal = nullptr . ). virtual . Get an attribute given its name (return defaultVal if not present) . ◆ getAttributeAsFloat(). float sofa::core::objectmodel::BaseObjectDescription::getAttributeAsFloat ; (; const std::string & ; attr, . const float ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get an attribute converted to a float given its name. returns defaultVal if not present or in case the attribute cannot be parsed totally adds a message in the logError if the attribute cannot be totally parsed. . ◆ getAttributeAsInt(). int sofa::core::objectmodel::BaseObjectDescription::getAttributeAsInt ; (; const std::string & ; attr, . const int ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get an attribute converted to a int given its name. returns defaultVal if not present or in case the attribute cannot be parsed totally adds a message in the logError if the attribute cannot be totally parsed. . ◆ getAttributeList(). template<class T > . void sofa::core::objectmodel::BaseObjectDescription::getAttributeList ; (; T & ; container); const. inline . ◆ getAttributeMap(). const BaseObjectDescription::AttributeMap & sofa::core::objectmodel::BaseObjectDescription::getAttributeMap ; (; ); const. virtual . ◆ getBaseFile(). std::string sofa::core::objectmodel::BaseObjectDescription::getBaseFile ; (; ). virtual . Get the file where this description was read from. Useful to resolve relative file paths. ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ getErrors(). std::vector< std::string > const& sofa::core::objectmodel::BaseObjectDescription::getErrors ; (; ); const. inline . ◆ getFullName(). std::string sofa::core::objectmodel::BaseObjectDescription::getFullName ; (; ). virtual . Get the full name of this object (i.e. concatenation if all the names of its ancestors and itself) . ◆ getName(). std::str",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:5147,message,message,5147,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['message'],['message']
Integrability,"ject. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  TriangleSetTopologyModifier ();  ;  ~TriangleSetTopologyModifier () override;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList);  Sends a message to warn that some triangles were added in this topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles);  Effectively Add some triangles. Test precondition and apply: More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; virtual void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of triangles. Eventually remove isolated edges and vertices. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this to",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:18014,message,message,18014,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"ject. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Static Public Member Functions; static std::string GetCustomTemplateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vector3, sofa::type::Vec3);  ; void integrateMesh ();  integrates the whole mesh More...;  ; void integrateTriangle (type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2);  ; void generateRigid ();  generates the RigidMass from the mesh integral More...;  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use the internalUpdate mechanism, so that only update/doUpdate is used. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doDelInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:13940,integrat,integrateMesh,13940,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,2,['integrat'],"['integrateMesh', 'integrates']"
Integrability,"k. More...;  ; virtual void onKeyReleasedEvent (core::objectmodel::KeyreleasedEvent *);  Key Release event callback. More...;  ; virtual void onJoystickEvent (core::objectmodel::JoystickEvent *);  Joystick event callback. More...;  ; virtual void onEndAnimationStep (const double);  End Animation event callback. More...;  ; virtual void onGUIEvent (core::objectmodel::GUIEvent *);  GUI event callback. More...;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:2893,depend,dependent,2893,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,1,['depend'],['dependent']
Integrability,"kealiascomponent::MakeAliasComponent:. [legend]; Detailed Description; I use a per-file namespace so that I can employ the 'using' keywords without fearing it will leak names into the global namespace. When closing this namespace selected object from this per-file namespace are then imported into their parent namespace. for ease of use; A component to add alias to other components. . Public Attributes; Data< std::string > d_targetcomponent;  The component class for which to create an alias. More...;  ; Data< std::string > d_alias;  The new alias of the component. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MakeAliasComponent, core::objectmodel::BaseObject);  ;  MakeAliasComponent ();  ;  ~MakeAliasComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html:1472,message,messages,1472,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1makealiascomponent_1_1_make_alias_component.html,1,['message'],['messages']
Integrability,"l &link);  ; void reject () override;  ; void accept () override;  ; void closeNow ();  ; void closeEvent (QCloseEvent *) override;  ; void updateTables ();  ; virtual void updateValues ();  . Protected Slots; void clearMessages ();  . Attribute details. ◆ basenode. core::objectmodel::Base* sofa::gui::qt::ModifyObject::basenode. protected . ◆ buttonUpdate. QPushButton* sofa::gui::qt::ModifyObject::buttonUpdate. protected . ◆ data_. core::objectmodel::BaseData* sofa::gui::qt::ModifyObject::data_. protected . ◆ dialogFlags_. const ModifyObjectFlags sofa::gui::qt::ModifyObject::dialogFlags_. protected . ◆ dialogTab. QTabWidget* sofa::gui::qt::ModifyObject::dialogTab. protected . ◆ Id_. void* sofa::gui::qt::ModifyObject::Id_. protected . ◆ item_. QTreeWidgetItem* sofa::gui::qt::ModifyObject::item_. protected . ◆ m_numMessages. int sofa::gui::qt::ModifyObject::m_numMessages. protected . ◆ m_tabs. std::vector< QTabulationModifyObject* > sofa::gui::qt::ModifyObject::m_tabs. protected . ◆ messageEdit. QTextBrowser* sofa::gui::qt::ModifyObject::messageEdit. protected . ◆ messageTab. QWidget* sofa::gui::qt::ModifyObject::messageTab. protected . Constructor details. ◆ ModifyObject(). sofa::gui::qt::ModifyObject::ModifyObject ; (; void * ; Id, . QTreeWidgetItem * ; item_clicked, . QWidget * ; parent, . const ModifyObjectFlags & ; dialogFlags, . const char * ; name = nullptr, . bool ; modal = false, . Qt::WindowFlags ; f = Qt::WindowType::Widget . ). explicit . ◆ ~ModifyObject(). sofa::gui::qt::ModifyObject::~ModifyObject ; (; ). inlineoverride . Function details. ◆ accept. void sofa::gui::qt::ModifyObject::accept ; (; ). overrideslot . ◆ beginDataModification. void sofa::gui::qt::ModifyObject::beginDataModification ; (; sofa::core::objectmodel::BaseData * ; data). signal . ◆ beginObjectModification. void sofa::gui::qt::ModifyObject::beginObjectModification ; (; sofa::core::objectmodel::Base * ; object). signal . ◆ clearMessages. void sofa::gui::qt::ModifyObject::clearMessages ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html:3041,message,messageEdit,3041,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object.html,1,['message'],['messageEdit']
Integrability,"l > const &actual);  ; template<sofa::Size L, sofa::Size C, class real > ; void EXPECT_MAT_NEAR (sofa::type::Mat< L, C, real > const &expected, sofa::type::Mat< L, C, real > const &actual, real abs_error);  . Variables; const SReal g_minDeltaErrorRatio = .1;  acceptable ratio between finite difference delta and error threshold More...;  . Detailed Description; This file organization:; PRIVATE DECLARATION (the class that are only used internally); PRIVATE DEFINITION (the implementation of the private classes); PUBLIC DEFINITION (the implementation of the public classes). This file is providing an API to combine gtest and msg_* API. The underlying idea is to be able to test sofa's message.; The API is composed of two macro:; EXPECT_MSG_EMIT(...);; EXPECT_MSG_NOEMIT(...);. The first one generates a gtest failure when a message of a given type is not emitted. So You need to use it express that the good behavior from the object is to rise a message.; The second one generates a gtest failure when a message of a given type is emitted.; Examples of use: for(BaseLoader* b : objectlist) { EXPECT_MESSAGE_NOEMIT(Warning); EXPECT_MESSAGE_EMIT(Error); b->load(""Invalid file""); }; To work the API need to a specific handler to be install in the messaging system. This means that we need to install the message handler using. This is not done automatically To not add something with a linear time complexity in the process.; Example of installation: MessageDispatcher::addHandler( MainGtestMessageHandler::getInstance() ) ;; NB: This is done automatically if you are inhering from Sofa_test. ; Function Documentation. ◆ cleanup(). SOFA_TESTING_API void sofa::testing::cleanup ; (; ). Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ copyFromData(). template<class Vector , class ReadData > . void sofa::testing::copyFromData ; (; Vector & ; v, . const ReadData & ; d . ). Resize the Vector and copy it from the Data. . ◆ copyToDa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:3608,message,message,3608,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['message'],['message']
Integrability,"l coordinates. More...;  ; void setGravity (const Vec3 &) override;  Gravity in local coordinates. More...;  ; SReal getDt () const override;  Simulation timestep. More...;  ; SReal getTime () const override;  Simulation time. More...;  ; bool getAnimate () const override;  Animation flag. More...;  ; void setDt (SReal dt) override;  Simulation timestep. More...;  ; virtual void setTime (SReal t);  Simulation time. More...;  ; void setAnimate (bool val) override;  Animation flag. More...;  ; void setChangeSleepingState (bool val) override;  Sleeping state change of the context. More...;  ; virtual void setDisplayWorldGravity (bool val);  Display flags: Gravity. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseContext;  SOFA_CLASS (BaseContext, Base);  ; ComponentNameHelper & getNameHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=Sea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:19145,interface,interface,19145,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['interface'],['interface']
Integrability,"l force fields. A force field computes forces applied to one or more simulated body given its current position and velocity.; Forces can be internal to a given body (attached to one MechanicalState, see the ForceField class), or link several bodies together (such as contact forces, see the InteractionForceField class).; For implicit integration schemes, it must also compute the derivative ( df, given a displacement dx ). . Public Attributes; Rayleigh Damping (stiffness contribution); Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Vector operations; virtual void addForce (const MechanicalParams *mparams, MultiVecDerivId fId)=0;  Given the current position and velocity states, update the current force vector by computing and adding the forces associated wit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:1586,message,messages,1586,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['message'],['messages']
Integrability,"l parameters and can be used when no local context is defined. . ◆ getDt(). SReal sofa::core::objectmodel::BaseContext::getDt ; (; ); const. virtual . Simulation timestep. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getGravity(). const BaseContext::Vec3 & sofa::core::objectmodel::BaseContext::getGravity ; (; ); const. virtual . Gravity in local coordinates. ; Gravity in the world coordinate system. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getMass(). behavior::BaseMass * sofa::core::objectmodel::BaseContext::getMass ; (; ); const. virtual . Mass. . ◆ getMechanicalState(). core::behavior::BaseMechanicalState * sofa::core::objectmodel::BaseContext::getMechanicalState ; (; ); const. virtual . Mechanical Degrees-of-Freedom. ; Reimplemented in sofa::simulation::Node. ◆ getMeshTopology(). core::topology::BaseMeshTopology * sofa::core::objectmodel::BaseContext::getMeshTopology ; (; SearchDirection ; dir = SearchUp); const. virtual . Mesh Topology (unified interface for both static and dynamic topologies) . ◆ getMeshTopologyLink(). core::topology::BaseMeshTopology * sofa::core::objectmodel::BaseContext::getMeshTopologyLink ; (; SearchDirection ; dir = SearchUp); const. virtual . Mesh Topology (unified interface for both static and dynamic topologies) ; Reimplemented in sofa::simulation::graph::DAGNode, and sofa::simulation::Node. ◆ getNameHelper(). ComponentNameHelper& sofa::core::objectmodel::BaseContext::getNameHelper ; (; ). inline . Returns utilitary object to uniquely name objects in the context. . ◆ getObject() [1/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . const std::string & ; path . ); const. virtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObject() [2/3]. void * sofa::core::objectmodel::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:24380,interface,interface,24380,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['interface'],['interface']
Integrability,"l::BaseLink::CreateStringData ; (; BaseData * ; data). static . ◆ CreateStringPath(). std::string sofa::core::objectmodel::BaseLink::CreateStringPath ; (; Base * ; object, . Base * ; from . ). static . ◆ getCounter(). int sofa::core::objectmodel::BaseLink::getCounter ; (; ); const. inline . Return the number of changes since creation This can be used to efficiently detect changes . ◆ getDestClass(). virtual const BaseClass* sofa::core::objectmodel::BaseLink::getDestClass ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >, and sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >. ◆ getFlag(). bool sofa::core::objectmodel::BaseLink::getFlag ; (; LinkFlagsEnum ; flag); const. inline . Get one flag. . ◆ getHelp(). const std::string& sofa::core::objectmodel::BaseLink::getHelp ; (; ); const. inline . Get help message. . ◆ getLinkedBase(). Base* sofa::core::objectmodel::BaseLink::getLinkedBase ; (; std::size_t ; index = 0); const. inline . ◆ getLinkedPath(). std::string sofa::core::objectmodel::BaseLink::getLinkedPath ; (; const std::size_t ; index = 0); const. ◆ getName(). const std::string& sofa::core::objectmodel::BaseLink::getName ; (; ); const. inline . ◆ getOwner(). Base* sofa::core::objectmodel::BaseLink::getOwner ; (; ); const. inline . ◆ getOwnerBase(). virtual Base* sofa::core::objectmodel::BaseLink::getOwnerBase ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >, sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags &~BaseLink::FLAG_MULTILINK >, and sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags|BaseLink::FLAG_MULTILINK >. ◆ getOwnerClass(). virtual const BaseClass* sofa::core::objectmodel::BaseLink::getOwnerClass ; (; ); const. pure virtual . Implemented in sofa::core::objectmodel::TLink< TOwnerType",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html:6186,message,message,6186,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_link.html,1,['message'],['message']
Integrability,"l::BaseObject);  ; virtual void solve (const core::ExecParams *, SReal, MultiVecCoordId, MultiVecDerivId)=0;  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getIntegrationFactor (int, int) const;  ; virtual SReal getSolutionIntegrationFactor (int) const;  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html:2481,depend,dependent,2481,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_ode_solver.html,1,['depend'],['dependent']
Integrability,"l;  booleans indicating if each Bezier triangle is rational or integral More...;  ; Data< Real > f_radius;  input sphere radius More...;  ; Data< Coord > f_origin;  sphere center point More...;  ; Data< size_t > f_tessellationDegree;  Degree of tessellation of each Platonic triangulation. More...;  ; Data< std::string > f_platonicSolidName;  name of the Platonic triangulation used to create the spherical dome : either ""tetrahedron"", ""octahedron"" or ""icosahedron"" More...;  ; PlatonicTriangulation platonicSolid;  the type of platonic solid used for the tessellation More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GenerateSphere, DataTypes), core::DataEngine);  ;  GenerateSphere ();  ;  ~GenerateSphere () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where yo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html:2438,message,messages,2438,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_sphere.html,1,['message'],['messages']
Integrability,"lModel. NodeSequence<sofa::core::visual::VisualModel> sofa::simulation::Node::visualModel. Constructor details. ◆ Node(). sofa::simulation::Node::Node ; (; const std::string & ; name = """"). protected . ◆ ~Node(). sofa::simulation::Node::~Node ; (; ). overrideprotectedvirtual . Function details. ◆ addChild(). void sofa::simulation::Node::addChild ; (; BaseNode::SPtr ; node). finalvirtual . Pure Virtual method from BaseNode Add a child node ; Implements sofa::core::objectmodel::BaseNode. ◆ addListener(). void sofa::simulation::Node::addListener ; (; MutationListener * ; obj). virtual . ◆ addObject(). bool sofa::simulation::Node::addObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; obj, . sofa::core::objectmodel::TypeOfInsertion ; insertionLocation = sofa::core::objectmodel::TypeOfInsertion::AtEnd . ). finalvirtual . Add an object and return this. Detect the implemented interfaces and add the object to the corresponding lists. ; Add an object. Detect the implemented interfaces and add the object to the corresponding lists. ; Implements sofa::core::objectmodel::BaseNode. ◆ create() [1/2]. Node::SPtr sofa::simulation::Node::create ; (; const std::string & ; name). static . ◆ create() [2/2]. template<class RealObject > . Node::SPtr sofa::simulation::Node::create ; (; RealObject * ; , . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). static . ◆ createChild(). virtual Node::SPtr sofa::simulation::Node::createChild ; (; const std::string & ; nodeName). pure virtual . Create, add, then return the new child of this Node. ; Implemented in sofa::simulation::graph::DAGNode. ◆ doAddChild(). virtual void sofa::simulation::Node::doAddChild ; (; BaseNode::SPtr ; node). pure virtual . Delegate methods overridden in child classes Add a child node ; Implemented in sofa::simulation::graph::DAGNode. ◆ doAddObject(). bool sofa::simulation::Node::doAddObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; obj, . sofa::core::objectmodel::TypeOfInsertion ; insertionLocation ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:33864,interface,interfaces,33864,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interfaces']
Integrability,"lags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html:11850,message,messages,11850,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_add_frame_button_setting.html,3,['message'],['messages']
Integrability,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; IS_CONSTRAINED_27sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html:28896,integrat,integrateMass,28896,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,1,['integrat'],['integrateMass']
Integrability,"lags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html:23760,integrat,integrateMass,23760,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,2,['integrat'],['integrateMass']
Integrability,"lambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html:6251,depend,dependent,6251,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,11,['depend'],['dependent']
Integrability,"lass apply a permutation to a set of indices . Public Attributes; core::objectmodel::Data< VecValue > f_in;  input indices More...;  ; core::objectmodel::Data< VecIndex > f_indices;  array containing in ith cell the input index corresponding to the output index i (or reversively if transpose=true) More...;  ; core::objectmodel::Data< VecValue > f_out;  Output indices. More...;  ; core::objectmodel::Data< std::string > f_outStr;  Output indices, converted as a string. More...;  ; core::objectmodel::Data< bool > f_transpose;  Should the transposed mapping be used ? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MapIndices, T), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html:1579,message,messages,1579,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_map_indices.html,1,['message'],['messages']
Integrability,"late<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access templa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:6199,wrap,wrapper,6199,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['wrap'],['wrapper']
Integrability,"late<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirecti",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:6643,wrap,wrapper,6643,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['wrap'],['wrapper']
Integrability,"lation::Node::create ; (; const std::string & ; name). static . ◆ create() [2/2]. template<class RealObject > . Node::SPtr sofa::simulation::Node::create ; (; RealObject * ; , . sofa::core::objectmodel::BaseObjectDescription * ; arg . ). static . ◆ createChild(). virtual Node::SPtr sofa::simulation::Node::createChild ; (; const std::string & ; nodeName). pure virtual . Create, add, then return the new child of this Node. ; Implemented in sofa::simulation::graph::DAGNode. ◆ doAddChild(). virtual void sofa::simulation::Node::doAddChild ; (; BaseNode::SPtr ; node). pure virtual . Delegate methods overridden in child classes Add a child node ; Implemented in sofa::simulation::graph::DAGNode. ◆ doAddObject(). bool sofa::simulation::Node::doAddObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; obj, . sofa::core::objectmodel::TypeOfInsertion ; insertionLocation = sofa::core::objectmodel::TypeOfInsertion::AtEnd . ). protectedvirtual . Add an object. Detect the implemented interfaces and add the object to the corresponding lists. . ◆ doExecuteVisitor(). virtual void sofa::simulation::Node::doExecuteVisitor ; (; Visitor * ; action, . bool ; precomputedOrder = false . ). pure virtual . Execute a recursive action starting from this node. ; Implemented in sofa::simulation::graph::DAGNode. ◆ doMoveChild(). virtual void sofa::simulation::Node::doMoveChild ; (; BaseNode::SPtr ; node, . BaseNode::SPtr ; prev_parent . ). pure virtual . Move a node from another node. ; Implemented in sofa::simulation::graph::DAGNode. ◆ doMoveObject(). void sofa::simulation::Node::doMoveObject ; (; sofa::core::objectmodel::BaseObject::SPtr ; sobj, . Node * ; prev_parent . ). protectedvirtual . Remove an object. . ◆ doRemoveChild(). virtual void sofa::simulation::Node::doRemoveChild ; (; BaseNode::SPtr ; node). pure virtual . Remove a child node. ; Implemented in sofa::simulation::graph::DAGNode. ◆ doRemoveObject(). bool sofa::simulation::Node::doRemoveObject ; (; sofa::core::objectmodel::BaseObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:34993,interface,interfaces,34993,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interfaces']
Integrability,"lay shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Eve",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:5698,depend,dependent,5698,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,6,['depend'],['dependent']
Integrability,"lay shadow-casting surfaces. More...;  ; virtual void parallelUpdateVisual ();  used to update the model if necessary. More...;  ; virtual bool addBBox (SReal *, SReal *);  used to add the bounding-box of this visual model to the given bounding box in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyCh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:6133,depend,dependent,6133,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,3,['depend'],['dependent']
Integrability,"ld< DataTypes1, DataTypes2 >::MixedInteractionForceField ; (; MechanicalState< DataTypes1 > * ; mm1 = nullptr, . MechanicalState< DataTypes2 > * ; mm2 = nullptr . ). explicitprotected . ◆ ~MixedInteractionForceField(). template<class DataTypes1 , class DataTypes2 > . sofa::core::behavior::MixedInteractionForceField< DataTypes1, DataTypes2 >::~MixedInteractionForceField. overrideprotected . Function details. ◆ addDForce() [1/2]. template<class TDataTypes1 , class TDataTypes2 > . virtual void sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >::addDForce ; (; const MechanicalParams * ; mparams, . DataVecDeriv1 & ; df1, . DataVecDeriv2 & ; df2, . const DataVecDeriv1 & ; dx1, . const DataVecDeriv2 & ; dx2 . ). pure virtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += K dx $; This method must be implemented by the component, and is usually called by the generic MixedInteractionForceField::addDForce() method. ; Implemented in sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >. ◆ addDForce() [2/2]. template<class DataTypes1 , class DataTypes2 > . void sofa::core::behavior::MixedInteractionForceField< DataTypes1, DataTypes2 >::addDForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dfId . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:20463,integrat,integrated,20463,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,1,['integrat'],['integrated']
Integrability,"leSetTopologyModifier ();  ;  ~TriangleSetTopologyModifier () override;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList);  Sends a message to warn that some triangles were added in this topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:22600,message,message,22600,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"lease event callback. More...;  ; virtual void onJoystickEvent (core::objectmodel::JoystickEvent *);  Joystick event callback. More...;  ; virtual void onBeginAnimationStep (const double);  Begin Animation event callback. More...;  ; virtual void onEndAnimationStep (const double);  End Animation event callback. More...;  ; virtual void onGUIEvent (core::objectmodel::GUIEvent *);  GUI event callback. More...;  ; void handleEvent (core::objectmodel::Event *) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:3308,depend,dependent,3308,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,1,['depend'],['dependent']
Integrability,"ler *_TopologyHandler, sofa::geometry::ElementType elementType);  Remove a TopologyHandler, linked to a certain type of Element. More...;  ; void resetTopologyHandlerList ();  Free each Topology changes in the list and remove them from the list. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html:21576,depend,dependent,21576,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_container.html,8,['depend'],['dependent']
Integrability,"lic Attributes; Data< bool > d_shadowsEnabled;  Enable Shadow in the scene. (default=0) More...;  ; Data< bool > d_softShadowsEnabled;  If Shadows enabled, Enable Variance Soft Shadow in the scene. (default=0) More...;  ; Data< sofa::type::RGBAColor > d_ambient;  Ambient lights contribution (Vec4f)(default=[0.0f,0.0f,0.0f,0.0f]) More...;  ; Data< bool > d_drawIsEnabled;  enable/disable drawing of lights shadow textures. (default=false) More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LightManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html:1654,message,messages,1654,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_light_manager.html,1,['message'],['messages']
Integrability,"lic Attributes; SingleLink< AreaMapping< TIn, TOut >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  ;  Static Public Attributes inherited from sofa::component::mapping::nonlinear::BaseNonLinearMapping< TIn, TOut, tru",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html:1593,message,messages,1593,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_area_mapping.html,1,['message'],['messages']
Integrability,"lic Member Functions |; List of all members . sofa::component::linearsolver::ordering::NaturalOrderingMethod Class Reference . #include <NaturalOrderingMethod.h>. Inheritance diagram for sofa::component::linearsolver::ordering::NaturalOrderingMethod:. [legend]. Public Member Functions;  SOFA_CLASS (NaturalOrderingMethod, core::behavior::BaseOrderingMethod);  ; std::string methodName () const override;  ; void computePermutation (const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod;  ~BaseOrderingMethod () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method.html:1266,depend,dependent,1266,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_natural_ordering_method.html,1,['depend'],['dependent']
Integrability,"link);  . Static Public Member Functions; template<class T > ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Protected Member Functions;  CollisionResponse ();  ;  ~CollisionResponse () override=default;  ; void changeInstance (Instance inst) override;  ; void contactCreationError (std::stringstream &errorStream, const core::CollisionModel *model1, const core::CollisionModel *model2, std::string &responseUsed);  Write messages in stringstream in case a contact failed to be created. More...;  ; void createNewContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  Create contacts if it has not been created before. More...;  ; void removeInactiveContacts (const DetectionOutputMap &outputsMap, Size &nbContact);  ; void setNumberOfContacts () const;  ;  Protected Member Functions inherited from sofa::core::collision::ContactManager;  ContactManager ();  Constructor. More...;  ;  ~ContactManager () override;  Destructor. More...;  ; void changeInstance (Instance inst) override;  ;  Protected Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  CollisionAlgorithm ();  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of th",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html:14157,message,messages,14157,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_collision_response.html,1,['message'],['messages']
Integrability,"locitySolver.h>. Inheritance diagram for sofa::component::odesolver::forward::DampVelocitySolver:. [legend]; Detailed Description; Velocity damping and thresholding. This is not an ODE solver, but it can be used as a post-process after a real ODE solver. . Public Attributes; sofa::core::objectmodel::RenamedData< SReal > rate;  ; sofa::core::objectmodel::RenamedData< SReal > threshold;  ; Data< SReal > d_rate;  Factor used to reduce the velocities. Typically between 0 and 1. More...;  ; Data< SReal > d_threshold;  Threshold under which the velocities are canceled. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (DampVelocitySolver, sofa::core::behavior::OdeSolver);  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int) const override;  ;  Public Member Functions inherited from sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html:1366,message,messages,1366,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,1,['message'],['messages']
Integrability,"logy (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:20156,wrap,wrapper,20156,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['wrap'],['wrapper']
Integrability,"logy. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:20272,message,message,20272,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,2,['message'],['message']
Integrability,"lower, mapped) model. More...;  ; sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) override;  ; void disable () override;  ;  Public Member Functions inherited from sofa::core::BaseMapping;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html:11842,depend,dependent,11842,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_mapping.html,1,['depend'],['dependent']
Integrability,"lp, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedralFEMForceFieldAndMass< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprote",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html:23612,integrat,integrateVolume,23612,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedral_f_e_m_force_field_and_mass-members.html,1,['integrat'],['integrateVolume']
Integrability,"lp, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::forward::RungeKutta2Solver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::forward::RungeKutta2Solver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS(). sofa::component::odesolver::forward::RungeKutta2Solver::SOFA_CLASS ; (; RungeKutta2Solver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::RungeKutta2Solver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverforwardRungeKutta2Solver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html:14904,integrat,integration,14904,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta2_solver.html,1,['integrat'],['integration']
Integrability,"lp, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::forward::RungeKutta4Solver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::forward::RungeKutta4Solver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS(). sofa::component::odesolver::forward::RungeKutta4Solver::SOFA_CLASS ; (; RungeKutta4Solver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::RungeKutta4Solver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverforwardRungeKutta4Solver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta4_solver.html:14904,integrat,integration,14904,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta4_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_runge_kutta4_solver.html,1,['integrat'],['integration']
Integrability,"lper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class TriangleSetGeometryAlgorithms;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:26964,message,messages,26964,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['messages']
Integrability,"lsolver; ; SOFA - Topic: [SOLVED] How to use the component SparseLDLSolver?. /how-to-use-the-recordedcamera-component; . /feed; ; [SOLVED] How to use the RecordedCamera component? – SOFA. SOFA - Topic: [SOLVED] How to use the RecordedCamera component?. /how-to-use-the-sofa-mesh-partition-tools; ; SOFA - Topic: [SOLVED] How to use the Sofa mesh partition tools?. /how-to-use-the-xml-api; ; SOFA - Topic: [SOLVED] How to use the XML API?. /how-to-use-tools-for-multi-material-on-windows; ; SOFA - Topic: How to use Tools for multi-material on Windows?. /how-to-vtkexport-pointsettopologycontainer-points; ; SOFA - Topic: How to VTKexport PointSetTopologyContainer points. /how-to-write-a-scene-file; ; SOFA - Topic: [SOLVED] How to write a scene file. /hyperelastic-material-parameters-in-sofa; ; SOFA - Topic: [SOLVED] Hyperelastic Material Parameters in SOFA. /hyperelastic-materials-related-paper; ; SOFA - Topic: [SOLVED] Hyperelastic materials related paper. /i-am-confused-on-the-dependencies-when-compiling-sofa-on-win10-vs2015; . /feed; ; [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015 – SOFA. SOFA - Topic: [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015. /i-could-not-find-the-modeler-module; ; SOFA - Topic: [SOLVED] I could not find the ""Modeler"" module. /image-background; ; SOFA - Topic: [SOLVED] Image Background. /image-plugin-compile-problem; . /feed; ; [SOLVED] Image plugin compile problem – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Image plugin compile problem. /9; ; SOFA - Topic: [SOLVED] Image plugin compile problem. SOFA - Topic: [SOLVED] Image plugin compile problem. /image-viewer-in-image-plugin; ; SOFA - Topic: [SOLVED] Image Viewer in Image Plugin. /implement-a-velocity-constraint; ; SOFA - Topic: Implement a velocity constraint. /implement-our-own-linearsolver; ; SOFA - Topic: [SOLVED] Implement our own LinearSolver. /import-a-vtk-file; . /embed; ; SOFA - Topic: [SOLVED] import a vtk file. /feed",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:331727,depend,dependencies-when-compiling-sofa-on-,331727,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependencies-when-compiling-sofa-on-']
Integrability,"lude <IndexValueMapper.h>. Inheritance diagram for sofa::component::engine::transform::IndexValueMapper< DataTypes >:. [legend]. Public Attributes; Data< sofa::type::vector< Real > > f_inputValues;  Already existing values (can be empty) More...;  ; Data< sofa::type::vector< Index > > f_indices;  Indices to map value on. More...;  ; Data< Real > f_value;  Value to map indices on. More...;  ; Data< sofa::type::vector< Real > > f_outputValues;  New map between indices and values. More...;  ; Data< Real > p_defaultValue;  Default value for indices without any value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(IndexValueMapper, DataTypes), sofa::core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html:1392,message,messages,1392,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_index_value_mapper.html,1,['message'],['messages']
Integrability,"lude <OrderIndependentTransparencyManager.h>; Utility to manage transparency (translucency) into an Opengl scene. ; More... Inheritance diagram for sofa::gl::component::shader::OrderIndependentTransparencyManager:. [legend]; Detailed Description; Utility to manage transparency (translucency) into an Opengl scene. ; NoteReference: http://jcgt.org/published/0002/02/09/paper.pdf . Public Attributes; Data< float > depthScale;  Depth scale. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (OrderIndependentTransparencyManager, core::visual::VisualManager);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reinit () override;  Update method called when variables use",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html:1383,message,messages,1383,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_order_independent_transparency_manager.html,1,['message'],['messages']
Integrability,"lude <ROIValueMapper.h>. Inheritance diagram for sofa::component::engine::transform::ROIValueMapper:. [legend]; Detailed Description; This class returns a list of values from value-indices pairs . Public Attributes; Data< unsigned int > nbROIs;  size of indices/value vector More...;  ; core::objectmodel::vectorData< type::vector< sofa::Index > > f_indices;  ; core::objectmodel::vectorData< SReal > f_value;  ; Data< sofa::type::vector< SReal > > f_outputValues;  New vector of values. More...;  ; Data< SReal > p_defaultValue;  Default value for indices out of ROIs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (ROIValueMapper, Inherited);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Real, SReal);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void par",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html:1344,message,messages,1344,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_r_o_i_value_mapper.html,1,['message'],['messages']
Integrability,"ludes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (WriteState, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html:4590,depend,dependent,4590,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_state.html,1,['depend'],['dependent']
Integrability,lues for method parameters. . ◆ df() [1/2]. ConstMultiVecDerivId& sofa::core::MechanicalParams::df ; (; ). inline . ◆ df() [2/2]. const ConstMultiVecDerivId& sofa::core::MechanicalParams::df ; (; ); const. inline . ◆ dt(). SReal sofa::core::MechanicalParams::dt ; (; ); const. inline . Time step. . ◆ dx() [1/2]. ConstMultiVecDerivId& sofa::core::MechanicalParams::dx ; (; ). inline . ◆ dx() [2/2]. const ConstMultiVecDerivId& sofa::core::MechanicalParams::dx ; (; ); const. inline . ◆ energy(). bool sofa::core::MechanicalParams::energy ; (; ); const. inline . Should the kinematic and potential energies be computed ? . ◆ f() [1/2]. ConstMultiVecDerivId& sofa::core::MechanicalParams::f ; (; ). inline . ◆ f() [2/2]. const ConstMultiVecDerivId& sofa::core::MechanicalParams::f ; (; ); const. inline . ◆ getKFactorUsed(). bool sofa::core::MechanicalParams::getKFactorUsed ; (; ); const. inline . ◆ implicit(). bool sofa::core::MechanicalParams::implicit ; (; ); const. inline . Is the time integration scheme implicit ? . ◆ implicitPosition(). const SReal& sofa::core::MechanicalParams::implicitPosition ; (; ); const. inline . ◆ implicitVelocity(). const SReal& sofa::core::MechanicalParams::implicitVelocity ; (; ); const. inline . ◆ kFactor(). SReal sofa::core::MechanicalParams::kFactor ; (; ); const. inline . Stiffness matrix contributions factor (for implicit schemes) . ◆ kFactorIncludingRayleighDamping(). SReal sofa::core::MechanicalParams::kFactorIncludingRayleighDamping ; (; SReal ; rayleighStiffness); const. inline . Returnskfactor + bfactor*rayleighStiffness . ◆ mFactor(). SReal sofa::core::MechanicalParams::mFactor ; (; ); const. inline . Mass matrix contributions factor (for implicit schemes) . ◆ mFactorIncludingRayleighDamping(). SReal sofa::core::MechanicalParams::mFactorIncludingRayleighDamping ; (; SReal ; rayleighMass); const. inline . Returnsmfactor + bfactor*rayleighMass . ◆ operator=(). MechanicalParams * sofa::core::MechanicalParams::operator= ; (; const Mechanica,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:12117,integrat,integration,12117,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['integrat'],['integration']
Integrability,"ly use in GPU version) . ◆ d_initialPoints. template<class DataTypes > . Data< VecCoord > sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_initialPoints. Initial Position. . ◆ d_localStiffnessFactor. template<class DataTypes > . Data<VecReal> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_localStiffnessFactor. Allow specification of different stiffness per element. If there are N element and M values are specified, the youngModulus factor for element i would be localStiffnessFactor[i*M/N]. . ◆ d_method. template<class DataTypes > . Data<std::string> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_method. ""small"", ""large"" (by QR), ""polar"" or ""svd"" displacements . ◆ d_plasticCreep. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_plasticCreep. Plastic Creep Factor * dt [0,1]. Warning this factor depends on dt. . ◆ d_plasticMaxThreshold. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_plasticMaxThreshold. ◆ d_plasticYieldThreshold. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_plasticYieldThreshold. Plastic Yield Threshold (2-norm of the strain) . ◆ d_showElementGapScale. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_showElementGapScale. draw gap between elements (when showWireFrame is disabled) [0,1]: 0: no gap, 1: no element . ◆ d_showStressAlpha. template<class DataTypes > . Data<float> sofa::component::solidmechanics::fem::elastic::TetrahedronFEMForceField< DataTypes >::d_showStressAlpha. Alpha for vonMises visualisation. . ◆ d_showStressColorMap. template<class DataTypes > . Data<std::string> sofa::component::solidmechanics::fem::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:39497,depend,depends,39497,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['depend'],['depends']
Integrability,"m > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:27287,message,message,27287,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"m for sofa::component::io::mesh::SphereLoader:. [legend]. Public Attributes; Data< type::vector< sofa::type::Vec3 > > d_positions;  Sphere centers. More...;  ; Data< type::vector< SReal > > d_radius;  Radius of each sphere. More...;  ; Data< type::Vec3 > d_scale;  Scale applied to sphere positions & radius. More...;  ; Data< type::Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< type::Vec3 > d_translation;  Translation applied to sphere positions. More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< sofa::type::Vec3 > m_savedPositions;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html:1387,message,messages,1387,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_sphere_loader.html,1,['message'],['messages']
Integrability,"m2);  ; bool zeroCollision () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:3416,depend,dependent,3416,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,3,['depend'],['dependent']
Integrability,"m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >; SingleLink< SingleStateAccessor< TDataTypes >, MechanicalState< TDataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialLinearMovementProjectiveConstraint, TDataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, TDataTypes));  ; void clearIndices ();  methods to add/remove some indices, keyTimes, keyMovement More...;  ; void addIndex (Index index);  ; void removeIndex (Index index);  ; void clearKeyMovements ();  ; void addKeyMovement (Real time, Deriv movement);  Add a new key movement. More...;  ; void init () override;  – Constraint interface More...;  ; void reset () override;  Reset to initial state. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const core::MechanicalParams *mparams, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Matrix to constrained space using offset parameter. More...;  ; void applyConstraint (const core::MechanicalParams *mparams, linearalgebra::BaseVector *vector, const sofa::core::behavior::MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; void applyConstraint (sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html:7237,interface,interface,7237,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_linear_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"mber Functions inherited from sofa::core::behavior::BaseProjectiveConstraintSet;  SOFA_ABSTRACT_CLASS (BaseProjectiveConstraintSet, objectmodel::BaseObject);  ; int getGroup () const;  ; void setGroup (int g);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual void projectResponse (const MechanicalParams *, double **);  Project the compliance Matrix to constrained space. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:8297,depend,dependent,8297,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,5,['depend'],['dependent']
Integrability,"mber Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::simulation::graph::DAGNode Class Reference . #include <DAGNode.h>. Inheritance diagram for sofa::simulation::graph::DAGNode:. [legend]; Detailed Description; Define the structure of the scene as a Directed Acyclic Graph. Contains component objects (as pointer lists) and parents/childs (as DAGNode objects).; The visitor traversal is performed in two passes:; a complete top-down traversal; then a complete bottom-up traversal in the exact invert order than the top-down traversal NB: contrary to the ""tree"" traversal, there are no interlinked forward/backward callbacks. There are only forward then only backward callbacks. Note that nodes created during a traversal are not traversed if they are created upper than the current node during the top-down traversal or if they are created during the bottom-up traversal. . Classes; struct  StatusStruct;  wrapper to use VisitedStatus in a std::map (to ensure the default map insertion will give NOT_VISITED) More...;  . Protected Attributes; LinkParents l_parents;  ;  Protected Attributes inherited from sofa::simulation::Node; bool debug_;  ; bool initialized;  ; std::stack< Visitor * > actionStack;  ; BaseContext * _context;  ; type::vector< MutationListener * > listener;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseContext; ComponentNameHelper m_nameHelper;  . Public Member Functions;  SOFA_CLASS (DAGNode, simulation::Node);  ; virtual Node::SPtr createChild (const std::string &n",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:1144,wrap,wrapper,1144,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['wrap'],['wrapper']
Integrability,"mberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::TriangleSetTopologyModifier;  TriangleSetTopologyModifier ();  ;  ~TriangleSetTopologyModifier () override;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList);  Sends a message to warn that some triangles were added in this topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesProces",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:22195,message,message,22195,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"medData< bool > m_displayFreePosition;  ; Data< bool > d_displayFreePosition;  Display Collision Model Points free position(in green) More...;  ; SingleLink< LineCollisionModel< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< LineData > elems;  ; bool needsUpdate;  ; core::behavior::MechanicalState< DataTypes > * mstate;  ; Topology * topology;  ; PointCollisionModel< sofa::defaulttype::Vec3Types > * mpoints;  ; int meshRevision;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Data< bool > bActive;  ; Data< bool > bMoving;  flag indicating if this object is changing position between iterati",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html:1883,message,messages,1883,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_line_collision_model.html,1,['message'],['messages']
Integrability,"members . sofa::helper::system::DynamicLibrary Class Reference . #include <DynamicLibrary.h>; Wrapper around the dynamic library facilities of the operating system. ; More...; Detailed Description; Wrapper around the dynamic library facilities of the operating system. . Classes; class  Handle;  A handle to a dynamic library. More...;  . Static Public Attributes; static const std::string extension = ""so"";  System-specific file extension for a dynamic library (e.g. ""so""). More...;  ; static const std::string prefix = ""lib"";  System-specific file prefix for a dynamic library (e.g. ""lib""). More...;  . Static Public Member Functions; static Handle load (const std::string &filename);  Load a dynamic library. More...;  ; static int unload (Handle handle);  Unload a dynamic library loaded with load(). More...;  ; static void * getSymbolAddress (Handle handle, const std::string &symbol);  Get the address of a symbol. More...;  ; static std::string getLastError ();  Get the message for the most recent error that occurred from load(), unload() or getSymbolAddress(). More...;  . Attribute details. ◆ extension. const std::string sofa::helper::system::DynamicLibrary::extension = ""so"". static . System-specific file extension for a dynamic library (e.g. ""so""). . ◆ prefix. const std::string sofa::helper::system::DynamicLibrary::prefix = ""lib"". static . System-specific file prefix for a dynamic library (e.g. ""lib""). . Function details. ◆ getLastError(). std::string sofa::helper::system::DynamicLibrary::getLastError ; (; ). static . Get the message for the most recent error that occurred from load(), unload() or getSymbolAddress(). ; ReturnsThe error message, or an empty string if no errors have occurred since initialization or since it was last called. . ◆ getSymbolAddress(). void * sofa::helper::system::DynamicLibrary::getSymbolAddress ; (; Handle ; handle, . const std::string & ; symbol . ). static . Get the address of a symbol. ; Parameters. handleThe handle of a library. ; symbol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html:1205,message,message,1205,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_dynamic_library.html,1,['message'],['message']
Integrability,"mentType getSEType () const override;  Returns the type of shader element (texture, macro, variable, or attribute) More...;  ;  Public Member Functions inherited from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html:3170,depend,dependent,3170,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_define_macro.html,1,['depend'],['dependent']
Integrability,"method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Unbuilt constraint system during resolution; Data< bool > wire_optimization;  constraints are reordered along a wire-like topology (from tip to base) More...;  ; SingleLink< LinearSolverConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. More...;  ; SingleLink< LinearSolverConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_ODESolver;  Link towards the ODE solver used to recover the integration factors. More...;  ; DeprecatedAndRemoved J;  use m_constraintMatrix instead More...;  ; linearalgebra::SparseMatrix< Real > m_constraintJacobian;  ; linearalgebra::FullVector< SReal > F;  forces computed from the constraints More...;  ; MechanicalState< DataTypes > * mstate;  ; void verify_constraints ();  ; bool hasConstraintNumber (int index) override;  ; void resetForUnbuiltResolution (SReal *f, std::list< unsigned int > &renumbering) override;  ; void addConstraintDisplacement (SReal *d, int begin, int end) override;  ; void setConstraintDForce (SReal *df, int begin, int end, bool update) override;  ; void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *W, int begin, int end) override;  ; void convertConstraintMatrix (sofa::SignedIndex numberOfConstraints, const MatrixDeriv &inputConstraintMatrix);  Convert the constraint matrix. More...;  ; virtual void computeJ (sofa::line",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:15315,integrat,integration,15315,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['integrat'],['integration']
Integrability,"mic::NumericalIntegrationDescriptor< Real, N >::NumericalIntegrationDescriptor ; (; ). inline . empty constructor . Function details. ◆ addQuadratureMethod(). template<typename Real , int N> . void sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::addQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order, . QuadraturePointArray ; qpa . ). add a quadrature method in the map . ◆ getIntegrationOrders(). template<typename Real , int N> . std::set< typename NumericalIntegrationDescriptor< Real, N >::IntegrationOrder > sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getIntegrationOrders ; (; const QuadratureMethod ; qt); const. returns the quadrature integration orders available for a given method . ◆ getQuadratureMethod(). template<typename Real , int N> . NumericalIntegrationDescriptor< Real, N >::QuadraturePointArray sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order . ); const. returns the set of quadrature points associated with a given quadrature method and integration order . ◆ getQuadratureMethods(). template<typename Real , int N> . std::set< typename NumericalIntegrationDescriptor< Real, N >::QuadratureMethod > sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::getQuadratureMethods. returns all the indices corresponding to all available quadrature methods . Enum details. ◆ QuadratureMethod. template<typename Real , int N> . enum sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor::QuadratureMethod. EnumeratorGAUSS_LEGENDRE_METHOD ; GAUSS_LOBATO_METHOD ; NEWTON_COTES_METHOD ; GAUSS_SIMPLEX_METHOD ; GAUSS_QUAD_METHOD ; GAUSS_CUBE_METHOD . sofacomponenttopologycontainerdynamicNumericalIntegrationDescriptor; Generated on Mon Nov 11 2024 03:10:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html:3260,integrat,integration,3260,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,1,['integrat'],['integration']
Integrability,"model::Baseinline; initData(Data< T > *field, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData(Data< T > *field, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; inputssofa::core::objectmodel::DDGNodeprotected; insertInNode(BaseNode *)sofa::core::objectmodel::BaseObjectinlinevirtual; integrateMesh()sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; integrateTriangle(type::Vec3 kV0, type::Vec3 kV1, type::Vec3 kV2)sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDirty() constsofa::core::objectmodel::DDGNodeinline; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::objectmodel::Baseprotected; m_aliasLinksofa::core::objectmodel::Baseprotected; m_dataTrackersofa::core::DataTrackerDDGNodeprotected; m_definitionSourceFileNamesofa::core::objectmodel::Base; m_definitionSourceFilePossofa::core::objectmodel::Base; m_densitysofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >protected; m_instanciationSourceFileNamesofa::core::objectmodel",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html:9105,integrat,integrateMesh,9105,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass-members.html,1,['integrat'],['integrateMesh']
Integrability,"move a TopologyHandler, linked to a certain type of Element. More...;  ; void resetTopologyHandlerList ();  Free each Topology changes in the list and remove them from the list. More...;  ; virtual bool linkTopologyHandlerToData (TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType);  ; virtual bool unlinkTopologyHandlerToData (TopologyHandler *topologyHandler, sofa::geometry::ElementType elementType);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::core::topology::BaseMeshTopology; static constexpr EdgesInTriangle InvalidEdgesInTriangles = type::makeHomogeneousArray<EdgesInTriangle>(sofa::InvalidID);  ; static constexpr EdgesInQuad InvalidEdgesInQuad = type::makeHomogeneousArray<EdgesInQuad>(sofa::InvalidID);  ; static constexpr TrianglesInTetrahedron InvalidTrianglesInTetrahedron = type::makeHomogeneousArray<TrianglesInTetrahe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:23525,message,messages,23525,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['message'],['messages']
Integrability,"moveQuadsProcess(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::removeQuadsProcess ; (; const sofa::type::vector< QuadID > & ; indices, . const bool ; removeIsolatedEdges = false, . const bool ; removeIsolatedPoints = false . ). protectedvirtual . Remove a subset of quads. Eventually remove isolated edges and vertices. ; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. See alsoremoveQuadsWarning; Parameters. removeIsolatedEdgesif true isolated edges are also removed ; removeIsolatedPointsif true isolated vertices are also removed . Reimplemented in sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ removeQuadsWarning(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::removeQuadsWarning ; (; sofa::type::vector< QuadID > & ; quads). protectedvirtual . Sends a message to warn that some quads are about to be deleted. ; See alsoremoveQuadsProcess; Important : parameter indices is not const because it is actually sorted from the highest index to the lowest one. . ◆ renumberPointsProcess(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::renumberPointsProcess ; (; const sofa::type::vector< PointID > & ; index, . const sofa::type::vector< PointID > & ; inv_index, . const bool ; renumberDOF = true . ). overrideprotectedvirtual . Reorder this topology. ; Important : the points are actually renumbered in the mechanical object's state vectors iff (renumberDOF == true) See alsoMechanicalObject::renumberValues ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::QuadSetTopologyModifier::SOFA_CLASS ; (; QuadSetTopologyModifier ; , . EdgeSetTopologyModifier ;  . ). Related details. ◆ QuadSetGeometryAlgorithms. template<class DataTypes > . friend cl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:33346,message,message,33346,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['message'],['message']
Integrability,"mponent computing projective constraints within a simulated body. More...;  ; class  BaseRotationFinder;  ; class  BaseVectorOperations;  ; struct  BlockType;  ; class  BlocMatrixWriter;  ; class  Constraint;  Component computing constraints within a simulated body. More...;  ; class  ConstraintCorrection;  ; class  ConstraintResolution;  Object computing a constraint resolution within a Gauss-Seidel algorithm. More...;  ; class  ConstraintSolver;  Component responsible for the expression and solution of system of equations related to constraints. The main method is solveConstraint(const ConstraintParams *, MultiVecId , MultiVecId ); The default implementation successively calls: prepareStates, buildSystem, solveSystem, applyCorrection. The parameters are defined in class ConstraintParams. More...;  ; class  CRSMultiMatrixAccessor;  ; class  DefaultMultiMatrixAccessor;  ; class  ForceField;  Component computing forces within a simulated body. More...;  ; class  LinearSolver;  Abstract interface for linear system solvers. More...;  ; class  LinearSolverAccessor;  ; class  Mass;  Component responsible for mass-related computations (gravity, acceleration). More...;  ; class  MatrixAccessorCompat;  ; class  AddToMatrixCompatMatrix;  ; class  ApplyConstraintCompat;  ; class  MechanicalMatrix;  ; class  MixedInteractionConstraint;  Component computing constraints between a pair of simulated body. More...;  ; class  MixedInteractionForceField;  Component computing forces between a pair of simulated body. More...;  ; class  MultiMatrix;  ; class  MultiMatrixAccessor;  ; class  TMultiVec;  ; class  OdeSolver;  Component responsible for timestep integration, i.e. advancing the state from time t to t+dt. More...;  ; class  PairInteractionConstraint;  Component computing constraints between a pair of simulated body. More...;  ; class  PairInteractionForceField;  Component computing forces between a pair of simulated body. More...;  ; class  PairInteractionProjectiveConstraintSe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html:3428,interface,interface,3428,api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,1,['interface'],['interface']
Integrability,"mponent::playback::ReadState; sofa::core::objectmodel::DataFileName d_filename;  ; Data< double > d_interval;  time duration between inputs More...;  ; Data< double > d_shift;  shift between times in the file and times when they will be read More...;  ; Data< bool > d_loop;  set to 'true' to re-read the file when reaching the end More...;  ; Data< double > d_scalePos;  scale the input mechanical object More...;  ; Data< type::Vec3 > d_rotation;  rotate the input mechanical object More...;  ; Data< type::Vec3 > d_translation;  translate the input mechanical object More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ dofError_V. double sofa::component::playback::CompareState::dofError_V. protected . ◆ dofError_X. double sofa::component::playback::CompareState::dofError_X. protected . ◆ last_time. double sofa::component::playback::CompareState::last_time. protected . last time, position and velocity (for draw) . ◆ last_V. std::string sofa::component::playback::CompareState::last_V. protected . ◆ last_X. std::string sofa::c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:14818,message,messages,14818,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['message'],['messages']
Integrability,"mulation. It can be used for example to correctly render forcefields applied to a mesh that is then transformed by a rigid DOF using DeformableOnRigidFrameMapping. . Public Attributes; sofa::core::objectmodel::RenamedData< Coord > transform;  ; sofa::core::objectmodel::RenamedData< bool > recursive;  ; Data< Coord > d_transform;  Transformation to apply. More...;  ; Data< bool > d_recursive;  True to apply transform to all nodes below. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; int nbpush;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html:1677,message,messages,1677,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_transform.html,1,['message'],['messages']
Integrability,"mulation::RequiredPlugin Class Reference . #include <RequiredPlugin.h>. Inheritance diagram for sofa::simulation::RequiredPlugin:. [legend]. Public Attributes; sofa::core::objectmodel::Data< type::vector< std::string > > d_pluginName;  plugin name (or several names if you need to load different plugins or a plugin with several alternate names) More...;  ; sofa::core::objectmodel::Data< type::vector< type::fixed_array< std::string, 2 > > > d_suffixMap;  standard->custom suffixes pairs (to be used if the plugin is compiled outside of Sofa with a non standard way of differentiating versions), using ! to represent empty suffix More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstNameFound;  Stop after the first plugin name that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_stopAfterFirstSuffixFound;  For each plugin name, stop after the first suffix that is loaded successfully. More...;  ; sofa::core::objectmodel::Data< bool > d_requireOne;  Display an error message if no plugin names were successfully loaded. More...;  ; sofa::core::objectmodel::Data< bool > d_requireAll;  Display an error message if any plugin names failed to be loaded. More...;  ; sofa::core::objectmodel::Data< type::vector< std::string > > d_loadedPlugins;  List of the plugins that are have been loaded. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:1257,message,message,1257,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['message'],['message']
Integrability,"n a CSV file. More...;  ; Data< bool > d_computeHamiltonian;  Compute hamiltonian. More...;  ; Data< SReal > d_hamiltonianEnergy;  hamiltonian energy More...;  ; Data< bool > d_useIncrementalPotentialEnergy;  use real potential energy, if false use approximate potential energy More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; sofa::core::objectmodel::lifecycle::RemovedData f_verbose {this, ""v23.12"", ""v24.06"", ""verbose"", ""This Data is no longer used""};  ; std::ofstream energies;  ; int cpt;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::MultiVecDerivId pID;  ; SReal m_incrementalPotentialEnergy;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:3277,message,messages,3277,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['message'],['messages']
Integrability,"n, xmax,ymax,zmax. More...;  ; Data< VecCoord > f_X0;  Rest position coordinates of the degrees of freedom. More...;  ; Data< VecCoord > positions;  Vertices of the mesh loaded. More...;  ; Data< SetIndex > f_indices;  Indices of the points contained in the ROI. More...;  ; Data< VecCoord > f_pointsInROI;  Points contained in the ROI. More...;  ; Data< bool > p_drawInclusiveBox;  Draw Inclusive Box. More...;  ; Data< bool > p_drawIncludedBox;  Draw Included Box. More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< double > _drawSize;  Draw Size. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PairBoxROI, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html:2017,message,messages,2017,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_pair_box_r_o_i.html,1,['message'],['messages']
Integrability,"nSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SofaDefaultPathSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html:2776,depend,dependent,2776,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_sofa_default_path_setting.html,1,['depend'],['dependent']
Integrability,"namic::EdgeSetTopologyModifier. ◆ addEdgesWarning() [1/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList . ). inlineoverrideprotectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addEdgesWarning() [2/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). inlineoverrideprotectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). overrideprotectedvirtual . Add some points to this topology. ; See alsoaddPointsWarning ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addRemoveTriangles(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addRemoveTriangles ; (; const sofa::Size ; nTri2Add, . const sofa::type::vector< Triangle > & ; triangles2Add, . const sofa::type::vector< TriangleID > & ; trianglesIndex2Add, . const sofa::type::vector< sofa::type::vector< TriangleID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs, . sofa::type::vector< TriangleID > & ; trianglesIndex2remove . ). virtual . Add",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:30019,message,message,30019,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"nce . This allow Base object to interact with the messaging system. ; More... Namespaces;  countingmessagehandler;  ;  loggingmessagehandler;  ;  percomponentloggingmessagehandler;  ;  routingmessagehandler;  . Classes; class  RichConsoleStyleMessageFormatter;  The RichConsoleStyleMessageFormatter class. More...;  ; class  SofaComponentInfo;  ; class  ClangMessageHandler;  ; class  ClangStyleMessageFormatter;  ; struct  ComponentInfo;  ; class  ConsoleMessageHandler;  ; class  MainConsoleMessageHandler;  The MainConsoleMessageHandler class contains a singleton to ConsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; ComponentInfo::SPtr getComponentInfo (const sofa::core::objectmodel::Base *t);  This construct a new ComponentInfo object from a Base object. More...;  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:1345,message,message,1345,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['message'],['message']
Integrability,"nces) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMatrixLinearSystem, core::objectmodel::BaseObject);  ; virtual linearalgebra::BaseMatrix * getSystemBaseMatrix () const;  Returns the system matrix as a linearalgebra::BaseMatrix*. More...;  ; void buildSystemMatrix (const core::MechanicalParams *mparams);  Construct and assemble the linear system matrix. More...;  ; sofa::type::Vec2u getMatrixSize () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html:2248,depend,dependent,2248,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_matrix_linear_system.html,1,['depend'],['dependent']
Integrability,"nctions |; Protected Member Functions |; List of all members . sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 > Class Template Reference . #include <StickContactConstraint.h>. Inheritance diagram for sofa::component::collision::response::contact::StickContactConstraint< TCollisionModel1, TCollisionModel2 >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > f_keepAlive;  ; Data< bool > d_keepAlive;  set to true to keep this contact alive even after collisions are no longer detected More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; CollisionModel1 * model1;  ; CollisionModel2 * model2;  ; Intersection * intersectionMethod;  ; mapper::ContactMapper< CollisionModel1, DataTypes1 > mapper1;  ; mapper::ContactMapper< CollisionModel2, DataTypes2 > mapper2;  ; constraint::lagrangian::model::BilateralLagrangianConstraint< sofa::defaulttype::Vec3Types >::SPtr m_constraint;  ; core::objectmodel::BaseContext * parent;  ; std::vector< sofa::core::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html:1298,message,messages,1298,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_stick_contact_constraint.html,1,['message'],['messages']
Integrability,"nd aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void step (const core::ExecParams *params, SReal dt)=0;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html:3926,depend,dependent,3926,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_animation_loop.html,1,['depend'],['dependent']
Integrability,"nd]. Public Attributes; Data< SReal > d_stiffness;  Stiffness of the spring to attach a particule. More...;  ; Data< SReal > d_arrowSize;  Size of the drawn spring: if >0 an arrow will be drawn. More...;  ; Data< SReal > d_showFactorSize;  Show factor size of the JointSpringForcefield when interacting with rigids. More...;  ;  Public Attributes inherited from sofa::component::setting::MouseButtonSetting; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (AttachBodyButtonSetting, sofa::component::setting::MouseButtonSetting);  ; std::string getOperationType () override;  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", stiffness, d_stiffness);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", arrowSize, d_arrowSize);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize);  ;  Public Member Func",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html:1445,message,messages,1445,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,1,['message'],['messages']
Integrability,"ne two transforms. If (*this) locates frame B (child) wrt frame A (parent) and if f2 locates frame C (child) wrt frame B (parent) then the result locates frame C wrt to Frame A. . ◆ operator*() [3/3]. template<class TReal > . template<class Real2 > . Transform sofa::type::Transform< TReal >::operator* ; (; Real2 ; a); const. inline . ◆ operator*=() [1/2]. template<class TReal > . Transform< TReal > & sofa::type::Transform< TReal >::operator*= ; (; const Transform< TReal > & ; f2). Combine two transforms. If (*this) locates frame B (child) wrt frame A (parent) and if f2 locates frame C (child) wrt frame B (parent) then the result locates frame C wrt to Frame A. . ◆ operator*=() [2/2]. template<class TReal > . template<class Real2 > . Transform& sofa::type::Transform< TReal >::operator*= ; (; Real2 ; a). inline . ◆ operator+=() [1/2]. template<class TReal > . Transform< TReal > & sofa::type::Transform< TReal >::operator+= ; (; const SpatialVector< TReal > & ; a). (this) *= Transform(v) Used for time integration. SHOULD WE RATHER APPLY (*this)=Transform(v)(*this) ??? . ◆ operator+=() [2/2]. template<class TReal > . Transform< TReal > & sofa::type::Transform< TReal >::operator+= ; (; const Transform< TReal > & ; a). ◆ operator/(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::operator/ ; (; const SpatialVector< TReal > & ; sv); const. Project a spatial vector from parent to child (the inverse of operator *). This method computes (*this).inversed()*sv without inverting (*this). . ◆ printInternal(). template<class TReal > . void sofa::type::Transform< TReal >::printInternal ; (; std::ostream & ; out); const. Print the internal values (i.e. using Featherstone's conventions, see class documentation) . ◆ projectPoint(). template<class TReal > . auto sofa::type::Transform< TReal >::projectPoint ; (; const Vec & ; pointInChild); const. Project a point from child coordinates to parent coordinates. . ◆ projectVector(). template<class TReal > . T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:11004,integrat,integration,11004,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,1,['integrat'],['integration']
Integrability,"ne;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html:2297,depend,dependent,2297,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_state_accessor.html,1,['depend'],['dependent']
Integrability,"neHeight;  cone height More...;  ; Data< Real > coneAngle;  cone angle More...;  ; Data< Real > stiffness;  force stiffness More...;  ; Data< Real > damping;  force damping More...;  ; Data< sofa::type::RGBAColor > color;  cone color. (default=0.0,0.0,0.0,1.0,1.0) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< sofa::type::vector< Contact > > contacts;  ; ConicalForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:1665,message,messages,1665,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,1,['message'],['messages']
Integrability,"nearElasticityFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆ initLarge(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initLarge ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initPolar(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initPolar ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ initSmall(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::initSmall ; (; sofa::Index ; i, . const Element & ; elem . ). protected . ◆ integrateStiffness(). template<class DataTypes > . HexahedronFEMForceField< DataTypes >::Mat33 sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::integrateStiffness ; (; int ; signx0, . int ; signy0, . int ; signz0, . int ; signx1, . int ; signy1, . int ; signz1, . const Real ; u, . const Real ; v, . const Real ; w, . const Mat33 & ; J_1 . ). staticprotected . ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >. ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:40846,integrat,integrateStiffness,40846,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Integrability,"ned BEFORE the points are actually deleted, so always use method removePointsWarning before calling removePointsProcess. See alsoremovePointsWarning; Parameters. indicesis not const because it is actually sorted from the highest index to the lowest one. ; removeDOFif true the points are actually deleted from the mechanical object's state vectors . Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ removePointsWarning(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning ; (; sofa::type::vector< PointID > & ; indices, . const bool ; removeDOF = true . ). protected . Sends a message to warn that some points are about to be deleted. ; See alsoremovePointsProcess . ◆ renumberPoints(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::renumberPoints ; (; const sofa::type::vector< PointID > & ; index, . const sofa::type::vector< PointID > & ; inv_index, . const bool ; renumberDOF = true . ). virtual . Generic method for points renumbering. ; Important : the points are actually renumbered in the mechanical object's state vectors iff (renumberDOF == true) See alsoMechanicalObject::renumberValues . ◆ renumberPointsProcess(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::renumberPointsProcess ; (; const sofa::type::vector< PointID > & ; index, . const sofa::type::vector< PointID > & ; , . const bool ; renumberDOF = true . ). protectedvirtual . Reorder this topology. ; Important : the points are actually renumbered in the mechanical object's state vectors iff (renumberDOF == true) See alsoMechanicalObject::renumberValues ; Reimpl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:27380,message,message,27380,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"nent::collision::response::contact::PenalityContactForceField< DataTypes >; Distance-based, frictionless penalty force. The force is applied to vertices attached to collision elements. . Public Attributes; Data< sofa::type::vector< Contact > > contacts;  Contacts. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< Contact > prevContacts;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html:1680,message,messages,1680,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_penality_contact_force_field.html,1,['message'],['messages']
Integrability,"nent::linearsolver::ordering::BaseEigenOrderingMethod< EigenOrderingMethodType >; Ordering method implemented in the library Eigen. ; Template Parameters. EigenOrderingMethodTypeThe Eigen type for the ordering algorithm. For example Eigen::AMDOdering<int> . Public Member Functions;  SOFA_CLASS (BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod);  ; void computePermutation (const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod;  ~BaseOrderingMethod () override;  ; virtual std::string methodName () const =0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method.html:1775,depend,dependent,1775,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_base_eigen_ordering_method.html,1,['depend'],['dependent']
Integrability,"nent::playback::ReadTopology;  SOFA_CLASS (ReadTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadTopology ();  ; void processReadTopology (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html:3296,depend,dependent,3296,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_topology.html,1,['depend'],['dependent']
Integrability,"nent::sceneutility::FileMessageHandlerComponent Class Reference . #include <MessageHandlerComponent.h>; A sofa component to add a FileMessageHandlerComponent to the main logger. ; More... Inheritance diagram for sofa::component::sceneutility::FileMessageHandlerComponent:. [legend]; Detailed Description; A sofa component to add a FileMessageHandlerComponent to the main logger. . Public Attributes; Data< std::string > d_filename;  Name of the file into which the message will be saved in. More...;  ; helper::logging::MessageHandler * m_handler { nullptr };  ; bool m_isValid;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (FileMessageHandlerComponent, core::objectmodel::BaseObject);  ;  FileMessageHandlerComponent ();  ;  ~FileMessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::Visual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html:1260,message,messages,1260,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_file_message_handler_component.html,1,['message'],['messages']
Integrability,"nent::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >; corotational triangle from @InProceedings{NPF05, author = ""Nesme, Matthieu and Payan, Yohan and Faure, Fran\c{c}ois"", title = ""Efficient, Physically Plausible Finite Elements"", booktitle = ""Eurographics (short papers)"", month = ""august"", year = ""2005"", editor = ""J. Dingliana and F. Ganovelli"", keywords = ""animation, physical model, elasticity, finite elements"", url = ""http://www-evasion.imag.fr/Publications/2005/NPF05"" } . Classes; class  TriangleInfo;  Class to store FEM information on each triangle, for topology modification handling. More...;  ; class  TriangleState;  . Public Attributes; core::topology::TriangleData< VecTriangleInfo > d_triangleInfo;  Internal triangle data (persistent) More...;  ; core::topology::TriangleData< VecTriangleState > d_triangleState;  Internal triangle data (time-dependent) More...;  ; Data< Real > d_damping;  Forcefield intern parameters. More...;  ; Data< Real > d_restScale;  Scale factor applied to rest positions (to simulate pre-stretched materials) More...;  ; Data< bool > d_computePrincipalStress;  Compute principal stress for each triangle. More...;  ; Data< Real > d_stressMaxValue;  Max stress value computed over the triangulation. More...;  ; Data< bool > d_showStressVector;  Display parameters. More...;  ; Data< Real > d_showStressThreshold;  Threshold value to render only stress vectors higher to this threshold. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:1611,depend,dependent,1611,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['depend'],['dependent']
Integrability,"nerate::Spiral< DataTypes > Class Template Reference . #include <Spiral.h>. Inheritance diagram for sofa::component::engine::generate::Spiral< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::engine::generate::Spiral< DataTypes >; This class turns on spiral any topological model . Public Attributes; Data< VecCoord > f_X0;  Rest position coordinates of the degrees of freedom. More...;  ; Data< VecCoord > f_X;  Position coordinates of the degrees of freedom. More...;  ; Data< Real > curvature;  Spiral curvature factor. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(Spiral, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::vis",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html:1311,message,messages,1311,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_spiral.html,1,['message'],['messages']
Integrability,"ness. More...;  ; bool isContactStiffnessSet () const;  Get contact stiffness. More...;  ; SReal getContactFriction (Index) const;  Get contact friction (damping) coefficient. More...;  ; void setContactFriction (SReal friction);  Set contact friction (damping) coefficient. More...;  ; SReal getContactRestitution (Index) const;  Get contact coefficient of restitution. More...;  ; void setContactRestitution (SReal restitution);  Set contact coefficient of restitution. More...;  ; std::string getContactResponse () const;  Contact response algorithm. More...;  ; const std::set< int > & getGroups () const;  Return the group IDs containing this model. More...;  ; void addGroup (const int groupId);  add the group ID to this model. More...;  ; void setGroups (const std::set< int > &ids);  Set the group IDs to this model. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopol",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html:10913,depend,dependent,10913,api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_collision_model.html,5,['depend'],['dependent']
Integrability,"ng > &paths);  ;  FileRepository (const char *envVar, const char *relativePath, const fileKeysMap &iniFilesAndKeys);  ;  FileRepository (const char *envVar, const std::vector< std::string > &paths, const fileKeysMap &iniFilesAndKeys);  ;  ~FileRepository ();  ; void addFirstPath (const std::string &path);  Adds a path to the front of the set of paths. More...;  ; void addLastPath (const std::string &path);  Adds a path to the back of the set of paths. More...;  ; void removePath (const std::string &path);  Remove a path of the set of paths. More...;  ; void clear ();  Remove all known paths. More...;  ; std::string getFirstPath ();  Get the first path into the set of paths. More...;  ; const std::vector< std::string > & getPaths () const;  ; const std::string getPathsJoined ();  ; const std::string & getDirectAccessProtocolPrefix () const;  ; void setDirectAccessProtocolPrefix (const std::string &protocolPrefix);  ; bool findFile (std::string &filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; std::string getFile (std::string filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr);  ; bool findFileFromFile (std::string &filename, const std::string &basefile, std::ostream *errlog=&std::cerr);  ; void print ();  Print the list of path to std::cout. More...;  ; void displayPaths () const;  ; const std::string getTempPath () const;  . Static Public Member Functions; static std::string cleanPath (const std::string &path);  ; static std::string relativeToPath (std::string path, std::string refPath);  ; static char entrySeparator ();  OS-dependant character separating entries in list of paths. More...;  . Static Protected Member Functions; static bool findFileIn (std::string &filename, const std::string &path);  Search file in a given path. More...;  . Friends; std::ostream & operator<< (std::ostream &_flux, FileRepository _fr);  Display all current sofa search paths. More...;  . Attribute details. ◆ directAccessProtocolPrefix. s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:2377,protocol,protocolPrefix,2377,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,1,['protocol'],['protocolPrefix']
Integrability,"ng output of common topology containers. More...;  ; Data< bool > d_writeShellContainers;  flag enabling output of specific shell topology containers. More...;  ; Data< double > d_interval;  time duration between outputs More...;  ; Data< type::vector< double > > d_time;  set time to write outputs More...;  ; Data< double > d_period;  period between outputs More...;  ; SingleLink< WriteTopology, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; std::ofstream * outfile;  ; unsigned int nextTime;  ; double lastTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:2460,message,messages,2460,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['message'],['messages']
Integrability,"ngBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions; BaseVTKDataIO * newVTKDataIO (const string &typestr);  ; BaseVTKDataIO * newVTKDataIO (const string &typestr, int num);  ;  BaseVTKReader ();  ; bool readVTK (const char *filename);  ; virtual bool readFile (const char *filename)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html:2613,depend,dependent,2613,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader.html,1,['depend'],['dependent']
Integrability,ni Buttons Controller. SOFA - Topic: [SOLVED] Omni Buttons Controller. /one-object-with-different-collision-definitions-for-different-parts; ; SOFA - Topic: [SOLVED] One object with different collision definitions for different parts. /onkeypressedevent-not-working; ; SOFA - Topic: onKeypressedEvent not working. /on-the-rotation-of-a-mesh-model-oglmodel; . /feed; ; [SOLVED] On the rotation of a mesh model (OglModel) – SOFA. SOFA - Topic: [SOLVED] On the rotation of a mesh model (OglModel). /opengl-and-directx; ; SOFA - Topic: opengl and directX. /opengl-error-when-compiling-sofa-on-macos; ; SOFA - Topic: [SOLVED] OpenGL Error when Compiling SOFA on MacOS. /open-obj-or-stl-files; . /feed; ; [SOLVED] Open .OBJ or .STL files – SOFA. SOFA - Topic: [SOLVED] Open .OBJ or .STL files. /open-position-for-an-engineer-in-computer-science; . /page; . /4; ; SOFA - Topic: Open position for an Engineer in Computer Science. SOFA - Topic: Open position for an Engineer in Computer Science. /optimization-integrator; . /feed; ; [SOLVED] Optimization integrator – SOFA. SOFA - Topic: [SOLVED] Optimization integrator. /order-independent-transparency; ; SOFA - Topic: [SOLVED] Order Independent Transparency. /orientantion-in-end-effector; ; SOFA - Topic: Orientantion in End-Effector. /oriented-sliding-constraint-actuator; ; SOFA - Topic: Oriented Sliding Constraint/Actuator. /parameter-value-update; . /embed; ; SOFA - Topic: Parameter value update. SOFA - Topic: Parameter value update. /paraview-and-sofa-working-together; ; SOFA - Topic: Paraview and SOFA working together. /parse-error; ; SOFA - Topic: Parse error. /particlemask-in-sofa; ; SOFA - Topic: [SOLVED] ParticleMask in SOFA. /pauseanimation; . /feed; ; [SOLVED] PauseAnimation – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] PauseAnimation. /4; ; SOFA - Topic: [SOLVED] PauseAnimation. SOFA - Topic: [SOLVED] PauseAnimation. /penetration-depth; ; SOFA - Topic: Penetration depth?. /performance-issues-with-haptics-and-deformable-objects; ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:359696,integrat,integrator,359696,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['integrat'],['integrator']
Integrability,"nicalload::DiagonalVelocityDampingForceField< DataTypes >; Apply damping forces to given degrees of freedom. . Public Attributes; Data< VecDeriv > d_dampingCoefficients;  velocity damping coefficients (by cinematic dof) More...;  ; DeprecatedAndRemoved dampingCoefficients;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(DiagonalVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void addForce (const core::MechanicalParams *, DataVecDeriv &, const DataVecCoord &, const DataVecDeriv &) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html:1717,message,messages,1717,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_diagonal_velocity_damping_force_field.html,1,['message'],['messages']
Integrability,"ning all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html:12965,message,messages,12965,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_force_field.html,1,['message'],['messages']
Integrability,"nitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (BackgroundSetting, core::objectmodel::ConfigurationSetting);  Sofa macro to define typedef. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html:2897,depend,dependent,2897,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_background_setting.html,1,['depend'],['dependent']
Integrability,"nk *link);  . Protected Member Functions;  HexahedronSetTopologyModifier ();  ;  ~HexahedronSetTopologyModifier () override;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; virtual void addHexahedraProcess (const sofa::type::vector< Hexahedron > &hexahedra);  Actually Add some hexahedra to this topology. More...;  ; virtual void removeHexahedraWarning (sofa::type::vector< HexahedronID > &hexahedra);  Sends a message to warn that some hexahedra are about to be deleted. More...;  ; virtual void removeHexahedraProcess (const sofa::type::vector< HexahedronID > &indices, const bool removeIsolatedItems=false);  Remove a subset of hexahedra. More...;  ; void addQuadsProcess (const sofa::type::vector< Quad > &quads) override;  Actually Add some quads to this topology. More...;  ; void removeQuadsProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false) override;  Remove a subset of quads. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html:18826,message,message,18826,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"nk);  . Protected Member Functions;  TriangleSetTopologyModifier ();  ;  ~TriangleSetTopologyModifier () override;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList);  Sends a message to warn that some triangles were added in this topology. More...;  ; void addTrianglesWarning (const sofa::Size nTriangles, const sofa::type::vector< Triangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles);  Effectively Add some triangles. Test precondition and apply: More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; virtual void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of triangles. Eventually remove isolated edges and vertices. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesProcess (const sofa::type::vector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:18341,message,message,18341,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"nsoleMessageHandler and offer static version of ConsoleMessageHandler API. More...;  ; class  DefaultStyleMessageFormatter;  ; class  ExceptionMessageHandler;  ; struct  FileInfo;  ; struct  FileInfoOwningFilename;  To keep a trace (file,line) from where the message have been created. More...;  ; class  FileMessageHandler;  ; class  Message;  ; class  MessageDispatcherImpl;  ; class  MessageDispatcher;  ; class  MessageFormatter;  ; class  MessageHandler;  ; class  SilentMessageHandler;  This class is a MessageHandler that simply do nothing with the message. More...;  ; class  TracyMessageHandler;  Send the message to the Tracy profiler. More...;  ; class  MainTracyMessageHandler;  The MainTracyMessageHandler class contains a singleton to TracyMessageHandler and offer static version of TracyMessageHandler API. More...;  . Typedefs; typedef boost::tokenizer< boost::char_separator< char > > tokenizer;  . Functions; void simpleFormat (size_t jsize, const std::string &text, size_t line_length, std::ostream &wrapped);  simpleFormat a text containing our markdown 'tags' More...;  ; bool notMuted (const sofa::core::objectmodel::Base *t);  ; bool notMuted (sofa::core::objectmodel::Base *t);  ; ComponentInfo::SPtr getComponentInfo (const sofa::core::objectmodel::Base *t);  This construct a new ComponentInfo object from a Base object. More...;  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo &nfo);  ; std::ostream & operator<< (std::ostream &out, const ComponentInfo *nfo);  ; const ComponentInfo::SPtr getComponentInfo (const std::string &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; const ComponentInfo::SPtr getComponentInfo (const ComponentInfo::SPtr &s);  This function is used in the msg_* macro to handle emitting case based on string. More...;  ; bool notMuted (const ComponentInfo::SPtr &);  ; bool notMuted (const std::string &);  This function is used in the msg_* macro to handle string based on strin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:1808,wrap,wrapped,1808,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['wrap'],['wrapped']
Integrability,"nst D_values);  ; template<typename Real > ; void solveDiagonalSystemUsingInvertedValues (const sofa::Size systemSize, const Real *rightHandSideVector, Real *solution, const Real *const Dinv_values);  ; std::ostream & operator<< (std::ostream &out, const FullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const FullMatrix< float > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< double > &v);  ; std::ostream & operator<< (std::ostream &out, const LPtrFullMatrix< float > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullMatrix< Real > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< float > &v);  ; std::ostream & operator<< (std::ostream &out, const FullVector< double > &v);  ; template<typename Real > ; std::ostream & readFromStream (std::ostream &out, const FullVector< Real > &v);  ; SOFA_LINEARALGEBRA_API void init ();  Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isInitialized ();  Return true if and only if the Sofa.LinearAlgebra library has been initialized. More...;  ; SOFA_LINEARALGEBRA_API void cleanup ();  Clean up the resources used by the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. More...;  ; SOFA_LINEARALGEBRA_API bool isCleanedUp ();  Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. More...;  ; template<class Real > ; std::ostream & operator<< (std::ostream &out, const RotationMatrix< Real > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< float > &v);  ; template SOFA_LINEARALGEBRA_API std::ostream & operator<< (std::ostream &out, const RotationMatrix< double > &v);  ; template<typename _Scalar , int _Options, typename _StorageIndex > ; void flagValueIndices (Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:7450,depend,dependencies,7450,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['depend'],['dependencies']
Integrability,"nst MappingGraph &mappingGraph, TMatrix *matrixToProject, linearalgebra::BaseMatrix *globalMatrix)=0;  The main function of the component: it compute the mappings jacobian matrices, then the projection of the provided matrix. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html:2488,depend,dependent,2488,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html,1,['depend'],['dependent']
Integrability,"nst char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< TDataTypes >;  SingleStateAccessor (MechanicalState< TDataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html:17618,message,messages,17618,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_oscillator_projective_constraint.html,2,['message'],['messages']
Integrability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html:7628,depend,dependent,7628,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_conical_force_field.html,34,['depend'],['dependent']
Integrability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:11570,depend,dependent,11570,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['depend'],['dependent']
Integrability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:15510,depend,dependent,15510,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['depend'],['dependent']
Integrability,"nst sofa::core::behavior::MultiMatrixAccessor *matrix);  Compute the system matrix corresponding to . More...;  ; virtual void buildStiffnessMatrix (StiffnessMatrix *matrix);  ; virtual void buildDampingMatrix (DampingMatrix *matrix);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html:4778,depend,dependent,4778,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_force_field.html,1,['depend'],['dependent']
Integrability,"nt > > d_backgroundValue;  Background values (to be ignored) More...;  ; Data< type::vector< int > > d_activeValue;  Active data values. More...;  ; Data< bool > d_generateHexa;  Interpret voxel as either hexa or points. More...;  ;  Public Attributes inherited from sofa::core::loader::VoxelLoader; Data< type::vector< sofa::type::Vec3 > > positions;  Coordinates of the nodes loaded. More...;  ; Data< type::vector< Hexahedron > > hexahedra;  Hexahedra loaded. More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; helper::io::Image * image;  ; helper::io::Image * segmentation;  ; int bpp;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html:2590,message,messages,2590,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_voxel_grid_loader.html,1,['message'],['messages']
Integrability,"nt set. More...;  ; Data< sofa::helper::OptionsGroup > d_distanceType;  type of distance to compute for inserted frames. More...;  ; Data< bool > d_initTarget;  initialize the target MechanicalObject from the grid. More...;  ; Data< int > d_initTargetStep;  initialize the target MechanicalObject from the grid using this step. More...;  ; Data< std::map< unsigned int, unsigned int > > d_zonesFramePair;  Correspondence between the segmented value and the frames. More...;  ; Data< double > d_harmonicMaxValue;  Max value used to initialize the harmonic distance grid. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; DistancesInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:3251,message,messages,3251,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['message'],['messages']
Integrability,"nt;  SOFA_ABSTRACT_CLASS (BaseConstraint, BaseConstraintSet);  ; int getGroup () const;  Get the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; void setGroup (int g);  Set the ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ; virtual void getConstraintResolution (std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; type::vector< std::string > getIdentifiers ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html:8366,depend,dependent,8366,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_unilateral_lagrangian_constraint.html,1,['depend'],['dependent']
Integrability,"ntact. More...;  ; void setDetectionOutputs (OutputVector *outputs) override;  Set the generic description of a contact point. More...;  ; void createResponse (core::objectmodel::BaseContext *group) override;  ; void removeResponse () override;  ;  Public Member Functions inherited from sofa::core::collision::Contact;  SOFA_ABSTRACT_CLASS (Contact, objectmodel::BaseObject);  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:3878,depend,dependent,3878,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,1,['depend'],['dependent']
Integrability,"o be removed (note that the array is not const since it needs to be sorted) . ◆ removeTetrahedraProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedraProcess ; (; const sofa::type::vector< TetrahedronID > & ; indices, . const bool ; removeIsolatedItems = false . ). protectedvirtual . Remove a subset of tetrahedra. ; Elements corresponding to these points are removed form the mechanical object's state vectors.; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. See alsoremoveTetrahedraWarning ; Parameters. removeIsolatedItemsif true remove isolated triangles, edges and vertices . ◆ removeTetrahedraWarning(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedraWarning ; (; sofa::type::vector< TetrahedronID > & ; tetrahedra). protected . Sends a message to warn that some tetrahedra are about to be deleted. ; See alsoremoveTetrahedraProcess; Important : parameter indices is not const because it is actually sorted from the highest index to the lowest one. . ◆ removeTrianglesProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTrianglesProcess ; (; const sofa::type::vector< TriangleID > & ; indices, . const bool ; removeIsolatedEdges = false, . const bool ; removeIsolatedPoints = false . ). overrideprotectedvirtual . Remove a subset of triangles. ; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. Parameters. removeIsolatedEdgesif true isolated edges are also removed ; removeIsolatedPointsif true isolated vertices are also removed . Reimplemented from sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ renumberPointsProcess(). void sofa::component::topology::container",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:40391,message,message,40391,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"o render only stress vectors higher to this threshold. . ◆ d_showStressVector. template<class DataTypes > . Data<bool> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_showStressVector. Display parameters. ; Flag activating rendering of stress directions within each triangle . ◆ d_stressMaxValue. template<class DataTypes > . Data<Real> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_stressMaxValue. Max stress value computed over the triangulation. . ◆ d_triangleInfo. template<class DataTypes > . core::topology::TriangleData<VecTriangleInfo> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_triangleInfo. Internal triangle data (persistent) . ◆ d_triangleState. template<class DataTypes > . core::topology::TriangleData<VecTriangleState> sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::d_triangleState. Internal triangle data (time-dependent) . ◆ data. template<class DataTypes > . InternalData sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::data. protected . Constructor details. ◆ TriangularFEMForceFieldOptim(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::TriangularFEMForceFieldOptim. protected . ForceField API. . ◆ ~TriangularFEMForceFieldOptim(). template<class DataTypes > . sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::~TriangularFEMForceFieldOptim. protectedvirtual . Function details. ◆ addDForce(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::TriangularFEMForceFieldOptim< DataTypes >::addDForce ; (; const core::MechanicalParams * ; mparams, . DataVecDeriv & ; df, . const DataVecDeriv & ; dx . ). overridevirtual . Internal addDForce Overloaded function, usually called from the generic addDForce version. Thi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html:25933,depend,dependent,25933,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_triangular_f_e_m_force_field_optim.html,1,['depend'],['dependent']
Integrability,"o the given velocity vector. . ◆ computeForce() [1/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; core::MultiVecDerivId ; result, . bool ; clear = true, . bool ; accumulate = true . ). Compute the current force (given the latest propagated position and velocity) . ◆ computeForce() [2/2]. void sofa::simulation::common::MechanicalOperations::computeForce ; (; SReal ; t, . core::MultiVecDerivId ; f, . core::MultiVecCoordId ; x, . core::MultiVecDerivId ; v . ). Compute f(x,v) at time t. Parameters x and v not const due to propagation through mappings. . ◆ getMatrixDimension() [1/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::core::behavior::MultiMatrixAccessor * ; matrix). inline . ◆ getMatrixDimension() [2/2]. void sofa::simulation::common::MechanicalOperations::getMatrixDimension ; (; sofa::Size * const ; nbRow, . sofa::Size * const ; nbCol, . sofa::core::behavior::MultiMatrixAccessor * ; matrix = nullptr . ). ◆ integrateVelocity(). void sofa::simulation::common::MechanicalOperations::integrateVelocity ; (; core::MultiVecDerivId ; res, . core::ConstMultiVecCoordId ; x, . core::ConstMultiVecDerivId ; v, . SReal ; dt . ). res = x + v.dt . ◆ multiVector2BaseVector(). void sofa::simulation::common::MechanicalOperations::multiVector2BaseVector ; (; core::ConstMultiVecId ; src, . linearalgebra::BaseVector * ; dest, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ multiVectorPeqBaseVector(). void sofa::simulation::common::MechanicalOperations::multiVectorPeqBaseVector ; (; core::MultiVecDerivId ; dest, . const linearalgebra::BaseVector * ; src, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). ◆ operator const core::MechanicalParams *(). sofa::simulation::common::MechanicalOperations::operator const core::MechanicalParams * ; (; ). inline . ◆ operator->(). core::MechanicalParams* sofa::simulation::common::MechanicalOperations::operator-> ; (; ). inline . ◆ print() [1/2]. voi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:12574,integrat,integrateVelocity,12574,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['integrat'],['integrateVelocity']
Integrability,"o the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesProcess (const sofa::type::vector< Edge > &edges);  Effectively add some edges to this topology. More...;  ; virtual void removeEdgesW",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:15695,message,message,15695,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"oading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ groups. sofa::type::vector<core::objectmodel::BaseContext::SPtr> sofa::core::collision::CollisionGroupManager::groups. protected . integration groups . ◆ storedGroups. std::map<Instance,sofa::type::vector<core::objectmodel::BaseContext::SPtr> > sofa::core::collision::CollisionGroupManager::storedGroups. protected . Constructor details. ◆ ~CollisionGroupManager(). sofa::core::collision::CollisionGroupManager::~CollisionGroupManager ; (; ). inlineoverrideprotected . Destructor. . Function details. ◆ changeInstance(). void sofa::core::collision::CollisionGroupManager::changeInstance ; (; Instance ; inst). inlineoverrideprotectedvirtual . Implements sofa::core::collision::CollisionAlgorithm. ◆ clearGroups(). virtual void sofa::core::collision::CollisionGroupManager::clearGroups ; (; objectmodel::BaseContext * ; scene). pure virtual . Clear the integration groups. . ◆ createGroups(). virtual void sofa::core::collision::CollisionGroupManager::createGroups ; (; objectmodel::BaseContext * ; scene, . const sofa::type::vector< Contact::SPtr > & ; contacts . ). pure virtual . Create the integration groups. . ◆ getGroups(). virtual con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:14685,integrat,integration,14685,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['integrat'],['integration']
Integrability,"objectmodel::DataFileName fragFilename;  ;  Public Attributes inherited from sofa::gl::component::shader::VisualManagerPass; Data< float > factor;  set the resolution factor for the output pass. default value:1.0 More...;  ; Data< bool > renderToScreen;  if true, this pass will be displayed on screen (only one renderPass in the scene must be defined as renderToScreen) More...;  ; Data< std::string > outputName;  name the output texture More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; OglShader::SPtr m_shaderPostproc;  ; SingleLink< VisualManagerSecondaryPass, OglShader, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_shader;  ;  Protected Attributes inherited from sofa::gl::component::shader::VisualManagerPass; bool multiPassEnabled;  ; std::unique_ptr< sofa::gl::FrameBufferObject > fbo;  ; bool prerendered;  ; GLint passWidth;  ; GLint passHeight;  ;  Protected Attributes inherit",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html:1978,message,messages,1978,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_visual_manager_secondary_pass.html,1,['message'],['messages']
Integrability,"od used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html:11580,message,messages,11580,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_scene_loader.html,1,['message'],['messages']
Integrability,"od used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static bool canCreate (T *&obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static std::string shortName (const T *ptr=nullptr, objectmodel::BaseObjectDescription *arg=nullptr);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html:19639,message,messages,19639,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_edge_pressure_force_field.html,4,['message'],['messages']
Integrability,"ode2 More...;  ; virtual void doAddChild (BaseNode::SPtr node) override;  Add a child node. More...;  ; virtual void doRemoveChild (BaseNode::SPtr node) override;  Remove a child. More...;  ; virtual void doMoveChild (BaseNode::SPtr node, BaseNode::SPtr previous_parent) override;  Move a node from another node. More...;  ; void doExecuteVisitor (simulation::Visitor *action, bool precomputedOrder=false) override;  Execute a recursive action starting from this node. More...;  ; void executeVisitorTreeTraversal (Visitor *action, StatusMap &statusMap, Visitor::TreeTraversalRepetition repeat, bool alreadyRepeated=false);  ;  Protected Member Functions inherited from sofa::simulation::Node;  Node (const std::string &name="""");  ; virtual ~Node () override;  ; virtual bool doAddObject (sofa::core::objectmodel::BaseObject::SPtr obj, sofa::core::objectmodel::TypeOfInsertion insertionLocation=sofa::core::objectmodel::TypeOfInsertion::AtEnd);  Add an object. Detect the implemented interfaces and add the object to the corresponding lists. More...;  ; virtual bool doRemoveObject (sofa::core::objectmodel::BaseObject::SPtr obj);  Remove an object. More...;  ; virtual void doMoveObject (sofa::core::objectmodel::BaseObject::SPtr sobj, Node *prev_parent);  Remove an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseNode;  BaseNode ();  ;  ~BaseNode () override;  ; void setObjectContext (BaseObject::SPtr obj);  Set the context of an object to this. More...;  ; void clearObjectContext (BaseObject::SPtr obj);  Reset the context of an object. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:25893,interface,interfaces,25893,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['interface'],['interfaces']
Integrability,"odel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglMatrix2Variable; Data< bool > transpose;  Transpose the matrix (e.g. to use row-dominant matrices in OpenGL. More...;  ;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::vector< float > >; Data< type::vector< float > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html:13315,message,messages,13315,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_matrix2x3_variable.html,8,['message'],['messages']
Integrability,"odel::Baseinline; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseprotected; initData0(BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags)sofa::core::objectmodel::Baseprotected; initData0(Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; initPolar(const int i)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >protected; integrateVolume(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >protected; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedralFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html:22211,integrat,integrateStiffness,22211,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass-members.html,1,['integrat'],['integrateStiffness']
Integrability,"odel::RenamedData< bool > swapping;  ; sofa::core::objectmodel::Data< bool > d_swapping;  Boolean enabling to swapp hexa-edges in order to avoid bias effect. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Hexa2TetraTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html:1876,message,messages,1876,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_hexa2_tetra_topological_mapping.html,1,['message'],['messages']
Integrability,"odifications A timestep has to be established for each modification. . Public Attributes; Data< VecCoord > d_positions;  position coordinates of the topology object to interact with. More...;  ; Data< Vec6 > d_borders;  List of boxes defined by xmin,ymin,zmin, xmax,ymax,zmax. More...;  ; Data< bool > d_drawBox;  Draw bounding box (default = false) More...;  ; SingleLink< TopologyBoundingTrasher, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology::SPtr m_topology;  ; sofa::geometry::ElementType m_topologyType;  ; sofa::core::sptr< container::dynamic::EdgeSetTopologyModifier > edgeModifier;  ; sofa::core::sptr< container::dynamic::TriangleSetTopologyModifier > triangleModifier;  ; sofa::core::sptr< container::dynamic::QuadSetTopologyModifier > quadModifier;  ; sofa::core::sptr< container::dynamic::TetrahedronSetTopolog",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:1802,message,messages,1802,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['message'],['messages']
Integrability,"of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  DynamicSparseGridTopologyModifier ();  ;  ~DynamicSparseGridTopologyModifier () override;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier;  HexahedronSetTopologyModifier ();  ;  ~HexahedronSetTopologyModifier () override;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; void addHexahedraWarning (const size_t nHexahedra, const sofa::type::vector< Hexahedron > &hexahedraList, const sofa::type::vector< HexahedronID > &hexahedraIndexList, const sofa::type::vector< sofa::type::vector< HexahedronID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some hexahedra were added in this topology. More...;  ; virtual void removeHexahedraWarning (sofa::type::vector< HexahedronID > &hexahedra);  Sends a message to warn that some hexahedra are about to be deleted. More...;  ; void addQuadsProcess (const sofa::type::vector< Quad > &quads) override;  Actually Add some quads to this topology. More...;  ; void removeQuadsProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false) override;  Remove a subset of quads. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:18461,message,message,18461,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,1,['message'],['message']
Integrability,"ofa-after-installation; ; SOFA - Topic: [SOLVED] Error in first launch of sofa after installation. /error-in-rigidrigidmapping-v15-09; . /feed; ; [SOLVED] Error in RigidRigidMapping (v15.09) – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /3; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /8; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /9; ; SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). SOFA - Topic: [SOLVED] Error in RigidRigidMapping (v15.09). /error-in-running-sofapython3-in-conda-environemtn-with-python3-83; ; SOFA - Topic: Error In Running SofaPython3 in Conda Environemtn with Python3.83. /error-in-simulationanimate-while-testing; ; SOFA - Topic: [SOLVED] ERROR in Simulation::animate() while testing. /error-into-use-the-linearsolverconstraintcorrection-with-sofacuda-types; ; SOFA - Topic: Error into use the LinearSolverConstraintCorrection with SofaCUDA types. /error-message-libpng16-dll; ; SOFA - Topic: [SOLVED] Error message – libpng16.dll. /error-msg-in-the-pneunetgripper-tutorial; ; SOFA - Topic: Error msg in the PneuNetGripper tutorial. /error-on-fetching-subirectory-eigen3; ; SOFA - Topic: [SOLVED] Error on Fetching subirectory eigen3. /error-on-sofaguiqt5-dll; ; SOFA - Topic: Error on SofaGuiQt5.dll. /error-pluginmanager-plugin-not-found; ; SOFA - Topic: [SOLVED] [ERROR] [PluginManager] Plugin not found. /error-plugin-not-foundsofamiscforcefielddev; ; SOFA - Topic: [SOLVED] error: Plugin not found:""SofaMiscForceFieldDev"". /error-runsofa-exe-can-not-run-after-successfully-build-the-project-in-vs2019; ; SOFA - Topic: [SOLVED] error: runsofa.exe can not run after successfully build the project in VS2019. /errors-appeared-while-compilation-sofa-in-win7; ; SOFA - Topic: [SOLVED] Errors appeared while compilation SOFA in Win7. /errors-in-building-sofa; . /feed; ; [SOLVED] Errors in building SOFA – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Errors in building SOFA. /3; ; SOFA -",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:295603,message,message-,295603,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['message'],"['message', 'message-']"
Integrability,"ofa-on-win7-vs2012; ; SOFA - Topic: [SOLVED] Multiple Errors when building SOFA on Win7, VS2012. /multiple-objects-in-a-obj-file; ; SOFA - Topic: Multiple objects in a .obj file. /multiple-tags-for-an-object; ; SOFA - Topic: [SOLVED] Multiple tags for an object?. /multithreading-in-python; ; SOFA - Topic: [SOLVED] Multithreading in Python; SOFA - Topic: [SOLVED] Multithreading in Python. /multithreading-plugin-in-pyscn; ; SOFA - Topic: [SOLVED] Multithreading plugin in .pyscn. /muscle-contraction-simulation; ; SOFA - Topic: [SOLVED] Muscle contraction simulation. /narrow-phases; ; SOFA - Topic: Narrow phases ?. /natural-vibration-problem-using-a-cantilever-beam; ; SOFA - Topic: Natural vibration problem using a cantilever beam. /navigation-recorded-camera; ; SOFA - Topic: Navigation Recorded Camera. /navigationrecordedcamera-scn-not-working; ; SOFA - Topic: [SOLVED] NavigationRecordedCamera.scn not working ?. /ncremental-iterative-nonlinear-fea-with-deformation-dependent-loads; ; SOFA - Topic: Incremental-Iterative Nonlinear FEA with deformation-dependent loads. /need-help-with-the-rigidify-function-from-stlib-physics-mixedmaterial; ; SOFA - Topic: Need Help With the Rigidify function from stlib.physics.mixedmaterial. /needle-insertion-into-soft-tissue; ; SOFA - Topic: [SOLVED] Needle Insertion into Soft Tissue. /needle-insertion-simulation; ; SOFA - Topic: Needle Insertion Simulation. /needle-insertion-simulation-problem; ; SOFA - Topic: Needle insertion simulation problem. /need-very-old-version-of-sofa-to-use-flexible-plugin; ; SOFA - Topic: [SOLVED] Need (very) old version of SOFA to use ""Flexible"" plugin. /new-api-documentation; ; SOFA - Topic: New API documentation. /new-approaches-to-catheter-navigation-for-interventional-radiology-simulation; ; SOFA - Topic: New approaches to catheter navigation for interventional radiology simulation. /new-build-system; . /page; . /4; ; SOFA - Topic: New build system. SOFA - Topic: New build system. /new-forum-format; . /fe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:352854,depend,dependent-loads,352854,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['depend'],"['dependent', 'dependent-loads']"
Integrability,"ofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addPointsWarning() [1/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [2/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< core::topology::PointAncestorElem > & ; ancestorElems, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [3/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ init(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, and sofa::component::topology::container:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:20907,message,message,20907,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"ofa::component::topology::container::dynamic::TriangleSetTopologyModifier::TriangleSetTopologyModifier ; (; ). inlineprotected . ◆ ~TriangleSetTopologyModifier(). sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::~TriangleSetTopologyModifier ; (; ). inlineoverrideprotected . Function details. ◆ addEdgesProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addEdgesProcess ; (; const sofa::type::vector< Edge > & ; edges). overrideprotectedvirtual . Add some edges to this topology. ; See alsoaddEdgesWarning ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addEdgesWarning() [1/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList . ). inlineoverrideprotectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addEdgesWarning() [2/2]. void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). inlineoverrideprotectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). overrideprotectedvirtual . Add some points to this topolo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:29384,message,message,29384,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,ofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; const sofa::defaulttype::Rigid3fTypes::Coord & ; i). ◆ getVec() [4/10]. const sofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; const sofa::defaulttype::Rigid3fTypes::Deriv & ; i). ◆ getVec() [5/10]. const sofa::type::Vec6f & sofa::component::constraint::projective::getVec ; (; const sofa::defaulttype::Vec3dTypes::Deriv & ; i). ◆ getVec() [6/10]. sofa::type::Vec3d& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3dTypes::Coord & ; i). ◆ getVec() [7/10]. sofa::type::Vec3d& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3dTypes::Deriv & ; i). This function are there to provide kind of type translation to the vector one so we can implement the algorithm as is the different objects where of similar type. this solution is not really satisfactory but for the moment it does the job. A better solution would that all the used types are following the same interface which requires to touch core sofa classes. . ◆ getVec() [8/10]. sofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3fTypes::Coord & ; i). ◆ getVec() [9/10]. sofa::type::Vec3f& sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Rigid3fTypes::Deriv & ; i). ◆ getVec() [10/10]. sofa::type::Vec6f & sofa::component::constraint::projective::getVec ; (; sofa::defaulttype::Vec3dTypes::Deriv & ; i). ◆ init(). SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::init ; (; ). ◆ initExternalModule(). void sofa::component::constraint::projective::initExternalModule ; (; ). ◆ registerAffineMovementProjectiveConstraint(). void sofa::component::constraint::projective::registerAffineMovementProjectiveConstraint ; (; sofa::core::ObjectFactory * ; factory). ◆ registerAttachProjectiveConstraint(). void sofa::component::constraint::projective::registerAttachProjectiveConstraint ; (; sofa::,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1projective.html:16833,interface,interface,16833,api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1projective.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1constraint_1_1projective.html,1,['interface'],['interface']
Integrability,"ointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; virtual void addPointsProcess (const sofa::Size nPoints);  Extend the point container storage by nPoints. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; virtual void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Remove a subset of points. More...;  ; virtual void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true);  move input points indices to input new coords. Also propagate event More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; virtual void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &, const bool renumberDOF=true);  Reorder this topology. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void propagateTopologicalEngineChanges ();  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. TODO: temporary duplication of topological events (commented by default) More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:13758,message,message,13758,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"ointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this object describes. More...;  ; void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange object to the list of the topology this object describes. More...;  ;  Protected Member Functions inherited from sofa::core::topology::BaseTopologyObject;  BaseTopologyObject ();  ;  ~BaseTopologyObject () override;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObje",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:25027,message,message,25027,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,6,['message'],['message']
Integrability,"ointsX0;  initial mesh DOFs position More...;  ; VecCoord meshPointsXf;  final mesh DOFs position More...;  ; SingleLink< AffineMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static const auto CoordSize = Coord::total_size;  . Protected Attributes; std::unique_ptr< AffineMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by speci",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html:3442,message,messages,3442,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_affine_movement_projective_constraint.html,1,['message'],['messages']
Integrability,"ol > d_useRestPosition;  If true will use restPosition only at init. More...;  . SetIndex f_indices1;  Indices of the source points on the first model. More...;  ; SetIndex f_indices2;  Indices of the fixed points on the second model. More...;  ; Data< sofa::type::vector< sofa::topology::Edge > > d_edges;  List of edge indices. More...;  ; Data< type::vector< unsigned > > d_indexPairs;  list of couples (parent index + index in the parent) More...;  ; Data< type::vector< Real > > d_distances;  List of distances between pairs of points. More...;  ; Data< bool > d_drawPairs;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(NearestPointROI, DataTypes), sofa::core::DataEngine, SOFA_TEMPLATE2(core::behavior::PairStateAccessor, DataTypes, DataTypes));  ;  NearestPointROI (core::behavior::MechanicalState< DataTypes > *=nullptr, core::behavior::MechanicalState< DataTypes > *mm2=nullptr);  ;  ~NearestPointROI () override;  ; void init () override;  Initialization method called at graph creation and modi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html:2389,message,messages,2389,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_nearest_point_r_o_i.html,1,['message'],['messages']
Integrability,ollision with floor. /deformable-object-not-colliding; . /feed; ; [SOLVED] Deformable object not colliding – SOFA. /page; . /15; ; SOFA - Topic: [SOLVED] Deformable object not colliding. /4; ; SOFA - Topic: [SOLVED] Deformable object not colliding. SOFA - Topic: [SOLVED] Deformable object not colliding. /deformable-objects; . /feed; ; [SOLVED] Deformable objects. – SOFA. /page; . /16; ; SOFA - Topic: [SOLVED] Deformable objects. /5; ; SOFA - Topic: [SOLVED] Deformable objects. SOFA - Topic: [SOLVED] Deformable objects. /deformablerigid-object-surface-attachment; ; SOFA - Topic: Deformable/rigid object surface attachment. /deformed-mesh; ; SOFA - Topic: deformed mesh. /deforming-object-when-more-than-a-certain-force-is-applied; ; SOFA - Topic: Deforming object when more than a certain force is applied. /deform-the-mesh-data; ; SOFA - Topic: [SOLVED] deform the mesh data. /deleting-springs-via-sofapython3; ; SOFA - Topic: [SOLVED] Deleting Springs via SofaPython3. /dependency-error-when-loading-softrobots-dll; . /feed; ; Dependency error when loading SoftRobots.dll – SOFA. SOFA - Topic: Dependency error when loading SoftRobots.dll. /deprecated-frame-plugin; . /feed; ; [SOLVED] Deprecated Frame plugin ? – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /2; ; SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. SOFA - Topic: [SOLVED] Deprecated Frame plugin ?. /depth-of-field; ; SOFA - Topic: Depth Of Field. /detailed-document; ; SOFA - Topic: detailed document. /determine-visibility-of-objects-in-the-scene; ; SOFA - Topic: Determine Visibility of Objects in the Scene. /determining-if-the-include-file-pthread-h-exists-failed; ; SOFA - Topic: [SOLVED] Determining if the include file pthread.h exists failed. /develope-a-new-fem-plugin; . /feed; ; [SOLVED] Develop a new FEM plugin – SOFA. /page; . /14; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. /4; ; SOFA - Topic: [SOLVED] Develop a new FEM plugin. SOFA - Topic: [SOLVED] Develop a new FEM plugin,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:286995,depend,dependency-error-when-loading-softrobots-dll,286995,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency-error-when-loading-softrobots-dll']
Integrability,ollowing a tool in the scene. /shadows-depend-on-absolute-scale-of-object; ; SOFA - Topic: [SOLVED] Shadows depend on absolute scale of object?. /sig-11-sigsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation tr,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:386907,contract,contracting,386907,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['contract'],['contracting']
Integrability,"ology::BaseMeshTopology * sofa::core::objectmodel::BaseContext::getMeshTopology ; (; SearchDirection ; dir = SearchUp); const. virtual . Mesh Topology (unified interface for both static and dynamic topologies) . ◆ getMeshTopologyLink(). core::topology::BaseMeshTopology * sofa::core::objectmodel::BaseContext::getMeshTopologyLink ; (; SearchDirection ; dir = SearchUp); const. virtual . Mesh Topology (unified interface for both static and dynamic topologies) ; Reimplemented in sofa::simulation::graph::DAGNode, and sofa::simulation::Node. ◆ getNameHelper(). ComponentNameHelper& sofa::core::objectmodel::BaseContext::getNameHelper ; (; ). inline . Returns utilitary object to uniquely name objects in the context. . ◆ getObject() [1/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . const std::string & ; path . ); const. virtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObject() [2/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node, and sofa::simulation::graph::DAGNode. ◆ getObject() [3/3]. void * sofa::core::objectmodel::BaseContext::getObject ; (; const ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. virtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented in sofa::simulation::Node. ◆ getObject",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:25187,wrap,wrapper,25187,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"ologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual bool checkTopologies ();  Method to check the topology mapping maps regarding the upper topology. More...;  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html:5868,depend,dependent,5868,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html,6,['depend'],['dependent']
Integrability,olute-scale-of-object; ; SOFA - Topic: [SOLVED] Shadows depend on absolute scale of object?. /sig-11-sigsegv-segfault-segmentation-fault-core-dumped; . /embed; ; SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). SOFA - Topic: SIG 11 – SIGSEGV: segfault Segmentation fault (core dumped). /simulate-a-carbon-fibre-textile-for-handling-processes; ; SOFA - Topic: Simulate a carbon fibre textile for handling processes. /simulate-an-embedded-object; ; SOFA - Topic: Simulate an embedded object. /simulate-liquid-environment; ; SOFA - Topic: simulate liquid environment. /simulate-pivot-liaison-using-rigidmapping-and-articulatedsystem; ; SOFA - Topic: Simulate pivot liaison using RigidMapping and ArticulatedSystem. /simulating-blood-vessels-using-centerline-and-beamfemforcefield; ; SOFA - Topic: Simulating Blood Vessels using Centerline and BeamFEMForceField. /simulating-contracting-actuator; . /embed; ; SOFA - Topic: Simulating contracting actuator. SOFA - Topic: Simulating contracting actuator. /simulating-deformation-of-a-simple-set-of-beams-via-beamfemforcefield; ; SOFA - Topic: Simulating deformation of a simple set of beams via BeamFEMForceField. /simulating-elastic-material-in-sofa; ; SOFA - Topic: Simulating Elastic Material in SOFA. /simulating-geomagic-touch; ; SOFA - Topic: Simulating Geomagic Touch. /simulating-the-internal-stress-distribution-of-an-object-with-certain-load; ; SOFA - Topic: Simulating the internal stress distribution of an object with certain load. /simulation-incredibly-slow; ; SOFA - Topic: Simulation incredibly slow. /simulation-of-tearing-a-part-on-the-lens-capsule; . /feed; ; [SOLVED] Simulation of tearing a part on the lens capsule – SOFA. SOFA - Topic: [SOLVED] Simulation of tearing a part on the lens capsule. /simulationstepdt-does-not-update-the-visuals; ; SOFA - Topic: simulationStep(dt) does not update the visuals. /simulation-trend; ; SOFA - Topic: #Simulation trend!. /skeletonplugin-error-in-cgal; ; SOFA - Topic:,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:386954,contract,contracting,386954,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['contract'],['contracting']
Integrability,"omponent::engine::transform::RigidToQuatEngine< DataTypes > Class Template Reference . #include <RigidToQuatEngine.h>. Inheritance diagram for sofa::component::engine::transform::RigidToQuatEngine< DataTypes >:. [legend]. Public Attributes; Data< type::vector< Vec3 > > f_positions;  Positions (Vector of 3) More...;  ; Data< type::vector< Quat > > f_orientations;  Orientations (Quaternion) More...;  ; Data< type::vector< Vec3 > > f_orientationsEuler;  Orientations (Euler angle) More...;  ; Data< type::vector< RigidVec3 > > f_rigids;  Rigid (Position + Orientation) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RigidToQuatEngine, sofa::core::DataEngine);  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ;  Public Member Functions inherited ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html:1303,message,messages,1303,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_rigid_to_quat_engine.html,1,['message'],['messages']
Integrability,"on method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:4791,depend,dependent,4791,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['depend'],['dependent']
Integrability,"on::BaseGUI::getViewer ; (; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ initViewer(). virtual void sofa::gui::common::BaseGUI::initViewer ; (; BaseViewer * ; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ mainLoop(). virtual int sofa::gui::common::BaseGUI::mainLoop ; (; ). pure virtual . Implemented in sofa::gui::qt::RealGUI, and sofa::gui::batch::BatchGUI. ◆ redraw(). virtual void sofa::gui::common::BaseGUI::redraw ; (; ). pure virtual . Update the GUI. ; Implemented in sofa::gui::batch::BatchGUI. ◆ registerViewer(). virtual void sofa::gui::common::BaseGUI::registerViewer ; (; BaseViewer * ; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ saveScreenshot(). bool sofa::gui::common::BaseGUI::saveScreenshot ; (; const std::string & ; filename, . int ; compression_level = -1 . ). virtual . ◆ sendMessage(). virtual void sofa::gui::common::BaseGUI::sendMessage ; (; const std::string & ; , . const std::string & ;  . ). inlinevirtual . Send a (script) message. . ◆ SetArgumentParser(). static void sofa::gui::common::BaseGUI::SetArgumentParser ; (; ArgumentParser * ; parser). inlinestatic . ◆ setBackgroundColor(). virtual void sofa::gui::common::BaseGUI::setBackgroundColor ; (; const sofa::type::RGBAColor & ; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ setBackgroundImage(). virtual void sofa::gui::common::BaseGUI::setBackgroundImage ; (; const std::string & ; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ setConfigDirectoryPath(). void sofa::gui::common::BaseGUI::setConfigDirectoryPath ; (; const std::string & ; path, . bool ; createIfNecessary = false . ). static . ◆ setDumpState(). virtual void sofa::gui::common::BaseGUI::setDumpState ; (; bool ; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ setExportState(). virtual void sofa::gui::common::BaseGUI::setExportState ; (; bool ; ). inlinevirtual . Reimplemented in sofa::gui::qt::RealGUI. ◆ setFullScreen(). virtual void sofa::gui::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html:6792,message,message,6792,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,1,['message'],['message']
Integrability,"onent::solidmechanics::spring::VectorSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >, sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::GearSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::FrameSpringForceField< DataTypes >, and sofa::component::solidmechanics::spring::SpringForceField< DataTypes >. ◆ addDForce() [2/2]. template<class DataTypes > . void sofa::core::behavior::PairInteractionForceField< DataTypes >::addDForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dfId . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method retrieves the force and dx vector from the two MechanicalState and call the internal addDForce(VecDeriv&,VecDeriv&,const VecDeriv&,const VecDeriv&,SReal,SReal) method implemented by the component. ; Implements sofa::core::behavior::BaseForceField. ◆ addForce() [1/2]. template<class TDataTypes > . virtual void sofa::core::behavior::PairInteractionForceField< TDataTypes >::addForce ; (; const MechanicalParams * ; mparams, . DataVecDeriv & ; f1, . DataVecDeriv & ; f2, . const DataVecCoord & ; x1, . const DataVecCoord & ; x2, . const DataVecDeriv & ; v1, . const DataVecDeriv & ; v2 . ). pure virtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this ForceField.; If the ForceField can be represente",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html:22548,integrat,integrated,22548,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,1,['integrat'],['integrated']
Integrability,"ons inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void ha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html:13640,depend,dependent,13640,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_uniform_mass.html,6,['depend'],['dependent']
Integrability,"ons inherited from sofa::core::behavior::BaseForceField;  SOFA_ABSTRACT_CLASS (BaseForceField, StateAccessor);  ; virtual const sofa::linearalgebra::BaseMatrix * getComplianceMatrix (const MechanicalParams *);  ; virtual void addClambda (const MechanicalParams *, MultiVecDerivId, MultiVecDerivId, SReal);  Accumulate the contribution of the C compliant matrix multiplied by the given Lagrange multipliers lambda vector with the given cFactor coefficient. More...;  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html:16278,depend,dependent,16278,api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mass_1_1_diagonal_mass.html,2,['depend'],['dependent']
Integrability,"onst bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this ob",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:18719,message,message,18719,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"onst core::MechanicalParams * ; , . const DataVecCoord & ;  . ); const. inlineoverridevirtual . Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >. ◆ init(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, and sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >. ◆ initTextures(). template<class DataTypes > . virtual void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::initTextures ; (; ). inlinevirtual . ◆ integrateMass(). template<class DataTypes > . HexahedronFEMForceFieldAndMass< DataTypes >::Real sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::integrateMass ; (; int ; signx, . int ; signy, . int ; signz, . Real ; l0, . Real ; l1, . Real ; l2 . ). ◆ isDiagonal(). template<class DataTypes > . bool sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::isDiagonal ; (; ); const. inlineoverridevirtual . Implements sofa::core::behavior::BaseMass. ◆ reinit(). template<class DataTypes > . void sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >.; Reimplemented in sofa::component::solidmechanics::fem::nonuniform::NonUniformHexahedronFEMForceFieldAndMass< DataTypes >, and sofa::com",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:39554,integrat,integrateMass,39554,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['integrat'],['integrateMass']
Integrability,"onst;  ; const AccumulationVecId< DataTypes, V_DERIV, V_READ > & readTotalForces () const;  Returns a proxy objects offering simplified access to elements of the cumulative sum of all force containers. More...;  ; void addToTotalForces (core::ConstVecDerivId forceId) override;  The provided VecDerivId will contribute to the sum of all force containers. More...;  ; void removeFromTotalForces (core::ConstVecDerivId forceId) override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html:5799,depend,dependent,5799,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mapped_object.html,2,['depend'],['dependent']
Integrability,"onst_iterator endStateChange () const override;  Provides an iterator on the last element in the list of StateChange objects. More...;  ; virtual void resetTopologyChangeList ();  Free each Topology changes in the list and remove them from the list. More...;  ; virtual void resetStateChangeList ();  Free each State changes in the list and remove them from the list. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html:3279,depend,dependent,3279,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_container.html,1,['depend'],['dependent']
Integrability,"ontext, Base);  ; virtual bool hasAncestor (const BaseContext *) const;  ; ComponentNameHelper & getNameHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:23361,wrap,wrapper,23361,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,"ontext, storing all shared parameters in Datas. ; More... Inheritance diagram for sofa::core::objectmodel::Context:. [legend]; Detailed Description; Implementation of BaseContext, storing all shared parameters in Datas. . Public Attributes; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sleeping, and thus ignored by visitors. More...;  ; Data< bool > d_canChangeSleepingState;  The node can change its sleeping state. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Context, BaseContext);  ; void copyContext (const Context &c);  Copy the context variables from the given instance. More...;  ; void copySimulationContext (const Context &c);  Copy the context variables of visualization from the given instance. More...;  ; Parameters; bool isActive () const override;  The Context is active. More...;  ; void setActive (bool val) override;  State of the context",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:1349,message,messages,1349,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['message'],['messages']
Integrability,"ool > p_localIndices;  If true, will compute local dof indices in topological elements. More...;  ; Data< bool > p_drawROI;  Draw ROI. More...;  ; Data< bool > p_drawPoints;  Draw Points. More...;  ; Data< bool > p_drawEdges;  Draw Edges. More...;  ; Data< bool > p_drawTriangles;  Draw Triangles. More...;  ; Data< bool > p_drawTetrahedra;  Draw Tetrahedra. More...;  ; Data< double > _drawSize;  rendering size for box and topological elements More...;  ; ROIType typeROI;  ; sofa::type::vector< unsigned int > localIndices;  ; sofa::type::vector< unsigned int > listOnBorder;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SubsetTopology, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html:4701,message,messages,4701,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_subset_topology.html,1,['message'],['messages']
Integrability,"ool val) override;  Sleeping state of the context. More...;  ; void setChangeSleepingState (bool val) override;  Sleeping state change of the context. More...;  ; virtual void setDisplayWorldGravity (bool val);  Display flags: Gravity. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseContext;  SOFA_CLASS (BaseContext, Base);  ; virtual BaseContext * getRootContext () const;  Get the root context of the graph. More...;  ; virtual bool hasAncestor (const BaseContext *) const;  ; ComponentNameHelper & getNameHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; virtual core::BaseState * getState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual behavior::BaseMechanicalState * getMechanicalState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual core::topology::Topology * getTopology () const;  Topology. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopologyLink (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; virtual core::visual::Shader * getShader () const;  Global Shader. More...;  ; virtual void * getObject (const ClassInfo &class_info, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:4154,interface,interface,4154,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['interface'],['interface']
Integrability,"oord_kmin . ); const. Computes the intersection of the vector from point a to point b and the triangle indexed by t. ; Parameters. a: first input point ; b: last input point ; ind_t: triangle indice ; indices: vertex indices of edge (belonging to ind_t) crossed by the vecteur AB ; baryCoef: barycoef of the intersection point on the edge ; coord_kmin: barycoef of the intersection point on the vecteur AB. . ◆ computeTriangleAABB(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleAABB ; (; const TriangleID ; i, . Coord & ; minCoord, . Coord & ; maxCoord . ); const. ◆ computeTriangleArea() [1/2]. template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleArea ; (; BasicArrayInterface< Real > & ; ai); const. Computes the triangle area of all triangles are store in the array interface. ; computes the edge length of all edges are store in the array interface . ◆ computeTriangleArea() [2/2]. template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleArea ; (; const TriangleID ; i); const. Computes the area of triangle no i and returns it. . ◆ computeTriangleBarycoefs(). template<class DataTypes > . auto sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleBarycoefs ; (; const TriangleID ; ind_t, . const sofa::type::Vec< 3, Real > & ; p . ); const. Computes barycentric coefficients of point p in triangle (a,b,c) indexed by ind_t. . ◆ computeTriangleCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleCenter ; (; const TriangleID ; i); const. ◆ computeTriangleCircumcenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:41799,interface,interface,41799,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"oords_list, sofa::type::vector< EdgeID > &new_edges, SReal epsilonSnapPath, SReal epsilonSnapBorder);  ; int SplitAlongPath (PointID, Coord &, PointID, Coord &, sofa::type::vector< sofa::geometry::ElementType > &, sofa::type::vector< ElemID > &, sofa::type::vector< sofa::type::Vec3 > &, sofa::type::vector< EdgeID > &, SReal, SReal);  ; int SplitAlongPath (PointID, Coord &, PointID, Coord &, sofa::type::vector< sofa::geometry::ElementType > &, sofa::type::vector< ElemID > &, sofa::type::vector< sofa::type::Vec3 > &, sofa::type::vector< EdgeID > &, SReal, SReal);  ;  Public Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(EdgeSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes));  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;  ; Real computeRestEdgeLength (const EdgeID i) const;  computes the initial length of edge no i and returns it More...;  ; Real computeRestSquareEdgeLength (const EdgeID i) const;  computes the initial square length of edge no i and returns it More...;  ; void computeEdgeAABB (const EdgeID i, CPos &minCoord, CPos &maxCoord) const;  ; Coord computeEdgeCenter (const EdgeID i) const;  ; Coord computeEdgeDirection (const EdgeID i) const;  ; Coord computeRestEdgeDirection (const EdgeID i) const;  ; void getEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; void getRestEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; bool isPointOnEdge (const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) const;  ; sofa::type::vector< SReal > computeEdgeBarycentricCoordinates (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, bool useRestPosition=false) const;  Compute the barycentric coor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:22003,interface,interface,22003,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['interface'],['interface']
Integrability,"opagateTopologicalChanges ();  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ; virtual void notifyEndingEvent ();  notify the end for the current sequence of topological change events. More...;  ; virtual void removeItems (const sofa::type::vector< Index > &);  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html:2870,depend,dependent,2870,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_modifier.html,1,['depend'],['dependent']
Integrability,"operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; More... Inheritance diagram for sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >:. [legend]; Detailed Description; template<class TDataTypes, VecType vtype, VecAccess vaccess>; struct sofa::core::AccumulationVecId< TDataTypes, vtype, vaccess >; Proxy class for accessing elements within an imaginary container that represents the cumulative sum of multiple other containers. Each individual container is represented by a VecId. The class maintains a list of VecIdDeriv objects, which defines the containers contributing to the final cumulative sum. This class provides a simplified interface for accessing elements within the cumulative container. It allows retrieving specific elements using the overloaded subscript operator (operator[]). When accessing an element at a particular index, the class delegates the retrieval to the appropriate container represented by the associated VecIdDeriv. In addition to element retrieval, the class supports dynamic management of the contributing containers. It offers functions to add and remove VecId objects from the list of containers that contribute to the cumulative sum. ; Template Parameters. TDataTypesType of DOFs stored in the State . Public Member Functions; Deriv operator[] (Size i) const;  ; void addToContributingVecIds (core::ConstVecDerivId vecDerivId);  The provided VecDerivId container will contribute in the cumulative sum. More...;  ; void removeFromContributingVecIds (core::ConstVecDerivId vecDerivId);  ;  AccumulationVecId (const State< TDataTypes > &state);  ;  AccumulationVecId ()=delete;  . Constructor details. ◆ AccumulationV",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html:1811,interface,interface,1811,api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1core_1_1_accumulation_vec_id.html,1,['interface'],['interface']
Integrability,"opologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::QuadSetTopologyModifier;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Me",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:20785,message,message,20785,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,2,['message'],['message']
Integrability,"opology::TopologyData< ElementType, VecT >:. [legend]; Detailed Description; template<class ElementType, class VecT>; class sofa::core::topology::TopologyData< ElementType, VecT >; A class for storing topology related data. Automatically manages topology changes. ; This class is a wrapper of class type::vector that is made to take care transparently of all topology changes that might happen (non exhaustive list: element added, removed, fused, renumbered). . Public Attributes; std::function< void(Index, value_type &)> p_onDestructionCallback;  ; std::function< void(Index, value_type &, const ElementType &, const sofa::type::vector< Index > &, const sofa::type::vector< SReal > &)> p_onCreationCallback;  ;  Public Attributes inherited from sofa::core::objectmodel::Data< T >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  . Protected Attributes; std::unique_ptr< TopologyDataElementHandler > m_topologyHandler;  ; bool m_isTopologyDynamic;  ;  Protected Attributes inherited from sofa::core::topology::BaseTopologyData< VecT >; sofa::core::topology::BaseMes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html:1581,message,message,1581,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology_data.html,1,['message'],['message']
Integrability,"opology::container::dynamic::QuadSetTopologyModifier, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_toQuadModifier;  Output modifier handling Quads. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (Edge2QuadTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initializes the target BaseTopology from the source BaseTopology. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; Index getFromIndex (Index ind) override;  ;  Public Member Functions inherited from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html:2704,message,messages,2704,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_edge2_quad_topological_mapping.html,1,['message'],['messages']
Integrability,"opology::container::dynamic::TriangleSetTopologyModifier::removeTrianglesProcess ; (; const sofa::type::vector< TriangleID > & ; indices, . const bool ; removeIsolatedEdges = false, . const bool ; removeIsolatedPoints = false . ). protectedvirtual . Remove a subset of triangles. Eventually remove isolated edges and vertices. ; Important : some structures might need to be warned BEFORE the points are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. See alsoremoveTrianglesWarning; Parameters. removeIsolatedEdgesif true isolated edges are also removed ; removeIsolatedPointsif true isolated vertices are also removed . Reimplemented in sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier. ◆ removeTrianglesWarning(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTrianglesWarning ; (; sofa::type::vector< TriangleID > & ; triangles). protectedvirtual . Sends a message to warn that some triangles are about to be deleted. ; See alsoremoveTrianglesProcess; Important : parameter indices is not const because it is actually sorted from the highest index to the lowest one. . ◆ renumberPointsProcess(). void sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::renumberPointsProcess ; (; const sofa::type::vector< PointID > & ; index, . const sofa::type::vector< PointID > & ; inv_index, . const bool ; renumberDOF = true . ). overrideprotectedvirtual . Reorder this topology. ; Important : the points are actually renumbered in the mechanical object's state vectors iff (renumberDOF == true) See alsoMechanicalObject::renumberValues ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ SOFA_CLASS(). sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::SOFA_CLASS ; (; TriangleSetTopologyModifier ; , . EdgeSetTopologyModifier ;  . ). Related details. ◆ TriangleSetGeometryAlgorithms. template<class D",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:41340,message,message,41340,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"or a, iterator b);  Swap two values in the list. Uses a const_cast to violate the read-only iterators. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::MultiLink< Node, T, BaseLink::FLAG_DOUBLELINK|(false ? BaseLink::FLAG_STRONGLINK :BaseLink::FLAG_DUPLICATE)>;  MultiLink ();  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init);  ;  MultiLink (const BaseLink::InitLink< OwnerType > &init, DestPtr val);  ; virtual ~MultiLink ();  ; void setValidator (ValidatorFn fn);  ; DestType * get (std::size_t index) const;  ; DestType * operator[] (std::size_t index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::TLink< TOwnerType, TDestType, TFlags >;  TLink ();  ;  TLink (const InitLink< OwnerType > &init);  ;  ~TLink () override;  ; size_t size () const;  ; bool empty () const;  ; const Container & getValue () const;  ; const_iterator begin () const;  ; const_iterator end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html:2407,message,message,2407,api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node_sequence.html,1,['message'],['message']
Integrability,"or multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; Friends |; List of all members . sofa::component::topology::container::dynamic::PointSetTopologyModifier Class Reference . #include <PointSetTopologyModifier.h>. Inheritance diagram for sofa::component::topology::container::dynamic::PointSetTopologyModifier:. [legend]; Detailed Description; A class that can apply basic topology transformations on a set of points. . Public Attributes; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PointSetTopologyModifier, core::topology::TopologyModifier);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void swapPoints (const Index i1, const Index i2);  Swap points i1 and i2. More...;  ; virtual void renumberPoints (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:1164,message,messages,1164,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['messages']
Integrability,"or< SReal > > & ; baryCoefs . ). virtual . add a set of quads ; Parameters. quadsan array of vertex indices describing the quads to be created ; ancestorsfor each quad to be created provides an array of quad ancestors (optional) ; baryCoefsfor each quad provides the barycentric coordinates (sum to 1) associated with each ancestor (optional) . ◆ addQuadsProcess(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::addQuadsProcess ; (; const sofa::type::vector< Quad > & ; quads). protectedvirtual . Effectively Add some quads to this topology. ; See alsoaddQuadsWarning ; Reimplemented in sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ addQuadsWarning() [1/2]. void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::addQuadsWarning ; (; const size_t ; nQuads, . const sofa::type::vector< Quad > & ; quadsList, . const sofa::type::vector< QuadID > & ; quadsIndexList . ). protected . Sends a message to warn that some quads were added in this topology. ; See alsoaddQuadsProcess . ◆ addQuadsWarning() [2/2]. void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::addQuadsWarning ; (; const size_t ; nQuads, . const sofa::type::vector< Quad > & ; quadsList, . const sofa::type::vector< QuadID > & ; quadsIndexList, . const sofa::type::vector< sofa::type::vector< QuadID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some quads were added in this topology. ; See alsoaddQuadsProcess . ◆ init(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ propagateTopologicalEngineChanges(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:28713,message,message,28713,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['message'],['message']
Integrability,"or< sofa::type::Material > > d_materials;  ; Data< type::vector< FaceGroup > > d_groups;  ; SingleLink< VisualModelImpl, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; sofa::defaulttype::Rigid3fTypes::VecCoord xforms;  Temporary added here from RigidState deprecated inheritance. More...;  ; bool xformsModified;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html:5805,message,messages,5805,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_model_impl.html,1,['message'],['messages']
Integrability,"ord & ; maxCoord . ); const. ◆ computeHexahedronRestBarycentricCoeficients(). template<class DataTypes > . sofa::type::Vec3 sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::computeHexahedronRestBarycentricCoeficients ; (; const HexaID ; h, . const Coord & ; p . ); const. computes barycentric coordinates corresponding to a given position in the hexa 'h' in its rest position. Warning: this method is only correct if the hexahedron is not deformed . ◆ computeHexahedronRestCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::computeHexahedronRestCenter ; (; const HexaID ; h); const. ◆ computeHexahedronVolume() [1/2]. template<class DataTypes > . void sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::computeHexahedronVolume ; (; BasicArrayInterface< Real > & ; ai); const. computes the hexahedron volume of all hexahedra are store in the array interface . ◆ computeHexahedronVolume() [2/2]. template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::computeHexahedronVolume ; (; const HexaID ; h); const. computes the volume of hexahedron no h and returns it . ◆ computeJacobian(). template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::computeJacobian ; (; const HexaID ; h, . const LocalCoord ; nc, . const VecCoord & ; p . ); const. computes the Jacobian i.e. determinant of dpos/dnc on the geometry given by p (could be rest geometry) . ◆ computeNodalValue(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::HexahedronSetGeometryAlgorithms< DataTypes >::computeNodalValue ; (; const HexaID ; h, . const LocalCoord ; nc, . const VecCoord & ; p . ); const. computes the nodal position given the hexahedron",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:33706,interface,interface,33706,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"ore...;  ; Data< VecCoord > f_X2;  Rest position coordinates of the degrees of freedom of the second object. More...;  ; Data< SetIndex > f_X2_mapping;  Mapping of indices to inject position2 inside position1 vertex buffer. More...;  ; Data< SetIndex > f_indices1;  Indices of the points of the first object. More...;  ; Data< SetIndex > f_indices2;  Indices of the points of the second object. More...;  ; Data< VecCoord > f_points;  position coordinates resulting from the merge More...;  ; Data< bool > f_noUpdate;  do not update the output at each time step (false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergePoints, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Public Member Functi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html:1784,message,messages,1784,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,1,['message'],['messages']
Integrability,"ore...;  ; Data< unsigned int > nbInputs;  Number of input vectors. More...;  ; core::objectmodel::vectorData< SetIndices > indices;  ; core::objectmodel::vectorData< SetIndices > edgeIndices;  ; core::objectmodel::vectorData< SetIndices > triangleIndices;  ; core::objectmodel::vectorData< SetIndices > quadIndices;  ; core::objectmodel::vectorData< SetIndices > tetrahedronIndices;  ; core::objectmodel::vectorData< SetIndices > hexahedronIndices;  ; Data< type::vector< unsigned int > > indexPairs;  outputs More...;  ; core::objectmodel::vectorData< SeqPositions > position;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshSplittingEngine, DataTypes), Inherited);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given de",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html:2179,message,messages,2179,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_splitting_engine.html,1,['message'],['messages']
Integrability,"ore...;  ; ExecParams & setExecMode (ExecMode v);  Request a specific mode of execution. More...;  ; ExecParams & setThreadID (int v);  Specify the index of the current thread. More...;  . Static Public Member Functions; static const MechanicalParams * defaultInstance ();  Get the default MechanicalParams, to be used to provide a default values for method parameters. More...;  ;  Static Public Member Functions inherited from sofa::core::ExecParams; static ExecParams * defaultInstance ();  Get the default ExecParams, to be used to provide a default values for method parameters. More...;  . Setup methods; Called by the OdeSolver from which the mechanical computations originate. They all return a reference to this MechanicalParam instance, to ease chaining multiple setup calls. . bool m_kFactorUsed;  Checks if the stiffness matrix contributions factor has been accessed. More...;  ; MechanicalParams & setDt (SReal v);  Set time step. More...;  ; MechanicalParams & setImplicit (bool v);  Specify if the time integration scheme is implicit. More...;  ; MechanicalParams & setMFactor (SReal v);  Set Mass matrix contributions factor (for implicit schemes) More...;  ; MechanicalParams & setBFactor (SReal v);  Set Damping matrix contributions factor (for implicit schemes) More...;  ; MechanicalParams & setKFactor (SReal v);  Set Stiffness matrix contributions factor (for implicit schemes) More...;  ; MechanicalParams & setSymmetricMatrix (bool b)=delete;  ; MechanicalParams & setSupportOnlySymmetricMatrix (bool b);  Set the flag (for implicit schemes) specifying if solvers are only specialized for symmetric matrices. More...;  ; void setKFactorUsed (bool b) const;  Checks wether or nor kFactor is used in ForceFields. Temporary here for compatibility reasons. More...;  ; bool getKFactorUsed () const;  ; MechanicalParams & setEnergy (bool v);  Specify if the potential and kinematic energies should be computed ? More...;  ; const ConstMultiVecCoordId & x () const;  ; ConstMultiVec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:5308,integrat,integration,5308,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['integrat'],['integration']
Integrability,"ore...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:24095,message,message,24095,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,"ore...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html:13742,message,messages,13742,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_loop.html,3,['message'],['messages']
Integrability,"ore...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html:14784,message,messages,14784,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_sliced_volumetric_model.html,1,['message'],['messages']
Integrability,"ore...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseData;  BaseData (const BaseInitData &init);  ;  BaseData (const std::string &helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const char *helpMsg, DataFlags flags=FLAG_DEFAULT);  ;  BaseData (const std::string &helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  BaseData (const char *helpMsg, bool isDisplayed=true, bool isReadOnly=false);  ;  ~BaseData () override;  Destructor. More...;  ; const void * getValueVoidPtr () const;  Get current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void * beginEditVoidPtr ();  Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) More...;  ; void endEditVoidPtr ();  Must be called after beginEditVoidPtr(), after you are finished modifying this Data. More...;  ; const std::string & getHelp () const;  Get a help message that describes this Data. More...;  ; void setHelp (const std::string &val);  Set the help message. More...;  ; const std::string & getGroup () const;  Get group. More...;  ; void setGroup (const std::string &val);  Set group. More...;  ; const std::string & getWidget () const;  Get widget. More...;  ; void setWidget (const char *val);  Set widget. More...;  ; virtual std::string getLinkPath () const;  If we use the Data as a link and not as value directly. More...;  ; virtual bool canBeLinked () const;  ; Base * getOwner () const;  Return the Base component owning this Data. More...;  ; void setOwner (Base *o);  Set the owner of this Data. More...;  ; BaseData * getData () const;  This method is needed by DDGNode. More...;  ; const std::string & getName () const;  Return the name of this Data within the Base component. More...;  ; void setName (const std::string &name);  ; bool hasDefaultValue () const;  Return whether the Data has a default value or not. More...;  ; bool setParent (BaseData *parent, const std::string &path=std::string());  Link to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html:5031,message,message,5031,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name.html,7,['message'],['message']
Integrability,"ore::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedPlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes));  ; void init () override;  inherited from the BaseObject interface More...;  ; void draw (const VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void projectResponse (const MechanicalParams *mparams, DataVecDeriv &resData) override;  – Constraint interface More...;  ; void projectVelocity (const MechanicalParams *mparams, DataVecDeriv &vData) override;  project dx to constrained space (dx models a velocity) More...;  ; void projectPosition (const MechanicalParams *mparams, DataVecCoord &xData) override;  project x to constrained space (x models a position) More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *M, unsigned offset) override;  Implement projectMatrix for assembled solver of compliant. More...;  ; void projectJacobianMatrix (const MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const MechanicalParams *mparams, const MultiMatrixAccessor *matrix) override;  Implement applyConstraint for direct solvers. More...;  ; void applyConstraint (const MechanicalParams *mparams, BaseVector *vect, const MultiMatrixAccessor *matrix) override;  Project the global Mechanical Vector to constrained space using offset parameter. More...;  ; v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:4386,interface,interface,4386,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['interface'],['interface']
Integrability,"ore::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or down from the current context. . ◆ get() [7/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; SearchDirection ; dir = SearchUp); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [8/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:21027,wrap,wrapper,21027,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"ore::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseProximityIntersection, DiscreteIntersection);  ; bool useProximity () const override;  Returns true if algorithm uses proximity. More...;  ; SReal getAlarmDistance () const override;  Returns the alarm distance (must returns 0 if useProximity() is false) More...;  ; SReal getContactDistance () const override;  Returns the contact distance (must returns 0 if useProximity() is fals",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html:1773,message,messages,1773,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_base_proximity_intersection.html,1,['message'],['messages']
Integrability,"ore::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (LocalMinDistance, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &, collision::geometry::Cube &, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;  ; bool testInter",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html:2638,message,messages,2638,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_local_min_distance.html,1,['message'],['messages']
Integrability,"ore::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MinProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool getUseSurfaceNormals () const;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersector",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html:3505,message,messages,3505,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_min_proximity_intersection.html,1,['message'],['messages']
Integrability,"ore::objectmodel::RenamedData< SReal > alarmDistance;  ; sofa::core::objectmodel::RenamedData< SReal > contactDistance;  ; Data< SReal > d_alarmDistance;  Distance above which the intersection computations ignores the proximity pair. This distance can also be used in some broad phase algorithms to reduce the search area. More...;  ; Data< SReal > d_contactDistance;  Distance below which a contact is created. More...;  ;  Public Attributes inherited from sofa::component::collision::detection::intersection::DiscreteIntersection; core::collision::IntersectorMap intersectors;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (NewProximityIntersection, BaseProximityIntersection);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool testIntersection (collision::geometry::Cube &cube1, collision::geometry::Cube &cube2, const core::collision::Intersection *currentIntersection) override;  Intersectors for cubes using proximities. More...;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html:2385,message,messages,2385,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1intersection_1_1_new_proximity_intersection.html,1,['message'],['messages']
Integrability,ork？. /how-to-add-flexible-plugin-to-sofa; ; SOFA - Topic: How to add Flexible plugin to SOFA. /how-to-add-points-into-a-container; ; SOFA - Topic: [SOLVED] How to add points into a container?. /how-to-add-python-script-to-c-code; ; SOFA - Topic: [SOLVED] How to add python script to c++ code. /how-to-add-qt-and-boost-to-the-path; ; SOFA - Topic: How to add qt and boost to the PATH?. /how-to-add-value-in-a-item-of-a-section; . /embed; ; SOFA - Topic: [SOLVED] How to add value in a item of a section. SOFA - Topic: [SOLVED] How to add value in a item of a section. /how-to-add-vr-functionality-in-sofa-framework; . /feed; ; [SOLVED] How to add VR functionality in SOFA framework? – SOFA. SOFA - Topic: [SOLVED] How to add VR functionality in SOFA framework?. /how-to-apply-a-force-and-get-the-feedback-of-the-soft-tissue-deformation; ; SOFA - Topic: How to apply a force and get the feedback of the soft tissue deformation. /how-to-apply-an-orientation-dependent-pure-torque-to-rigid-body; ; SOFA - Topic: How to apply an orientation-dependent pure torque to Rigid body?. /how-to-apply-displacement-on-object; ; SOFA - Topic: How to apply Displacement on object. /how-to-attach-a-beam-with-a-rigid-body; ; SOFA - Topic: How to attach a beam with a rigid body. /how-to-begin-to-use-sofa-for-medical-simulations; . /feed; ; [SOLVED] How to begin to use sofa for medical simulations? – SOFA. SOFA - Topic: [SOLVED] How to begin to use sofa for medical simulations?. /how-to-break-the-spring-between-mesh; ; SOFA - Topic: [SOLVED] How to break the spring between mesh?. /how-to-build-qtsofa; ; SOFA - Topic: [SOLVED] How to build 'qtSofa'. /how-to-build-sofa-without-opengl-support; ; SOFA - Topic: [SOLVED] How to build SOFA without OpenGL support. /how-to-carving-by-phantom-device; ; SOFA - Topic: [SOLVED] HOW TO carving by phantom device ?. /how-to-change-the-texture-of-oglmodel-at-runtime; ; SOFA - Topic: [SOLVED] How to change the texture of OglModel at runtime?. /how-to-close-the-runsofa-wi,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:316372,depend,dependent-pure-torque-to-rigid-body,316372,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['depend'],"['dependent', 'dependent-pure-torque-to-rigid-body']"
Integrability,"orld, sofa::type::SpatialVector< SReal > &W_tool_world) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual void setReferencePosition (sofa::type::Transform< SReal > &referencePosition);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html:2051,depend,dependent,2051,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_null_force_feedback.html,1,['depend'],['dependent']
Integrability,"ors are used : ; VecCoord ; : containing positions. ; VecDeriv ; : derivative values, i.e. velocity, forces, displacements. In most cases they are the same (i.e. 3D/2D point particles), but they can be different (rigid frames for instance). Several pre-defined vectors are stored : ; position ; ; velocity ; ; force ; ; dx ; (displacement). Other vectors can be allocated to store other temporary values. Vectors can be assigned efficiently by just swapping pointers.; In addition to state vectors, the current constraint system matrix is also stored, containing the coefficient of each constraint defined over the DOFs in this body. . Classes; class  ConstraintBlock;  ; class  VMultiOpEntry;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMechanicalState, BaseState);  ;  SOFA_BASE_CAST_IMPLEMENTATION (BaseMechanicalState);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Methods allowing to have access to the geometry without a template class (generic but not efficient); virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ; Mechanical integration related methods; Note: all these methods can now be implemented generically using VecId-based operations . virtual void beginIntegration (SReal);  Called at the beginning of each integration step. More...;  ; virtual void endIntegration (const ExecParams *params, SReal);  Called at the end of each integration step. More...;  ; virtual void resetForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Set F = 0. More...;  ; virtual void resetAcc (const ExecParams *params, VecDerivId a=VecDerivId::dx());  Set Acc =0. More...;  ; virtual void accumulateForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Add stored external forces to F. More...;  ; Constraints related methods; virtual void resetConstraint (const ConstraintParams *params)=0;  Reset the constraint matr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:1976,integrat,integration,1976,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['integrat'],['integration']
Integrability,"ot; componentDirty(bool)sofa::gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::ModifyObjectexplicit; nodeNameModification(simulation::Node *)sofa::gui::qt::ModifyObjectsignal; objectUpdated()sofa::gui::qt::ModifyObjectsignal; openExternalBrowser(const QUrl &link)sofa::gui::qt::ModifyObjectslot; parseDataModified()sofa::gui::qt::ModifyObjectprotected; readOnlyData(QTableWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; readOnlyData(QWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; reject() overridesofa::gui::qt::ModifyObjectslot; updateConsole()sofa::gui::qt::ModifyObjectprotected; updateDataWidgets()sofa::gui::qt::ModifyObjectsignal; updateTables()sofa::gui::qt::ModifyObjectslot; updateValues()sofa::gui::qt::ModifyObjectvirtualslot; ~ModifyObject() overridesofa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html:1753,message,messageTabsofa,1753,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,1,['message'],['messageTabsofa']
Integrability,"otectedvirtual . Effectively add some edges to this topology. ; See alsoaddEdgesWarning ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, and sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ addEdgesWarning() [1/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [2/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ addEdgesWarning() [3/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< core::topology::EdgeAncestorElem > & ; ancestorElems . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [4/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors . ). protectedvirtual . Sends a message to warn tha",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:27382,message,message,27382,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"ourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ; virtual std::string getOperationType ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html:2593,depend,dependent,2593,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,1,['depend'],['dependent']
Integrability,"override;  Render internal data of this object, for debugging purposes. More...;  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;  ; Real computeRestEdgeLength (const EdgeID i) const;  computes the initial length of edge no i and returns it More...;  ; Real computeRestSquareEdgeLength (const EdgeID i) const;  computes the initial square length of edge no i and returns it More...;  ; void computeEdgeAABB (const EdgeID i, CPos &minCoord, CPos &maxCoord) const;  ; Coord computeEdgeCenter (const EdgeID i) const;  ; Coord computeEdgeDirection (const EdgeID i) const;  ; Coord computeRestEdgeDirection (const EdgeID i) const;  ; void getEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; void getRestEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; bool isPointOnEdge (const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) const;  ; sofa::type::vector< SReal > computeEdgeBarycentricCoordinates (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, bool useRestPosition=false) const;  Compute the barycentric coordinates of input point p between edge of indices [ind_p1; ind_p2] using either current position or restPosition depending on useRestPosition value. More...;  ; sofa::type::vector< SReal > computePointProjectionOnEdge (const EdgeID i, sofa::type::Vec< 3, Real > coord_x, bool &intersected);  Compute the projection coordinate of a point C on the edge i. Using compute2EdgesIntersection(). More...;  ; Coord compute2EdgesIntersection (const Coord edge1[2], const Coord edge2[2], bool &intersected);  Compute the intersection coordinate of the 2 input straight lines. Lines vector director are computed using coord given in input. More...;  ; Coord computeEdgeSegmentIntersection (const EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html:4088,depend,depending,4088,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_geometry_algorithms.html,1,['depend'],['depending']
Integrability,"ownerClass {""""}. Owner class. . ◆ parentData. DataLink<BaseData> sofa::core::objectmodel::BaseData::parentData. Parent Data. . ◆ widget. std::string sofa::core::objectmodel::BaseData::widget {""""}. widget . Constructor details. ◆ BaseData() [1/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const BaseInitData & ; init). explicit . Constructor used via the Base::initData() methods. . ◆ BaseData() [2/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const std::string & ; helpMsg, . DataFlags ; flags = FLAG_DEFAULT . ). Constructor. Parameters. helpMsgA help message that describes this Data. ; flagsThe flags for this Data (see DataFlagsEnum). . ◆ BaseData() [3/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const char * ; helpMsg, . DataFlags ; flags = FLAG_DEFAULT . ). ◆ BaseData() [4/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const std::string & ; helpMsg, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). Constructor. Parameters. helpMsgA help message that describes this Data. ; isDisplayedWhether this Data should be displayed in GUIs. ; isReadOnlyWhether this Data should be modifiable in GUIs. . ◆ BaseData() [5/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const char * ; helpMsg, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). ◆ ~BaseData(). sofa::core::objectmodel::BaseData::~BaseData ; (; ). override . Destructor. . Function details. ◆ beginEditVoidPtr(). void * sofa::core::objectmodel::BaseData::beginEditVoidPtr ; (; ). Begin edit current value as a void pointer (use getValueTypeInfo to find how to access it) ; Get a void pointer to the value held in this Data, to be used with AbstractTypeInfo.; This pointer should be used via the instance of AbstractTypeInfo returned by getValueTypeInfo(). WarningYou must call endEditVoidPtr() once you're done modifying the value. . ◆ canBeLinked(). virtual bool sofa::core::objectmodel::BaseData::canBeLinked ; (; ); const. inlinevirtual . Return whether this Data can be used",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:10591,message,message,10591,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability,"ox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MessageHandlerComponent, core::objectmodel::BaseObject);  ;  MessageHandlerComponent ();  ;  ~MessageHandlerComponent () override;  ; void parse (core::objectmodel::BaseObjectDescription *arg) override;  ; bool isValid ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html:2349,depend,dependent,2349,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_message_handler_component.html,1,['depend'],['dependent']
Integrability,p with BilateralInteractionConstraint. /help-with-rigidification; ; SOFA - Topic: Help with Rigidification. /hex-mesh-and-quadsettopology; . /feed; ; [SOLVED] Hex mesh and QuadSetTopology – SOFA. /page; . /10; ; SOFA - Topic: [SOLVED] Hex mesh and QuadSetTopology. /3; ; SOFA - Topic: [SOLVED] Hex mesh and QuadSetTopology. SOFA - Topic: [SOLVED] Hex mesh and QuadSetTopology. /hide-animation-tab-in-sofa-scene-file; ; SOFA - Topic: Hide animation tab in sofa scene file. /high_number_soft_fem_discretized_shapes; ; SOFA - Topic: [SOLVED] High_number_soft_fem_discretized_shapes. /how-and-where-template-field-is-parsed; ; SOFA - Topic: [SOLVED] How and where template field is parsed ?. /how-can-i-add-a-mesh-in-sofa; ; SOFA - Topic: [SOLVED] How can I add a mesh in SOFA?. /how-can-i-construct-a-stable-beam-force-field-while-the-beams-are-not-straight; ; SOFA - Topic: [SOLVED] How can I construct a stable beam force field while the beams are not straight?. /how-can-i-contract-an-object; ; SOFA - Topic: How can I contract an object?. /how-can-i-get-a-oglmodel-object-from-c-code-for-a-scena; ; SOFA - Topic: [SOLVED] How can I get a OglModel object from c++ code for a Scena?. /how-can-i-get-the-index-of-the-tetrahedron-which-contain-a-particular-point; ; SOFA - Topic: [SOLVED] How can I get the index of the tetrahedron which contain a particular point?. /how-can-i-get-the-local-frames-in-tetrahedralcorotationalfemforcefield; ; SOFA - Topic: [SOLVED] How can I get the local frames in TetrahedralCorotationalFEMForceField?. /how-can-i-make-my-own-actuators-and-what-are-sofa-prefabs; ; SOFA - Topic: How can I make my own actuators? And what are SOFA prefabs?. /how-can-i-modify-the-position-of-the-collision-object-from-rigid-mechanical-obj; ; SOFA - Topic: How can I modify the position of the Collision Object from Rigid Mechanical Obj. /how-can-i-use-python-to-create-a-scene; ; SOFA - Topic: How can I use python to create a scene?. /how-can-i-use-tet-mesh-as-collision-model; ; SOFA ,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:313083,contract,contract-an-object,313083,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['contract'],"['contract', 'contract-an-object']"
Integrability,"p, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; IS_CONSTRAINED_27sofa::component::solidmechanics::fem::nonuniform::HexahedronCompositeFEMForceFieldAndMass< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechan",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html:29061,integrat,integrateStiffness,29061,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_hexahedron_composite_f_e_m_force_field_and_mass-members.html,1,['integrat'],['integrateStiffness']
Integrability,"p, bool isDisplayed=true, bool isReadOnly=false)sofa::core::objectmodel::Baseinlineprotected; initGnuplot(const std::string path) overridesofa::core::behavior::Mass< DataTypes >virtual; initLarge(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initPolar(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initSmall(sofa::Index i, const Element &elem)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protected; initTextures()sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; insertInNode(objectmodel::BaseNode *node) overridesofa::core::behavior::Mass< DataTypes >inlinevirtual; integrateMass(int signx, int signy, int signz, Real l0, Real l1, Real l2)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >; integrateStiffness(int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1)sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >protectedstatic; isCompliancesofa::core::behavior::BaseForceField; isComponentStateValid() constsofa::core::objectmodel::Baseinline; isDiagonal() const overridesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceFieldAndMass< DataTypes >inlinevirtual; l_contextsofa::core::objectmodel::BaseObjectprotected; l_mastersofa::core::objectmodel::BaseObjectprotected; l_mechanicalStatessofa::core::behavior::StateAccessorprotected; l_slavessofa::core::objectmodel::BaseObjectprotected; l_topologysofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; LARGE enum valuesofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; LinkSlaves typedefsofa::core::objectmodel::BaseObject; m_aliasDatasofa::core::o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html:23925,integrat,integrateStiffness,23925,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass-members.html,2,['integrat'],['integrateStiffness']
Integrability,"p-down traversal. More...;  ; virtual void clear ();  ;  ~MultiTagAnimationLoop () override;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html:1850,depend,dependent,1850,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_tag_animation_loop.html,1,['depend'],['dependent']
Integrability,"passed using Data triangleList"" };  ; core::objectmodel::lifecycle::DeprecatedData dmax { this, ""v24.06"", ""v24.12"", ""dmax"", ""Plan selection using normal, dmin, dmax has been removed. Triangles should be selected using an Engine.Select and passed using Data triangleList"" };  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::TriangleSubsetData< sofa::type::vector< TrianglePressureInformation > > d_trianglePressureMap;  Map between triangle indices and their pressure. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html:3179,message,messages,3179,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_triangle_pressure_force_field.html,1,['message'],['messages']
Integrability,"pe::vector< SReal > > & ; coefs, . const bool ; addDOF = true . ). virtual . Add a set of points. ; See alsoaddPoints . ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). protectedvirtual . Extend the point container storage by nPoints. ; See alsoaddPointsWarning ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, sofa::component::topology::container::dynamic::QuadSetTopologyModifier, sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addPointsWarning() [1/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [2/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< core::topology::PointAncestorElem > & ; ancestorElems, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ addPointsWarning() [3/3]. void sofa::component::topology::container::dynamic::PointSetTopologyModifier::addPointsWarning ; (; const sofa::Size ; nPoints, . const sofa::type::vector< sofa::type::vector< PointID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; coefs, . const bool ; addDOF = true . ). protected . Sends a message to warn that some points were added in this topology. ; See alsoaddPointsProcess . ◆ init(). void sofa::component::topology::container::dynamic::PointSetTopologyModifier::init ; (; void ; )",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:20523,message,message,20523,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"pe::vector_device< T, MemoryManager, DataTypeInfoManager >::operator[] ; (; Size ; i). inline . ◆ operator[]() [2/2]. template<class T , class MemoryManager , class DataTypeInfoManager > . const T& sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::operator[] ; (; Size ; i); const. inline . ◆ pop_back(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::pop_back ; (; ). inline . ◆ push_back(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::push_back ; (; const T & ; t). inline . ◆ recreate(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::recreate ; (; Size ; s, . Size ; WARP_SIZE = MemoryManager::BSIZE . ). inline . resize the vector discarding any old values, without calling constructors or destructors, and without synchronizing the device and host copy . ◆ registerBuffer(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::registerBuffer ; (; ); const. inlineprotected . ◆ reserve(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::reserve ; (; Size ; s, . Size ; WARP_SIZE = MemoryManager::BSIZE . ). inline . ◆ resize(). template<class T , class MemoryManager , class DataTypeInfoManager > . void sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::resize ; (; Size ; s, . Size ; WARP_SIZE = MemoryManager::BSIZE . ). inline . ◆ size(). template<class T , class MemoryManager , class DataTypeInfoManager > . Size sofa::type::vector_device< T, MemoryManager, DataTypeInfoManager >::size ; (; void ; ); const. inline . ◆ swap(). template<class T , class MemoryManager , class",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html:17917,synchroniz,synchronizing,17917,api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1vector__device.html,1,['synchroniz'],['synchronizing']
Integrability,"per::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::logging::Message::Class. class of messages . EnumeratorDev ; Runtime ; Log ; CEmpty ; ClassCount . ◆ Type. enum sofa::helper::logging::Message::Type. possible levels of messages (ordered) . EnumeratorInfo ; Advice ; Deprecated ; Warning ; Error ; Fatal ; TEmpty ; Typ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3765,message,message,3765,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"plate wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObject() [2/2]. void * sofa::simulation::graph::DAGNode::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridevirtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObjects(). void sofa::simulation::graph::DAGNode::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridevirtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type,; Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getParents(). sofa::core::objectmodel::BaseNode::Parents sofa::simulation::graph::DAGNode::getParents ; (; ); const. overridevirtual . Get a list of parent node. ; Implements sofa::core::objectmodel::BaseNode. ◆ hasAncestor() [1/2]. bool sofa::simulation::graph::DAGNode::hasAncestor ; (; const BaseContext * ; context); const. overridevirtual . Test if the given context is an ancestor of this context. An ancestor is a parent or (recursively) the parent of an ancestor. ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ hasAncestor() [2/2]. bool sofa::simulation::graph::DAGNode::hasAncestor ; (; const BaseNode * ; node); const. inlineoverridevirtual . Test if the given context is an ancestor of this context. An ancestor is a parent or (recursively) the parent of",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:38303,wrap,wrapper,38303,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['wrap'],['wrapper']
Integrability,"plate<> ; SOFA_HELPER_API Message & operator<< (const FileInfo::SPtr &fi);  . Attribute details. ◆ AnyTypes. Message::TypeSet sofa::helper::logging::Message::AnyTypes. static . Initial value:= {Type::Info,Type::Advice,Type::Deprecated,; Type::Warning,Type::Error,Type::Fatal}. ◆ emptyMsg. Message sofa::helper::logging::Message::emptyMsg. static . ◆ m_class. Class sofa::helper::logging::Message::m_class. protected . who is the attender of the message (developers or users)? . ◆ m_componentinfo. ComponentInfo::SPtr sofa::helper::logging::Message::m_componentinfo. protected . ◆ m_fileInfo. FileInfo::SPtr sofa::helper::logging::Message::m_fileInfo. protected . a trace (name, path) from whom has emitted this message. ; a trace (file,line) from where the message have been created . ◆ m_id. int sofa::helper::logging::Message::m_id. protected . should it be stored here or in the handler that needs it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ mes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:2803,message,message,2803,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"plate<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). inlineoverridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ drawIndices(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::drawIndices ; (; const core::visual::VisualParams * ; vparams). inlineprotected . Internal function : Draw indices in 3d coordinates. . ◆ drawVectors(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::drawVectors ; (; const core::visual::VisualParams * ; vparams). inlineprotected . Internal function : Draw vectors. . ◆ endIntegration(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::endIntegration ; (; const core::ExecParams * ; params, . SReal ;  . ). overridevirtual . Called at the end of each integration step. ; Reimplemented from sofa::core::behavior::BaseMechanicalState. ◆ exportGnuplot(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::exportGnuplot ; (; SReal ; time). overridevirtual . Reimplemented from sofa::core::behavior::BaseMechanicalState. ◆ forcePointPosition(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::forcePointPosition ; (; const sofa::Index ; i, . const sofa::type::vector< double > & ; m_x . ). Force the position of a point (and force its velocity to zero value) . ◆ getConstraintJacobian(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::getConstraintJacobian ; (; const core::ConstraintParams * ; params, . sofa::linearalgebra::BaseMatrix * ; J, . unsigned int & ; off . ). overridevirtual . build the jacobian of the constraint in a baseMatrix ; Implements sofa::core::behavior::BaseMechanicalState. ◆ g",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:55005,integrat,integration,55005,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['integrat'],['integration']
Integrability,"plements sofa::core::objectmodel::BaseNode. ◆ getObject() [1/2]. void * sofa::simulation::graph::DAGNode::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridevirtual . Generic object access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type,; Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObject() [2/2]. void * sofa::simulation::graph::DAGNode::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . const std::string & ; path . ); const. overridevirtual . Generic object access, given a path from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getObjects(). void sofa::simulation::graph::DAGNode::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridevirtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type,; Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Implements sofa::simulation::Node. ◆ getParents(). sofa::core::objectmodel::BaseNode::Parents sofa::simulation::graph::DAGNode::getParents ; (; ); const. overridevirtual . Get a list of parent node. ; Implements sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:37773,wrap,wrapper,37773,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['wrap'],['wrapper']
Integrability,"pointers.; In addition to state vectors, the current constraint system matrix is also stored, containing the coefficient of each constraint defined over the DOFs in this body. . Classes; class  ConstraintBlock;  ; class  VMultiOpEntry;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMechanicalState, BaseState);  ;  SOFA_BASE_CAST_IMPLEMENTATION (BaseMechanicalState);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Methods allowing to have access to the geometry without a template class (generic but not efficient); virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ; Mechanical integration related methods; Note: all these methods can now be implemented generically using VecId-based operations . virtual void beginIntegration (SReal);  Called at the beginning of each integration step. More...;  ; virtual void endIntegration (const ExecParams *params, SReal);  Called at the end of each integration step. More...;  ; virtual void resetForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Set F = 0. More...;  ; virtual void resetAcc (const ExecParams *params, VecDerivId a=VecDerivId::dx());  Set Acc =0. More...;  ; virtual void accumulateForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Add stored external forces to F. More...;  ; Constraints related methods; virtual void resetConstraint (const ConstraintParams *params)=0;  Reset the constraint matrix. More...;  ; virtual void getConstraintJacobian (const ConstraintParams *params, sofa::linearalgebra::BaseMatrix *J, unsigned int &off)=0;  build the jacobian of the constraint in a baseMatrix More...;  ; virtual void buildIdentityBlocksInJacobian (const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0;  fill the jacobian matrix (of the constraints) with identity blocks on the provided list of nodes(dofs) More...;  ; virtual std",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:2287,integrat,integration,2287,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['integrat'],['integration']
Integrability,"pologyChange * >::const_iterator beginStateChange () const;  Provides an iterator on the first element in the list of StateChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endStateChange () const;  Provides an iterator on the last element in the list of StateChange objects. More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html:11726,depend,dependent,11726,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_base_mesh_topology.html,1,['depend'],['dependent']
Integrability,"ponent::playback::ReadState, sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >, sofa::component::io::mesh::OffSequenceLoader, sofa::component::constraint::projective::SkeletalMotionProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::PositionBasedDynamicsProjectiveConstraint< DataTypes >, sofa::component::constraint::projective::PartialLinearMovementProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::LinearVelocityProjectiveConstraint< TDataTypes >, sofa::component::constraint::projective::LinearMovementProjectiveConstraint< TDataTypes >, sofa::component::collision::response::contact::CollisionResponse, and sofa::component::collision::detection::algorithm::DirectSAPNarrowPhase. ◆ setSrc() [1/2]. void sofa::core::objectmodel::BaseObject::setSrc ; (; const std::string & ; v, . const BaseObject * ; loader, . std::vector< std::string > * ; attributeList = nullptr . ). Sets a source Object and parses it to collect dependent Data Use it before scene graph insertion . ◆ setSrc() [2/2]. void sofa::core::objectmodel::BaseObject::setSrc ; (; const std::string & ; v, . std::vector< std::string > * ; attributeList = nullptr . ). Sets a source Object and parses it to collect dependent Data. . ◆ SOFA_CLASS(). sofa::core::objectmodel::BaseObject::SOFA_CLASS ; (; BaseObject ; , . Base ;  . ). ◆ storeResetState(). void sofa::core::objectmodel::BaseObject::storeResetState ; (; ). virtual . Save the initial state for later uses in reset() ; Reimplemented in sofa::core::behavior::BaseAnimationLoop, sofa::component::statecontainer::MechanicalObject< DataTypes >, sofa::component::statecontainer::MechanicalObject< T >, and sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >. ◆ trackInternalData(). void sofa::core::objectmodel::BaseObject::trackInternalData ; (; const BaseData & ; data). protected . Method called to add the Data to the DataTracker (listing the Data to track) . ◆ updateInternal",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html:79474,depend,dependent,79474,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object.html,1,['depend'],['dependent']
Integrability,"possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:6807,wrap,wrapper,6807,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['wrap'],['wrapper']
Integrability,"pping, hideMapping showMappings, hideMappings showMechanicalMappings, hideMechanicalMappings showCollision, hideCollision showCollisionModels, hideCollisionModels showBoundingCollisionModels, hideBoundingCollisionModels showOptions hideOptions showNormals hideNormals showWireframe hideWireframe . Public Attributes; sofa::core::objectmodel::RenamedData< DisplayFlags > displayFlags;  ; Data< DisplayFlags > d_displayFlags;  Display Flags. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; DisplayFlags backupFlags;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html:2246,message,messages,2246,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_visual_style.html,1,['message'],['messages']
Integrability,"r *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::StateAccessor;  StateAccessor ();  ;  ~StateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html:14589,message,messages,14589,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_interaction_constraint.html,1,['message'],['messages']
Integrability,"r *name);  ; GLint getGeometryInputType (const unsigned int index);  ; void setGeometryInputType (const unsigned int index, GLint v);  ; GLint getGeometryOutputType (const unsigned int index);  ; void setGeometryOutputType (const unsigned int index, GLint v);  ; GLint getGeometryVerticesOut (const unsigned int index);  ; void setGeometryVerticesOut (const unsigned int index, GLint v);  ; bool insertInNode (core::objectmodel::BaseNode *node) override;  ; bool removeInNode (core::objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::visual::Shader;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html:5598,depend,dependent,5598,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_o_i_t_shader.html,3,['depend'],['dependent']
Integrability,"r ; dxthe VecId where to store the corrective motion ; fis the VecId where the motion space force : f = J^t x lambda . Implemented in sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >, sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >, and sofa::component::constraint::lagrangian::correction::PrecomputedConstraintCorrection< TDataTypes >. ◆ computeMotionCorrectionFromLambda(). template<class DataTypes > . void sofa::core::behavior::ConstraintCorrection< DataTypes >::computeMotionCorrectionFromLambda ; (; const core::ConstraintParams * ; cparams, . core::MultiVecDerivId ; dx, . const linearalgebra::BaseVector * ; lambda . ). overridevirtual . Compute the motion coming from the contact space lambda ; dx = A^-1 x J^t x lambda where :; J is the constraint jacobian matrix ( ^t denotes the transposition operator ); A is the dynamic matrix. Usually for implicit integration A = M - h^2 x K with – M the mass matrix – K the stiffness matrix – h the step size. Usually this computation will be delegated to a LinearSolver instance. Parameters. cparamsthe ConstraintParams relative to the constraint solver ; dxthe VecId where to store the corrective motion ; lambdais the constraint space force vector . Implements sofa::core::behavior::BaseConstraintCorrection. ◆ getMState(). template<class TDataTypes > . MechanicalState<DataTypes>* sofa::core::behavior::ConstraintCorrection< TDataTypes >::getMState ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::core::behavior::ConstraintCorrection< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject.; Reimplemented in sofa::component::constraint::lagrangian::correction::UncoupledConstraintCorrection< TDataTypes >, and sofa::component::constraint::lagrangian::correction::UncoupledCo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html:24089,integrat,integration,24089,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,1,['integrat'],['integration']
Integrability,"r Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:3225,depend,dependent,3225,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['depend'],['dependent']
Integrability,"r to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; virtual Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Attribute details. ◆ d_componentState. Data< sofa::core::objectmodel::ComponentState > sofa::core::objectmodel::Base::d_componentState. The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). . ◆ d_messageLogCount. Data<int> sofa::core::objectmodel::Base::d_messageLogCount. mutable . ◆ f_bbox. Data< sofa::type::BoundingBox > sofa::core::objectmodel::Base::f_bbox. this object bounding box . ◆ f_printLog. Data<bool> sofa::core::objectmodel::Base::f_printLog. if true, emits extra messages at runtime. . ◆ f_tags. Data< sofa::core::objectmodel::TagSet > sofa::core::objectmodel::Base::f_tags. list of the subsets the object belongs to . ◆ m_aliasData. MapData sofa::core::objectmodel::Base::m_aliasData. protected . name -> Data multi-map (includes names and aliases) . ◆ m_aliasLink. MapLink sofa::core::objectmodel::Base::m_aliasLink. protected . name -> Link multi-map (includes names and aliases) . ◆ m_definitionSourceFileName. std::string sofa::core::objectmodel::Base::m_definitionSourceFileName {""""}. ◆ m_definitionSourceFilePos. int sofa::core::objectmodel::Base::m_definitionSourceFilePos {-1}. ◆ m_instanciationSourceFileName. std::string sofa::core::objectmodel::Base::m_instanciationSourceFileName {""""}. ◆ m_instanciationSourceFilePos. int sofa::core::objectmodel::Base::m_instanciationSourceFilePos {-1}. ◆ m_internalEngine. std::map<std::string, sofa::core::DataTrackerCallback> sofa::core::objectmodel::Base::m_internalEngine. protected . ◆ m_oldAttributes. std::v",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html:10147,message,messages,10147,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base.html,1,['message'],['messages']
Integrability,"r);  . Attribute details. ◆ d_alignedBoxes. template<class DataTypes > . Data<type::vector<type::Vec6> > sofa::component::engine::select::boxroi::BoxROI< DataTypes >::d_alignedBoxes. List of boxes, each defined by two 3D points : xmin,ymin,zmin, xmax,ymax,zmax. . ◆ d_orientedBoxes. template<class DataTypes > . Data<type::vector<Vec10> > sofa::component::engine::select::boxroi::BoxROI< DataTypes >::d_orientedBoxes. each box is defined using three point coordinates and a depth value . ◆ m_orientedBoxes. template<class DataTypes > . type::vector<OrientedBox> sofa::component::engine::select::boxroi::BoxROI< DataTypes >::m_orientedBoxes. protected . Constructor details. ◆ BoxROI(). template<class DataTypes > . sofa::component::engine::select::boxroi::BoxROI< DataTypes >::BoxROI. protected . In case you add a new attribute please also add it into to the BoxROI_test.cpp::attributesTests In case you want to remove or rename an attribute, please keep it as-is but add a warning message using msg_warning saying to the user of this component that the attribute is deprecated and solutions/replacement he has to fix his scene. . ◆ ~BoxROI(). template<class DataTypes > . sofa::component::engine::select::boxroi::BoxROI< DataTypes >::~BoxROI ; (; ). overrideprotecteddefault . Function details. ◆ computeOrientedBoxes(). template<class DataTypes > . void sofa::component::engine::select::boxroi::BoxROI< DataTypes >::computeOrientedBoxes. protected . ◆ getPointsFromOrientedBox(). template<class DataTypes > . void sofa::component::engine::select::boxroi::BoxROI< DataTypes >::getPointsFromOrientedBox ; (; const Vec10 & ; box, . type::vector< type::Vec3 > & ; points . ); const. protected . ◆ isPointInAlignedBox(). template<class DataTypes > . bool sofa::component::engine::select::boxroi::BoxROI< DataTypes >::isPointInAlignedBox ; (; const typename DataTypes::CPos & ; p, . const type::Vec6 & ; box . ). staticprotected . ◆ isPointInOrientedBox(). template<class DataTypes > . bool sofa::compone",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:23565,message,message,23565,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,1,['message'],['message']
Integrability,"r, mapped) model. More...;  ; sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) override;  ; void disable () override;  ;  Public Member Functions inherited from sofa::core::BaseMapping;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html:12850,depend,dependent,12850,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_rigid_mapping.html,1,['depend'],['dependent']
Integrability,"r.h>; Cross product for 3-elements vectors. ; More... Inheritance diagram for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >:. [legend]; Detailed Description; template<typename Real, int N>; class sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; Cross product for 3-elements vectors. . Protected Attributes; std::map< QuadratureMethodKey, QuadraturePointArray > quadratureMap;  . Public Member Functions;  NumericalIntegrationDescriptor ();  empty constructor More...;  ; QuadraturePointArray getQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order) const;  returns the set of quadrature points associated with a given quadrature method and integration order More...;  ; std::set< QuadratureMethod > getQuadratureMethods () const;  returns all the indices corresponding to all available quadrature methods More...;  ; std::set< IntegrationOrder > getIntegrationOrders (const QuadratureMethod qt) const;  returns the quadrature integration orders available for a given method More...;  ; void addQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa);  add a quadrature method in the map More...;  . Attribute details. ◆ quadratureMap. template<typename Real , int N> . std::map<QuadratureMethodKey, QuadraturePointArray> sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::NumericalIntegrationDescriptor ; (; ). inline . empty constructor . Function details. ◆ addQuadratureMethod(). template<typename Real , int N> . void sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::addQuadratureMethod ; (; const QuadratureMethod ; qt, . const IntegrationOrder ; order, . Qu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html:1461,integrat,integration,1461,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,1,['integrat'],['integration']
Integrability,"r::MechanicalObject< DataTypes >::applyRotation ; (; const type::Quat< SReal > ; q). overridevirtual . Rotate the current state. ; Implements sofa::core::behavior::BaseMechanicalState. ◆ applyScale(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::applyScale ; (; const SReal ; SReal, . const SReal ; SReal, . const SReal ; SReal . ). overridevirtual . Scale the current state. ; Implements sofa::core::behavior::BaseMechanicalState. ◆ applyTranslation(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::applyTranslation ; (; const SReal ; dx, . const SReal ; dy, . const SReal ; dz . ). overridevirtual . Apply translation vector to the position. ; Implements sofa::core::behavior::BaseMechanicalState. ◆ beginIntegration(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::beginIntegration ; (; SReal ; ). overridevirtual . Called at the beginning of each integration step. ; Reimplemented from sofa::core::behavior::BaseMechanicalState. ◆ buildIdentityBlocksInJacobian(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::buildIdentityBlocksInJacobian ; (; const sofa::type::vector< unsigned int > & ; list_n, . core::MatrixDerivId & ; mID . ). overridevirtual . fill the jacobian matrix (of the constraints) with identity blocks on the provided list of nodes(dofs) ; Implements sofa::core::behavior::BaseMechanicalState. ◆ compareVec(). template<class DataTypes > . SReal sofa::component::statecontainer::MechanicalObject< DataTypes >::compareVec ; (; core::ConstVecId ; v, . std::istream & ; in . ). overridevirtual . Implements sofa::core::behavior::BaseMechanicalState. ◆ computeBBox(). template<class DataTypes > . void sofa::component::statecontainer::MechanicalObject< DataTypes >::computeBBox ; (; const core::ExecParams * ; params, . bool ; onlyVisible = false . ). overridevirtual . Boundi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html:49911,integrat,integration,49911,api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1statecontainer_1_1_mechanical_object.html,1,['integrat'],['integration']
Integrability,"r;  ; class  ConstraintParams;  ; class  DataEngine;  from a set of Data inputs computes a set of Data outputs More...;  ; struct  DataTracker;  ; class  DataTrackerDDGNode;  A DDGNode with trackable input Data (containing a DataTracker) More...;  ; class  DataTrackerCallback;  ; class  DataTrackerFunctor;  ; class  DerivativeMatrix;  ; class  ExecParams;  Class gathering parameters use by most components methods, and transmitted by all visitors. More...;  ; struct  CleanupCheck;  ; class  Mapping;  Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. More...;  ; class  MatrixAccumulatorInterface;  ; class  MatrixAccumulatorIndexChecker;  ; class  ListMatrixAccumulator;  ; class  MechanicalParams;  Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. More...;  ; class  MechanicalStatesMatrixAccumulators;  ; class  Multi2Mapping;  Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. More...;  ; class  MultiMapping;  Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. More...;  ; class  TMultiVecId;  ; struct  StateVecAccessor;  Helper class to access vectors of a given type in a given State. More...;  ; struct  StateVecAccessor< DataTypes, V_COORD, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_COORD, V_WRITE >;  ; struct  StateVecAccessor< DataTypes, V_DERIV, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_DERIV, V_WRITE >;  ; struct  StateVecAccessor< DataTypes, V_MATDERIV, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >;  ; struct  StateVecAccessor< DataTypes, V_ALL, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_ALL, V_WRITE >;  ; class  TMultiVecId< V_ALL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:3486,interface,interface,3486,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['interface'],['interface']
Integrability,"r< Real, N > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; List of all members . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N > Class Template Reference . #include <NumericalIntegrationDescriptor.h>; Cross product for 3-elements vectors. ; More... Inheritance diagram for sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >:. [legend]; Detailed Description; template<typename Real, int N>; class sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >; Cross product for 3-elements vectors. . Protected Attributes; std::map< QuadratureMethodKey, QuadraturePointArray > quadratureMap;  . Public Member Functions;  NumericalIntegrationDescriptor ();  empty constructor More...;  ; QuadraturePointArray getQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order) const;  returns the set of quadrature points associated with a given quadrature method and integration order More...;  ; std::set< QuadratureMethod > getQuadratureMethods () const;  returns all the indices corresponding to all available quadrature methods More...;  ; std::set< IntegrationOrder > getIntegrationOrders (const QuadratureMethod qt) const;  returns the quadrature integration orders available for a given method More...;  ; void addQuadratureMethod (const QuadratureMethod qt, const IntegrationOrder order, QuadraturePointArray qpa);  add a quadrature method in the map More...;  . Attribute details. ◆ quadratureMap. template<typename Real , int N> . std::map<QuadratureMethodKey, QuadraturePointArray> sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< Real, N >::quadratureMap. protected . Constructor details. ◆ NumericalIntegrationDescriptor(). template<typename Real , int N> . sofa::component::topology::container::dynamic::NumericalIntegrationDescriptor< R",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html:1175,integrat,integration,1175,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_numerical_integration_descriptor.html,1,['integrat'],['integration']
Integrability,"r< Vec< 6, double > > > (vector< Vec< 6, double > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 3, float > > > (vector< Vec< 3, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 3, double > > > (vector< Vec< 3, double > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 2, float > > > (vector< Vec< 2, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 2, double > > > (vector< Vec< 2, double > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 1, float > > > (vector< Vec< 1, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 1, double > > > (vector< Vec< 1, double > > &vec);  ; SOFA_DEFAULTTYPE_API void init ();  Initialize the SofaDefaultType library, as well as it dependency: SofaHelper. More...;  ; SOFA_DEFAULTTYPE_API bool isInitialized ();  Return true if and only if the SofaDefaultType library has been initialized. More...;  ; SOFA_DEFAULTTYPE_API void cleanup ();  Clean up the resources used by the SofaDefaultType library, as well as its dependency: SofaHelper. More...;  ; SOFA_DEFAULTTYPE_API bool isCleanedUp ();  Return true if and only if the SofaDefaultType library has been cleaned up. More...;  ; template<class MatrixRow , class VecDeriv > ; VecDeriv::Real SparseMatrixVecDerivMult (const MatrixRow &row, const VecDeriv &vec);  ; template<typename LhsDeriv , typename RhsDeriv , typename Real > ; void addMultTransposeEigen (MapMapSparseMatrix< LhsDeriv > &lhs, const Eigen::SparseMatrix< Real, Eigen::RowMajor > &jacobian, const MapMapSparseMatrix< RhsDeriv > &rhs);  Computes lhs += jacobian^T * rhs. More...;  ; bool writeMatrixTxt (const std::string &filename, sofa::linearalgebra::BaseMatrix *matrix, int precision);  ; bool writeMatrixCsv (const std::string &filename, sofa::linearalgebra::BaseMatrix *matrix, int precision);  ; template<typename real , typename real2 > ; constexpr RigidDeriv< 3, real > operator* (RigidDeriv< 3, real > r, real2 a);  ; template<typename rea",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:8741,depend,dependency,8741,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['depend'],['dependency']
Integrability,"r< core::CollisionModel *, core::CollisionModel * > getCollisionModels ()=0;  Get the pair of collision models which are in contact. More...;  ; virtual void setDetectionOutputs (DetectionOutputVector *outputs)=0;  Set the generic description of a contact point. More...;  ; virtual void createResponse (objectmodel::BaseContext *group)=0;  ; virtual void removeResponse ()=0;  ; virtual bool keepAlive ();  Return true if this contact should be kept alive, even if objects are no longer in collision. More...;  ; virtual void setKeepAlive (bool);  Control the keepAlive flag of the contact. Note that not all contacts support this method. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html:2119,depend,dependent,2119,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_contact.html,1,['depend'],['dependent']
Integrability,"rList=false);  ; void registerViewer (common::BaseViewer *_viewer) override;  Used to directly replace the current viewer. More...;  ; common::BaseViewer * getViewer () override;  ; sofa::gui::qt::viewer::SofaViewer * getSofaViewer ();  ; virtual void removeViewer ();  ; void dragEnterEvent (QDragEnterEvent *event) override;  ; void dropEvent (QDropEvent *event) override;  ;  Public Member Functions inherited from sofa::gui::common::BaseGUI; virtual void configureGUI (sofa::simulation::NodeSPtr groot);  Use a component setting to configure our GUI. More...;  ; void exportGnuplot (sofa::simulation::Node *node, std::string gnuplot_directory="""");  ; virtual bool canBeDefaultGUI () const;  ; virtual void redraw ()=0;  Update the GUI. More...;  ; virtual void setScene (sofa::simulation::NodeSPtr groot, const char *filename=nullptr, bool temporaryFile=false)=0;  Register the scene in our GUI. More...;  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  . Static Public Member Functions; static void setupSurfaceFormat ();  ; static common::BaseGUI * CreateGUI (const char *name, sofa::simulation::Node::SPtr groot=nullptr, const char *filename=nullptr);  ; static void SetPixmap (std::string pixmap_filename, QPushButton *b);  ;  Static Public Member Functions inherited from sofa::gui::common::BaseGUI; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions; void init (); ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html:4547,message,message,4547,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_real_g_u_i.html,1,['message'],['message']
Integrability,"ract with the messaging system. ; Typedef Documentation. ◆ tokenizer. typedef boost::tokenizer<boost::char_separator<char> > sofa::helper::logging::tokenizer. Function Documentation. ◆ getComponentInfo() [1/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const ComponentInfo::SPtr & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getComponentInfo() [2/3]. ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const sofa::core::objectmodel::Base * ; t). inline . This construct a new ComponentInfo object from a Base object. . ◆ getComponentInfo() [3/3]. const ComponentInfo::SPtr sofa::helper::logging::getComponentInfo ; (; const std::string & ; s). inline . This function is used in the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::core::objectmodel::Base * ; t). inline . ◆ operator<<() [1/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). ◆ operator<<() [2/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). ◆",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:4124,message,message,4124,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,1,['message'],['message']
Integrability,"rams *cparams, core::MultiVecDerivId f, const linearalgebra::BaseVector *lambda) override;  ; MechanicalState< DataTypes > * getMState () const;  ; void setMState (MechanicalState< DataTypes > *_mstate);  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  SOFA_ABSTRACT_CLASS (BaseConstraintCorrection, objectmodel::BaseObject);  ; virtual bool isActive ();  ; virtual void computeResidual (const core::ExecParams *, linearalgebra::BaseVector *);  ; virtual void getComplianceWithConstraintMerge (linearalgebra::BaseMatrix *, std::vector< int > &);  For multigrid approach => constraints are merged. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:4777,depend,dependent,4777,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['depend'],['dependent']
Integrability,"ransform::DisplacementTransformEngine< Rigid3Types, Rigid3Types::Coord >::mult ; (; Rigid3Types::Coord & ; out, . const Rigid3Types::Coord & ; inv, . const Coord & ; x . ). protected . ◆ mult() [5/5]. void sofa::component::engine::transform::DisplacementTransformEngine< defaulttype::Rigid3Types, type::Mat4x4 >::mult ; (; type::Mat4x4 & ; out, . const type::Mat4x4 & ; inv, . const Coord & ; x . ). protected . ◆ setInverse() [1/5]. void sofa::component::engine::transform::DisplacementTransformEngine< defaulttype::Rigid3Types, defaulttype::Rigid3Types::Coord >::setInverse ; (; defaulttype::Rigid3Types::Coord & ; inv, . const Coord & ; x0 . ). protected . ◆ setInverse() [2/5]. void sofa::component::engine::transform::DisplacementTransformEngine< Rigid3Types, Mat4x4 >::setInverse ; (; Mat4x4 & ; inv, . const Coord & ; x0 . ). protected . ◆ setInverse() [3/5]. template<class DataTypes , class OutputType > . void sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >::setInverse ; (; OutputType & ; inv, . const Coord & ; x0 . ). protected . functions that depends on OutputType and must be specialized ; inv = x0^{-1} . ◆ setInverse() [4/5]. void sofa::component::engine::transform::DisplacementTransformEngine< Rigid3Types, Rigid3Types::Coord >::setInverse ; (; Rigid3Types::Coord & ; inv, . const Coord & ; x0 . ). protected . ◆ setInverse() [5/5]. void sofa::component::engine::transform::DisplacementTransformEngine< defaulttype::Rigid3Types, type::Mat4x4 >::setInverse ; (; type::Mat4x4 & ; inv, . const Coord & ; x0 . ). protected . ◆ SOFA_CLASS(). template<class DataTypes , class OutputType > . sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, OutputType >::SOFA_CLASS ; (; SOFA_TEMPLATE2(DisplacementTransformEngine< DataTypes, OutputType >, DataTypes, OutputType) ; , . sofa::core::DataEngine ;  . ). sofacomponentenginetransformDisplacementTransformEngine; Generated on Mon Nov 11 2024 02:43:25 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html:20957,depend,depends,20957,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,1,['depend'],['depends']
Integrability,"raph creation and modification, during top-down traversal. More...;  ; virtual void setNode (simulation::Node *);  Set the simulation node this animation loop is controlling. More...;  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  perform one animation step More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html:4210,depend,dependent,4210,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,1,['depend'],['dependent']
Integrability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; Parameters Setters; virtual void setDt (SReal);  Simulation timestep. More...;  ; virtual void setAnimate (bool);  Animation flag. More...;  ; virtual void setSleeping (bool);  Sleeping state of the context. More...;  ; virtual void setChangeSleepingState (bool);  Sleeping state change of the context. More...;  ; Variables Setters; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; Adding/Removing objects. Note that these methods can fail if the context doesn't support attached objects; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:7682,wrap,wrapper,7682,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void executeVisitor (simulation::Visitor *, bool precomputedOrder=false);  apply an action More...;  ; virtual void propagateEvent (const core::ExecParams *params, Event *);  Propagate an event. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; vi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:8778,wrap,wrapper,8778,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['wrap'],['wrapper']
Integrability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyMoveSlave (core::objectmodel::BaseObject *previousMaster, core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Static Public Member Functions; static const std::string Ge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:22933,wrap,wrapper,22933,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,1,['wrap'],['wrapper']
Integrability,"rapper, given a path from the current context. More...;  ; template<class T > ; void get (T *&ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T , class Container > ; void get (Container *list, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; virtual void setMechanicalState (BaseObject *);  Mechanical Degrees-of-Freedom. More...;  ; virtual void setTopology (BaseObject *);  Topology. More...;  ; virtual bool addObject (sptr< BaseObject >, TypeOfInsertion=TypeOfInsertion::AtEnd);  Add an object, or return false if not supported. More...;  ; virtual bool removeObject (sptr< BaseObject >);  Remove an object, or return false if not supported. More...;  ; virtual void notifyAddSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyRemoveSlave (core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  ; virtual void notifyMoveSlave (core::objectmodel::BaseObject *previousMaster, core::objectmodel::BaseObject *master, core::objectmodel::BaseObject *slave);  . Static Public Member Functions; template<class RealObject >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:26324,wrap,wrapper,26324,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,"rationFactor() [1/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. overridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor() [2/2]. SReal sofa::component::odesolver::backward::EulerImplicitSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative, . SReal ; dt . ); const. ◆ getVelocityIntegrationFactor(). SReal sofa::component::odesolver::backward::EulerImplicitSolver::getVelocityIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the velocity; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ init(). void sofa::component::odesolver::backward::EulerImplicitSolver::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_CLASS2(). sofa::component::odesolver::backward::EulerImplicitSolver::SOFA_CLASS2 ; (; EulerImplicitSolver ; , . sofa::core::behavior::OdeSolver ; , . sofa::core::behavior::LinearSolverAccessor ;  . ). ◆ solve(). void sofa::component::odesolver::backward::EulerImplicitSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverbackwardEulerImplicitSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:23315,integrat,integration,23315,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['integrat'],['integration']
Integrability,"rchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [6/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, possibly searching up or down from the current context. . ◆ get() [7/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; SearchDirection ; dir = SearchUp); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [8/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:20771,wrap,wrapper,20771,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"rd > m_scaleTex;  ; sofa::core::objectmodel::RenamedData< TexCoord > m_translationTex;  ; Data< Vec3Real > d_translation;  Initial Translation of the object. More...;  ; Data< Vec3Real > d_rotation;  Initial Rotation of the object. More...;  ; Data< Vec3Real > d_scale;  Initial Scale of the object. More...;  ; Data< TexCoord > d_scaleTex;  Scale of the texture. More...;  ; Data< TexCoord > d_translationTex;  Translation of the texture. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html:6492,message,messages,6492,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_merge_visual_models.html,3,['message'],['messages']
Integrability,"re...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< OrientedBox > m_orientedBoxes;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html:5793,message,messages,5793,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1boxroi_1_1_box_r_o_i.html,1,['message'],['messages']
Integrability,"re...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseROI, DataTypes), Inherit);  ; void init () final;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void draw (const core::visual::VisualParams *vparams) final;  Render internal data of this object, for debugging purposes. More...;  ; void computeB",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html:5271,message,messages,5271,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,1,['message'],['messages']
Integrability,"re...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes));  ; void roiInit () override;  ; bool roiDoUpdate () override;  ; void roiDraw (const core::visual::VisualParams *vparams) override;  ; void roiComputeBBox (const core::ExecParams *params, type::BoundingBox &bbox) override;  ;  Public Member Functions inherited from sofa::component::engine::select::BaseROI< DataTypes >;  SO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html:6246,message,messages,6246,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_mesh_r_o_i.html,1,['message'],['messages']
Integrability,"re...;  ; Data< bool > d_drawTriangles;  Draw Triangles. (default = false) More...;  ; Data< bool > d_drawQuads;  Draw Quads. (default = false) More...;  ; Data< bool > d_drawTetrahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< bool > d_drawHexahedra;  Draw Tetrahedra. (default = false) More...;  ; Data< float > d_drawSize;  rendering size for ROI and topological elements More...;  ; Data< bool > d_doUpdate;  If true, updates the selection at the beginning of simulation steps. (default = true) More...;  ; sofa::core::objectmodel::RenamedData< VecCoord > d_X0;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(SphereROI, DataTypes), SOFA_TEMPLATE(BaseROI, DataTypes));  ; bool roiDoUpdate () override;  ; void roiDraw (const core::visual::VisualParams *vparams) override;  ; void roiComputeBBox (const core::ExecParams *params, type::BoundingBox &bbox) override;  ;  Public Member Functions inherited from sofa::component::engine::select::BaseROI< DataTypes >;  SOFA_CLASS (SOFA_TEMPLATE(Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html:6353,message,messages,6353,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_sphere_r_o_i.html,1,['message'],['messages']
Integrability,"re...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  BaseVTKDataIO ();  ;  ~BaseVTKDataIO () override;  ; virtual void resize (int n)=0;  ; virtual bool read (istream &f, int n, int binary)=0;  ; virtual bool read (const string &s, int n, int binary)=0;  ; virtual bool read (const string &s, int binary)=0;  ; virtual bool write (ofstream &f, int n, int groups, int binary)=0;  ; virtual const void * getData ()=0;  ; virtual void swap ()=0;  ; virtual BaseData * createSofaData ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o.html:2443,depend,dependent,2443,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o.html,1,['depend'],['dependent']
Integrability,"re...;  ; virtual const BaseContext * getContext () const =0;  Get this node context. More...;  ; virtual std::string getPathName () const override;  Return the full path name of this node. More...;  ; virtual std::string getRootPath () const;  Return the path from this node to the root node. More...;  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override=0;  . Solvers and main algorithms; virtual core::behavior::BaseAnimationLoop * getAnimationLoop () const;  ; virtual core::behavior::OdeSolver * getOdeSolver () const;  ; virtual core::collision::Pipeline * getCollisionPipeline () const;  ; virtual core::visual::VisualLoop * getVisualLoop () const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Sta",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html:10647,message,messages,10647,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_node.html,1,['message'],['messages']
Integrability,"re...;  ; virtual std::list< const TopologyChange * >::const_iterator beginChange () const;  Provides an iterator on the first element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endChange () const;  Provides an iterator on the last element in the list of TopologyChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator beginStateChange () const;  Provides an iterator on the first element in the list of StateChange objects. More...;  ; virtual std::list< const TopologyChange * >::const_iterator endStateChange () const;  Provides an iterator on the last element in the list of StateChange objects. More...;  ;  Public Member Functions inherited from sofa::core::topology::Topology;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html:22800,depend,dependent,22800,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1constant_1_1_cube_topology.html,10,['depend'],['dependent']
Integrability,"re...;  ; virtual void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles);  Effectively Add some triangles. Test precondition and apply: More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; virtual void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of triangles. Eventually remove isolated edges and vertices. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:19204,message,message,19204,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"re::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ getAnimate(). bool sofa::core::objectmodel::BaseContext::getAnimate ; (; ); const. virtual . Animation flag. ; Reimplemented in sofa::core::objectmodel::Context. ◆ getDefault(). BaseContext * sofa::core::objectmodel::BaseContext::getDefault ; (; ). static . Get the default Context object, that contains the default values for all parameters and can be used when no loc",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:22406,wrap,wrapper,22406,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"re::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MultiStepAnimationLoop, sofa::simulation::CollisionAnimationLoop);  ; void step (const sofa::core::ExecParams *params, SReal dt) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-do",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:1566,message,messages,1566,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['message'],['messages']
Integrability,"reate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Attribute details. ◆ collisionSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::collisionSteps. ◆ d_collisionSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_collisionSteps. number of collision steps between each frame rendering . ◆ d_integrationSteps. Data<int> sofa::component::animationloop::MultiStepAnimationLoop::d_integrationSteps. number of integration steps between each collision detection . ◆ integrationSteps. sofa::core::objectmodel::RenamedData<int> sofa::component::animationloop::MultiStepAnimationLoop::integrationSteps. Constructor details. ◆ MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::MultiStepAnimationLoop ; (; ). protected . ◆ ~MultiStepAnimationLoop(). sofa::component::animationloop::MultiStepAnimationLoop::~MultiStepAnimationLoop ; (; ). overrideprotected . Function details. ◆ SOFA_CLASS(). sofa::component::animationloop::MultiStepAnimationLoop::SOFA_CLASS ; (; MultiStepAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::MultiStepAnimationLoop::step ; (; const sofa::core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. sofacomponentanimationloopMultiStepAnimationLoo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:15659,integrat,integrationSteps,15659,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['integrat'],['integrationSteps']
Integrability,"rementalPotentialEnergy. SReal sofa::component::odesolver::backward::VariationalSymplecticSolver::m_incrementalPotentialEnergy. protected . ◆ pID. sofa::core::MultiVecDerivId sofa::component::odesolver::backward::VariationalSymplecticSolver::pID. protected . Constructor details. ◆ VariationalSymplecticSolver(). sofa::component::odesolver::backward::VariationalSymplecticSolver::VariationalSymplecticSolver ; (; ). Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::backward::VariationalSymplecticSolver::getIntegrationFactor ; (; int ; , . int ;  . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order.; This method is used to compute the constraint corrections and adapt the resolution if using baumgart type scheme For example, a backward-Euler dynamic implicit integrator would use: Input: x_t v_t a_{t+dt} x_{t+dt} 1 dt dt^2 v_{t+dt} 0 1 dt; If the linear system is expressed on s = a_{t+dt} dt, then the final factors are: Input: x_t v_t a_t s x_{t+dt} 1 dt 0 dt v_{t+dt} 0 1 0 1 a_{t+dt} 0 0 0 1/dt The last column is returned by the getSolutionIntegrationFactor method.; FF: What is the meaning of the parameters ? ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getPositionIntegrationFactor(). SReal sofa::component::odesolver::backward::VariationalSymplecticSolver::getPositionIntegrationFactor ; (; ); const. inlineoverridevirtual . Given a displacement as computed by the linear system inversion, how much will it affect the position; This method is used to compute the compliance for contact corrections For Euler methods, it is typically dt². ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::backward::VariationalSymplecticSolver::getSolutionIntegrationFactor ; (; int ; ); const. inlineoverridevirtual . Given a solution of the linear system, h",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:21647,integrat,integrator,21647,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['integrat'],['integrator']
Integrability,"removeItems (const sofa::type::vector< PointID > &) override;  Generic method to remove a list of items. More...;  ;  Public Member Functions inherited from sofa::core::topology::TopologyModifier;  SOFA_CLASS (TopologyModifier, BaseTopologyObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::topology::BaseTopologyObject;  SOFA_CLASS (BaseTopologyObject, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:7210,depend,dependent,7210,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,2,['depend'],['dependent']
Integrability,"rence. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::RotationFinder< DataTypes > Class Template Referenceabstract . #include <RotationFinder.h>. Inheritance diagram for sofa::core::behavior::RotationFinder< DataTypes >:. [legend]. Public Member Functions; virtual const type::vector< Mat3x3 > & getRotations ()=0;  ; virtual void getRotations (linearalgebra::BaseMatrix *m, int offset=0)=0;  ;  Public Member Functions inherited from sofa::core::behavior::BaseRotationFinder; virtual void getRotations (linearalgebra::BaseMatrix *m, int offset=0)=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder.html:1178,depend,dependent,1178,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_rotation_finder.html,1,['depend'],['dependent']
Integrability,"res) More...;  ; Data< bool > d_projectVelocity;  if true, projects not only a constant but a zero velocity More...;  ; SingleLink< FixedProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< FixedProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html:2272,message,messages,2272,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_projective_constraint.html,1,['message'],['messages']
Integrability,"res) More...;  ; Data< bool > d_projectVelocity;  if true, projects not only a constant but a zero velocity More...;  ; SingleLink< FixedProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(PartialFixedProjectiveConstraint, DataTypes), SOFA_TEMPLATE(FixedProjectiveConstraint, DataTypes));  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html:2605,message,messages,2605,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_partial_fixed_projective_constraint.html,1,['message'],['messages']
Integrability,"result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:5290,wrap,wrapper,5290,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['wrap'],['wrapper']
Integrability,"riangle > &trianglesList, const sofa::type::vector< TriangleID > &trianglesIndexList, const sofa::type::vector< sofa::type::vector< TriangleID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some triangles were added in this topology. More...;  ; virtual void addTrianglesProcess (const sofa::type::vector< Triangle > &triangles);  Effectively Add some triangles. Test precondition and apply: More...;  ; virtual void removeTrianglesWarning (sofa::type::vector< TriangleID > &triangles);  Sends a message to warn that some triangles are about to be deleted. More...;  ; virtual void removeTrianglesProcess (const sofa::type::vector< TriangleID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of triangles. Eventually remove isolated edges and vertices. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs) override;  Sends a message to warn that some edges were added in this topology. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html:18831,message,message,18831,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_topology_modifier.html,1,['message'],['message']
Integrability,"rianglesPostProcessing (const sofa::type::vector< Triangle > &triangles);  : Postprocessing to apply to topology triangles. Nothing to do in this class. This function should be implemented in children classes. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:26264,message,message,26264,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"ributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:28921,depend,depends,28921,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['depend'],['depends']
Integrability,"ributes; sofa::core::objectmodel::RenamedData< Real > dampingCoefficient;  ; Data< Real > d_dampingCoefficient;  air drag coefficient. More...;  ; Data< bool > d_implicit;  should it generate damping matrix df/dv? (explicit otherwise, i.e. only generating a force) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UniformVelocityDampingForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void addForce (const core::MechanicalParams *, DataVecDeriv &, const DataVecCoord &, const DataVecDeriv &) override;  ; void addDForce (const core::MechanicalParams *mparams, DataVecDeriv &d_df, const DataVecDeriv &d_dx) override;  ; void addKToMatrix (sofa::linearalgebra::Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html:1833,message,messages,1833,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_uniform_velocity_damping_force_field.html,1,['message'],['messages']
Integrability,"rigin_. protected . parent wrt child . Constructor details. ◆ Transform() [1/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform. The default constructor does not initialize the transform. . ◆ Transform() [2/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const Vec & ; origin, . const Rot & ; orientation . ). Origin of the child in parent coordinates, orientation of the child wrt to parent. ; Define using standard conventions. . ◆ Transform() [3/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const Rot & ; q, . const Vec & ; o . ). WARNING: using Featherstone's conventions (see class documentation) ; Define using Featherstone's conventions. . ◆ Transform() [4/4]. template<class TReal > . sofa::type::Transform< TReal >::Transform ; (; const SpatialVector< TReal > & ; v). Origin of the child in the parent coordinate system and the orientation of the child wrt the parent (i.e. standard way) ; Define as a given SpatialVector integrated during one second. The spatial vector is given in parent coordinates.; Define child as a given SpatialVector<TReal> integrated during one second, starting from the parent (used for time integration). The spatial vector is given in parent coordinates. . Function details. ◆ backProjectPoint(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectPoint ; (; const Vec & ; pointInParent); const. Project point from parent coordinates to this coordinates. . ◆ backProjectVector(). template<class TReal > . auto sofa::type::Transform< TReal >::backProjectVector ; (; const Vec & ; vectorInParent); const. Projected a vector (i.e. a direction or a displacement) from parent coordinates to child coordinates. . ◆ clear(). template<class TReal > . void sofa::type::Transform< TReal >::clear. Reset this to identity. . ◆ CreateSpatialVector(). template<class TReal > . SpatialVector< TReal > sofa::type::Transform< TReal >::CreateSpatialVector. Project a spatial vect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html:6635,integrat,integrated,6635,api/master/sofa/html/classsofa_1_1type_1_1_transform.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1type_1_1_transform.html,1,['integrat'],['integrated']
Integrability,"ring::AMDOrderingMethod:. [legend]. Public Member Functions;  SOFA_CLASS (AMDOrderingMethod, BaseEigenOrderingMethod< Eigen::AMDOrdering< int >>);  ; std::string methodName () const override;  ;  Public Member Functions inherited from sofa::component::linearsolver::ordering::BaseEigenOrderingMethod< Eigen::AMDOrdering< int > >;  SOFA_CLASS (BaseEigenOrderingMethod, core::behavior::BaseOrderingMethod);  ; void computePermutation (const SparseMatrixPattern &inPattern, int *outPermutation, int *outInversePermutation) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseOrderingMethod;  ~BaseOrderingMethod () override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html:1476,depend,dependent,1476,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1ordering_1_1_a_m_d_ordering_method.html,1,['depend'],['dependent']
Integrability,"ritance diagram for sofa::component::collision::geometry::TetrahedronCollisionModel:. [legend]. Classes; struct  TetrahedronInfo;  . Public Attributes; SingleLink< TetrahedronCollisionModel, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< TetrahedronInfo > elems;  ; const sofa::core::topology::BaseMeshTopology::SeqTetrahedra * tetra;  ; core::behavior::MechanicalState< defaulttype::Vec3Types > * mstate;  ; sofa::core::topology::BaseMeshTopology * m_topology;  ; int m_topologyRevision;  internal revision number to check if topology has changed. More...;  ;  Protected Attributes inherited from sofa::core::CollisionModel; Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html:1447,message,messages,1447,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_tetrahedron_collision_model.html,1,['message'],['messages']
Integrability,"rivId v);  ; SOFA_COMPONENT_LINEARSOLVER_ITERATIVE_API void dispatchSystemRHS (core::MultiVecDerivId v);  ; void setRHS (core::MultiVecDerivId v);  ; void setSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemSolution (core::MultiVecDerivId v);  ; void dispatchSystemRHS (core::MultiVecDerivId v);  ;  Public Member Functions inherited from sofa::core::behavior::BaseMatrixLinearSystem;  SOFA_ABSTRACT_CLASS (BaseMatrixLinearSystem, core::objectmodel::BaseObject);  ; void buildSystemMatrix (const core::MechanicalParams *mparams);  Construct and assemble the linear system matrix. More...;  ; sofa::type::Vec2u getMatrixSize () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html:3202,depend,dependent,3202,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1preconditioner_1_1_precomputed_matrix_system.html,7,['depend'],['dependent']
Integrability,"rix< typename DataTypes::Real > matS;  ; SingleLink< RestShapeSpringsForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr sofa::Size spatial_dimensions = Coord::spatial_dimensions;  ; static constexpr sofa::Size coord_total_size = Coord::total_size;  . Protected Attributes; VecIndex m_indices;  ; VecIndex m_ext_indices;  ; type::vector< CPos > m_pivots;  ; SReal lastUpdatedStep {};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html:3441,message,messages,3441,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_rest_shape_springs_force_field.html,1,['message'],['messages']
Integrability,"rixType > . static EigenSparseMatrixType* sofa::mapping_test::Mapping_test< _Mapping >::getMatrix ; (; const type::vector< sofa::linearalgebra::BaseMatrix * > * ; matrices). inlinestaticprotected . Get one EigenSparseMatrix out of a list. Error if not one single matrix in the list. . ◆ preTreatment(). template<class _Mapping > . virtual OutVecDeriv sofa::mapping_test::Mapping_test< _Mapping >::preTreatment ; (; const OutVecDeriv & ; f). inlinevirtual . Possible child force pre-treatment, does nothing by default . ◆ runTest() [1/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parent, . const OutVecCoord ; expectedChild . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the first parameter, Warningthis version supposes the mapping initialization does not depend on child positions otherwise, use the runTest functions with 4 parameters the child position is computed from parent position and compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.; Parameters. parentparent position ; expectedChildexpected position of the child corresponding to the parent position . ◆ runTest() [2/2]. template<class _Mapping > . virtual bool sofa::mapping_test::Mapping_test< _Mapping >::runTest ; (; const InVecCoord & ; parentInit, . const OutVecCoord & ; childInit, . const InVecCoord & ; parentNew, . const OutVecCoord & ; expectedChildNew . ). inlinevirtual . Test the mapping using the given values and small changes. Return true in case of success, if all errors are below maxError*epsilon. The mapping is initialized using the two first parameters, then a new parent position is applied, and the new child position is compared with the expected one. Additionally, the Jacobian-related methods are tested using finite differences.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html:12991,depend,depend,12991,api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1mapping__test_1_1_mapping__test.html,1,['depend'],['depend']
Integrability,"rk for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::core::behavior::BaseConstraintSet Class Referenceabstract . #include <BaseConstraintSet.h>. Inheritance diagram for sofa::core::behavior::BaseConstraintSet:. [legend]. Public Attributes; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html:1128,message,messages,1128,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_set.html,1,['message'],['messages']
Integrability,"rnal edge data. More...;  ; SingleLink< TetrahedronHyperelasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord m_initialPoints;  ; bool m_updateMatrix;  the initial positions of the points More...;  ; std::unique_ptr< material::HyperelasticMaterial< DataTypes > > m_myMaterial;  the array that describes the complete material energy and its derivatives More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html:3122,message,messages,3122,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_tetrahedron_hyperelasticity_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"rootNode of the sofa scene. More...;  ; methods to configure the GUI; virtual void setDumpState (bool);  ; virtual void setLogTime (bool);  ; virtual void setExportState (bool);  ; virtual void setGnuplotPath (const std::string &);  ; virtual void initViewer (BaseViewer *);  ; virtual void setViewerConfiguration (sofa::component::setting::ViewerSetting *);  ; virtual void setViewerResolution (int, int);  ; virtual void setFullScreen ();  ; virtual void centerWindow ();  ; virtual void setBackgroundColor (const sofa::type::RGBAColor &);  ; virtual void setBackgroundImage (const std::string &);  ; virtual BaseViewer * getViewer ();  ; virtual void registerViewer (BaseViewer *);  ; virtual bool saveScreenshot (const std::string &filename, int compression_level=-1);  ; virtual void setMouseButtonConfiguration (sofa::component::setting::MouseButtonSetting *);  ; methods to communicate with the GUI; Do one step of the GUI loop . virtual void stepMainLoop ();  ; virtual void sendMessage (const std::string &, const std::string &);  Send a (script) message. More...;  ; virtual void showFPS (double);  Force the displayed FPS value (if any) More...;  . Static Public Member Functions; static std::string & GetGUIName ();  ; static const char * GetProgramName ();  ; static void SetProgramName (const char *argv0);  ; static void SetArgumentParser (ArgumentParser *parser);  ; static const std::string & getConfigDirectoryPath ();  ; static const std::string & getScreenshotDirectoryPath ();  ; static void setConfigDirectoryPath (const std::string &path, bool createIfNecessary=false);  ; static void setScreenshotDirectoryPath (const std::string &path, bool createIfNecessary=false);  . Protected Member Functions;  BaseGUI ();  ; virtual ~BaseGUI ();  The destructor should not be called directly. Use the closeGUI() method instead. More...;  . Attribute details. ◆ configDirectoryPath. std::string sofa::gui::common::BaseGUI::configDirectoryPath = ""."". staticprotected . ◆ mArgumentParser. ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html:2434,message,message,2434,api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1common_1_1_base_g_u_i.html,1,['message'],['message']
Integrability,"rsion;  bool to allow the display of the 2 parts of springs torsions More...;  ; Data< bool > d_showExtraTorsion;  display the illicit part of the joint rotation More...;  ; Data< Real > d_showFactorSize;  modify the size of the debug information of a given factor More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  ; Real m_lastTime;  ; std::ifstream * m_infile;  ; std::ofstream * m_outfile;  ; JointSpringForceFieldInternalData< DataTypes > data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; Sin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html:2672,message,messages,2672,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_joint_spring_force_field.html,1,['message'],['messages']
Integrability,"rtex indices describing the hexahedra to be created ; ancestorsfor each hexahedron to be created provides an array of hexahedron ancestors (optional) ; baryCoefsfor each hexahedron provides the barycentric coordinates (sum to 1) associated with each ancestor (optional) . ◆ addHexahedraProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedraProcess ; (; const sofa::type::vector< Hexahedron > & ; hexahedra). protectedvirtual . Actually Add some hexahedra to this topology. ; See alsoaddHexahedraWarning ; Reimplemented in sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier. ◆ addHexahedraWarning() [1/2]. void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedraWarning ; (; const size_t ; nHexahedra, . const sofa::type::vector< Hexahedron > & ; hexahedraList, . const sofa::type::vector< HexahedronID > & ; hexahedraIndexList . ). protected . Sends a message to warn that some hexahedra were added in this topology. ; See alsoaddHexahedraProcess . ◆ addHexahedraWarning() [2/2]. void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedraWarning ; (; const size_t ; nHexahedra, . const sofa::type::vector< Hexahedron > & ; hexahedraList, . const sofa::type::vector< HexahedronID > & ; hexahedraIndexList, . const sofa::type::vector< sofa::type::vector< HexahedronID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some hexahedra were added in this topology. ; See alsoaddHexahedraProcess . ◆ addHexahedronProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedronProcess ; (; Hexahedron ; e). Add a hexahedron. . ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). overrideprotectedvirtual . Add some ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html:31949,message,message,31949,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; BaseVTKReader * reader;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html:4566,message,messages,4566,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_v_t_k_loader.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::set< Edge > uniqueEdges;  edges without redundancy More...;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:4736,message,messages,4736,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::string textureName;  ; FaceType faceType;  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_sl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html:5647,message,messages,5647,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_o_b_j_loader.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited f",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html:4055,message,messages,4055,api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1loader_1_1_mesh_loader.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshSTLLoader, sofa::core::loader::MeshLoader);  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; vo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html:4724,message,messages,4724,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_s_t_l_loader.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MeshTrianLoader, sofa::core::loader::MeshLoader);  ; bool doLoad () override;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially ot",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html:5331,message,messages,5331,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_mesh_trian_loader.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (StringMeshCreator, sofa::core::loader::MeshLoader);  ; virtual std::string type ();  ; bool canLoad () override;  ; bool doLoad () override;  create the string More...;  ;  Public Member Functions inherited from sofa::core::loader::MeshLoader;  SOFA_ABSTRACT_CLASS (MeshLoader, BaseLoader);  ; bool canLoad () override;  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) overrid",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html:4495,message,messages,4495,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_string_mesh_creator.html,1,['message'],['messages']
Integrability,"ry elements (e.g. tetrahedra to triangles) More...;  ; Data< bool > d_onlyAttachedPoints;  Only keep points attached to elements of the mesh. More...;  ; Data< Vec3 > d_translation;  Translation of the DOFs. More...;  ; Data< Vec3 > d_rotation;  Rotation of the DOFs. More...;  ; Data< Vec3 > d_scale;  Scale of the DOFs in 3 dimensions. More...;  ; Data< type::Matrix4 > d_transformation;  4x4 Homogeneous matrix to transform the DOFs (when present replace any) More...;  ;  Public Attributes inherited from sofa::core::loader::BaseLoader; objectmodel::DataFileName d_filename;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::loader::MeshLoader; type::Matrix4 d_previousTransformation;  to be able to call reinit w/o applying several time the same transform More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html:18064,message,messages,18064,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_g_i_d_mesh_loader.html,5,['message'],['messages']
Integrability,"ryAlgorithms, DataTypes), SOFA_TEMPLATE(PointSetGeometryAlgorithms, DataTypes));  ; Real computeEdgeLength (const EdgeID i) const;  computes the length of edge no i and returns it More...;  ; void computeEdgeLength (BasicArrayInterface< Real > &ai) const;  computes the edge length of all edges and stores it in the array interface More...;  ; Real computeRestEdgeLength (const EdgeID i) const;  computes the initial length of edge no i and returns it More...;  ; Real computeRestSquareEdgeLength (const EdgeID i) const;  computes the initial square length of edge no i and returns it More...;  ; void computeEdgeAABB (const EdgeID i, CPos &minCoord, CPos &maxCoord) const;  ; Coord computeEdgeCenter (const EdgeID i) const;  ; Coord computeEdgeDirection (const EdgeID i) const;  ; Coord computeRestEdgeDirection (const EdgeID i) const;  ; void getEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; void getRestEdgeVertexCoordinates (const EdgeID i, Coord[2]) const;  ; bool isPointOnEdge (const sofa::type::Vec< 3, Real > &pt, const EdgeID ind_e) const;  ; sofa::type::vector< SReal > computeEdgeBarycentricCoordinates (const sofa::type::Vec< 3, Real > &p, PointID ind_p1, PointID ind_p2, bool useRestPosition=false) const;  Compute the barycentric coordinates of input point p between edge of indices [ind_p1; ind_p2] using either current position or restPosition depending on useRestPosition value. More...;  ; sofa::type::vector< SReal > computePointProjectionOnEdge (const EdgeID i, sofa::type::Vec< 3, Real > coord_x, bool &intersected);  Compute the projection coordinate of a point C on the edge i. Using compute2EdgesIntersection(). More...;  ; Coord compute2EdgesIntersection (const Coord edge1[2], const Coord edge2[2], bool &intersected);  Compute the intersection coordinate of the 2 input straight lines. Lines vector director are computed using coord given in input. More...;  ; Coord computeEdgeSegmentIntersection (const EdgeID edgeID, const type::Vec3 &a, const type::Vec3 &b",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:13386,depend,depending,13386,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,5,['depend'],['depending']
Integrability,"s >::showQuadIndices. protected . Debug : view Quad indices. . Constructor details. ◆ QuadSetGeometryAlgorithms(). template<class DataTypes > . sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::QuadSetGeometryAlgorithms ; (; ). inlineprotected . ◆ ~QuadSetGeometryAlgorithms(). template<class DataTypes > . virtual sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::~QuadSetGeometryAlgorithms ; (; ). inlineprotectedvirtual . Function details. ◆ computeQuadAABB(). template<class DataTypes > . void sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::computeQuadAABB ; (; const QuadID ; i, . Coord & ; minCoord, . Coord & ; maxCoord . ); const. ◆ computeQuadArea() [1/2]. template<class DataTypes > . void sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::computeQuadArea ; (; BasicArrayInterface< Real > & ; ai); const. Computes the quad area of all quads are store in the array interface. . ◆ computeQuadArea() [2/2]. template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::computeQuadArea ; (; const QuadID ; i); const. Computes the area of quad no i and returns it. . ◆ computeQuadCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::computeQuadCenter ; (; const QuadID ; i); const. ◆ computeQuadNormal(). template<class DataTypes > . sofa::type::Vec< 3, double > sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::computeQuadNormal ; (; const QuadID ; ind_q); const. Computes the normal vector of a quad indexed by ind_q (not normed) . ◆ computeRestQuadArea(). template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::QuadSetGeometryAlgorithms< DataTypes >::computeRestQuadArea ; (; const QuadID ; i); const. Comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html:24022,interface,interface,24022,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"s class define the abstract API common to interaction constraints between a pair of bodies using a given type of DOFs. . Public Attributes; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE(PairInteractionConstraint, TDataTypes), BaseInteractionConstraint, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v) override;  ; virtual void getConstraintViolation (const Constraint",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html:1826,message,messages,1826,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_constraint.html,1,['message'],['messages']
Integrability,"s class define the abstract API common to interaction constraints between a pair of bodies using a given type of DOFs. . Public Attributes; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS2 (SOFA_TEMPLATE2(MixedInteractionConstraint, TDataTypes1, TDataTypes2), BaseInteractionConstraint, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes1, TDataTypes2));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; void getConstraintViolation (const ConstraintParams *cParams, linearalgebra::BaseVector *v) override;  ; virtual void getConstraintViolation",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html:1907,message,messages,1907,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_constraint.html,1,['message'],['messages']
Integrability,"s homogeneous, except for the last range which may contain more elements. . ◆ parallelForEach(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEach ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies the given function object f to the result of dereferencing every iterator in the range [first, last), in parallel. . ◆ parallelForEachRange(). template<class InputIt , class UnaryFunction > . UnaryFunction sofa::simulation::parallelForEachRange ; (; TaskScheduler & ; taskScheduler, . InputIt ; first, . InputIt ; last, . UnaryFunction ; f . ). Applies in parallel the given function object f to a list of ranges generated from [first, last); The signature of the function f should be equivalent to the following: void fun(const Range<InputIt>& a); The signature does not need to have const &.; A task scheduler must be provided and correctly initialized. The number of generated ranges depends on the threads available in the task scheduler. . ◆ setSimulation(). void sofa::simulation::setSimulation ; (; Simulation * ; s). delete . Set the (unique) simulation which controls the scene. . Variable Documentation. ◆ DefaultAnimationLoopClass. int sofa::simulation::DefaultAnimationLoopClass. Initial value:= core::RegisterObject(""Simulation loop to use in scene without constraints nor contact.""); .add<DefaultAnimationLoop>(); .addDocumentationURL(std::string(sofa::SOFA_DOCUMENTATION_URL) + std::string(""components/animationloops/defaultanimationloop/"")); .addDescription(R""(; This loop triggers the following steps:; - build and solve all linear systems in the scene : collision and time integration to compute the new values of the dofs; - update the context (dt++); - update the mappings; - update the bounding box (volume covering all objects of the scene))""). ◆ DefaultTaskSchedulerRegistered. const bool sofa::simulation::DefaultTaskSchedulerRegistered. Initial value:= MainTaskSchedulerFact",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html:9494,depend,depends,9494,api/master/sofa/html/namespacesofa_1_1simulation.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simulation.html,1,['depend'],['depends']
Integrability,"s it? . ◆ m_stream. std::stringstream sofa::helper::logging::Message::m_stream. protected . the actual message . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::logging::Message::Class. class of messages . EnumeratorDev ; Runtime ; Log ; CEmpty ; ClassCount . ◆ Type. enum sofa::helper::logging::Message::Type. possible levels of messages (ordered) . EnumeratorInfo ; Advice ; Depre",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3697,message,message,3697,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['message']
Integrability,"s mapping is able to propagate topological changes from output to input model. More...;  ; virtual bool isTheOutputTopologySubdividingTheInputOne ();  return true if the output topology subdivide the input one. (the topology uses the Loc2GlobVec/Glob2LocMap/In2OutMap structs and share the same DOFs) More...;  ; const std::map< Index, Index > & getGlob2LocMap ();  Accessor to index maps : More...;  ; virtual Index getGlobIndex (Index ind);  ; void dumpGlob2LocMap ();  ; void dumpLoc2GlobVec ();  ; virtual void getFromIndex (type::vector< Index > &, const Index) const;  ; const std::map< Index, sofa::type::vector< Index > > & getIn2OutMap ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html:5224,depend,dependent,5224,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_tetra2_triangle_topological_mapping.html,1,['depend'],['dependent']
Integrability,"s some fluid algorithms) that are present in a SOFA simulation but which do not use the internal behavior components (MechanicalState, ForceField, etc) defined in the sofa::core::behavior namespace.; A BehaviorModel simply has to implement the updatePosition method to compute a new simulation step. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BehaviorModel, objectmodel::BaseObject);  ; virtual void updatePosition (SReal dt)=0;  Computation of a new simulation step. More...;  ; virtual bool addBBox (SReal *, SReal *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html:1690,depend,dependent,1690,api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_behavior_model.html,1,['depend'],['dependent']
Integrability,"s);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void addQuadsProcess (const sofa::type::vector< Quad > &quads);  Effectively Add some quads to this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; virtual void removeQuadsProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of quads. Eventuall",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:15741,message,message,15741,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['message'],['message']
Integrability,"s, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::collision::NarrowPhaseDetection;  ~NarrowPhaseDetection () override;  Destructor. More...;  ; void changeInstanceNP (Instance inst) override;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::BroadPhaseDetection; sofa::type::vector< CollisionModelPair > cmPairs;  Potentially colliding pairs. More...;  ; std::map< Instance, sofa::type::vector< CollisionModelPair > > storedCmPairs;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersectio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:14562,message,messages,14562,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,1,['message'],['messages']
Integrability,"s. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; virtual void step (const core::ExecParams *params, SReal dt)=0;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:6968,depend,dependent,6968,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['depend'],['dependent']
Integrability,"s. More...;  ;  Public Member Functions inherited from sofa::component::playback::ReadState;  SOFA_CLASS (ReadState, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadState ();  ; void processReadState (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html:3478,depend,dependent,3478,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_compare_state.html,1,['depend'],['dependent']
Integrability,"s.h>. Inheritance diagram for sofa::component::engine::select::ValuesFromIndices< T >:. [legend]; Detailed Description; template<class T>; class sofa::component::engine::select::ValuesFromIndices< T >; This class returns the values given a list of indices. . Public Attributes; Data< VecValue > f_in;  input values More...;  ; Data< VecIndex > f_indices;  Indices of the values. More...;  ; Data< VecValue > f_out;  Output values corresponding to the indices. More...;  ; Data< std::string > f_outStr;  Output values corresponding to the indices, converted as a string. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ValuesFromIndices, T), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where y",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html:1394,message,messages,1394,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_values_from_indices.html,1,['message'],['messages']
Integrability,"s;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HermiteSplineProjectiveConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::ProjectiveConstraintSet, DataTypes));  ; void clearConstraints ();  ; void addConstraint (unsigned index);  ; void setBeginTime (const Real &t);  ; void setEndTime (const Real &t);  ; Real getBeginTime ();  ; Real getEndTime ();  ; void computeHermiteCoefs (const Real u, Real &H00, Real &H10, Real &H01, Real &H11);  ; void computeDerivateHermiteCoefs (const Real u, Real &dH00, Real &dH10, Real &dH01, Real &dH11);  ; void init () override;  – Constraint interface More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void projectResponse (const core::MechanicalParams *mparams, DataVecDeriv &resData) override;  ; void projectVelocity (const core::MechanicalParams *mparams, DataVecDeriv &vData) override;  ; void projectPosition (const core::MechanicalParams *mparams, DataVecCoord &xData) override;  ; void projectJacobianMatrix (const core::MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void ini",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html:4032,interface,interface,4032,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_hermite_spline_projective_constraint.html,1,['interface'],['interface']
Integrability,"s;  Thickness of the elements. More...;  ; SingleLink< QuadBendingFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(QuadBendingFEMForceField, DataTypes), SOFA_TEMPLATE(core::behavior::ForceField, DataTypes));  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void addForce (const core::MechanicalParams *m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html:3280,message,messages,3280,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_quad_bending_f_e_m_force_field.html,1,['message'],['messages']
Integrability,s_11; . /feed; ; Windows_11 – SOFA. SOFA - Topic Tag: Windows_11. /windows_7; . /feed; ; Windows_7 – SOFA. /page; . /2; ; SOFA - Topic Tag: Windows_7. /3; ; SOFA - Topic Tag: Windows_7. /4; ; SOFA - Topic Tag: Windows_7. /5; ; SOFA - Topic Tag: Windows_7. /6; ; SOFA - Topic Tag: Windows_7. /7; ; SOFA - Topic Tag: Windows_7. SOFA - Topic Tag: Windows_7. /windows_8; . /feed; ; Windows_8 – SOFA. SOFA - Topic Tag: Windows_8. /windows_81; . /feed; ; Windows_81 – SOFA. SOFA - Topic Tag: Windows_81. /windows10; . /feed; ; Windows10 – SOFA. SOFA - Topic Tag: Windows10. /windows-10; . /feed; ; Windows 10 – SOFA. SOFA - Topic Tag: Windows 10. /windows10-64bits; . /feed; ; Windows10-64bits – SOFA. SOFA - Topic Tag: Windows10-64bits. /windows-10-x64-build; . /feed; ; Windows 10 x64 build – SOFA. SOFA - Topic Tag: Windows 10 x64 build. /windows-7; . /feed; ; windows 7 – SOFA. SOFA - Topic Tag: windows 7. /windows-build; . /feed; ; Windows Build – SOFA. SOFA - Topic Tag: Windows Build. /windows-dependency-pack; . /feed; ; windows dependency pack – SOFA. SOFA - Topic Tag: windows dependency pack. /windows-sofa-v20-12; . /feed; ; Windows; SOFA v20.12 – SOFA. SOFA - Topic Tag: Windows; SOFA v20.12. /writestate; . /feed; ; writestate – SOFA. SOFA - Topic Tag: writestate. /xitact; . /feed; ; Xitact – SOFA. SOFA - Topic Tag: Xitact. /xitact-device; . /feed; ; Xitact Device – SOFA. SOFA - Topic Tag: Xitact Device. /xml; . /feed; ; xml – SOFA. SOFA - Topic Tag: xml. /xml-collision; . /feed; ; XML collision – SOFA. SOFA - Topic Tag: XML collision. /xml-reference; . /feed; ; XML Reference – SOFA. SOFA - Topic Tag: XML Reference. /zeromq; . /feed; ; zeroMQ – SOFA. SOFA - Topic Tag: zeroMQ. /zlib; . /feed; ; zlib – SOFA. SOFA - Topic Tag: zlib. /zmq; . /feed; ; ZMQ – SOFA. SOFA - Topic Tag: ZMQ. /users; . /a0a0; . /engagements; ; SOFA - a0a0's Profile. /replies; ; SOFA - a0a0's Replies. /topics; ; SOFA - a0a0's Topics. SOFA - a0a0's Profile. /aainsanity; . /engagements; ; SOFA - Aboveallinsa,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:495691,depend,dependency-pack,495691,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependency-pack']
Integrability,"sage . ◆ m_type. Type sofa::helper::logging::Message::m_type. protected . the message level . Constructor details. ◆ Message() [1/3]. sofa::helper::logging::Message::Message ; (; ). inline . ◆ Message() [2/3]. sofa::helper::logging::Message::Message ; (; const Message & ; msg). ◆ Message() [3/3]. sofa::helper::logging::Message::Message ; (; Class ; mclass, . Type ; type, . const ComponentInfo::SPtr & ; componentInfo = ComponentInfo::SPtr(), . const FileInfo::SPtr & ; fileInfo = EmptyFileInfo . ). Function details. ◆ componentInfo(). const ComponentInfo::SPtr& sofa::helper::logging::Message::componentInfo ; (; ); const. inline . ◆ context(). Class sofa::helper::logging::Message::context ; (; ); const. inline . ◆ empty(). bool sofa::helper::logging::Message::empty ; (; ); const. ◆ fileInfo(). const FileInfo::SPtr& sofa::helper::logging::Message::fileInfo ; (; ); const. inline . ◆ message(). const std::stringstream& sofa::helper::logging::Message::message ; (; ); const. inline . ◆ messageAsString(). const std::string sofa::helper::logging::Message::messageAsString ; (; ); const. inline . ◆ operator<<() [1/2]. template<> . SOFA_HELPER_API Message & sofa::helper::logging::Message::operator<< ; (; const FileInfo::SPtr & ; fi). ◆ operator<<() [2/2]. template<class T > . Message& sofa::helper::logging::Message::operator<< ; (; const T & ; x). inline . ◆ operator=(). Message & sofa::helper::logging::Message::operator= ; (; const Message & ; msg). ◆ sender(). const std::string& sofa::helper::logging::Message::sender ; (; ); const. inline . ◆ type(). Type sofa::helper::logging::Message::type ; (; ); const. inline . Enum details. ◆ Class. enum sofa::helper::logging::Message::Class. class of messages . EnumeratorDev ; Runtime ; Log ; CEmpty ; ClassCount . ◆ Type. enum sofa::helper::logging::Message::Type. possible levels of messages (ordered) . EnumeratorInfo ; Advice ; Deprecated ; Warning ; Error ; Fatal ; TEmpty ; TypeCount . sofahelperloggingMessage; Generated on Mon Nov 11 2",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html:3799,message,messageAsString,3799,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1_message.html,1,['message'],['messageAsString']
Integrability,"sage to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:26761,message,message,26761,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"scription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  . Constructor details. ◆ CollisionAnimationLoop(). sofa::simulation::CollisionAnimationLoop::CollisionAnimationLoop ; (; ). protected . ◆ ~CollisionAnimationLoop(). sofa::simulation::CollisionAnimationLoop::~CollisionAnimationLoop ; (; ). overrideprotected . Function details. ◆ computeCollision(). void sofa::simulation::CollisionAnimationLoop::computeCollision ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Activate collision pipeline. . ◆ getSolverSequence(). const CollisionAnimationLoop::Solvers & sofa::simulation::CollisionAnimationLoop::getSolverSequence ; (; ). protected . ◆ integrate(). void sofa::simulation::CollisionAnimationLoop::integrate ; (; const core::ExecParams * ; params, . SReal ; dt . ). protectedvirtual . Activate OdeSolvers. . ◆ internalCollisionComputation(). void sofa::simulation::CollisionAnimationLoop::internalCollisionComputation ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Function performing the actual collision computation. . ◆ postCollisionComputation(). void sofa::simulation::CollisionAnimationLoop::postCollisionComputation ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Function meant to be called after the actual collision computation. . ◆ preCollisionComputation(). void sofa::simulation::CollisionAnimationLoop::preCollisionComputation ; (; const core::ExecParams * ; params = core::execparams::defaultInstance()). protectedvirtual . Function meant to be called before the actual collision computation. . sofasimulationCollisionAnimationLoop; Generated on Mon Nov 11 2024 03:33:58 for SOFA API ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:15976,integrat,integrate,15976,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['integrat'],['integrate']
Integrability,"scription::find ; (; const char * ; nodeName, . bool ; absolute = false . ). virtual . Find an object description given its name (relative to this object) ; Reimplemented in sofa::simulation::xml::BaseElement. ◆ findObject(). Base * sofa::core::objectmodel::BaseObjectDescription::findObject ; (; const char * ; nodeName). virtual . Find an object given its name (relative to this object) ; Find an object given its name. . ◆ getAttribute(). const char * sofa::core::objectmodel::BaseObjectDescription::getAttribute ; (; const std::string & ; attr, . const char * ; defaultVal = nullptr . ). virtual . Get an attribute given its name (return defaultVal if not present) . ◆ getAttributeAsFloat(). float sofa::core::objectmodel::BaseObjectDescription::getAttributeAsFloat ; (; const std::string & ; attr, . const float ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get an attribute converted to a float given its name. returns defaultVal if not present or in case the attribute cannot be parsed totally adds a message in the logError if the attribute cannot be totally parsed. . ◆ getAttributeAsInt(). int sofa::core::objectmodel::BaseObjectDescription::getAttributeAsInt ; (; const std::string & ; attr, . const int ; defaultVal = 0.0 . ). virtual . Docs is in .h. ; Get an attribute converted to a int given its name. returns defaultVal if not present or in case the attribute cannot be parsed totally adds a message in the logError if the attribute cannot be totally parsed. . ◆ getAttributeList(). template<class T > . void sofa::core::objectmodel::BaseObjectDescription::getAttributeList ; (; T & ; container); const. inline . ◆ getAttributeMap(). const BaseObjectDescription::AttributeMap & sofa::core::objectmodel::BaseObjectDescription::getAttributeMap ; (; ); const. virtual . ◆ getBaseFile(). std::string sofa::core::objectmodel::BaseObjectDescription::getBaseFile ; (; ). virtual . Get the file where this description was read from. Useful to resolve relative file paths. ; Reimplemente",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html:4746,message,message,4746,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_object_description.html,1,['message'],['message']
Integrability,"se the following LCPs until the next call to this function. This is used to prevent concurrent access to the LCP when using a LCPForceFeedback through an haptic thread. More...;  ;  Public Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl;  ConstraintSolverImpl ();  ;  ~ConstraintSolverImpl () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void cleanup () override;  ; void removeConstraintCorrection (core::behavior::BaseConstraintCorrection *s) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; virtual void rebuildSystem (SReal, SReal);  ; virtual void computeResidual (const core::ExecParams *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const Ba",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html:7554,depend,dependent,7554,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_l_c_p_constraint_solver.html,1,['depend'],['dependent']
Integrability,"seLink *link);  . Protected Member Functions;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; virtual void addPointsProcess (const sofa::Size nPoints);  Extend the point container storage by nPoints. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; virtual void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Remove a subset of points. More...;  ; virtual void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true);  move input points indices to input new coords. Also propagate event More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; virtual void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &, const bool renumberDOF=true);  Reorder this topology. More...;  ; void propagateTopologicalChanges",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:13067,message,message,13067,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"showObjectScale;  Scale for object display. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color for object display. (default=[1.0,1.0,0.0,1.0]) More...;  ;  Public Attributes inherited from sofa::core::Mapping< TIn, TOut >; Data< bool > f_applyRestPosition;  ;  Public Attributes inherited from sofa::core::BaseMapping; Data< bool > f_mapForces;  Are forces mapped ? More...;  ; Data< bool > f_mapConstraints;  Are constraints mapped ? More...;  ; Data< bool > f_mapMasses;  Are masses mapped ? More...;  ; Data< bool > f_mapMatrices;  Are matrix explicit mapped? More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::component::mapping::nonlinear::NonLinearMappingData< HasStabilizedGeometricStiffness >; Data< helper::OptionsGroup > d_geometricStiffness;  Method used to compute the geometric stiffness. More...;  . Static Public Attributes; static constexpr auto Nin = In::deriv_total_size;  ; static constexpr auto Nout = Out::deriv_total_size;  ;  Static Public Attributes inherited from sofa::component::m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:2684,message,messages,2684,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,1,['message'],['messages']
Integrability,"signed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 2, int > >; Data< type::Vec< 2, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html:12731,message,messages,12731,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_variable.html,1,['message'],['messages']
Integrability,"signed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 3, int > >; Data< type::Vec< 3, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html:12731,message,messages,12731,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_variable.html,1,['message'],['messages']
Integrability,"signed int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec< 4, int > >; Data< type::Vec< 4, int > > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html:12731,message,messages,12731,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_variable.html,1,['message'],['messages']
Integrability,"sition and velocity. . Public Attributes; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass. More...;  ; Data< SReal > d_velocityDamping;  Velocity decay coefficient (no decay if null) More...;  ; Data< SReal > d_gamma;  Newmark scheme gamma coefficient. More...;  ; Data< SReal > d_beta;  Newmark scheme beta coefficient. More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; unsigned int cpt;  ; sofa::core::MultiVecDerivId pID;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::cor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html:2769,message,messages,2769,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_newmark_implicit_solver.html,1,['message'],['messages']
Integrability,"sofa::Index ; flatIndex, . sofa::Index & ; row, . sofa::Index & ; col . ). inline . A lower triangular matrix can be stored as a linear array. This function converts the index in this linear array to 2d coordinates (row and column) of an element in the matrix.; Example of a 6x6 lower triangular matrix: [ 0 ] [ 1 2 ] [ 3 4 5 ] [ 6 7 8 9 ] [10 11 12 13 14 ] [15 16 17 18 19 20]; 0 => (0, 0) 7 => (3, 1) 18 => (5, 3) . ◆ convertCompressedRowSparseMatrixRowToVecDeriv(). template<class RowType , class VecDeriv > . void sofa::linearalgebra::convertCompressedRowSparseMatrixRowToVecDeriv ; (; const RowType ; row, . VecDeriv & ; out . ). ◆ flagValueIndices(). template<typename _Scalar , int _Options, typename _StorageIndex > . void sofa::linearalgebra::flagValueIndices ; (; Eigen::SparseMatrix< sparsematrixproduct::IndexedValue< _Scalar >, _Options, _StorageIndex > & ; matrix). ◆ init(). SOFA_LINEARALGEBRA_API void sofa::linearalgebra::init ; (; ). Initialize the Sofa.LinearAlgebra library, as well as its dependencies: Sofa.Type, SofaHelper. . ◆ isCleanedUp(). SOFA_LINEARALGEBRA_API bool sofa::linearalgebra::isCleanedUp ; (; ). Return true if and only if the Sofa.LinearAlgebra library has been cleaned up. . ◆ isInitialized(). SOFA_LINEARALGEBRA_API bool sofa::linearalgebra::isInitialized ; (; ). Return true if and only if the Sofa.LinearAlgebra library has been initialized. . ◆ matrixAdd(). template<sofa::Size L, sofa::Size C, class real > . void sofa::linearalgebra::matrixAdd ; (; BaseMatrix * ; self, . const Index ; row, . const Index ; col, . const sofa::type::Mat< L, C, real > & ; M . ). ◆ operator<<() [1/11]. SOFA_LINEARALGEBRA_API std::ostream & sofa::linearalgebra::operator<< ; (; std::ostream & ; out, . const BaseVector & ; v . ). Declare that the operator << exists but is defined in BaseVector.cpp. . ◆ operator<<() [2/11]. SOFA_LINEARALGEBRA_API std::ostream & sofa::linearalgebra::operator<< ; (; std::ostream & ; out, . const FullMatrix< double > & ; v . ). ◆ operator<",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html:14685,depend,dependencies,14685,api/master/sofa/html/namespacesofa_1_1linearalgebra.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1linearalgebra.html,1,['depend'],['dependencies']
Integrability,"sofa::component::statecontainer::MechanicalObject< T >, sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ applyScale(). virtual void sofa::core::behavior::BaseMechanicalState::applyScale ; (; const ; SReal, . const ; SReal, . const ; SReal . ). pure virtual . Scale the current state. ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ applyTranslation(). virtual void sofa::core::behavior::BaseMechanicalState::applyTranslation ; (; const SReal ; dx, . const SReal ; dy, . const SReal ; dz . ). pure virtual . Translate the current state. ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ beginIntegration(). virtual void sofa::core::behavior::BaseMechanicalState::beginIntegration ; (; SReal ; ). inlinevirtual . Called at the beginning of each integration step. ; Reimplemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ buildIdentityBlocksInJacobian(). virtual void sofa::core::behavior::BaseMechanicalState::buildIdentityBlocksInJacobian ; (; const sofa::type::vector< unsigned int > & ; list_n, . core::MatrixDerivId & ; mID . ). pure virtual . fill the jacobian matrix (of the constraints) with identity blocks on the provided list of nodes(dofs) ; Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ compareVec(). virtual SReal sofa::core::behavior::BaseMechanicalState::compareVec ; (; ConstVecId ; v, . std::istream & ; in . ). pure virtual . Implemented in sofa::component::statecontainer::MechanicalObject< DataTypes >, and sofa::component::statecontainer::MechanicalObject< T >. ◆ constraintBlocks(). virtual std::list<ConstraintBlock> sofa::core::beh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:28430,integrat,integration,28430,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['integrat'],['integration']
Integrability,"sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data han",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:22923,message,message,22923,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,"sofa::core::objectmodel::DataFileName vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileName fragFilename;  Files where fragment shader is defined. More...;  ;  Public Attributes inherited from sofa::simulation::DefaultVisualManagerLoop; SingleLink< DefaultVisualManagerLoop, simulation::Node, BaseLink::FLAG_STOREPATH > l_node;  Link to the scene's node where the rendering will take place. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (CompositingVisualLoop, simulation::DefaultVisualManagerLoop);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void drawStep (sofa::core::visual::VisualParams *vparams) override;  Render the scene. More...;  ;  Public Member Functions inherited from sofa::simulation::DefaultVisualManagerLoop;  SOFA_CLASS (Defaul",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html:1605,message,messages,1605,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_compositing_visual_loop.html,1,['message'],['messages']
Integrability,"sofa::core::visual::VisualManager > visualManager;  ; NodeSequence< sofa::core::CollisionModel > collisionModel;  ; NodeSequence< sofa::core::objectmodel::BaseObject > unsorted;  ; NodeSingle< sofa::core::behavior::BaseAnimationLoop > animationManager;  ; NodeSingle< sofa::core::visual::VisualLoop > visualLoop;  ; NodeSingle< sofa::core::topology::Topology > topology;  ; NodeSingle< sofa::core::topology::BaseMeshTopology > meshTopology;  ; NodeSingle< sofa::core::BaseState > state;  ; NodeSingle< sofa::core::behavior::BaseMechanicalState > mechanicalState;  ; NodeSingle< sofa::core::BaseMapping > mechanicalMapping;  ; NodeSingle< sofa::core::behavior::BaseMass > mass;  ; NodeSingle< sofa::core::collision::Pipeline > collisionPipeline;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::objectmodel::Context; Data< bool > is_activated;  To Activate a node. More...;  ; Data< Vec3 > worldGravity_;  Gravity in the world coordinate system. More...;  ; Data< SReal > dt_;  Time step. More...;  ; Data< SReal > time_;  Current time. More...;  ; Data< bool > animate_;  Animate the Simulation(applied at initialization only) More...;  ; Data< bool > d_isSleeping;  The node is sl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html:30935,message,messages,30935,api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1graph_1_1_d_a_g_node.html,2,['message'],['messages']
Integrability,sofa::gui::qt Namespace Reference; SOFA API: sofa::gui::qt::materialdatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::qrgbacolorpicker_h Namespace Reference; SOFA API: sofa::gui::qt::rgbacolordatawidget_h Namespace Reference; SOFA API: sofa::gui::qt::viewer Namespace Reference; SOFA API: sofa::gui::qt::viewer::qgl Namespace Reference; SOFA API: sofa::gui::qt::viewer::qt Namespace Reference; SOFA API: sofa::helper Namespace Reference; SOFA API: sofa::helper::advancedtimer Namespace Reference; SOFA API: sofa::helper::console Namespace Reference; SOFA API: sofa::helper::io Namespace Reference; SOFA API: sofa::helper::lifecycle Namespace Reference; SOFA API: sofa::helper::logging Namespace Reference; SOFA API: sofa::helper::logging::countingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::loggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::percomponentloggingmessagehandler Namespace Reference; SOFA API: sofa::helper::logging::routingmessagehandler Namespace Reference; SOFA API: sofa::helper::messaging Namespace Reference; SOFA API: sofa::helper::polygon_cube_intersection Namespace Reference; SOFA API: sofa::helper::system Namespace Reference; SOFA API: sofa::helper::system::thread Namespace Reference; SOFA API: sofa::helper::visual Namespace Reference; SOFA API: sofa::linearalgebra Namespace Reference; SOFA API: sofa::linearalgebra::sparsematrixproduct Namespace Reference; SOFA API: sofa::linearalgebra::testing Namespace Reference; SOFA API: sofa::mapping_test Namespace Reference; SOFA API: sofa::simpleapi Namespace Reference; SOFA API: sofa::simulation Namespace Reference; SOFA API: sofa::simulation::Colors Namespace Reference; SOFA API: sofa::simulation::common Namespace Reference; SOFA API: sofa::simulation::core Namespace Reference; SOFA API: sofa::simulation::graph Namespace Reference; SOFA API: sofa::simulation::mechanicalvisitor Namespace Reference; SOFA API: sofa::simulation::node Namespace Reference; SOFA API,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:205397,rout,routingmessagehandler,205397,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['rout'],['routingmessagehandler']
Integrability,"sofa::linearalgebra::BaseMatrix * createMappedMatrix (const behavior::BaseMechanicalState *state1, const behavior::BaseMechanicalState *state2, func_createMappedMatrix) override;  ; void disable () override;  ;  Public Member Functions inherited from sofa::core::BaseMapping;  SOFA_ABSTRACT_CLASS (BaseMapping, objectmodel::BaseObject);  ; virtual bool isLinear () const;  ; virtual bool isMechanical () const;  Return true if this mapping should be used as a mechanical mapping. More...;  ; virtual bool sameTopology () const;  ; virtual const sofa::linearalgebra::BaseMatrix * getJ (const MechanicalParams *);  ; virtual const sofa::linearalgebra::BaseMatrix * getJ ();  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool areForcesMapped () const;  ; virtual bool areConstraintsMapped () const;  ; virtual bool areMassesMapped () const;  ; virtual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseOb",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html:12065,depend,dependent,12065,api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mapping_1_1nonlinear_1_1_distance_from_target_mapping.html,2,['depend'],['dependent']
Integrability,"sofa::type::Material >, sofa::core::objectmodel::Data< sofa::type::vector< sofa::component::collision::geometry::TTriangle > >, sofa::core::objectmodel::Data< sofa::type::vector< Hexa > >, sofa::core::objectmodel::Data< sofa::type::vector< Quad > >, sofa::core::objectmodel::Data< vector< Triangle > >, sofa::core::objectmodel::Data< SeqPositions >, sofa::core::objectmodel::Data< sofa::type::vector< sofa::type::fixed_array< unsigned int, 8 > > >, sofa::core::objectmodel::Data< sofa::type::SVector< SkeletonBone > >, sofa::core::objectmodel::Data< Mat< 3, 3, Real > >, and sofa::core::objectmodel::Data< sofa::type::vector< SReal > >. ◆ getFlag(). bool sofa::core::objectmodel::BaseData::getFlag ; (; DataFlagsEnum ; flag); const. inline . Get one of the flags. . ◆ getGroup(). const std::string& sofa::core::objectmodel::BaseData::getGroup ; (; ); const. inline . Get group. . ◆ getHelp(). const std::string& sofa::core::objectmodel::BaseData::getHelp ; (; ); const. inline . Get a help message that describes this Data. . ◆ getLinkPath(). std::string sofa::core::objectmodel::BaseData::getLinkPath ; (; ); const. virtual . If we use the Data as a link and not as value directly. . ◆ getName(). const std::string& sofa::core::objectmodel::BaseData::getName ; (; ); const. inline . Return the name of this Data within the Base component. . ◆ getNewInstance(). virtual BaseData* sofa::core::objectmodel::BaseData::getNewInstance ; (; ). inlinevirtual . Reimplemented in sofa::core::objectmodel::Data< T >, sofa::core::objectmodel::Data< sofa::type::BoundingBox >, sofa::core::objectmodel::Data< sofa::core::objectmodel::TagSet >, sofa::core::objectmodel::Data< SeqTetrahedra >, sofa::core::objectmodel::Data< sofa::type::Vec< 2, int > >, sofa::core::objectmodel::Data< sofa::type::RGBAColor >, sofa::core::objectmodel::Data< std::map< std::string, sofa::type::vector< double > > >, sofa::core::objectmodel::Data< sofa::type::vector< sofa::type::fixed_array< int, 3 > > >, sofa::core::objectmodel::Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:25339,message,message,25339,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability,"sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; void m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:22551,message,message,22551,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,"sofa::type::vector< PointID > & ; indices, . Real & ; baryCoef, . Real & ; coord_kmin . ); const. Computes the intersection of the vector from point a to point b and the triangle indexed by t. ; Parameters. a: first input point ; b: last input point ; ind_t: triangle indice ; indices: vertex indices of edge (belonging to ind_t) crossed by the vecteur AB ; baryCoef: barycoef of the intersection point on the edge ; coord_kmin: barycoef of the intersection point on the vecteur AB. . ◆ computeTriangleAABB(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleAABB ; (; const TriangleID ; i, . Coord & ; minCoord, . Coord & ; maxCoord . ); const. ◆ computeTriangleArea() [1/2]. template<class DataTypes > . void sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleArea ; (; BasicArrayInterface< Real > & ; ai); const. Computes the triangle area of all triangles are store in the array interface. ; computes the edge length of all edges are store in the array interface . ◆ computeTriangleArea() [2/2]. template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleArea ; (; const TriangleID ; i); const. Computes the area of triangle no i and returns it. . ◆ computeTriangleBarycoefs(). template<class DataTypes > . auto sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleBarycoefs ; (; const TriangleID ; ind_t, . const sofa::type::Vec< 3, Real > & ; p . ); const. Computes barycentric coefficients of point p in triangle (a,b,c) indexed by ind_t. . ◆ computeTriangleCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::TriangleSetGeometryAlgorithms< DataTypes >::computeTriangleCenter ; (; const TriangleID ; i); const. ◆ computeTriangleCircumcenter(). templat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html:41725,interface,interface,41725,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_triangle_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core::topology::TopologyModifier;  TopologyModifier ();  Constructor. More...;  ;  ~TopologyModifier () override;  Destructor. More...;  ; void addTopologyChange (const TopologyChange *topologyChange);  Adds a TopologyChange object to the list of the topology this object describes. More...;  ; void addStateChange (const TopologyChange *topologyChange);  Adds a StateChange object to the list of the topology this object describes. More...;  ;  Protected Member Function",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:27464,message,message,27464,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"specific actions that call element adding or element removal methods on the OUTPUT topology, and it updates the Index Maps.; So, at each time step, the geometrical and adjacency information are consistent in both topologies. . Public Attributes; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::map< Index, Index > Glob2LocMap;  ; std::map< Index, sofa::type::vector< Index > > In2OutMap;  ; ElementType m_inputType = geometry::ElementType::UNKNOWN;  ; ElementType m_outputType = geometry::ElementType::UNKNOWN;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLin",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html:2209,message,messages,2209,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topological_mapping.html,1,['message'],['messages']
Integrability,"ss DataTypes > . void sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::computeTetrahedronAABB ; (; const TetraID ; i, . Coord & ; minCoord, . Coord & ; maxCoord . ); const. ◆ computeTetrahedronCenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::computeTetrahedronCenter ; (; const TetraID ; i); const. ◆ computeTetrahedronCircumcenter(). template<class DataTypes > . DataTypes::Coord sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::computeTetrahedronCircumcenter ; (; const TetraID ; i); const. ◆ computeTetrahedronVolume() [1/2]. template<class DataTypes > . void sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::computeTetrahedronVolume ; (; BasicArrayInterface< Real > & ; ai); const. computes the tetrahedron volume of all tetrahedra are store in the array interface ; computes the edge length of all edges are store in the array interface . ◆ computeTetrahedronVolume() [2/2]. template<class DataTypes > . DataTypes::Real sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::computeTetrahedronVolume ; (; const TetraID ; i); const. computes the volume of tetrahedron no i and returns it . ◆ defineTetrahedronCubaturePoints(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::defineTetrahedronCubaturePoints. protected . ◆ draw(). template<class DataTypes > . void sofa::component::topology::container::dynamic::TetrahedronSetGeometryAlgorithms< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetGeometryAlgorithms< DataTypes >. ◆ getBadTetrahedronIds(). template<typename Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html:46832,interface,interface,46832,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_geometry_algorithms.html,2,['interface'],['interface']
Integrability,"ss Referenceabstract . #include <Shader.h>; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). ; More... Inheritance diagram for sofa::core::visual::Shader:. [legend]; Detailed Description; A basic interface to define a Shader for different system (OpenGL, DirectX, ...). . Public Member Functions;  SOFA_ABSTRACT_CLASS (Shader, objectmodel::BaseObject);  ; virtual void start ()=0;  Start the shader. More...;  ; virtual void stop ()=0;  Stop the shader. More...;  ; virtual bool isActive ()=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html:1336,depend,dependent,1336,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_shader.html,1,['depend'],['dependent']
Integrability,"ss Template Reference . #include <PointModel.h>. Inheritance diagram for sofa::component::collision::geometry::PointCollisionModel< TDataTypes >:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< bool > bothSide;  ; Data< bool > d_bothSide;  activate collision on both side of the point model (when surface normals are defined on these points) More...;  ;  Public Attributes inherited from sofa::core::CollisionModel; CollisionElementActiver * myCollElemActiver;  CollisionElementActiver that activate or deactivate collision element during execution. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mstate;  ; sofa::core::objectmodel::RenamedData< bool > computeNormals;  ; sofa::core::objectmodel::RenamedData< bool > m_displayFreePosition;  ; Data< bool > d_computeNormals;  activate computation of normal vectors (required for some collision detection algorithms) More...;  ; VecDeriv normals;  ; Data< bool > d_displayFreePosition;  Display Collision Model Po",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html:1445,message,messages,1445,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1geometry_1_1_point_collision_model.html,1,['message'],['messages']
Integrability,"ss  TypeInfoType { MISSING; , NAMEONLY; , COMPLETE; };  Encodes the different kind of type infos stored in the TypeInfoRegistry. More...;  . Functions; template<class Vec > ; void resetDataTypeVec (Vec &vec);  Function resetting all the element of a container with its default constructor value type. More...;  ; template<sofa::Size N, typename ValueType > ; void resetVecTypeVec (vector< Vec< N, ValueType > > &vec);  In case of a vector<Vec>, zero can be set directly with memset on all the memory space for a faster reset. More...;  ; template<> ; void resetDataTypeVec< vector< Vec< 6, float > > > (vector< Vec< 6, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 6, double > > > (vector< Vec< 6, double > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 3, float > > > (vector< Vec< 3, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 3, double > > > (vector< Vec< 3, double > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 2, float > > > (vector< Vec< 2, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 2, double > > > (vector< Vec< 2, double > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 1, float > > > (vector< Vec< 1, float > > &vec);  ; template<> ; void resetDataTypeVec< vector< Vec< 1, double > > > (vector< Vec< 1, double > > &vec);  ; SOFA_DEFAULTTYPE_API void init ();  Initialize the SofaDefaultType library, as well as it dependency: SofaHelper. More...;  ; SOFA_DEFAULTTYPE_API bool isInitialized ();  Return true if and only if the SofaDefaultType library has been initialized. More...;  ; SOFA_DEFAULTTYPE_API void cleanup ();  Clean up the resources used by the SofaDefaultType library, as well as its dependency: SofaHelper. More...;  ; SOFA_DEFAULTTYPE_API bool isCleanedUp ();  Return true if and only if the SofaDefaultType library has been cleaned up. More...;  ; template<class MatrixRow , class VecDeriv > ; VecDeriv::Real SparseMatrixVecDerivMult (const MatrixRow &r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html:8457,depend,dependency,8457,api/master/sofa/html/namespacesofa_1_1defaulttype.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1defaulttype.html,1,['depend'],['dependency']
Integrability,"ssType >::generateRigid. protected . generates the RigidMass from the mesh integral . ◆ GetCustomTemplateName(). template<class DataTypes , class MassType > . std::string sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::GetCustomTemplateName. static . Implementing the GetCustomTemplateName is mandatory to have a custom template name parameters instead of the default one generated automatically by the SOFA_CLASS() macro. . ◆ init(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::init ; (; void ; ). overridevirtual . Initialization method called at graph modification, during bottom-up traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ integrateMesh(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateMesh. protected . integrates the whole mesh ; Protected methods . ◆ integrateTriangle(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::integrateTriangle ; (; type::Vec3 ; kV0, . type::Vec3 ; kV1, . type::Vec3 ; kV2 . ). protected . ◆ reinit(). template<class DataTypes , class MassType > . void sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::reinit. overridevirtual . Update method called when variables used in precomputation are modified. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER ; (; Vector3 ; , . sofa::type::Vec3 ;  . ). protected . ◆ SOFA_CLASS(). template<class DataTypes , class MassType > . sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::SOFA_CLASS ; (; GenerateRigidMass< DataTypes, MassType > ; , . core::Da",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:21585,integrat,integrateTriangle,21585,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['integrat'],['integrateTriangle']
Integrability,"ssages in a buffer. ; More... Inheritance diagram for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler:. [legend]; Detailed Description; The RoutingMessageHandler class saves a copy of the messages in a buffer. ; This class is a MessageHandler to implement complex routing rules.; User interested in having a singleton of this class should have a look at See alsoMainRoutingMessageHandler. . Public Member Functions;  RoutingMessageHandler ();  ;  ~RoutingMessageHandler () override;  ; void setAFilter (FilterFunction, MessageHandler *handler);  All the message of the given class will be routed to this handler. More...;  ; void removeAllFilters ();  Remove all the filter but don't delete the associated memory. More...;  ; void process (Message &m) override;  Inherited from MessageHandler. More...;  ;  Public Member Functions inherited from sofa::helper::logging::MessageHandler; virtual ~MessageHandler ();  . Constructor details. ◆ RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::RoutingMessageHandler ; (; ). ◆ ~RoutingMessageHandler(). sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::~RoutingMessageHandler ; (; ). inlineoverride . Function details. ◆ process(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::process ; (; Message & ; m). overridevirtual . Inherited from MessageHandler. ; Implements sofa::helper::logging::MessageHandler. ◆ removeAllFilters(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::removeAllFilters ; (; ). Remove all the filter but don't delete the associated memory. . ◆ setAFilter(). void sofa::helper::logging::routingmessagehandler::RoutingMessageHandler::setAFilter ; (; FilterFunction ; f, . MessageHandler * ; handler . ). All the message of the given class will be routed to this handler. . sofahelperloggingroutingmessagehandlerRoutingMessageHandler; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html:1404,rout,routingmessagehandler,1404,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler.html,7,"['message', 'rout']","['message', 'routed', 'routingmessagehandler']"
Integrability,"st char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  ;  Protected Member Functions inherited from sofa::core::behavior::BaseMass;  BaseMass ();  ;  ~BaseMass () override=default;  ;  Protected Member Functions inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >;  HexahedralFEMForceField ();  ; virtual ~HexahedralFEMForceField ();  ; virtual void computeElementStiffness (ElementStiffness &K, const MaterialStiffness &M, const type::Vec< 8, Coord > &nodes);  ; Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; void computeMaterialStiffness (MaterialStiffness &m, double youngModulus, double poissonRatio);  compute the hookean material matrix More...;  ; void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; void initLarge (const int i);  ; void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  ; virtual void accumulateForceLarge (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ; void initPolar (const int i);  ; void computeRotationPolar (Transformation &r, type::Vec< 8, Coord > &nodes);  ; virtual void accumulateForcePolar (WDataRefVecDeriv &f, RDataRefVecCoord &p, const int i);  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:23560,integrat,integrateStiffness,23560,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['integrat'],['integrateStiffness']
Integrability,"st of all members . sofa::component::engine::generate::MergeVectors< VecT > Class Template Reference . #include <MergeVectors.h>. Inheritance diagram for sofa::component::engine::generate::MergeVectors< VecT >:. [legend]; Detailed Description; template<class VecT>; class sofa::component::engine::generate::MergeVectors< VecT >; Apply a merge operation to combine several inputs . Public Attributes; Data< unsigned int > f_nbInputs;  Number of input vectors. More...;  ; core::objectmodel::vectorData< VecValue > vf_inputs;  ; Data< VecValue > f_output;  Output vector. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MergeVectors, VecT), core::DataEngine);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void parseFields (const std::map< std::string, std::string * > &str) override;  Assign the field values stored in the given map of name -> value pa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html:1265,message,messages,1265,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_vectors.html,1,['message'],['messages']
Integrability,"st sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesProcess (const sofa::type::vector< Edge > &edges);  Effectively add some edges to this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; virtual void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false);  Effectively Remove a subset of edges. Eventually remove isolated vertices. More...;  ; void addPointsProcess (const sofa::Size nPoints) override;  Add some points to this topology. More...;  ; void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true) override;  Remove a subset of points. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:16379,message,message,16379,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"st sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:23235,message,message,23235,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability,"stances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(TopologyBoundingTrasher, DataTypes), core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html:4542,depend,dependent,4542,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1utility_1_1_topology_bounding_trasher.html,1,['depend'],['dependent']
Integrability,"states. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:2306,integrat,integration,2306,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['integrat'],['integration']
Integrability,"stexpr auto InvalidPentahedron = sofa::topology::InvalidPentahedron;  ; static constexpr auto InvalidHexahedron = sofa::topology::InvalidHexahedron;  ; static constexpr auto InvalidPyramid = sofa::topology::InvalidPyramid;  . Public Member Functions;  SOFA_CLASS (Topology, core::objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual bool hasPos () const;  ; virtual Size getNbPoints () const;  ; virtual void setNbPoints (Size);  ; virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html:1924,depend,dependent,1924,api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1topology_1_1_topology.html,1,['depend'],['dependent']
Integrability,"str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< int >; Data< int > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html:12662,message,messages,12662,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_variable.html,1,['message'],['messages']
Integrability,"straint ; (; Index ; index). ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; vparams). overridevirtual . Draw the constrained points (= border mesh points) ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ getFinalPositions(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::getFinalPositions ; (; VecCoord & ; finalPos, . DataVecCoord & ; xData . ). Compute the theoretical final positions. . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . – Constraint interface ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ projectJacobianMatrix(). template<class TDataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< TDataTypes >::projectJacobianMatrix ; (; const core::MechanicalParams * ; , . DataMatrixDeriv & ; cData . ). inlineoverridevirtual . Project c to constrained space (c models a constraint).; This method must be implemented by the component to handle Lagrange Multiplier based constraint ; Implements sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >. ◆ projectMatrix(). template<class DataTypes > . void sofa::component::constraint::projective::PatchTestMovementProjectiveConstraint< DataTypes >::projectMatrix ; (; sofa::linearalgebra::BaseMatrix * ; , . unsigned ;  . ). overridevirtual . Project the given matrix (Experimental API). Replace M with PMP, where P is the projection matrix corresponding to the projectResponse method. Contrary to applyConstraint(), the diagonal blocks of the result are not r",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:25626,interface,interface,25626,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['interface'],['interface']
Integrability,"stress, Vec3 &strain, unsigned int &elementIndex) override;  ; void computeDStress (Vec3 &dstress, Vec3 &dstrain) override;  ; SReal computeVonMisesStrain (Vec3 &strain);  ; void computeStressOnSection (Vec3 &Stress, Vec3 Strain, int section);  ; void computeStress (unsigned int) override;  ;  Public Member Functions inherited from sofa::component::solidmechanics::fem::hyperelastic::material::BaseMaterial;  SOFA_CLASS (BaseMaterial, core::objectmodel::BaseObject);  ;  BaseMaterial ();  ;  ~BaseMaterial () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html:3089,depend,dependent,3089,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1material_1_1_plastic_material.html,1,['depend'],['dependent']
Integrability,"string & ; text). ◆ castTo(). template<class Dest > . Dest sofa::core::castTo ; (; sofa::core::objectmodel::Base * ; base). Dynamic cast from Base* into the type parameter Dest. . ◆ castToBase(). template<class Source > . sofa::core::objectmodel::Base* sofa::core::castToBase ; (; Source * ; b). Dynamic cast from the type parameter B* into Base*. ; CORE::OPAQUE FUNCTION /////////////////////////////////////////////////; CORE::OPAQUE function are a groupe of function that make ""opaque"" some of the common sofa behaviors.; Core::Opaque functions are:; Base* sofa::core::castToBase(T*) replace dynamic_cast<Base*>(T*);; T* sofa::core::castTo(Base*) replace dynamic_cast<T*>(Base*);; sofa:core::objectmodel::base::GetClass<T>() replace T::GetClass();. These functions are called ""opaque"" as they work with only forward declaration of the involved types in comparison to class methods the requires the full class declaration to be used.; It is highly recommended to use as much as possible opaque function in header files as this allow to reduce the dependency tree.; Opaque function may be slower at runtime (by one function call) but this is true only if LTO isn't able to optimize them properly. If you have experience/feedback with LTO please join the discussion in https://github.com/sofa-framework/sofa/discussions/1822 Defines the baseline functions for a type all the types in-herit from Base. These are non-opaque function that needs to be specialized in order to implement an opaque version for a given type. . ◆ cleanup(). SOFA_CORE_API void sofa::core::cleanup ; (; ). Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ findTemplatedCreator(). void sofa::core::findTemplatedCreator ; (; objectmodel::BaseContext * ; context, . const ObjectFactory::Creator::SPtr & ; creator, . const std::string & ; templateName, . std::map< std::string, std::vector< std::string >> & ; creatorsErrors, . std::vector< std::pair< std::string, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:19462,depend,dependency,19462,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['depend'],['dependency']
Integrability,"surface to extrude. More...;  ; Data< VecCoord > f_extrudedVertices;  Coordinates of the extruded vertices. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > f_extrudedSurfaceQuads;  List of new surface quads generated during the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > f_extrudedQuads;  List of all quads generated during the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Hexa > > f_extrudedHexas;  List of hexahedra generated during the extrusion. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeQuadsAndGenerateHexas, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html:2565,message,messages,2565,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_quads_and_generate_hexas.html,1,['message'],['messages']
Integrability,"surrounding key times More...;  ; Deriv nextM;  ; VecCoord x0;  initial constrained DOFs position More...;  ; SingleLink< LinearMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; std::unique_ptr< LinearMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by specifying in each solver which groups of constraints it should handle. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html:2851,message,messages,2851,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_linear_movement_projective_constraint.html,1,['message'],['messages']
Integrability,"t &offset);  ; virtual void getConstraintResolution (std::vector< ConstraintResolution * > &resTab, unsigned int &offset);  ; type::vector< std::string > getIdentifiers ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintSet;  SOFA_ABSTRACT_CLASS (BaseConstraintSet, objectmodel::BaseObject);  ; virtual void resetConstraint ();  ; virtual void setConstraintId (unsigned cId);  ; virtual void processGeometricalData ();  ; virtual void getConstraintViolation (const ConstraintParams *, linearalgebra::BaseVector *, unsigned int);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html:5525,depend,dependent,5525,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint.html,2,['depend'],['dependent']
Integrability,"t () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; ConstraintProblem * getConstraintProblem ();  ;  Public Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  SOFA_ABSTRACT_CLASS (BaseAnimationLoop, objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; SReal getResetTime () const;  Returns starting time of the simulation. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:5697,depend,dependent,5697,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['depend'],['dependent']
Integrability,"t ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Attributes inherited from sofa::gl::component::shader::OglTexture; static GLint MAX_NUMBER_OF_TEXTURE_UNIT = 1;  ;  Protected Attributes inherited from sofa::gl::component::shader::OglTexture; sofa::core::objectmodel::DataFileName textureFilename;  ; Data< unsigned short > textureUnit;  Set the texture unit. More...;  ; Data< bool > enabled;  enabled ? More...;  ; Data< bool > repeat;  Repeat Texture ? More...;  ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html:12487,message,messages,12487,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_texture2_d.html,1,['message'],['messages']
Integrability,"t *visitor, VContext *ctx, const Container &list, Visitor::Result(Visit::*task)(VContext *, PointedType *), const std::string &typeInfo=std::string(""type""));  . Attribute details. ◆ correctionId. sofa::core::ConstMultiVecDerivId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::correctionId. ◆ cparams. const sofa::core::ConstraintParams* sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::cparams. ◆ dxId. sofa::core::MultiVecDerivId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::dxId. ◆ offset. int sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::offset. ◆ positionFactor. const double sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::positionFactor. use the OdeSolver to get the position integration factor . ◆ velocityFactor. const double sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::velocityFactor. use the OdeSolver to get the position integration factor . ◆ vId. sofa::core::MultiVecDerivId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::vId. ◆ xId. sofa::core::MultiVecCoordId sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::xId. Constructor details. ◆ MechanicalIntegrateConstraintsVisitor(). sofa::simulation::mechanicalvisitor::MechanicalIntegrateConstraintsVisitor::MechanicalIntegrateConstraintsVisitor ; (; const core::ConstraintParams * ; cparams, . double ; pf, . double ; vf, . sofa::core::ConstMultiVecDerivId ; correction, . sofa::core::MultiVecDerivId ; dx = sofa::core::MultiVecDerivId(sofa::core::VecDerivId::dx()), . sofa::core::MultiVecCoordId ; x = sofa::core::MultiVecCoordId(sofa::core::VecCoordId::position()), . sofa::core::MultiVecDerivId ; v = sofa::core::MultiVecDerivId(sofa::core::VecDerivId::velocity()) . ). Function details. ◆ fwdMechanicalState(). MechanicalIntegrateConstraintsVisitor::Result sofa::simulation::mechanicalvisitor::Mechani",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html:13457,integrat,integration,13457,api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1mechanicalvisitor_1_1_mechanical_integrate_constraints_visitor.html,1,['integrat'],['integration']
Integrability,"t Data (containing a DataTracker) More...;  ; class  DataTrackerCallback;  ; class  DataTrackerFunctor;  ; class  DerivativeMatrix;  ; class  ExecParams;  Class gathering parameters use by most components methods, and transmitted by all visitors. More...;  ; struct  CleanupCheck;  ; class  Mapping;  Specialized interface to convert a model state of type TIn to a model state of type TOut. This is basically a sofa::core::BaseMapping with given input and output types. More...;  ; class  MatrixAccumulatorInterface;  ; class  MatrixAccumulatorIndexChecker;  ; class  ListMatrixAccumulator;  ; class  MechanicalParams;  Class gathering parameters use by mechanical components methods, and transmitted by mechanical visitors. More...;  ; class  MechanicalStatesMatrixAccumulators;  ; class  Multi2Mapping;  Specialized interface to describe many to many mapping. The inputs can be of two different types, while all the outputs must be of the same type. More...;  ; class  MultiMapping;  Specialized interface to describe many to many mapping. All the input must have the same type, and all the output must have the same type. See also class Multi2Mapping. More...;  ; class  TMultiVecId;  ; struct  StateVecAccessor;  Helper class to access vectors of a given type in a given State. More...;  ; struct  StateVecAccessor< DataTypes, V_COORD, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_COORD, V_WRITE >;  ; struct  StateVecAccessor< DataTypes, V_DERIV, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_DERIV, V_WRITE >;  ; struct  StateVecAccessor< DataTypes, V_MATDERIV, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_MATDERIV, V_WRITE >;  ; struct  StateVecAccessor< DataTypes, V_ALL, V_READ >;  ; struct  StateVecAccessor< DataTypes, V_ALL, V_WRITE >;  ; class  TMultiVecId< V_ALL, vaccess >;  ; struct  ObjectRegistrationEntry;  ; class  ObjectFactory;  ; class  ObjectCreator;  Typed Creator class used to create instances of object type RealObject. More...;  ; class  ObjectRegist",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:3666,interface,interface,3666,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['interface'],['interface']
Integrability,"t from the default value. . ◆ m_value. template<class T = void*> . ValueType sofa::core::objectmodel::Data< T >::m_value. protected . Value. . Constructor details. ◆ Data() [1/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const BaseData< T >::BaseInitData< T > & ; init). inlineexplicit . Constructor used via the Base::initData() methods. . ◆ Data() [2/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const InitData< T > & ; init). inlineexplicit . Constructor used via the Base::initData() methods. . ◆ Data() [3/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const char * ; helpMsg = nullptr, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). inline . ◆ Data() [4/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const std::string & ; helpMsg, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). inline . Constructor. Parameters. helpMsgA help message that describes this Data. ; isDisplayedWhether this Data should be displayed in GUIs. ; isReadOnlyWhether this Data should be modifiable in GUIs. . ◆ Data() [5/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const T & ; value, . const char * ; helpMsg = nullptr, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). inline . Parameters. valueThe default value. . ◆ Data() [6/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const T & ; value, . const std::string & ; helpMsg, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). inline . Parameters. valueThe default value. . ◆ ~Data(). template<class T = void*> . sofa::core::objectmodel::Data< T >::~Data ; (; ). inlineoverride . Destructor. . ◆ Data() [7/7]. template<class T = void*> . sofa::core::objectmodel::Data< T >::Data ; (; const Data< T > & ; ). delete . Function details. ◆ beginEdit(). template<class T = void*> . virtual T* sofa::core::objectmodel::Data< T >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html:13070,message,message,13070,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data.html,1,['message'],['message']
Integrability,"t override;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html:3411,depend,dependent,3411,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,3,['depend'],['dependent']
Integrability,"t schemes) More...;  ; bool m_supportOnlySymmetricMatrix;  True if a symmetric matrix is assumed in the left-hand term of the dynamics equations, for solvers specialized on symmetric matrices. More...;  . Public Member Functions; bool symmetricMatrix () const =delete;  ; bool supportOnlySymmetricMatrix () const;  Symmetric matrix flag, for solvers specialized on symmetric matrices. More...;  ; bool energy () const;  Should the kinematic and potential energies be computed ? More...;  ;  MechanicalParams (const sofa::core::ExecParams &p=sofa::core::ExecParams());  Constructor, initializing all VecIds to default values, implicit and energy flags to false. More...;  ;  MechanicalParams (const MechanicalParams &mparams);  Copy Constructor. More...;  ; MechanicalParams * setExecParams (const core::ExecParams *params);  ; MechanicalParams * operator= (const MechanicalParams &mparams);  ; Flags and parameters getters; SReal dt () const;  Time step. More...;  ; bool implicit () const;  Is the time integration scheme implicit ? More...;  ; SReal mFactor () const;  Mass matrix contributions factor (for implicit schemes) More...;  ; SReal bFactor () const;  Damping matrix contributions factor (for implicit schemes) More...;  ; SReal kFactor () const;  Stiffness matrix contributions factor (for implicit schemes) More...;  ; Rayleigh Damping D = rayleighStiffness*K - rayleighMass*M; SReal kFactorIncludingRayleighDamping (SReal rayleighStiffness) const;  ; SReal mFactorIncludingRayleighDamping (SReal rayleighMass) const;  ; Access to vectors from a given state container (i.e. State or MechanicalState); template<class S > ; const Data< typename S::VecCoord > * readX (const S *state) const;  Read access to current position vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readV (const S *state) const;  Read access to current velocity vector. More...;  ; template<class S > ; const Data< typename S::VecDeriv > * readF (const S *state) const;  Read access to ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:2436,integrat,integration,2436,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['integrat'],['integration']
Integrability,"t some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:27052,message,message,27052,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,2,['message'],['message']
Integrability,"t the current position to stay at rest position More...;  ;  Public Attributes inherited from sofa::core::behavior::Constraint< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseConstraintSet; Data< sofa::Index > d_constraintIndex;  Constraint index (first index in the right hand term resolution vector) More...;  ; sofa::core::objectmodel::RenamedData< unsigned int > m_constraintIndex;  ; DeprecatedAndRemoved m_cId {};  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(UniformLagrangianConstraint, DataTypes), SOFA_TEMPLATE(sofa::core::behavior::Constraint, DataTypes));  ; void buildConstraintMatrix (const sofa::core::ConstraintParams *cParams, DataMatrixDeriv &c, unsigned int &cIndex, const DataVecCoord &x) override;  ; void getConstraintViolation (const sofa::core::ConstraintParams *cParams, sofa::linearalgebra::BaseVector *resV, const DataVe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html:1850,message,messages,1850,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1model_1_1_uniform_lagrangian_constraint.html,1,['message'],['messages']
Integrability,"t  SparseMatrixTest;  ; class  BaseSimulationTest;  ; class  BaseTest;  Base class for Sofa test fixtures. More...;  ; struct  CleanupCheck;  ; class  LinearCongruentialRandomGenerator;  A simple deterministic and portable random number generator. More...;  ; struct  NumericTest;  Helper functions to compare scalars, vectors, matrices, etc. More...;  ; struct  data_traits;  ; struct  setRotWrapper;  ; struct  setRotWrapper< DataTypes, N, true >;  ; struct  setRotWrapper< DataTypes, 2, false >;  ; struct  setRotWrapper< DataTypes, N, false >;  ; class  GtestMessageFrame;  ; class  GtestMessageFrameFailure;  ; class  GtestMessageFrameFailureWhenMissing;  ; class  GtestMessageFrameIgnore;  ; class  GtestMessageHandler;  ; class  MainGtestMessageHandlerPrivate;  ; class  MessageAsTestFailure;  ; class  ExpectMessage;  ; class  IgnoreMessage;  ; class  MainGtestMessageHandler;  . Functions; void initializeOnce ();  ; SOFA_TESTING_API void init ();  Initialize the Sofa.Testing library, as well as its dependencies. More...;  ; SOFA_TESTING_API bool isInitialized ();  Return true if and only if theSofa.Testing library has been initialized. More...;  ; SOFA_TESTING_API void cleanup ();  Clean up the resources used by the Sofa.Testing library, as well as its dependencies: SofaDefaultType, SofaHelper. More...;  ; SOFA_TESTING_API bool isCleanedUp ();  Return true if and only if the Sofa.Testing library has been cleaned up. More...;  ; template<class Vector , class ReadData > ; void copyFromData (Vector &v, const ReadData &d);  Resize the Vector and copy it from the Data. More...;  ; template<class WriteData , class Vector > ; void copyToData (WriteData &d, const Vector &v);  Copy the Vector to the Data. They must have the same size. More...;  ; template<class DataTypes > ; void setRot (typename DataTypes::Coord &coord, const sofa::type::Quat< SReal > &rot);  ; template<class DataTypes > ; DataTypes::Coord createCoord (const sofa::type::Vec3 &pos, const sofa::type::Quat< SReal >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html:1218,depend,dependencies,1218,api/master/sofa/html/namespacesofa_1_1testing.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1testing.html,1,['depend'],['dependencies']
Integrability,"t(). sofa::core::objectmodel::BaseContext::~BaseContext ; (; ). overrideprotected . Function details. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseContext::addObject ; (; sptr< BaseObject > ; , . TypeOfInsertion ; = TypeOfInsertion::AtEnd . ). inlinevirtual . Add an object, or return false if not supported. . ◆ canChangeSleepingState(). bool sofa::core::objectmodel::BaseContext::canChangeSleepingState ; (; ); const. virtual . Whether the context can change its sleeping state or not. ; The Context can not change its sleeping state by default. ; Reimplemented in sofa::core::objectmodel::Context. ◆ executeVisitor(). void sofa::core::objectmodel::BaseContext::executeVisitor ; (; simulation::Visitor * ; , . bool ; precomputedOrder = false . ). virtual . apply an action ; Reimplemented in sofa::simulation::Node. ◆ get() [1/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const std::string & ; path); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [2/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [3/15]. template<class T > . T* sofa::core::objectmodel::BaseContext::get ; (; const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [4/15]. template<class T , class Container > . void sofa::core::objectmodel::BaseContext::get ; (; Container * ; list, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic list of objects access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [5/15]. template<class T , class Containe",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:19008,wrap,wrapper,19008,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"t, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_ABSTRACT_CLASS (CollisionGroupManager, CollisionAlgorithm);  ; virtual void createGroups (objectmodel::BaseContext *scene, const sofa::type::vector< Contact::SPtr > &contacts)=0;  Create the integration groups. More...;  ; virtual void clearGroups (objectmodel::BaseContext *scene)=0;  Clear the integration groups. More...;  ; virtual const sofa::type::vector< objectmodel::BaseContext::SPtr > & getGroups ();  Get the integration groups. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const Bas",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html:2430,integrat,integration,2430,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_collision_group_manager.html,1,['integrat'],['integration']
Integrability,"t::linearsolver::iterative::ShewchukPCGLinearSolver< TMatrix, TVector >::f_use_precond. ◆ l_preconditioner. template<class TMatrix , class TVector > . SingleLink<ShewchukPCGLinearSolver, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< TMatrix, TVector >::l_preconditioner. Link towards the linear solver used to precondition the conjugate gradient. . Constructor details. ◆ ShewchukPCGLinearSolver(). template<class TMatrix , class TVector > . sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< TMatrix, TVector >::ShewchukPCGLinearSolver. protected . Function details. ◆ cgstep_alpha() [1/3]. template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< TMatrix, TVector >::cgstep_alpha ; (; Vector & ; x, . Vector & ; p, . double ; alpha . ). inlineprotected . This method is separated from the rest to be able to use custom/optimized versions depending on the types of vectors. It computes: x += p*alpha, r -= q*alpha . ◆ cgstep_alpha() [2/3]. void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_alpha ; (; Vector & ; x, . Vector & ; p, . double ; alpha . ). inlineprotected . ◆ cgstep_alpha() [3/3]. void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< component::linearsolver::GraphScatteredMatrix, component::linearsolver::GraphScatteredVector >::cgstep_alpha ; (; Vector & ; x, . Vector & ; p, . double ; alpha . ). inlineprotected . ◆ cgstep_beta() [1/3]. template<class TMatrix , class TVector > . void sofa::component::linearsolver::iterative::ShewchukPCGLinearSolver< TMatrix, TVector >::cgstep_beta ; (; Vector & ; p, . Vector & ; r, . double ; beta . ). inlineprotected . This method is separated from the rest to be able to use custom/optimized versions depending o",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_shewchuk_p_c_g_linear_solver.html:9265,depend,depending,9265,api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_shewchuk_p_c_g_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsolver_1_1iterative_1_1_shewchuk_p_c_g_linear_solver.html,1,['depend'],['depending']
Integrability,"t::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_gamma. IN: Bulk modulus (resistance to uniform compression) . ◆ d_initialSurfaceArea. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_initialSurfaceArea. OUT: Initial surface area, as computed from the surface rest position. . ◆ d_initialVolume. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_initialVolume. OUT: Initial volume, as computed from the surface rest position. . ◆ d_injectedVolume. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_injectedVolume. IN: Injected (or extracted) volume since the start of the simulation. . ◆ d_maxInjectionRate. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_maxInjectionRate. IN: Maximum injection rate (volume per second) . ◆ d_p0. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_p0. IN: Rest pressure when V = V0. . ◆ d_pressureTriangles. template<class DataTypes > . Data< SeqTriangles > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_pressureTriangles. OUT: list of triangles where a pressure is applied (mesh triangles + tessellated quads) . ◆ d_surfaceAreaAfterTC. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_surfaceAreaAfterTC. OUT: Surface area after a topology change. . ◆ d_v0. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >::d_v0. OUT: Rest volume (as computed from initialVolume + injectedVolume) . ◆ d_volumeAfterTC. template<class DataTypes > . Data< Real > sofa::component::mechanicalload::TaitSurfacePressureForceField< DataTypes >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html:25956,inject,injection,25956,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_tait_surface_pressure_force_field.html,1,['inject'],['injection']
Integrability,"t::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedralFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html:25439,message,messages,25439,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedral_f_e_m_force_field_and_mass.html,2,['message'],['messages']
Integrability,"t::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; void checkPoissonRatio ();  ; void checkYoungModulus ();  ; Real getVecRealInElement (sofa::Size elementId, const Data< VecReal > &data, Real defaultValue) const;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html:25244,message,messages,25244,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field_and_mass.html,1,['message'],['messages']
Integrability,"t; . /feed; ; [SOLVED] Building Sofa on Windows VS2013 with boost – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /3; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /4; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /5; ; SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. SOFA - Topic: [SOLVED] Building Sofa on Windows VS2013 with boost. /building-sofa-problems; ; SOFA - Topic: [SOLVED] Building SOFA problems. /building-sofa-with-both-plugins-leapmotion-and-sensable-phantom-omni; ; SOFA - Topic: [SOLVED] Building SOFA with both plugins: LeapMotion and Sensable (Phantom Omni). /building-sofa-with-ninja; ; SOFA - Topic: [SOLVED] Building SOFA with ninja. /building-sofa-with-windows10-and-vs2015; . /feed; ; [SOLVED] Building SOFA with Windows10 and VS2015 – SOFA. SOFA - Topic: [SOLVED] Building SOFA with Windows10 and VS2015. /building-stlib-and-integration-with-sofa-in-windows-10; ; SOFA - Topic: Building Stlib and integration with sofa in windows 10. /building-the-tutorials; ; SOFA - Topic: [SOLVED] Building the tutorials. /building-v16-08-cmake-errors; . /feed; ; [SOLVED] Building v16.08, Cmake Errors – SOFA. SOFA - Topic: [SOLVED] Building v16.08, Cmake Errors. /building-v16-08-sofa-errors-in-sensable-plugin; . /feed; ; [SOLVED] Building v16.08 sofa, errors in sensable plugin. – SOFA. SOFA - Topic: [SOLVED] Building v16.08 sofa, errors in sensable plugin. /building-vrpn-plugin-on-linux; . /feed; ; [SOLVED] Building VRPN plugin on linux – SOFA. SOFA - Topic: [SOLVED] Building VRPN plugin on linux. /build-problem-for-advancedfem-plugin; ; SOFA - Topic: [SOLVED] Build problem for AdvancedFEM plugin. /build-problem-for-pardisio-solver-plugin; ; SOFA - Topic: [SOLVED] Build problem for Pardisio solver plugin. /build-sofa; . /page; . /11; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Qt 4.8.5 (64-bit). /12; ; SOFA - Topic: [SOLVED] Build SOFA with MSVC 11.0 and Q",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:266464,integrat,integration-with-sofa-in-windows-,266464,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,2,['integrat'],"['integration', 'integration-with-sofa-in-windows-']"
Integrability,"t; closeNow()sofa::gui::qt::ModifyObjectinlineslot; componentDirty(bool)sofa::gui::qt::ModifyObjectsignal; createDialog(core::objectmodel::Base *node)sofa::gui::qt::ModifyObject; createDialog(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; data_sofa::gui::qt::ModifyObjectprotected; dataModified(QString)sofa::gui::qt::ModifyObjectsignal; dialogClosed(void *)sofa::gui::qt::ModifyObjectsignal; dialogFlags_sofa::gui::qt::ModifyObjectprotected; dialogTabsofa::gui::qt::ModifyObjectprotected; endDataModification(sofa::core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObjectsignal; endObjectModification(sofa::core::objectmodel::Base *object)sofa::gui::qt::ModifyObjectsignal; getFlags()sofa::gui::qt::ModifyObjectinline; hideData(core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; Id_sofa::gui::qt::ModifyObjectprotected; item_sofa::gui::qt::ModifyObjectprotected; m_numMessagessofa::gui::qt::ModifyObjectprotected; m_tabssofa::gui::qt::ModifyObjectprotected; messageEditsofa::gui::qt::ModifyObjectprotected; messageTabsofa::gui::qt::ModifyObjectprotected; ModifyObject(void *Id, QTreeWidgetItem *item_clicked, QWidget *parent, const ModifyObjectFlags &dialogFlags, const char *name=nullptr, bool modal=false, Qt::WindowFlags f=Qt::WindowType::Widget)sofa::gui::qt::ModifyObjectexplicit; nodeNameModification(simulation::Node *)sofa::gui::qt::ModifyObjectsignal; objectUpdated()sofa::gui::qt::ModifyObjectsignal; openExternalBrowser(const QUrl &link)sofa::gui::qt::ModifyObjectslot; parseDataModified()sofa::gui::qt::ModifyObjectprotected; readOnlyData(QTableWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; readOnlyData(QWidget *widget, core::objectmodel::BaseData *data)sofa::gui::qt::ModifyObject; reject() overridesofa::gui::qt::ModifyObjectslot; updateConsole()sofa::gui::qt::ModifyObjectprotected; updateDataWidgets()sofa::gui::qt::ModifyObjectsignal; updateTables()sofa::gui::qt::ModifyObjectslot; updateValues()sofa::gui::qt::Modi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html:1704,message,messageEditsofa,1704,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_modify_object-members.html,1,['message'],['messageEditsofa']
Integrability,"t? – SOFA. SOFA - Topic: [SOLVED] How to use the RecordedCamera component?. /how-to-use-the-sofa-mesh-partition-tools; ; SOFA - Topic: [SOLVED] How to use the Sofa mesh partition tools?. /how-to-use-the-xml-api; ; SOFA - Topic: [SOLVED] How to use the XML API?. /how-to-use-tools-for-multi-material-on-windows; ; SOFA - Topic: How to use Tools for multi-material on Windows?. /how-to-vtkexport-pointsettopologycontainer-points; ; SOFA - Topic: How to VTKexport PointSetTopologyContainer points. /how-to-write-a-scene-file; ; SOFA - Topic: [SOLVED] How to write a scene file. /hyperelastic-material-parameters-in-sofa; ; SOFA - Topic: [SOLVED] Hyperelastic Material Parameters in SOFA. /hyperelastic-materials-related-paper; ; SOFA - Topic: [SOLVED] Hyperelastic materials related paper. /i-am-confused-on-the-dependencies-when-compiling-sofa-on-win10-vs2015; . /feed; ; [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015 – SOFA. SOFA - Topic: [SOLVED] I am confused on the dependencies when compiling Sofa On WIN10. vs2015. /i-could-not-find-the-modeler-module; ; SOFA - Topic: [SOLVED] I could not find the ""Modeler"" module. /image-background; ; SOFA - Topic: [SOLVED] Image Background. /image-plugin-compile-problem; . /feed; ; [SOLVED] Image plugin compile problem – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] Image plugin compile problem. /9; ; SOFA - Topic: [SOLVED] Image plugin compile problem. SOFA - Topic: [SOLVED] Image plugin compile problem. /image-viewer-in-image-plugin; ; SOFA - Topic: [SOLVED] Image Viewer in Image Plugin. /implement-a-velocity-constraint; ; SOFA - Topic: Implement a velocity constraint. /implement-our-own-linearsolver; ; SOFA - Topic: [SOLVED] Implement our own LinearSolver. /import-a-vtk-file; . /embed; ; SOFA - Topic: [SOLVED] import a vtk file. /feed; ; [SOLVED] import a vtk file – SOFA. /page; . /2; ; SOFA - Topic: [SOLVED] import a vtk file. SOFA - Topic: [SOLVED] import a vtk file. /importing-stl-file-via-rigidobjects; ; ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:331920,depend,dependencies,331920,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['depend'],['dependencies']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ afIntegral. template<class DataTypes , class MassType > . type::fixed_array<SReal,10> sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::afIntegral. protected . ◆ centerToOrigin. template<class DataTypes , class MassType > . Data< type::Vec3 > sofa::component::engine::generate::GenerateRigidMass< DataTypes, MassType >::centerToOrigin. protected . output: vector going from the mass ce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html:16722,message,messages,16722,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_rigid_mass.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ boxModel. collision::geometry::CubeCollisionModel::SPtr sofa::component::collision::detection::algorithm::BruteForceBroadPhase::boxModel. protected . ◆ m_collisionModels. sofa::type::vector<FirstLastCollisionModel> sofa::component::collision::detection::algorithm::BruteForceBroadPhase::m_collisionModels. protected . vector of accumulated CollisionModel's when the collision pipeline asks to add a CollisionMode",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html:16751,message,messages,16751,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_broad_phase.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ d_showIndicesScale. template<class DataTypes > . Data<float> sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::d_showIndicesScale. protected . Debug : scale for view topology indices. . ◆ d_showPointIndices. template<class DataTypes > . Data<bool> sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >::d_showPointIndices. protected . Debug ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html:15753,message,messages,15753,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_geometry_algorithms.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ mstate. template<class TDataTypes > . MechanicalState<DataTypes>* sofa::core::behavior::ConstraintCorrection< TDataTypes >::mstate. protected . Constructor details. ◆ ConstraintCorrection(). template<class TDataTypes > . sofa::core::behavior::ConstraintCorrection< TDataTypes >::ConstraintCorrection ; (; MechanicalState< DataTypes > * ; ms = nullptr). inlineexplicitprotected . Default Constructor. . ◆ ~Constra",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html:16194,message,messages,16194,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_correction.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::engine::transform::AbstractTransformMatrixEngine; Data< type::Matrix4 > d_inT;  input transformation if any More...;  ; Data< type::Matrix4 > d_outT;  output transformation More...;  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html:14345,message,messages,14345,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_invert_transform_matrix_engine.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::DataTrackerDDGNode; DataTracker m_dataTracker;  ;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html:13907,message,messages,13907,api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_data_engine.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html:12659,message,messages,12659,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_matrix_projection_method.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html:13744,message,messages,13744,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_ray_trace_narrow_phase.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::Pipeline; sofa::type::vector< Intersection * > intersectionMethods;  ; sofa::type::vector< BroadPhaseDetection * > broadPhaseDetections;  ; sofa::type::vector< NarrowPhaseDetection * > narrowPhaseDetections;  ; sofa::type::vector< ContactManager * > contactManagers;  ; sofa::type::vector< CollisionGroupManager * > groupManagers;  ; Intersection * intersectionMethod;  ; B",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html:12251,message,messages,12251,api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_pipeline_impl.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html:11933,message,messages,11933,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_brute_force_detection.html,18,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglShaderElement; Data< std::string > id;  Name of element (corresponding with the shader) More...;  ; Data< unsigned int > indexShader;  Name of element (corresponding with the shader) More...;  ; std::set< OglShader * > shaders;  Shader to use the element with. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html:12181,message,messages,12181,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader_macro.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Protected Attributes inherited from sofa::component::collision::response::contact::ContactIdentifier; static std::atomic< sofa::core::collision::DetectionOutput::ContactId > cpt = 0;  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html:14363,message,messages,14363,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_friction_contact.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >; static std::string GetCustomTemplateName ();  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html:17015,message,messages,17015,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_composite_linear_system.html,1,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::component::topology::container::dynamic::PointSetGeometryAlgorithms< DataTypes >; template<class T > ; static bool canCreate (T *&obj, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseO",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html:29099,message,messages,29099,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_geometry_algorithms.html,6,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::collision::Contact; static Contact::SPtr Create (const std::string &type, core::CollisionModel *model1, core::CollisionModel *model2, Intersection *intersectionMethod, bool verbose=true);  Create a new contact given 2 collision elements and an intersection method. More...;  ; template<class RealContact > ; static RealContact::SPtr create (RealContact *, std::pair< std::pa",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html:13467,message,messages,13467,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1response_1_1contact_1_1_barycentric_penality_contact.html,2,['message'],['messages']
Integrability,"tData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html:15991,message,messages,15991,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p_narrow_phase.html,30,['message'],['messages']
Integrability,"tData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >;  SingleStateAccessor (MechanicalState< DataTypes > *mm=nullptr);  ;  ~SingleStateAccessor () override=default;  . Static Protected Member Functions; static Mat33 integrateStiffness (int signx0, int signy0, int signz0, int signx1, int signy1, int signz1, const Real u, const Real v, const Real w, const Mat33 &J_1);  ; static void computeForce (Displacement &F, const Displacement &Depl, const ElementStiffness &K);  ; static void computeRotationLarge (Transformation &r, Coord &edgex, Coord &edgey);  . Friends; class HexahedronFEMForceFieldInternalData< DataTypes >;  . Additional Inherited Members;  Static Protected Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static constexpr Real defaultYoungModulusValue = 5000;  ; static constexpr Real defaultPoissonRatioValue = 0.45;  ;  Static Public Member Functions inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; static std::pair< Real, Real > toLameParameters (_2DMaterials, Real youngModulus, Real poissonRatio);  ; static std::pair< Real, Real > toLameParameters (_3DMaterials, Real youngModulus, Real poissonRatio);  ;  Static Public Member Functions inherited from sofa::core::behavior::ForceField< DataTypes >; static",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html:23221,integrat,integrateStiffness,23221,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_hexahedron_f_e_m_force_field.html,1,['integrat'],['integrateStiffness']
Integrability,"tDerivative) const override;  ; SReal getSolutionIntegrationFactor (int) const override;  ;  Public Member Functions inherited from sofa::core::behavior::OdeSolver;  SOFA_ABSTRACT_CLASS (OdeSolver, objectmodel::BaseObject);  ; virtual void solve (const core::ExecParams *params, SReal dt);  ; virtual void computeResidual (const core::ExecParams *, SReal, sofa::core::MultiVecCoordId, sofa::core::MultiVecDerivId);  ; virtual SReal getVelocityIntegrationFactor () const;  ; virtual SReal getPositionIntegrationFactor () const;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html:3307,depend,dependent,3307,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_damp_velocity_solver.html,1,['depend'],['dependent']
Integrability,"tIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec2f >; Data< type::Vec2f > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html:12676,message,messages,12676,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_variable.html,1,['message'],['messages']
Integrability,"tIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec3f >; Data< type::Vec3f > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html:12676,message,messages,12676,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_variable.html,1,['message'],['messages']
Integrability,"tIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  ; virtual int getSESizePerVertex ();  ; virtual int getSETotalSize ();  . Additional Inherited Members;  Public Attributes inherited from sofa::gl::component::shader::OglVariable< type::Vec4f >; Data< type::Vec4f > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html:12676,message,messages,12676,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_variable.html,1,['message'],['messages']
Integrability,"tObject() [3/4]. void* sofa::simulation::Node::getObject ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic object access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getObject() [4/4]. core::objectmodel::BaseObject * sofa::simulation::Node::getObject ; (; const std::string & ; name); const. Find an object given its name. . ◆ getObjects() [1/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . const sofa::core::objectmodel::TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. overridepure virtual . Generic list of objects access, given a set of required tags, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext.; Implemented in sofa::simulation::graph::DAGNode. ◆ getObjects() [2/2]. void sofa::simulation::Node::getObjects ; (; const sofa::core::objectmodel::ClassInfo & ; class_info, . GetObjectsCallBack & ; container, . SearchDirection ; dir = SearchUp . ); const. inlineoverridevirtual . Generic list of objects access, possibly searching up or down from the current context; Note that the template wrapper method should generally be used to have the correct return type, ; Reimplemented from sofa::core::objectmodel::BaseContext. ◆ getOdeSolver(). core::behavior::OdeSolver * sofa::simulation::Node::getOdeSolver ; (; ); const. overridevirtual . Reimplemented from sofa::core::objectmodel::BaseNode. ◆ getRootContext(). BaseContext* sofa::simulation::Node::getRootContext ; (; ); const. inlineoverridevirtual . Get the root context of the graph. ; Reimplemented from so",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:43340,wrap,wrapper,43340,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['wrap'],['wrapper']
Integrability,"tParams *, MultiVecId , MultiVecId ); The default implementation successively calls: prepareStates, buildSystem, solveSystem, applyCorrection. The parameters are defined in class ConstraintParams. More...;  ; class  CRSMultiMatrixAccessor;  ; class  DefaultMultiMatrixAccessor;  ; class  ForceField;  Component computing forces within a simulated body. More...;  ; class  LinearSolver;  Abstract interface for linear system solvers. More...;  ; class  LinearSolverAccessor;  ; class  Mass;  Component responsible for mass-related computations (gravity, acceleration). More...;  ; class  MatrixAccessorCompat;  ; class  AddToMatrixCompatMatrix;  ; class  ApplyConstraintCompat;  ; class  MechanicalMatrix;  ; class  MixedInteractionConstraint;  Component computing constraints between a pair of simulated body. More...;  ; class  MixedInteractionForceField;  Component computing forces between a pair of simulated body. More...;  ; class  MultiMatrix;  ; class  MultiMatrixAccessor;  ; class  TMultiVec;  ; class  OdeSolver;  Component responsible for timestep integration, i.e. advancing the state from time t to t+dt. More...;  ; class  PairInteractionConstraint;  Component computing constraints between a pair of simulated body. More...;  ; class  PairInteractionForceField;  Component computing forces between a pair of simulated body. More...;  ; class  PairInteractionProjectiveConstraintSet;  Component computing constraints between a pair of simulated body. More...;  ; class  PairStateAccessor;  ; class  ProjectiveConstraintSet;  Component computing constraints within a simulated body. More...;  ; class  RotationFinder;  ; class  SingleMatrixAccessor;  ; class  SingleStateAccessor;  ; class  StateAccessor;  . Typedefs; typedef TMultiVec< V_COORD > MultiVecCoord;  ; typedef TMultiVec< V_DERIV > MultiVecDeriv;  ; typedef TMultiVec< V_MATDERIV > MultiVecMatrixDeriv;  . Enumerations; enum class  BlocData { SCALAR; , MAT33; };  ; enum class  BlocPrecision { FLOAT; , DOUBLE; };  . Functio",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html:4092,integrat,integration,4092,api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core_1_1behavior.html,1,['integrat'],['integration']
Integrability,"tState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (RequiredPlugin, core::objectmodel::BaseObject);  ; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; bool loadPlugin ();  load a list of plugins requested in Data More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html:3374,depend,dependent,3374,api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_required_plugin.html,1,['depend'],['dependent']
Integrability,"tVecId a, unsigned l)=0;  Sum of the entries of state vector a at the power of l>0. This is used to compute the l-norm of the vector. More...;  ; virtual SReal vMax (const ExecParams *params, ConstVecId a)=0;  Maximum of the absolute values of the entries of state vector a. This is used to compute the infinite-norm of the vector. More...;  ; virtual Size vSize (const ExecParams *params, ConstVecId v)=0;  Get vector size. More...;  ; virtual void vThreshold (VecId a, SReal threshold)=0;  Apply a threshold (lower bound) to all entries. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html:21086,message,messages,21086,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mechanical_state.html,1,['message'],['messages']
Integrability,"ta &data);  Method called to know if a tracked Data has changed. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::Base;  Base ();  ; virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; template<class DataTypes > ; class HexahedronSetGeometryAlgorithms;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html:28008,depend,depends,28008,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,1,['depend'],['depends']
Integrability,"ta & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::Edge",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:15391,message,message,15391,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"ta;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(HexahedronSetGeometryAlgorithms, DataTypes), SOFA_TEMPLATE(QuadSetGeometryAlgorithms, DataTypes));  ; void computeHexahedronAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; void computeHexahedronRestAABB (const HexaID h, Coord &minCoord, Coord &maxCoord) const;  ; Coord computeHexahedronCenter (const HexaID h) const;  ; Coord computeHexahedronRestCenter (const HexaID h) const;  ; void getHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; void getRestHexahedronVertexCoordinates (const HexaID h, Coord[8]) const;  ; Real computeHexahedronVolume (const HexaID h) const;  computes the volume of hexahedron no h and returns it More...;  ; void computeHexahedronVolume (BasicArrayInterface< Real > &ai) const;  computes the hexahedron volume of all hexahedra are store in the array interface More...;  ; Real computeRestHexahedronVolume (const HexaID h) const;  computes the hexahedron volume of hexahedron no i and returns it More...;  ; Real computeShapeFunction (const LocalCoord nc, const HexahedronBinaryIndex bi) const;  computes the shape function value for a given binary index More...;  ; Coord computeNodalValue (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the nodal position given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; void computePositionDerivative (const HexaID h, const LocalCoord nc, const VecCoord &p, Coord dpos[3]) const;  computes the nodal position derivative along the 3 natural coordinates given the hexahedron index, its natural coordinates and the vector of nodal values More...;  ; Real computeJacobian (const HexaID h, const LocalCoord nc, const VecCoord &p) const;  computes the Jacobian i.e. determinant of d",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html:4407,interface,interface,4407,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_geometry_algorithms.html,1,['interface'],['interface']
Integrability,"ta< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ;  Protected Member Functions inherited from sofa::core::State< TDataTypes >;  State ();  ;  ~State () override;  ;  Protected Member Functions inherited from sofa::core::BaseState;  BaseState ();  ;  ~BaseState () override;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html:15748,message,messages,15748,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_ogl_cylinder_model.html,1,['message'],['messages']
Integrability,"ta< bool > d_drawIsEnabled;  enable/disable drawing of plane. (default=false) More...;  ; Data< sofa::type::RGBAColor > d_drawColor;  plane color. (default=[0.0,0.5,0.2,1.0]) More...;  ; Data< Real > d_drawSize;  plane display size if draw is enabled. (default=10) More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::type::vector< unsigned int > m_contacts;  ; PlaneForceFieldInternalData< DataTypes > m_data;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK >",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html:2431,message,messages,2431,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_plane_force_field.html,1,['message'],['messages']
Integrability,"tance diagram for sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >:. [legend]; Detailed Description; template<class TDataTypes>; class sofa::core::behavior::PairInteractionProjectiveConstraintSet< TDataTypes >; Component computing constraints between a pair of simulated body. ; This class define the abstract API common to interaction constraints between a pair of bodies using a given type of DOFs. . Public Attributes; Data< SReal > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (SOFA_TEMPLATE(PairInteractionProjectiveConstraintSet, TDataTypes), BaseInteractionProjectiveConstraintSet, SOFA_TEMPLATE2(PairStateAccessor, TDataTypes, TDataTypes));  ; virtual bool isActive () const;  if false, the constraint does nothing More...;  ; void applyConstraint (const MechanicalParams *, const sofa::core::behavior::MultiMatrixAccessor *) override;  Project the global Mechanical M",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html:1583,message,messages,1583,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_projective_constraint_set.html,1,['message'],['messages']
Integrability,"tate. More...;  ; void setIndex (const unsigned int);  Set the index of the controlled DOF of the MechanicalState. More...;  ; void setMainDirection (const sofa::type::Vec< 3, Real >);  Set the direction of the controlled DOF corresponding to the Mouse vertical axis. More...;  ; const sofa::type::Vec< 3, Real > & getMainDirection () const;  Return the direction of the controlled DOF corresponding to the Mouse vertical axis. More...;  ; void applyController (void);  Apply the controller modifications to the controlled MechanicalState. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::controller::Controller; sofa::core::objectmodel::RenamedData< bool > handleEventTriggersUpdate;  ; Data< bool > d_handleEventTriggersUpdate;  Event handling frequency controls the controller update frequency. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkS",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html:15018,message,messages,15018,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_mechanical_state_controller.html,1,['message'],['messages']
Integrability,"ta m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (WriteTopology, core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html:4658,depend,dependent,4658,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_write_topology.html,1,['depend'],['dependent']
Integrability,"td::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Base; static const BaseClass * GetClass ();  ; template<class T > ; static std::string shortName (const T *ptr=nullptr, BaseObjectDescription *=nullptr);  ;  Protected Member Functions inherited from sofa::component::engine::transform::DisplacementTransformEngine< DataTypes, type::Mat4x4 >; void setInverse (type::Mat4x4 &inv, const Coord &x0);  functions that depends on OutputType and must be specialized More...;  ; void setInverse (Rigid3Types::Coord &inv, const Coord &x0);  ; void setInverse (Mat4x4 &inv, const Coord &x0);  ; void setInverse (defaulttype::Rigid3Types::Coord &inv, const Coord &x0);  ; void setInverse (type::Mat4x4 &inv, const Coord &x0);  ; void mult (type::Mat4x4 &out, const type::Mat4x4 &inv, const Coord &x);  out = out * inv More...;  ; void mult (Rigid3Types::Coord &out, const Rigid3Types::Coord &inv, const Coord &x);  ; void mult (Mat4x4 &out, const Mat4x4 &inv, const Coord &x);  ; void mult (defaulttype::Rigid3Types::Coord &out, const defaulttype::Rigid3Types::Coord &inv, const Coord &x);  ; void mult (type::Mat4x4 &out, const type::Mat4x4 &inv, const Coord &x);  ;  Protected Member Functions inherited from sofa::core::DataEng",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html:15448,depend,depends,15448,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_matrix_engine.html,1,['depend'],['depends']
Integrability,"td::string &path, const BaseLink *link);  . Protected Member Functions;  EdgeSetTopologyModifier ();  ;  ~EdgeSetTopologyModifier () override;  ; virtual void addEdgesWarning (const sofa::Size nEdges);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< sofa::type::vector< EdgeID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesWarning (const sofa::Size nEdges, const sofa::type::vector< Edge > &edgesList, const sofa::type::vector< EdgeID > &edgesIndexList, const sofa::type::vector< core::topology::EdgeAncestorElem > &ancestorElems);  Sends a message to warn that some edges were added in this topology. More...;  ; virtual void addEdgesProcess (const sofa::type::vector< Edge > &edges);  Effectively add some edges to this topology. More...;  ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; virtual void removeEdgesProcess (const sofa::type::vector< EdgeID > &indices, const bool removeIsolatedItems=false);  Effectively Remove a subset of edges. Eventually remove isolated vertices. More...;  ; void addP",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:16067,message,message,16067,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"tected . forces computed from the constraints . ◆ J. template<class TDataTypes > . DeprecatedAndRemoved sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::J. protected . use m_constraintMatrix instead . ◆ l_linearSolver. template<class TDataTypes > . SingleLink<LinearSolverConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::l_linearSolver. Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. . ◆ l_ODESolver. template<class TDataTypes > . SingleLink<LinearSolverConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH | BaseLink::FLAG_STRONGLINK> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::l_ODESolver. Link towards the ODE solver used to recover the integration factors. . ◆ m_constraintJacobian. template<class TDataTypes > . linearalgebra::SparseMatrix<Real> sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::m_constraintJacobian. protected . ◆ mstate. template<class TDataTypes > . MechanicalState<DataTypes>* sofa::core::behavior::ConstraintCorrection< TDataTypes >::mstate. protected . ◆ wire_optimization. template<class TDataTypes > . Data< bool > sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< TDataTypes >::wire_optimization. constraints are reordered along a wire-like topology (from tip to base) . Constructor details. ◆ LinearSolverConstraintCorrection(). template<class DataTypes > . sofa::component::constraint::lagrangian::correction::LinearSolverConstraintCorrection< DataTypes >::LinearSolverConstraintCorrection ; (; sofa::core::behavior::MechanicalState< DataTypes > * ; mm = nullptr). protected . ◆ ~LinearSolverConstraintCor",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html:20254,integrat,integration,20254,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_linear_solver_constraint_correction.html,1,['integrat'],['integration']
Integrability,"ted Attributes |; Public Member Functions |; Signals |; List of all members . sofa::gui::qt::SofaSceneGraphWidget Class Reference . #include <SofaSceneGraphWidget.h>. Inheritance diagram for sofa::gui::qt::SofaSceneGraphWidget:. [legend]. Protected Attributes; bool m_isDirty;  ; bool m_isLocked;  . Public Member Functions;  SofaSceneGraphWidget (QWidget *parent);  ;  ~SofaSceneGraphWidget ();  ; void lock ();  ; void unLock ();  ; bool isDirty ();  ; bool isLocked ();  Returns true if the view updates for any scene graph change is disable. More...;  ; void setViewToDirty ();  . Signals; void dirtynessChanged (bool isDirty);  Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. More...;  ; void lockingChanged (bool isLocked);  Connect to this signal to be notified when the locking status changed. More...;  . Attribute details. ◆ m_isDirty. bool sofa::gui::qt::SofaSceneGraphWidget::m_isDirty. protected . Indicate that the view is de-synchronized with the real content of the simulation graph. This can happen if the graph has been freezed (i.e. not graphically updated) for performance reason while simulating complex scenes. . ◆ m_isLocked. bool sofa::gui::qt::SofaSceneGraphWidget::m_isLocked. protected . Constructor details. ◆ SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::SofaSceneGraphWidget ; (; QWidget * ; parent). inline . ◆ ~SofaSceneGraphWidget(). sofa::gui::qt::SofaSceneGraphWidget::~SofaSceneGraphWidget ; (; ). inline . Function details. ◆ dirtynessChanged. void sofa::gui::qt::SofaSceneGraphWidget::dirtynessChanged ; (; bool ; isDirty). signal . Connect to this signal to be notified when the dirtiness status of the QSofaListView changed. . ◆ isDirty(). bool sofa::gui::qt::SofaSceneGraphWidget::isDirty ; (; ). Returns true if the view is not synchronized anymore with the simulation graph. To re-syncronize the view you can:; call unfreeze() so any future change will be reflected; call update(), to update one t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html:1132,synchroniz,synchronized,1132,api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1qt_1_1_sofa_scene_graph_widget.html,1,['synchroniz'],['synchronized']
Integrability,"ted Member Functions inherited from sofa::core::behavior::PairStateAccessor< TDataTypes >;  PairStateAccessor (MechanicalState< TDataTypes > *mm1=nullptr, MechanicalState< TDataTypes > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html:18044,message,messages,18044,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_FLOAT, float >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< float > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html:12932,message,messages,12932,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_INT, int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology;  ;  Protected Attributes ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html:12902,message,messages,12902,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 1, GL_UNSIGNED_INT, unsigned int >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< unsigned int > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTopology * _topology",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html:12989,message,messages,12989,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 2, GL_FLOAT, sofa::type::Vec< 2, float > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 2, float > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html:13044,message,messages,13044,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float2_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 2, GL_INT, sofa::type::Vec< 2, int > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 2, int > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTop",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html:13016,message,messages,13016,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int2_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 2, GL_UNSIGNED_INT, sofa::type::Vec< 2, unsigned int > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 2, unsigned int > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html:13094,message,messages,13094,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int2_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 3, GL_FLOAT, sofa::type::Vec< 3, float > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 3, float > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html:13044,message,messages,13044,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float3_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 3, GL_INT, sofa::type::Vec< 3, int > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 3, int > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTop",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html:13016,message,messages,13016,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int3_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 3, GL_UNSIGNED_INT, sofa::type::Vec< 3, unsigned int > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 3, unsigned int > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html:13094,message,messages,13094,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int3_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 4, GL_FLOAT, sofa::type::Vec< 4, float > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 4, float > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseM",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html:13044,message,messages,13044,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_float4_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 4, GL_INT, sofa::type::Vec< 4, int > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 4, int > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::core::topology::BaseMeshTop",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html:13016,message,messages,13016,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_int4_attribute.html,1,['message'],['messages']
Integrability,"ted from sofa::gl::component::shader::OglShaderElement;  OglShaderElement ();  ;  ~OglShaderElement () override;  ; const std::string getId () const;  ; void setID (std::string str);  ; void setIndexShader (unsigned int index);  ; const std::string & getSEID () const override;  ;  Public Member Functions inherited from sofa::core::visual::ShaderElement;  SOFA_ABSTRACT_CLASS (ShaderElement, objectmodel::BaseObject);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::gl::component::shader::OglAttribute< 4, GL_UNSIGNED_INT, sofa::type::Vec< 4, unsigned int > >; GLuint _abo;  ; unsigned int _aboSize;  ; bool _needUpdate;  ; int _lastUpdateDataCounter;  ; GLuint _index;  ; unsigned int _usage;  ; core::topology::PointData< type::vector< sofa::type::Vec< 4, unsigned int > > > value;  internal Data More...;  ; Data< bool > handleDynamicTopology;  ; sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html:13094,message,messages,13094,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_u_int4_attribute.html,1,['message'],['messages']
Integrability,"ted in sofa::component::topology::container::dynamic::DynamicSparseGridTopologyModifier. ◆ addHexahedraWarning() [1/2]. void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedraWarning ; (; const size_t ; nHexahedra, . const sofa::type::vector< Hexahedron > & ; hexahedraList, . const sofa::type::vector< HexahedronID > & ; hexahedraIndexList . ). protected . Sends a message to warn that some hexahedra were added in this topology. ; See alsoaddHexahedraProcess . ◆ addHexahedraWarning() [2/2]. void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedraWarning ; (; const size_t ; nHexahedra, . const sofa::type::vector< Hexahedron > & ; hexahedraList, . const sofa::type::vector< HexahedronID > & ; hexahedraIndexList, . const sofa::type::vector< sofa::type::vector< HexahedronID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some hexahedra were added in this topology. ; See alsoaddHexahedraProcess . ◆ addHexahedronProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addHexahedronProcess ; (; Hexahedron ; e). Add a hexahedron. . ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). overrideprotectedvirtual . Add some points to this topology. ; See alsoaddPointsWarning ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ addQuadsProcess(). void sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier::addQuadsProcess ; (; const sofa::type::vector< Quad > & ; quads). overrideprotectedvirtual . Actually Add some quads to this topology. ; See alsoaddQuadsWarning ; Reimplemented from sofa::component::topology::container::dynamic::QuadSetTopologyModifier. ◆ init(). void sofa::component::topology::container::dynamic::He",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html:32516,message,message,32516,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_hexahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"tedvirtual . Effectively Add some quads to this topology. ; See alsoaddQuadsWarning ; Reimplemented in sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ addQuadsWarning() [1/2]. void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::addQuadsWarning ; (; const size_t ; nQuads, . const sofa::type::vector< Quad > & ; quadsList, . const sofa::type::vector< QuadID > & ; quadsIndexList . ). protected . Sends a message to warn that some quads were added in this topology. ; See alsoaddQuadsProcess . ◆ addQuadsWarning() [2/2]. void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::addQuadsWarning ; (; const size_t ; nQuads, . const sofa::type::vector< Quad > & ; quadsList, . const sofa::type::vector< QuadID > & ; quadsIndexList, . const sofa::type::vector< sofa::type::vector< QuadID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some quads were added in this topology. ; See alsoaddQuadsProcess . ◆ init(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ propagateTopologicalEngineChanges(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::propagateTopologicalEngineChanges ; (; ). overrideprotectedvirtual . function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. ; Reimplemented from sofa::component::topology::container::dynamic::EdgeSetTopologyModifier. ◆ removeEdgesProcess(). void sofa::component::topology::container::dynamic::QuadSetTopologyModifier::removeEdgesProcess ; (; const sofa::type::vector< QuadID > & ; indices, . const bool ; removeIsolatedItems = false . ). overrideprotect",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:29228,message,message,29228,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['message'],['message']
Integrability,"tes a linear interpolation (debug) More...;  ; Data< sofa::type::vector< sofa::type::vector< sofa::Index > > > d_interpolationIndices;  Indices of a linear interpolation. More...;  ; Data< sofa::type::vector< sofa::type::vector< Real > > > d_interpolationValues;  Values of a linear interpolation. More...;  ; SingleLink< MeshBarycentricMapperEngine< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Name and path of Input mesh Topology. More...;  ; core::objectmodel::lifecycle::RemovedData d_imputMeshName;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(MeshBarycentricMapperEngine, DataTypes), core::DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; virtual ~MeshBarycentricMapperEngine () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in preco",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html:2073,message,messages,2073,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_mesh_barycentric_mapper_engine.html,1,['message'],['messages']
Integrability,"tes; Data< bool > turnOn;  Activates or not the shader. More...;  ; Data< bool > passive;  ; sofa::core::objectmodel::DataFileNameVector vertFilename;  Files where vertex shader is defined. More...;  ; sofa::core::objectmodel::DataFileNameVector fragFilename;  Files where fragment shader is defined. More...;  ; Data< unsigned int > indexActiveShader;  Set current active shader. More...;  ; Data< bool > backfaceWriting;  it enables writing to gl_BackColor inside a GLSL vertex shader More...;  ; Data< bool > clampVertexColor;  clamp the vertex color between 0 and 1 More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  . Protected Attributes; std::vector< sofa::gl::GLSLShader * > shaderVector;  OpenGL shader. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html:1869,message,messages,1869,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_shader.html,1,['message'],['messages']
Integrability,"text::get ; (; sptr< T > & ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [9/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . Se",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:21896,wrap,wrapper,21896,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"that only the first derivative of the DOFs (state) appears in the equation. Higher derivatives are absent. More...;  ; Data< bool > d_trapezoidalScheme;  Boolean to use the trapezoidal scheme instead of the implicit Euler scheme and get second order accuracy in time (false by default) More...;  ; Data< bool > d_solveConstraint;  Apply ConstraintSolver (requires a ConstraintSolver in the same node as this solver, disabled by by default for now) More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MultiVecDeriv x;  the solution vector is stored for warm-start More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html:3338,message,messages,3338,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_euler_implicit_solver.html,1,['message'],['messages']
Integrability,"the msg_* macro to handle emitting case based on string. . ◆ getDefaultMessageHandlers(). std::vector<MessageHandler*> sofa::helper::logging::getDefaultMessageHandlers ; (; ). Threading issues... a mutex is serializing the access to the message API. Memory management: object are passed to the message info. some of them are duplicated other get a weak reference . ◆ getMainInstance(). MessageDispatcherImpl* sofa::helper::logging::getMainInstance ; (; ). ◆ notMuted() [1/4]. bool sofa::helper::logging::notMuted ; (; const ComponentInfo::SPtr & ; ). inline . ◆ notMuted() [2/4]. bool sofa::helper::logging::notMuted ; (; const sofa::core::objectmodel::Base * ; t). inline . ◆ notMuted() [3/4]. bool sofa::helper::logging::notMuted ; (; const std::string & ; ). inline . This function is used in the msg_* macro to handle string based on string. . ◆ notMuted() [4/4]. bool sofa::helper::logging::notMuted ; (; sofa::core::objectmodel::Base * ; t). inline . ◆ operator<<() [1/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo & ; nfo . ). ◆ operator<<() [2/3]. std::ostream& sofa::helper::logging::operator<< ; (; std::ostream & ; out, . const ComponentInfo * ; nfo . ). ◆ operator<<() [3/3]. SOFA_HELPER_API std::ostream & sofa::helper::logging::operator<< ; (; std::ostream & ; s, . const Message & ; m . ). ◆ simpleFormat(). void sofa::helper::logging::simpleFormat ; (; size_t ; jsize, . const std::string & ; text, . size_t ; line_length, . std::ostream & ; wrapped . ). simpleFormat a text containing our markdown 'tags' ; Parameters. jsizesize of the line prefix to fill with space (for left side alignment) ; textthe text to format ; line_lengthnumber of column to render to to ; wrappedthe destination stream where to write the formatted text. . ◆ toString(). SOFA_HELPER_API const std::string sofa::helper::logging::toString ; (; const Message::Type ; type). sofahelperlogging; Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html:5400,wrap,wrapped,5400,api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1helper_1_1logging.html,2,['wrap'],"['wrapped', 'wrappedthe']"
Integrability,"this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; virtual void addPointsProcess (const sofa::Size nPoints);  Extend the point container storage by nPoints. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; virtual void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Remove a subset of points. More...;  ; virtual void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true);  move input points indices to input new coords. Also propagate event More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:12772,message,message,12772,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  ;  Public Member Functions inherited from sofa::core::behavior::LinearSolverAccessor; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::objectmodel::BaseObject; template<class T > ; static bool canCreate (T *, BaseContext *, BaseObjectDescription *);  Pre-construction check method called by ObjectFactory. More...;  ; template<class T > ; static T::SPtr create (T *, BaseContext *context, BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ;  Static Public Member Functions i",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html:13206,message,messages,13206,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_static_solver.html,1,['message'],['messages']
Integrability,"thod, TMatrix), core::behavior::StateAccessor);  ;  ~BaseMatrixProjectionMethod () override;  ; virtual bool hasPairStates (const PairMechanicalStates &pairStates) const;  ; void setPairStates (const PairMechanicalStates &pairStates);  ;  Public Member Functions inherited from sofa::core::behavior::StateAccessor;  SOFA_ABSTRACT_CLASS (StateAccessor, objectmodel::BaseObject);  ; virtual const MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE >::Container & getMechanicalStates () const;  Return a list of mechanical states to which this component is associated. More...;  ; void computeBBox (const core::ExecParams *params, bool onlyVisible=false) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyC",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html:5443,depend,dependent,5443,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_constant_sparsity_projection_method.html,2,['depend'],['dependent']
Integrability,"ti-physics simuation. Public Member Functions |; List of all members . sofa::core::behavior::BaseLinearSolver Class Reference . #include <BaseLinearSolver.h>; Abstract base class (as type identifier) for linear system solvers without any API. ; More... Inheritance diagram for sofa::core::behavior::BaseLinearSolver:. [legend]; Detailed Description; Abstract base class (as type identifier) for linear system solvers without any API. . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseLinearSolver, objectmodel::BaseObject);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver.html:1217,depend,dependent,1217,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_linear_solver.html,1,['depend'],['dependent']
Integrability,"tiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; , . linearalgebra::BaseVector * ; , . const sofa::core::behavior::MultiMatrixAccessor * ;  . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ clearConstraints(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::clearConstraints. ◆ draw(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::draw ; (; const core::visual::VisualParams * ; ). overridevirtual . Render internal data of this object, for debugging purposes. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ fixAllDOFs(). template<class DataTypes > . bool sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::fixAllDOFs ; (; ); const. inline . ◆ init(). template<class DataTypes > . void sofa::component::constraint::projective::PointProjectiveConstraint< DataTypes >::init ; (; void ; ). overridevirtual . Initialization method called at graph creation a",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html:24151,interface,interface,24151,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_point_projective_constraint.html,1,['interface'],['interface']
Integrability,"timestep . Public Attributes; sofa::core::objectmodel::DataFileName d_filename;  ; Data< double > d_interval;  time duration between inputs More...;  ; Data< double > d_shift;  shift between times in the file and times when they will be read More...;  ; Data< bool > d_loop;  set to 'true' to re-read the file when reaching the end More...;  ; Data< double > d_scalePos;  scale the input mechanical object More...;  ; Data< type::Vec3 > d_rotation;  rotate the input mechanical object More...;  ; Data< type::Vec3 > d_translation;  translate the input mechanical object More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::BaseMechanicalState * mmodel;  ; std::ifstream * infile;  ; double nextTime;  ; double lastTime;  ; double loopTime;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:1526,message,messages,1526,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['message'],['messages']
Integrability,"tion & ; params . ). Create a sofa object in the provided node. The parameter ""params"" is for passing specific data argument to the created object including the object's type. . ◆ createObject() [4/4]. sofa::core::sptr<BaseObject> SOFA_SIMPLEAPI_API sofa::simpleapi::createObject ; (; NodeSPtr ; node, . const std::string & ; type, . const std::map< std::string, std::string > & ; params = std::map< std::string, std::string >{} . ). create a sofa object in the provided node of the given type. The parameter ""params"" is for passing specific data argument to the created object. . ◆ createRootNode() [1/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation * ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createRootNode() [2/2]. NodeSPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createRootNode ; (; Simulation::SPtr ; s, . const std::string & ; name, . const std::map< std::string, std::string > & ; params . ). ◆ createSimulation(). Simulation::SPtr SOFA_SIMPLEAPI_API sofa::simpleapi::createSimulation ; (; const std::string & ; type). ◆ dumpScene() [1/2]. void sofa::simpleapi::dumpScene ; (; Node::SPtr ; root). ◆ dumpScene() [2/2]. void SOFA_SIMPLEAPI_API sofa::simpleapi::dumpScene ; (; NodeSPtr ; root). ◆ importPlugin(). bool SOFA_SIMPLEAPI_API sofa::simpleapi::importPlugin ; (; const std::string & ; name). ◆ init(). SOFA_SIMPLEAPI_API void sofa::simpleapi::init ; (; ). Initialize the Sofa.SimpleApi library, as well as its dependencies. . ◆ isCleanedUp(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isCleanedUp ; (; ). Return true if and only if the Sofa.SimpleApi library has been cleaned up. . ◆ isInitialized(). SOFA_SIMPLEAPI_API bool sofa::simpleapi::isInitialized ; (; ). Return true if and only if the Sofa.SimpleApi library has been initialized. . ◆ str(). template<class T > . std::string sofa::simpleapi::str ; (; const T & ; t). sofasimpleapi; Generated on Mon Nov 11 2024 03:33:58 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html:6449,depend,dependencies,6449,api/master/sofa/html/namespacesofa_1_1simpleapi.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1simpleapi.html,1,['depend'],['dependencies']
Integrability,"tion and velocity through all mappings. More...;  ; void propagateXAndResetF (core::MultiVecCoordId x, core::MultiVecDerivId f);  Propagate the given position through all mappings and reset the current force delta. More...;  ; void projectPosition (core::MultiVecCoordId x, SReal time=0.0);  Apply projective constraints to the given position vector. More...;  ; void projectVelocity (core::MultiVecDerivId v, SReal time=0.0);  Apply projective constraints to the given velocity vector. More...;  ; void projectResponse (core::MultiVecDerivId dx, double **W=nullptr);  Apply projective constraints to the given vector. More...;  ; void projectPositionAndVelocity (core::MultiVecCoordId x, core::MultiVecDerivId v, double time=0.0);  Apply projective constraints to the given position and velocity vectors. More...;  ; void addMdx (core::MultiVecDerivId res, core::MultiVecDerivId dx, SReal factor=1.0);  res += factor M.dx More...;  ; void integrateVelocity (core::MultiVecDerivId res, core::ConstMultiVecCoordId x, core::ConstMultiVecDerivId v, SReal dt);  res = x + v.dt More...;  ; void accFromF (core::MultiVecDerivId a, core::ConstMultiVecDerivId f);  ; void computeEnergy (SReal &kineticEnergy, SReal &potentialEnergy);  Compute Energy. More...;  ; void computeForce (core::MultiVecDerivId result, bool clear=true, bool accumulate=true);  Compute the current force (given the latest propagated position and velocity) More...;  ; void computeDf (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated displacement) More...;  ; void computeDfV (core::MultiVecDerivId df, bool clear=true, bool accumulate=true);  Compute the current force delta (given the latest propagated velocity) More...;  ; void addMBKdx (core::MultiVecDerivId df, SReal m, SReal b, SReal k, bool clear=true, bool accumulate=true);  accumulate $ df += (m M + b B + k K) dx $ (given the latest propagated displacement) More...;  ; void addMBKv (core::Mu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html:2815,integrat,integrateVelocity,2815,api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1common_1_1_mechanical_operations.html,1,['integrat'],['integrateVelocity']
Integrability,"tion coordinates along the initial curve. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Edge > > d_curveEdges;  Indices of the edges of the curve to extrude. More...;  ; Data< VecCoord > d_extrudedVertices;  Coordinates of the extruded vertices. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Edge > > d_extrudedEdges;  List of all edges generated during the extrusion. More...;  ; Data< type::vector< sofa::core::topology::BaseMeshTopology::Quad > > d_extrudedQuads;  List of all quads generated during the extrusion. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(ExtrudeEdgesAndGenerateQuads, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ;  Pub",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html:2268,message,messages,2268,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_extrude_edges_and_generate_quads.html,1,['message'],['messages']
Integrability,"tion method called at graph creation and modification, during top-down traversal. More...;  ; void bwdInit () override;  Initialization method called at graph creation and modification, during bottom-up traversal. More...;  ; void reset () override;  Reset to initial state. More...;  ; void setTime (double time);  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ; void processReadState ();  ; void processReadState (double time);  ; bool readNext (double time, std::vector< std::string > &lines);  Read the next values in the file corresponding to the last timestep before the given time. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html:4132,depend,dependent,4132,api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1playback_1_1_read_state.html,1,['depend'],['dependent']
Integrability,"tion::algorithm::DirectSAP Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Member Functions |; Static Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::collision::detection::algorithm::DirectSAP Class Referencefinal . #include <DirectSAP.h>. Inheritance diagram for sofa::component::collision::detection::algorithm::DirectSAP:. [legend]. Public Member Functions;  SOFA_CLASS (DirectSAP, sofa::core::objectmodel::BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html:1142,depend,dependent,1142,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_direct_s_a_p.html,1,['depend'],['dependent']
Integrability,"tion; template<class DataTypes>; class sofa::gl::component::shader::OglVariable< DataTypes >; Defines an uniform variable for a OglShader. ; This is an abstract class which pass a value to an uniform variable defined into the shader. At the moment, following types are supported :; int, ivec2, ivec3, ivec4;; float, vec2, vec3, vec4;; int[], ivec2[], ivec3[], ivec4[];; float[], vec2[], vec3[], vec4[]; . Public Attributes; Data< DataTypes > value;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS2 (OglVariable, core::visual::VisualModel, OglShaderElement);  ; virtual void setValue (const DataTypes &v);  ; virtual void pushValue ()=0;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void doInitVisual (const core::visual::VisualParams *) override;  ; void reinit () override;  Update method called when varia",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html:1559,message,messages,1559,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1shader_1_1_ogl_variable.html,1,['message'],['messages']
Integrability,"tionForceField(). template<class DataTypes > . sofa::core::behavior::PairInteractionForceField< DataTypes >::PairInteractionForceField ; (; MechanicalState< DataTypes > * ; mm1 = nullptr, . MechanicalState< DataTypes > * ; mm2 = nullptr . ). explicitprotected . ◆ ~PairInteractionForceField(). template<class DataTypes > . sofa::core::behavior::PairInteractionForceField< DataTypes >::~PairInteractionForceField. overrideprotected . Function details. ◆ addDForce() [1/2]. template<class TDataTypes > . virtual void sofa::core::behavior::PairInteractionForceField< TDataTypes >::addDForce ; (; const MechanicalParams * ; mparams, . DataVecDeriv & ; df1, . DataVecDeriv & ; df2, . const DataVecDeriv & ; dx1, . const DataVecDeriv & ; dx2 . ). pure virtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method must be implemented by the component, and is usually called by the generic PairInteractionForceField::addDForce() method.; To support old components that implement the deprecated addForce method without scalar coefficients, it defaults to using a temporaty vector to compute $ K dx $ and then manually scaling all values by kFactor. ; Implemented in sofa::component::collision::response::contact::PenalityContactForceField< DataTypes >, sofa::component::solidmechanics::spring::VectorSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::RegularGridSpringForceField< DataTypes >, sofa::component::solidmechanics::spring::PolynomialSpringsForceField< DataTypes >, sofa::component::solidmechanics::spring::JointSpringForceField< DataTypes >, sofa::component::solidmechanics",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html:20890,integrat,integrated,20890,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_pair_interaction_force_field.html,1,['integrat'],['integrated']
Integrability,"tionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ; virtual bool needsDeepBoundingTree () const;  Returns true if the detection algorithm requires a deep bounding tree i.e. a depth that can be superior to 1. More...;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html:4083,depend,dependent,4083,api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1collision_1_1_broad_phase_detection.html,2,['depend'],['dependent']
Integrability,"tions |; List of all members . sofa::component::engine::select::MergeROIs Class Reference . #include <MergeROIs.h>. Inheritance diagram for sofa::component::engine::select::MergeROIs:. [legend]; Detailed Description; This class merges a list of ROIs (vector<Indices>) into a single Data (vector<svector<Indices>>) . Public Attributes; Data< unsigned int > d_nbROIs;  size of indices/value vector More...;  ; core::objectmodel::vectorData< type::vector< sofa::Index > > f_indices;  ; Data< type::vector< type::SVector< sofa::Index > > > d_outputIndices;  Vector of ROIs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MergeROIs, DataEngine);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Inherited, Inherit1);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Index, sofa::Index);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html:1232,message,messages,1232,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_merge_r_o_is.html,1,['message'],['messages']
Integrability,"tly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += K dx $; This method must be implemented by the component, and is usually called by the generic MixedInteractionForceField::addDForce() method. ; Implemented in sofa::component::mechanicalload::InteractionEllipsoidForceField< TDataTypes1, TDataTypes2 >. ◆ addDForce() [2/2]. template<class DataTypes1 , class DataTypes2 > . void sofa::core::behavior::MixedInteractionForceField< DataTypes1, DataTypes2 >::addDForce ; (; const MechanicalParams * ; mparams, . MultiVecDerivId ; dfId . ). overridevirtual . Compute the force derivative given a small displacement from the position and velocity used in the previous call to addForce().; The derivative should be directly derived from the computations done by addForce. Any forces neglected in addDForce will be integrated explicitly (i.e. using its value at the beginning of the timestep).; If the ForceField can be represented as a matrix, this method computes $ df += kFactor K dx + bFactor B dx $; This method retrieves the force and dx vector from the two MechanicalState and call the internal addDForce(VecDeriv1&,VecDeriv2&,const VecDeriv1&,const VecDeriv2&,SReal,SReal) method implemented by the component. ; Implements sofa::core::behavior::BaseForceField. ◆ addForce() [1/2]. template<class TDataTypes1 , class TDataTypes2 > . virtual void sofa::core::behavior::MixedInteractionForceField< TDataTypes1, TDataTypes2 >::addForce ; (; const MechanicalParams * ; mparams, . DataVecDeriv1 & ; f1, . DataVecDeriv2 & ; f2, . const DataVecCoord1 & ; x1, . const DataVecCoord2 & ; x2, . const DataVecDeriv1 & ; v1, . const DataVecDeriv2 & ; v2 . ). pure virtual . Given the current position and velocity states, update the current force vector by computing and adding the forces associated with this Fo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html:21378,integrat,integrated,21378,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mixed_interaction_force_field.html,1,['integrat'],['integrated']
Integrability,"to the children. More...;  ; void propagateEvent (const sofa::core::ExecParams *params, sofa::core::objectmodel::Event *event) override;  Propagate an event. More...;  ; virtual void updateVisualContext ();  Update the visual context values, based on parent and local ContextObjects. More...;  ; virtual void initialize ();  Must be called after each graph modification. Do not call it directly, apply an InitVisitor instead. More...;  ; virtual void setDefaultVisualContextValue ();  Called after initialization to set the default value of the visual context. More...;  ; virtual Node * findCommonParent (simulation::Node *node2)=0;  return the smallest common parent between this and node2 (returns nullptr if separated sub-graphes) More...;  ; void setSleeping (bool val) override;  override context setSleeping to add notification. More...;  ; virtual void addListener (MutationListener *obj);  ; virtual void removeListener (MutationListener *obj);  ; High-level interface; void parse (sofa::core::objectmodel::BaseObjectDescription *arg) override;  Parse the given description to assign values to this object's fields and potentially other parameters. More...;  ; void init (const sofa::core::ExecParams *params);  Initialize the components. More...;  ; bool isInitialized () const;  ; void reinit (const sofa::core::ExecParams *params);  Apply modifications to the components. More...;  ; void draw (sofa::core::visual::VisualParams *params);  Draw the objects (using visual visitors) More...;  ; Visitor handling; Parameters. precomputedOrderis not used by default but could allow optimization on certain Node specializations . Warningwhen calling with precomputedOrder=true, the function ""precomputeTraversalOrder"" must be called before executing the visitor and the user must ensure by himself that the simulation graph has done been modified since the last call to ""precomputeTraversalOrder"" . virtual void doExecuteVisitor (Visitor *action, bool precomputedOrder=false)=0;  Execute a recu",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html:7052,interface,interface,7052,api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_node.html,1,['interface'],['interface']
Integrability,"to these edges are removed form the mechanical object's state vectors.; Important : some structures might need to be warned BEFORE the edges are actually deleted, so always use method removeEdgesWarning before calling removeEdgesProcess. See alsoremoveEdgesWarning; Important : parameter indices is not const because it is actually sorted from the highest index to the lowest one.; Parameters. removeIsolatedItemsif true isolated vertices are also removed . Reimplemented in sofa::component::topology::container::dynamic::QuadSetTopologyModifier, sofa::component::topology::container::dynamic::TriangleSetTopologyModifier, sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier, and sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier. ◆ removeEdgesWarning(). void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::removeEdgesWarning ; (; sofa::type::vector< EdgeID > & ; edges). protectedvirtual . Sends a message to warn that some edges are about to be deleted. ; See alsoremoveEdgesProcess . ◆ removeIsolatedElements() [1/2]. bool sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::removeIsolatedElements ; (; ). virtual . If several connected components are detected, it will keep only the biggest one and remove all the rest. Warning: if two connected components have the same number of element and are the biggest. It will keep the first one. ; Returnsfalse if something goes wrong during the process. . ◆ removeIsolatedElements() [2/2]. bool sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::removeIsolatedElements ; (; sofa::Size ; scaleElem). virtual . If several connected components are detected, it will remove all connected component with less than a given number of elements. ; Parameters. scaleElemthreshold number size under which connected component will be removed. . Returnsfalse if something goes wrong during the process. . ◆ removeItems(). void sofa::component::topo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:35256,message,message,35256,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"tor &it1, const core::CollisionElementIterator &it2, core::collision::ElementIntersector *coarseIntersector, const FinestCollision &finest, std::queue< TestPair > &externalCells, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  ; static void finalCollisionPairs (const TestPair &pair, bool selfCollision, core::collision::ElementIntersector *intersector, sofa::core::collision::DetectionOutputVector *&outputs, const sofa::core::collision::Intersection *currentIntersection);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::collision::NarrowPhaseDetection; bool _zeroCollision;  ; std::map< Instance, DetectionOutputMap > m_storedOutputsMap;  ; DetectionOutputMap m_outputsMap;  ; size_t m_primitiveTestCount;  ;  Protected Attributes inherited from sofa::core::collision::Detection; Intersection * intersectionMethod;  Current intersection method. More...;  ; std::map< Instance, Intersection * > storedInte",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html:15994,message,messages,15994,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_b_v_h_narrow_phase.html,1,['message'],['messages']
Integrability,"tor containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; virtual void addPointsProcess (const sofa::Size nPoints);  Extend the point container storage by nPoints. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; virtual void removePointsProcess (const sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Remove a subset of points. More...;  ; virtual void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sof",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html:12537,message,message,12537,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_point_set_topology_modifier.html,1,['message'],['message']
Integrability,"tor. Data<bool> sofa::component::odesolver::forward::CentralDifferenceSolver::d_threadSafeVisitor. If true, do not use realloc and free visitors in fwdInteractionForceField. . ◆ f_rayleighMass. sofa::core::objectmodel::RenamedData<SReal> sofa::component::odesolver::forward::CentralDifferenceSolver::f_rayleighMass. Constructor details. ◆ CentralDifferenceSolver(). sofa::component::odesolver::forward::CentralDifferenceSolver::CentralDifferenceSolver ; (; ). protected . Function details. ◆ getIntegrationFactor(). SReal sofa::component::odesolver::forward::CentralDifferenceSolver::getIntegrationFactor ; (; int ; inputDerivative, . int ; outputDerivative . ); const. inlineoverridevirtual . Given an input derivative order (0 for position, 1 for velocity, 2 for acceleration), how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ getSolutionIntegrationFactor(). SReal sofa::component::odesolver::forward::CentralDifferenceSolver::getSolutionIntegrationFactor ; (; int ; outputDerivative); const. inlineoverridevirtual . Given a solution of the linear system, how much will it affect the output derivative of the given order. ; Reimplemented from sofa::core::behavior::OdeSolver. ◆ SOFA_CLASS(). sofa::component::odesolver::forward::CentralDifferenceSolver::SOFA_CLASS ; (; CentralDifferenceSolver ; , . sofa::core::behavior::OdeSolver ;  . ). ◆ solve(). void sofa::component::odesolver::forward::CentralDifferenceSolver::solve ; (; const core::ExecParams * ; , . SReal ; , . sofa::core::MultiVecCoordId ; , . sofa::core::MultiVecDerivId ;  . ). overridevirtual . Main computation method.; Specify and execute all computation for timestep integration, i.e. advancing the state from time t to t+dt, putting the resulting position and velocity in the provided vectors. ; Implements sofa::core::behavior::OdeSolver. sofacomponentodesolverforwardCentralDifferenceSolver; Generated on Mon Nov 11 2024 02:56:13 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html:16177,integrat,integration,16177,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_central_difference_solver.html,1,['integrat'],['integration']
Integrability,"tor end () const;  ; const_reverse_iterator rbegin () const;  ; const_reverse_iterator rend () const;  ; void clear ();  ; bool addBegin (DestPtr v);  ; bool add (DestPtr v);  ; bool add (DestPtr v, const std::string &path);  ; bool addPath (const std::string &path);  ; bool remove (DestPtr v);  ; bool removeAt (std::size_t index);  ; bool removePath (const std::string &path);  ; const BaseClass * getDestClass () const override;  ; const BaseClass * getOwnerClass () const override;  ; size_t getSize () const override;  ; sofa::core::objectmodel::Base * getOwnerBase () const override;  ; void setOwner (OwnerType *owner);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseLink;  BaseLink (LinkFlags flags);  ;  BaseLink (const BaseInitLink &init, LinkFlags flags);  ; virtual ~BaseLink ();  ; const std::string & getName () const;  ; void setName (const std::string &name);  ; const std::string & getHelp () const;  Get help message. More...;  ; void setHelp (const std::string &val);  Set help message. More...;  ; void setFlag (LinkFlagsEnum flag, bool b);  Set one of the flags. More...;  ; bool getFlag (LinkFlagsEnum flag) const;  Get one flag. More...;  ; bool isMultiLink () const;  ; bool isStrongLink () const;  ; bool isDoubleLink () const;  ; bool isDuplicate () const;  ; bool storePath () const;  ; void setPersistent (bool b);  Alias to match BaseData API. More...;  ; bool isPersistent () const;  ; bool isReadOnly () const;  Alias to match BaseData API. More...;  ; int getCounter () const;  ; void setLinkedBase (Base *link);  ; Base * getLinkedBase (std::size_t index=0) const;  ; void clear ();  ; std::string getLinkedPath (const std::size_t index=0) const;  ; std::string getPath (std::size_t index=0) const;  ; bool read (const std::string &str);  Read the command line. More...;  ; bool updateLinks ();  ; virtual void printValue (std::ostream &) const;  Print the value of the associated variable. More...;  ; virtual std::string getValueString () ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html:3019,message,message,3019,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_multi_link.html,5,['message'],['message']
Integrability,"tr, const std::string &path, const BaseLink *link);  . Additional Inherited Members;  Public Attributes inherited from sofa::component::io::mesh::basevtkreader::BaseVTKReader; BaseVTKDataIO * inputPoints;  ; BaseVTKDataIO * inputNormals;  ; BaseVTKDataIO * inputPolygons;  ; BaseVTKDataIO * inputCells;  ; BaseVTKDataIO * inputCellOffsets;  ; BaseVTKDataIO * inputCellTypes;  ; type::vector< BaseVTKDataIO * > inputPointDataVector;  ; type::vector< BaseVTKDataIO * > inputCellDataVector;  ; bool isLittleEndian;  ; int numberOfPoints;  ; int numberOfCells;  ; int numberOfLines;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of field",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html:10090,message,messages,10090,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_legacy_v_t_k_reader.html,1,['message'],['messages']
Integrability,"trahedral elements. . Classes; class  EdgeInformation;  data structure stored for each edge More...;  ; class  TetrahedronRestInformation;  data structure stored for each tetrahedron More...;  . Public Attributes; material::MaterialParameters< DataTypes > globalParameters;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::topology::BaseMeshTopology * m_topology;  ; VecCoord _initialPoints;  ; bool updateMatrix;  the initial positions of the points More...;  ; bool _meshSaved;  ; Data< std::string > f_materialName;  the name of the material to be used More...;  ; Data< SetParameterArray > f_parameterSet;  The global parameters specifying the material. More...;  ; Data< SetAnisotropyDirectionArray > f_anisotropySet;  The ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html:1863,message,messages,1863,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1hyperelastic_1_1_standard_tetrahedral_f_e_m_force_field.html,1,['message'],['messages']
Integrability,"traint forces when correcting the velocities. More...;  ; Data< Real > d_correctionPositionFactor;  Factor applied to the constraint forces when correcting the positions. More...;  ; Data< bool > d_useOdeSolverIntegrationFactors;  Use odeSolver integration factors instead of correctionVelocityFactor and correctionPositionFactor. More...;  ; SingleLink< UncoupledConstraintCorrection< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::behavior::OdeSolver * m_pOdeSolver;  ;  Protected Attributes inherited from sofa::core::behavior::ConstraintCorrection< TDataTypes >; MechanicalState< DataTypes > * mstate;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:2757,message,messages,2757,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['message'],['messages']
Integrability,"tream &in);  ; std::istream & readValue (std::istream &in);  ; SOFA_CORE_API std::istream & readValue (std::istream &in);  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseData; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseData; std::string help {""""};  Help message. More...;  ; std::string ownerClass {""""};  Owner class. More...;  ; std::string group {""""};  group More...;  ; std::string widget {""""};  widget More...;  ; int m_counter;  Number of changes since creation. More...;  ; bool m_isSet;  True if this Data is set, i.e. its value is different from the default value. More...;  ; DataFlags m_dataFlags;  Flags indicating the purpose and behaviour of this Data. More...;  ; Base * m_owner {nullptr};  Return the Base component owning this Data. More...;  ; std::string m_name;  Data name within the Base component. More...;  ; bool m_hasDefaultValue = false;  True if this Data has a default value. More...;  ; DataLink< BaseData > parentData;  Parent Data. More...;  ;  Static Public Member Functions inherited from sofa::core::objectmodel::Data< sofa::type::SVector< std::string > >; static constexpr bool isCopyOnWrite ();  ; static std::string templateName ();  ;  Static Public Member Functions inh",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html:10812,message,message,10812,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_data_file_name_vector.html,1,['message'],['message']
Integrability,"tressPerNode;  draw points showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerNodeColorMap;  draw elements showing vonMises stress interpolated in nodes More...;  ; Data< bool > d_showVonMisesStressPerElement;  draw triangles showing vonMises stress interpolated in elements More...;  ; Data< Real > d_showElementGapScale;  draw gap between elements (when showWireFrame is disabled) [0,1]: 0: no gap, 1: no element More...;  ; Data< bool > d_updateStiffness;  update structures (precomputed in init) using stiffness parameters in each iteration (set listening=1) More...;  ; type::vector< type::Vec< 6, Real > > elemDisplacements;  ; bool updateVonMisesStress;  ; Plasticity such as ""Interactive Virtual Materials"", Muller & Gross, GI 2004; Data< Real > d_plasticMaxThreshold;  ; Data< Real > d_plasticYieldThreshold;  Plastic Yield Threshold (2-norm of the strain) More...;  ; Data< Real > d_plasticCreep;  Plastic Creep Factor * dt [0,1]. Warning this factor depends on dt. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::BaseLinearElasticityFEMForceField< DataTypes >; Data< VecReal > d_poissonRatio;  FEM Poisson Ratio in Hooke's law [0,0.5[. More...;  ; Data< VecReal > d_youngModulus;  FEM Young's Modulus in Hooke's law. More...;  ; SingleLink< BaseLinearElasticityFEMForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events,",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html:5296,depend,depends,5296,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1elastic_1_1_tetrahedron_f_e_m_force_field.html,1,['depend'],['depends']
Integrability,"trix (linearalgebra::BaseMatrix *m) const =0;  Fill the matrix m with the full Compliance Matrix. More...;  ; virtual void getComplianceWithConstraintMerge (linearalgebra::BaseMatrix *, std::vector< int > &);  For multigrid approach => constraints are merged. More...;  ; Unbuilt constraint system during resolution; virtual bool hasConstraintNumber (int);  ; virtual void resetForUnbuiltResolution (SReal *, std::list< unsigned int > &);  ; virtual void addConstraintDisplacement (SReal *, int, int);  ; virtual void setConstraintDForce (SReal *, int, int, bool);  ; virtual void getBlockDiagonalCompliance (linearalgebra::BaseMatrix *, int, int);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction.html:3168,depend,dependent,3168,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_constraint_correction.html,1,['depend'],['dependent']
Integrability,trol; ; SOFA – Inverse Model for Soft-Robot Control. /lapgym; ; SOFA – LapGym. /mesh-skeletonization; ; SOFA – Mesh Skeletonization. /micro-parallel-robot; ; SOFA – Micro-Parallel Robot. /migribot-robot; ; SOFA – MiGriBot Robot. /model-order-reduction; ; SOFA – Model Order Reduction. /modern-gui-using-glfw; ; SOFA – Modern GUI using GLFW. /modular-fem-mechanics; ; SOFA – Modular FEM Mechanics. /multi-material-tool; ; SOFA – Multi-Material Tool. /multithreading; ; SOFA – Multithreading. /openigtlink; ; SOFA – OpenIGTLink. /pardiso-contact-solver; ; SOFA – Pardiso Contact Solver. /porous-visco-hyperelasticity; ; SOFA – Porous Visco-Hyperelasticity. /pyqt-widget-for-cameras; ; SOFA – PyQt Widget for Cameras. /python-template-scenes; ; SOFA – Python Template Scenes. /reinforcement-learning-framework; ; SOFA – Reinforcement Learning Framework. /reinforcement-learning-with-domain-randomization; ; SOFA – Reinforcement Learning with Domain Randomization. /rendering-hardware-interface-rhi; ; SOFA – Rendering Hardware Interface (RHI). /shape-matching; ; SOFA – Shape Matching. /shell-elastic-fem; ; SOFA – Shell Elastic FEM. /sofa-godot-basic-renderer; ; SOFA – SOFA & Godot – Basic Renderer. /sofa-unity3d-basic-renderer; ; SOFA – SOFA & Unity3D – Basic Renderer. /sofa-unity3d-full-integration; ; SOFA – SOFA & Unity3D – Full Integration. /sofa-unrealengine-5-basic-renderer; ; SOFA – SOFA & UnrealEngine 5 – Basic Renderer. /soft-rigid-hybrid-arms; ; SOFA – Soft-Rigid Hybrid Arms. /softrobots; ; SOFA – Models and Actuators for Soft-Robots. /tearing; ; SOFA – Tearing. /tetrahedral-mesh-tool; ; SOFA – Tetrahedral Mesh Tool. /timoshenko-beam-catheters; ; SOFA – Timoshenko Beam: catheters. /tutorial-probe-tissue-interaction; ; SOFA – Tutorial: probe-tissue interaction. /ultra-sound-rendering; . /embed; ; Ultra-Sound Rendering – SOFA. SOFA – Ultra-Sound Rendering. /visco-elasticity; ; SOFA – Visco-Elasticity. /x-ray-rendering; ; SOFA – X-Ray Rendering. /xxl-robot; ; SOFA – XXL Robot. S,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/index-wcopy.html:246328,interface,interface-rhi,246328,index-wcopy.html,https://www.sofa-framework.org,https://www.sofa-framework.org/index-wcopy.html,1,['interface'],['interface-rhi']
Integrability,"tsX0;  initial mesh DOFs position More...;  ; VecCoord meshPointsXf;  final mesh DOFs position More...;  ; SingleLink< PatchTestMovementProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< TDataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Static Public Attributes; static constexpr unsigned int CoordSize = Coord::total_size;  . Protected Attributes; std::unique_ptr< PatchTestMovementProjectiveConstraintInternalData< DataTypes > > data { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which s",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html:2957,message,messages,2957,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_patch_test_movement_projective_constraint.html,1,['message'],['messages']
Integrability,"tual SReal vMax (const ExecParams *params, ConstVecId a)=0;  Maximum of the absolute values of the entries of state vector a. This is used to compute the infinite-norm of the vector. More...;  ; virtual Size vSize (const ExecParams *params, ConstVecId v)=0;  Get vector size. More...;  ; virtual void vThreshold (VecId a, SReal threshold)=0;  Apply a threshold (lower bound) to all entries. More...;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:11696,depend,dependent,11696,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['depend'],['dependent']
Integrability,"tual bool buildSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool solveSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool applyCorrection (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void computeResidual (const core::ExecParams *);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html:3361,depend,dependent,3361,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_constraint_solver_impl.html,1,['depend'],['dependent']
Integrability,"type::SpatialVector< SReal > &, sofa::type::SpatialVector< SReal > &) override=0;  ; void setReferencePosition (sofa::type::Transform< SReal > &) override;  ;  Public Member Functions inherited from sofa::component::haptics::ForceFeedback;  SOFA_ABSTRACT_CLASS (ForceFeedback, core::behavior::BaseController);  ; virtual bool isEnabled ();  ; virtual void setLock (bool value);  Abstract method to lock or unlock the force feedback computation. To be implemented by child class if needed. More...;  ;  Public Member Functions inherited from sofa::core::behavior::BaseController;  SOFA_ABSTRACT_CLASS (BaseController, core::objectmodel::BaseObject);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html:2127,depend,dependent,2127,api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1haptics_1_1_mechanical_state_force_feedback.html,1,['depend'],['dependent']
Integrability,"type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; double m_nextStep;  ; double m_angleStep;  ; bool firstIterationforRotation;  ; bool firstIterationforTranslation;  ; bool firstIterationforNavigation;  ; sofa::type::vector< type::Vec3 > m_rotationPoints;  ;  Protected Attributes inherited from sofa::component::visual::BaseCamera; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDist",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html:5949,message,messages,5949,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_recorded_camera.html,1,['message'],['messages']
Integrability,"type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDistance;  ; double currentZNear;  ; double currentZFar;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html:3203,message,messages,3203,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_base_camera.html,1,['message'],['messages']
Integrability,"type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (InteractiveCamera, BaseCamera);  ;  Public Member Functions inherited from sofa::component::visual::BaseCamera;  SOFA_CLASS (BaseCamera, core::objectmodel::BaseObject);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Ray, sofa::type::Ray);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec2, sofa::type::Vec2);  ;  SOFA_ATTRIBUTE_REPLACED__TYPEMEMBER (Vec3, sofa::type::Vec3);  ;  SOFA_ATTRIBUTE_REPLACED__T",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html:3676,message,messages,3676,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_interactive_camera.html,1,['message'],['messages']
Integrability,"type::Vec3 > d_maxBBox;  maxBBox More...;  ; Data< unsigned int > d_widthViewport;  widthViewport More...;  ; Data< unsigned int > d_heightViewport;  heightViewport More...;  ; Data< sofa::helper::OptionsGroup > d_type;  Camera Type (0 = Perspective, 1 = Orthographic) More...;  ; Data< bool > d_activated;  Camera activated ? More...;  ; Data< bool > d_fixedLookAtPoint;  keep the lookAt point always fixed More...;  ; Data< type::vector< SReal > > d_modelViewMatrix;  ModelView Matrix. More...;  ; Data< type::vector< SReal > > d_projectionMatrix;  Projection Matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::component::visual::BaseCamera; type::Vec3 sceneCenter;  ; SReal sceneRadius;  ; bool b_setDefaultParameters;  ; type::Vec3 currentLookAt;  ; double currentDistance;  ; double currentZNear;  ; double currentZFar;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html:17177,message,messages,17177,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_camera.html,1,['message'],['messages']
Integrability,"type::vector< CollisionModelPair > & getCollisionModelPairs ();  Get the potentially colliding pairs detected. More...;  ; const sofa::type::vector< CollisionModelPair > & getCollisionModelPairs () const;  ;  Public Member Functions inherited from sofa::core::collision::Detection;  SOFA_CLASS (Detection, CollisionAlgorithm);  ; virtual void setIntersectionMethod (Intersection *v);  virtual because subclasses might do precomputations based on intersection algorithms More...;  ; Intersection * getIntersectionMethod () const;  ;  Public Member Functions inherited from sofa::core::collision::CollisionAlgorithm;  SOFA_ABSTRACT_CLASS (CollisionAlgorithm, objectmodel::BaseObject);  ; virtual void setInstance (Instance inst);  Allow to store multiple internal states by specifying a different collision pipeline 'instance'. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virt",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html:3634,depend,dependent,3634,api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1collision_1_1detection_1_1algorithm_1_1_incr_s_a_p.html,1,['depend'],['dependent']
Integrability,"typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Additional Inherited Members;  Public Attributes inherited from sofa::component::topology::container::dynamic::HexahedronSetTopologyModifier; Data< bool > removeIsolated;  Remove isolated DOFs. More...;  ;  Public Attributes inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier; Data< bool > d_propagateToDOF;  Propagate changes to Mechanical object DOFs. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Protected Attributes inherited from sofa::core::topology::TopologyModifier; TopologyContainer * m_topologyContainer;  Contains the actual topology data and give access to it (nature of these data heavily depends on the kind of topology). More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; Singl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:28165,message,messages,28165,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,1,['message'],['messages']
Integrability,"t m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (PauseAnimationOnEvent, PauseAnimation);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool isPaused () override;  ; void handleEvent (sofa::core::objectmodel::Event *event) override;  Handle an event. More...;  ;  Public Member Functions inherited from sofa::component::sceneutility::PauseAnimation;  SOFA_ABSTRACT_CLASS (PauseAnimation, core::objectmodel::BaseObject);  ; virtual void pause ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html:2439,depend,dependent,2439,api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1sceneutility_1_1_pause_animation_on_event.html,1,['depend'],['dependent']
Integrability,"uads which have a given pressure More...;  ; SingleLink< QuadPressureForceField< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; sofa::core::objectmodel::RenamedData< sofa::type::vector< QuadPressureInformation > > quadPressureMap;  ; sofa::core::topology::QuadSubsetData< sofa::type::vector< QuadPressureInformation > > d_quadPressureMap;  Map between quad indices and their pressure. More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the current topology /// Pointer to the current topology. More...;  ;  Protec",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html:2906,message,messages,2906,api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1mechanicalload_1_1_quad_pressure_force_field.html,1,['message'],['messages']
Integrability,"ual bool areMatricesMapped () const;  ; virtual void setForcesMapped (bool b);  ; virtual void setConstraintsMapped (bool b);  ; virtual void setMassesMapped (bool b);  ; virtual void setMatricesMapped (bool b);  ; virtual void setNonMechanical ();  ; virtual const type::vector< sofa::linearalgebra::BaseMatrix * > * getJs ();  ; virtual void updateK (const MechanicalParams *, ConstMultiVecDerivId);  ; virtual const linearalgebra::BaseMatrix * getK ();  ; virtual void buildGeometricStiffnessMatrix (sofa::core::GeometricStiffnessMatrix *matrices);  Assembles the geometric stiffness matrix of the mapping in the provided matrix object. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html:8395,depend,dependent,8395,api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mapping.html,3,['depend'],['dependent']
Integrability,"ual void getIndicesInSpace (sofa::type::vector< Index > &, Real, Real, Real, Real, Real, Real) const =0;  Get the indices of the particles located in the given bounding box. More...;  ; void copyToBuffer (SReal *dst, ConstVecId src, unsigned n) const override;  ; void copyFromBuffer (VecId dst, const SReal *src, unsigned n) override;  ; void addFromBuffer (VecId dst, const SReal *src, unsigned n) override;  ;  Public Member Functions inherited from sofa::core::behavior::BaseMechanicalState;  SOFA_ABSTRACT_CLASS (BaseMechanicalState, BaseState);  ;  SOFA_BASE_CAST_IMPLEMENTATION (BaseMechanicalState);  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; virtual SReal getPX (Index) const;  ; virtual SReal getPY (Index) const;  ; virtual SReal getPZ (Index) const;  ; virtual void beginIntegration (SReal);  Called at the beginning of each integration step. More...;  ; virtual void endIntegration (const ExecParams *params, SReal);  Called at the end of each integration step. More...;  ; virtual void resetForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Set F = 0. More...;  ; virtual void resetAcc (const ExecParams *params, VecDerivId a=VecDerivId::dx());  Set Acc =0. More...;  ; virtual void accumulateForce (const ExecParams *params, VecDerivId f=VecDerivId::force());  Add stored external forces to F. More...;  ; virtual void resetConstraint (const ConstraintParams *params)=0;  Reset the constraint matrix. More...;  ; virtual void getConstraintJacobian (const ConstraintParams *params, sofa::linearalgebra::BaseMatrix *J, unsigned int &off)=0;  build the jacobian of the constraint in a baseMatrix More...;  ; virtual void buildIdentityBlocksInJacobian (const sofa::type::vector< unsigned int > &list_n, core::MatrixDerivId &mID)=0;  fill the jacobian matrix (of the constraints) with identity blocks on the provided list of nodes(dofs) More...;  ; virtual std::list< ConstraintBlock > con",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html:3712,integrat,integration,3712,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_mechanical_state.html,1,['integrat'],['integration']
Integrability,"ublic Member Functions inherited from sofa::component::constraint::lagrangian::solver::ConstraintSolverImpl;  ConstraintSolverImpl ();  ;  ~ConstraintSolverImpl () override;  ; void removeConstraintCorrection (core::behavior::BaseConstraintCorrection *s) override;  ;  Public Member Functions inherited from sofa::core::behavior::ConstraintSolver;  SOFA_ABSTRACT_CLASS (ConstraintSolver, objectmodel::BaseObject);  ; virtual void solveConstraint (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null());  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html:8772,depend,dependent,8772,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1solver_1_1_generic_constraint_solver.html,1,['depend'],['dependent']
Integrability,"ude of r is less than ratio*epsilon More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const Vector2 &m2);  return the maximum difference between corresponding entries, or the infinity if the vectors have different sizes More...;  ; static Real vectorMaxDiff (const sofa::type::Vec< N, Real > &m1, const sofa::type::Vec< N, Real > &m2);  return the maximum difference between corresponding entries More...;  ;  Static Protected Member Functions inherited from sofa::testing::NumericTest< _ForceFieldType::DataTypes::Real >; static float norm (float a);  ; static double norm (double a);  ; static Real norm (T a);  . Attribute details. ◆ checkStiffness. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::checkStiffness. If false, stops the test after checking the force, without checking the stiffness. Default value is true. . ◆ debug. template<typename _ForceFieldType > . bool sofa::ForceField_test< _ForceFieldType >::debug. Print debug messages. Default is false. . ◆ deltaRange. template<typename _ForceFieldType > . std::pair<Real,Real> sofa::ForceField_test< _ForceFieldType >::deltaRange. Minimum/Maximum amplitudes of the random perturbation used to check the stiffness using finite differences. ; WarningShould be more than errorMax/stiffness. This is not checked automatically. . ◆ dof. template<typename _ForceFieldType > . DOF::SPtr sofa::ForceField_test< _ForceFieldType >::dof. ◆ errorFactorPotentialEnergy. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorFactorPotentialEnergy. The test for potential energy is successful if the (infinite norm of the) difference is less than errorFactorPotentialEnergy * errorMax *epsilon (default = 1) . ◆ errorMax. template<typename _ForceFieldType > . SReal sofa::ForceField_test< _ForceFieldType >::errorMax. tolerance in precision test. The actual value is this one times the epsilon of the Real numbers (typically float or double) . ◆ flag",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html:5910,message,messages,5910,api/master/sofa/html/structsofa_1_1_force_field__test.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1_force_field__test.html,1,['message'],['messages']
Integrability,"ue More...;  ; Data< Real > d_smoothScale;  denominator correction adding scale More...;  ; SingleLink< PolynomialRestShapeSpringsForceField< DataTypes >, sofa::core::behavior::MechanicalState< DataTypes >, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > d_restMState;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; VecIndex m_indices;  ; VecIndex m_ext_indices;  ; type::vector< JacobianVector > m_differential;  ; VecReal m_directionSpringLength;  ; VecReal m_strainValue;  ; VecCoord m_weightedCoordinateDifference;  ; VecReal m_coordinateSquaredNorm;  ; type::vector< type::vector< sofa::Size > > m_polynomialsMap;  ; bool m_useRestMState;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiL",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html:3101,message,messages,3101,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_polynomial_rest_shape_springs_force_field.html,1,['message'],['messages']
Integrability,"ulation::DefaultAnimationLoop:. [legend]; Detailed Description; Default Animation Loop to be created when no AnimationLoop found on simulation::node. . Public Attributes; Data< bool > d_parallelODESolving;  If true, solves all the ODEs in parallel. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; simulation::Node * m_node { nullptr };  ;  Protected Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SReal m_resetTime;  Stores starting time of the simulation. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html:1504,message,messages,1504,api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_default_animation_loop.html,1,['message'],['messages']
Integrability,"ully implicit, 0 is fully explicit) More...;  ; void setImplicitVelocity (SReal i);  ; const SReal & implicitVelocity () const;  ; void setImplicitPosition (SReal i);  ; const SReal & implicitPosition () const;  . Attribute details. ◆ m_bFactor. SReal sofa::core::MechanicalParams::m_bFactor. protected . Damping matrix contributions factor (for implicit schemes) . ◆ m_df. ConstMultiVecDerivId sofa::core::MechanicalParams::m_df. protected . Ids of df vector (for implicit schemes) . ◆ m_dt. SReal sofa::core::MechanicalParams::m_dt. protected . Time step. . ◆ m_dx. ConstMultiVecDerivId sofa::core::MechanicalParams::m_dx. protected . Ids of dx vector (for implicit schemes) . ◆ m_energy. bool sofa::core::MechanicalParams::m_energy. protected . Should the kinematic and potential energies be computed ? . ◆ m_f. ConstMultiVecDerivId sofa::core::MechanicalParams::m_f. protected . Ids of force vector. . ◆ m_implicit. bool sofa::core::MechanicalParams::m_implicit. protected . Is the time integration scheme implicit ? . ◆ m_implicitPosition. SReal sofa::core::MechanicalParams::m_implicitPosition. protected . ratio of future and current velocity used for position update (1 is fully implicit, 0 is fully explicit) . ◆ m_implicitVelocity. SReal sofa::core::MechanicalParams::m_implicitVelocity. protected . ratio of future and current force used for velocity update (1 is fully implicit, 0 is fully explicit) . ◆ m_kFactor. SReal sofa::core::MechanicalParams::m_kFactor. protected . Stiffness matrix contributions factor (for implicit schemes) . ◆ m_kFactorUsed. bool sofa::core::MechanicalParams::m_kFactorUsed. mutableprotected . Checks if the stiffness matrix contributions factor has been accessed. . ◆ m_mFactor. SReal sofa::core::MechanicalParams::m_mFactor. protected . Mass matrix contributions factor (for implicit schemes) . ◆ m_supportOnlySymmetricMatrix. bool sofa::core::MechanicalParams::m_supportOnlySymmetricMatrix. protected . True if a symmetric matrix is assumed in the left-han",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html:9099,integrat,integration,9099,api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_mechanical_params.html,1,['integrat'],['integration']
Integrability,"unctions inherited from sofa::core::behavior::PairStateAccessor< DataTypes1, DataTypes2 >;  PairStateAccessor (MechanicalState< DataTypes1 > *mm1=nullptr, MechanicalState< DataTypes2 > *mm2=nullptr);  ;  ~PairStateAccessor () override=default;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Static Public Member Functions inherited from sofa::core::behavior::PairInteractionForceField< DataTypes >; static bool canCreate (T *obj, objectmodel::BaseContext *context, objectmodel::BaseObjectDescription *arg);  ; static T::SPtr create (T *, core::objectmodel::BaseContext *context, core::objectmodel::BaseObjectDescription *arg);  Construction method called by ObjectFactory. More...;  ; static std::string shortName (const T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html:20350,message,messages,20350,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_frame_spring_force_field.html,1,['message'],['messages']
Integrability,"updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html:8375,depend,dependent,8375,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_grid_mesh_creator.html,10,['depend'],['dependent']
Integrability,"updatePoints ();  ; virtual void updateNormals ();  ; void setTranslation (SReal dx, SReal dy, SReal dz);  ; void setRotation (SReal rx, SReal ry, SReal rz);  ; void setScale (SReal sx, SReal sy, SReal sz);  ; void setTransformation (const sofa::type::Matrix4 &t);  ; virtual Vec3 getTranslation () const;  ; virtual Vec3 getRotation () const;  ; virtual Vec3 getScale () const;  ; virtual sofa::type::Matrix4 getTransformation () const;  ;  Public Member Functions inherited from sofa::core::loader::BaseLoader;  SOFA_ABSTRACT_CLASS (BaseLoader, objectmodel::BaseObject);  ; void setFilename (std::string f);  ; const std::string & getFilename ();  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handle",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html:3021,depend,dependent,3021,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1_off_sequence_loader.html,1,['depend'],['dependent']
Integrability,"upport topological changes (point removal or point addition) and list reordering. . Public Attributes; Data< sofa::type::vector< Coord > > d_position;  Position of the particles behind which a trail is rendered. More...;  ; Data< sofa::Size > d_nbSteps;  Number of time steps to use to render the trail. More...;  ; Data< sofa::type::RGBAColor > d_color;  Color of the trail. More...;  ; Data< float > d_thickness;  Thickness of the trail. More...;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; type::vector< std::vector< sofa::type::Vec3 > > m_trail;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:1714,message,messages,1714,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,1,['message'],['messages']
Integrability,"utes; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More...;  ;  Public Attributes inherited from sofa::core::State< DataTypes >; AccumulationVecId< DataTypes, V_DERIV, V_READ > accumulatedForces;  Stores all the VecDerivId corresponding to a force. They can then be accumulated. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (VisualState, SOFA_TEMPLATE(core::State, defaulttype::Vec3Types));  ;  VisualState ();  ; virtual void resize (Size vsize) override;  Resize all stored vector. More...;  ; virtual Size getSize () const override;  Current size of all stored vectors. More...;  ; virtual Data< VecCoord > * write (core::VecCoordId v) override;  ; virtual const Data< VecCoord > * read (core::ConstVecCoordId v) cons",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html:1436,message,messages,1436,api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1visual_1_1_visual_state.html,1,['message'],['messages']
Integrability,"uttonSetting Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::setting::MouseButtonSetting Class Referenceabstract . #include <MouseButtonSetting.h>. Inheritance diagram for sofa::component::setting::MouseButtonSetting:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< sofa::helper::OptionsGroup > button;  ; core::objectmodel::Data< sofa::helper::OptionsGroup > d_button;  Mouse button used. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ; virtual std::string getOperationType ()=0;  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html:1061,message,messages,1061,api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1setting_1_1_mouse_button_setting.html,1,['message'],['messages']
Integrability,"v, core::ConstMultiVecDerivId correction) override;  ; void applyPredictiveConstraintForce (const core::ConstraintParams *cparams, core::MultiVecDerivId f, const linearalgebra::BaseVector *lambda) override;  ; MechanicalState< DataTypes > * getMState () const;  ; void setMState (MechanicalState< DataTypes > *_mstate);  ;  Public Member Functions inherited from sofa::core::behavior::BaseConstraintCorrection;  SOFA_ABSTRACT_CLASS (BaseConstraintCorrection, objectmodel::BaseObject);  ; virtual bool isActive ();  ; virtual void rebuildSystem (SReal, SReal);  ; virtual void computeResidual (const core::ExecParams *, linearalgebra::BaseVector *);  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More..",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html:9092,depend,dependent,9092,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_uncoupled_constraint_correction.html,1,['depend'],['dependent']
Integrability,"veDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ; void renumberPointsProcess (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &, const bool renumberDOF=true) override;  Reorder this topology. More...;  ; void propagateTopologicalEngineChanges () override;  function to propagate topological change events by parsing the list of TopologyHandlers linked to this topology. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:18484,message,message,18484,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"ves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(Distances, DataTypes), core::DataEngine);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put your engine's impl. More...;  ; void computeDistanceMap (VecCoord beginElts=VecCoord(), const double &distMax=0);  Compute the distance map depending ion the distance type. More...;  ; void addElt (const Coord &elt, VecCoord beginElts=VecCoord(), const double &distMax=0);  Add a 'from' element and recompute the map of distances. More...;  ; void getDistances (VVD &distances, VecVecCoord &gradients, const VecCoord &goals);  Get the distance for a point set using the computed map. More...;  ; void draw (const core::visual::VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ;  Public Member Functions inherited from sofa::core::DataEngine;  SOFA_ABSTRACT_CLASS (DataEngine, core::objectmodel::BaseObject);  ; void update () final;  ; void addInput (sofa::core::objectmodel::BaseData *data);  Add a new input to this engine. More...;  ; void addOutput (objectmodel::BaseData *n);  Add a new output to this engine. More...;  ;  Public Member Functions inherited from sofa::core::DataTrackerDDGNode;  DataTrackerDDGNode ();  ; void addInputs (st",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html:5296,depend,depending,5296,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1analyze_1_1_distances.html,1,['depend'],['depending']
Integrability,"vior::BaseMass:. [legend]; Detailed Description; Component responsible for mass-related computations (gravity, acceleration). ; Mass can be defined either as a scalar, vector, or a full mass-matrix. It is responsible for converting forces to accelerations (for explicit integrators), or displacements to forces (for implicit integrators).; It is often also a ForceField, computing gravity-related forces. . Public Attributes; Data< bool > m_separateGravity;  ; Rayleigh Damping (mass contribution); Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_ABSTRACT_CLASS (BaseMass, StateAccessor);  ; virtual void initGnuplot (const std::string path)=0;  initialization to export kinetic and potential energy to gnuplot files format More...;  ; virtual void exportGnuplot (const MechanicalParams *mparams, SReal time)=0;  export kinetic and potential energy state at ""time"" to a gnuplot file More...;  ; virtual SReal getElementMass (sofa::Index index) const",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html:1458,message,messages,1458,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_base_mass.html,1,['message'],['messages']
Integrability,"virtual ~Base ();  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  ; void initData0 (BaseData *field, BaseData::BaseInitData &res, const char *name, const char *help, BaseData::DataFlags dataFlags);  Helper method used by initData() More...;  ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Friends; std::ostream SOFA_CORE_API & operator<< (std::ostream &out, const BaseContext &c);  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ m_nameHelper. ComponentNameHelper sofa::core::objectmodel::BaseContext::m_nameHelper. protected . Constructor details. ◆ BaseContext(). sofa::core::objectmodel::BaseContext::BaseContext ; (; ). protected . ◆ ~BaseContext(). sofa::core::objectmodel::BaseContext::~BaseContext ; (; ). overrideprotected . Function details. ◆ addObject(). virtual bool sofa::core::objectmodel::BaseContext::addObject ; (; sptr< Base",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:17224,message,messages,17224,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['message'],['messages']
Integrability,"w of the mechanical system to animate. They are implemented by executing Visitors in the subtree of the scene-graph below this solver. . typedef simulation::Node::Sequence< core::behavior::OdeSolver > Solvers;  ; typedef core::collision::Pipeline Pipeline;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  . Additional Inherited Members;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object be",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html:3675,integrat,integrate,3675,api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1simulation_1_1_collision_animation_loop.html,1,['integrat'],['integrate']
Integrability,"we draw triangles (this allows to see inside the volume). More...;  ; gl::component::rendering2d::OglColorMap * colorMap;  ; core::State< DataTypes > * state;  ; core::topology::BaseMeshTopology * m_topology;  ; SingleLink< DataDisplay, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ; Real oldMin;  ; Real oldMax;  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::visual::VisualState< defaulttype::Vec3Types >; core::topology::PointData< VecCoord > m_positions;  Vertices coordinates. More...;  ; core::topology::PointData< VecCoord > m_restPositions;  Vertices rest coordinates. More...;  ; core::topology::PointData< VecDeriv > m_vnormals;  Normals of the model. More...;  ; bool modified;  True if input vertices modified since last rendering. More",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html:2456,message,messages,2456,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering3d_1_1_data_display.html,1,['message'],['messages']
Integrability,"were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ addEdgesWarning() [3/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< core::topology::EdgeAncestorElem > & ; ancestorElems . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [4/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess . ◆ addEdgesWarning() [5/5]. void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addEdgesWarning ; (; const sofa::Size ; nEdges, . const sofa::type::vector< Edge > & ; edgesList, . const sofa::type::vector< EdgeID > & ; edgesIndexList, . const sofa::type::vector< sofa::type::vector< EdgeID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protectedvirtual . Sends a message to warn that some edges were added in this topology. ; See alsoaddEdgesProcess ; Reimplemented in sofa::component::topology::container::dynamic::TriangleSetTopologyModifier. ◆ addPointsProcess(). void sofa::component::topology::container::dynamic::EdgeSetTopologyModifier::addPointsProcess ; (; const sofa::Size ; nPoints). overrideprotectedvirtual . Add some points to this topology. ; See alsoaddPointsWarning ; Reimplemented from sofa::component::topology::container::dynamic::PointSetTopo",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html:28389,message,message,28389,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_edge_set_topology_modifier.html,1,['message'],['message']
Integrability,"wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const TagSet &tags, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const std::string &path) const;  Generic object access template wrapper, given a path from the current context. More...;  ; template<class T ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:5745,wrap,wrapper,5745,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,4,['wrap'],['wrapper']
Integrability,"write (MatrixDerivId v)=0;  ; virtual const Data< MatrixDeriv > * read (ConstMatrixDerivId v) const =0;  ; BaseData vectors access API based on VecId; objectmodel::BaseData * baseWrite (VecId v) override;  ; const objectmodel::BaseData * baseRead (ConstVecId v) const override;  ;  Public Member Functions inherited from sofa::core::BaseState;  SOFA_ABSTRACT_CLASS (BaseState, objectmodel::BaseObject);  ; virtual Size getSize () const =0;  Current size of all stored vectors. More...;  ; virtual void resize (Size vsize)=0;  Resize all stored vector. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html:3633,depend,dependent,3633,api/master/sofa/html/classsofa_1_1core_1_1_state.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1_state.html,1,['depend'],['dependent']
Integrability,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html:5429,depend,dependent,5429,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_line_axis.html,59,['depend'],['dependent']
Integrability,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; virtual void bwdInit ();  Initializat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html:6424,depend,dependent,6424,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,1,['depend'],['dependent']
Integrability,"x in order to compute the scene bounding box or cull hidden objects. More...;  ; virtual void applyTranslation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const SReal, const SReal, const SReal);  ; virtual void applyRotation (const type::Quat< SReal >);  ; virtual void applyScale (const SReal, const SReal, const SReal);  ; virtual void exportOBJ (std::string, std::ostream *, std::ostream *, sofa::Index &, sofa::Index &, sofa::Index &, int &);  Append this mesh to an OBJ format stream. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core::topology::Topology *t);  ; void parse (BaseObjectDescription *ar",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html:5688,depend,dependent,5688,api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1visual_1_1_trail_renderer.html,2,['depend'],['dependent']
Integrability,"x;  Maximum plane distance from the origin. More...;  ; SetIndex d_indices;  the set of vertex indices More...;  ; SingleLink< FixedPlaneProjectiveConstraint< DataTypes >, sofa::core::topology::BaseMeshTopology, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_topology;  Link to be set to the topology container in the component graph. More...;  ;  Public Attributes inherited from sofa::core::behavior::ProjectiveConstraintSet< DataTypes >; Data< Real > endTime;  The constraint stops acting after the given value. Use a negative value for infinite constraints. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; FixedPlaneProjectiveConstraintInternalData< DataTypes > data;  ; bool m_selectVerticesFromPlanes {false};  whether vertices should be selected from 2 parallel planes More...;  ;  Protected Attributes inherited from sofa::core::behavior::BaseProjectiveConstraintSet; Data< int > group;  ID of the group containing this constraint. This ID is used to specify which constraints are solved by which solver, by speci",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:1808,message,messages,1808,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['message'],['messages']
Integrability,"xecParams * ; params, . simulation::Node * ; context . ). protected . 2.calling GetConstraintViolationVisitor: each constraint provides its present violation for a given state (by default: free_position TODO: add VecId to make this method more generic) . ◆ init(). void sofa::component::animationloop::ConstraintAnimationLoop::init ; (; void ; ). overridevirtual . Initialization method called at graph creation and modification, during top-down traversal. ; Reimplemented from sofa::core::objectmodel::BaseObject. ◆ launchCollisionDetection(). void sofa::component::animationloop::ConstraintAnimationLoop::launchCollisionDetection ; (; const core::ExecParams * ; params). protected . ◆ setConstraintEquations(). void sofa::component::animationloop::ConstraintAnimationLoop::setConstraintEquations ; (; const core::ExecParams * ; params, . simulation::Node * ; context . ). protected . ◆ SOFA_CLASS(). sofa::component::animationloop::ConstraintAnimationLoop::SOFA_CLASS ; (; ConstraintAnimationLoop ; , . sofa::simulation::CollisionAnimationLoop ;  . ). ◆ step(). void sofa::component::animationloop::ConstraintAnimationLoop::step ; (; const core::ExecParams * ; params, . SReal ; dt . ). overridevirtual . Main computation method.; Specify and execute all computations for computing a timestep, such as one or more collisions and integrations stages. ; Implements sofa::core::behavior::BaseAnimationLoop. ◆ writeAndAccumulateAndCountConstraintDirections(). void sofa::component::animationloop::ConstraintAnimationLoop::writeAndAccumulateAndCountConstraintDirections ; (; const core::ExecParams * ; params, . simulation::Node * ; context, . unsigned int & ; numConstraints . ). protected . Specific procedures that are called for setting the constraints: ; 1.calling resetConstraint & setConstraint & accumulateConstraint visitors and resize the constraint problem that will be solved . sofacomponentanimationloopConstraintAnimationLoop; Generated on Mon Nov 11 2024 02:19:50 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html:25327,integrat,integrations,25327,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_constraint_animation_loop.html,1,['integrat'],['integrations']
Integrability,"xt::get ; (; sptr< T > & ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [10/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [11/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; sptr< T > & ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ get() [12/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const std::string & ; path . ); const. inline . Generic object access template wrapper, given a path from the current context. . ◆ get() [13/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const Tag & ; tag, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. . ◆ get() [14/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . const TagSet & ; tags, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, given a set of required tags, possibly searching up or down from the current context. . ◆ get() [15/15]. template<class T > . void sofa::core::objectmodel::BaseContext::get ; (; T *& ; ptr, . SearchDirection ; dir = SearchUp . ); const. inline . Generic object access template wrapper, possibly searching up or down from the current context. . ◆ getAnimate(). bool sofa::core::objectmodel::BaseContext::getAnimate ; (; ); const. virtual",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:22146,wrap,wrapper,22146,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,1,['wrap'],['wrapper']
Integrability,"y. If you have experience/feedback with LTO please join the discussion in https://github.com/sofa-framework/sofa/discussions/1822 Defines the baseline functions for a type all the types in-herit from Base. These are non-opaque function that needs to be specialized in order to implement an opaque version for a given type. . ◆ cleanup(). SOFA_CORE_API void sofa::core::cleanup ; (; ). Clean up the resources used by the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ findTemplatedCreator(). void sofa::core::findTemplatedCreator ; (; objectmodel::BaseContext * ; context, . const ObjectFactory::Creator::SPtr & ; creator, . const std::string & ; templateName, . std::map< std::string, std::vector< std::string >> & ; creatorsErrors, . std::vector< std::pair< std::string, ObjectFactory::Creator::SPtr > > & ; creators, . objectmodel::BaseObjectDescription * ; arg . ). ◆ init(). SOFA_CORE_API void sofa::core::init ; (; ). Initialize the SofaCore library, as well as its dependencies: SofaDefaultType, SofaHelper. . ◆ isCleanedUp(). SOFA_CORE_API bool sofa::core::isCleanedUp ; (; ). Return true if and only if the SofaCore library has been cleaned up. . ◆ isInitialized(). SOFA_CORE_API bool sofa::core::isInitialized ; (; ). Return true if and only if the SofaCore library has been initialized. . ◆ SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND() [1/26]. sofa::core::SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND ; (; sofa::core::BaseMapping ; ). ◆ SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND() [2/26]. sofa::core::SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND ; (; sofa::core::BaseState ; ). ◆ SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND() [3/26]. sofa::core::SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND ; (; sofa::core::behavior::BaseAnimationLoop ; ). ◆ SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND() [4/26]. sofa::core::SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_BASE_AND ; (; sofa::core::behavior::BaseConstraintSet ; ). ◆ SOFA_DECLARE_OPAQUE_FUNCTION_BETWEEN_",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html:20612,depend,dependencies,20612,api/master/sofa/html/namespacesofa_1_1core.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1core.html,1,['depend'],['dependencies']
Integrability,"y; FileRepository()sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const char *relativePath)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const std::vector< std::string > &paths)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const char *relativePath, const fileKeysMap &iniFilesAndKeys)sofa::helper::system::FileRepositoryinline; FileRepository(const char *envVar, const std::vector< std::string > &paths, const fileKeysMap &iniFilesAndKeys)sofa::helper::system::FileRepository; findFile(std::string &filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr)sofa::helper::system::FileRepository; findFileFromFile(std::string &filename, const std::string &basefile, std::ostream *errlog=&std::cerr)sofa::helper::system::FileRepository; findFileIn(std::string &filename, const std::string &path)sofa::helper::system::FileRepositoryprotectedstatic; getDirectAccessProtocolPrefix() constsofa::helper::system::FileRepositoryinline; getFile(std::string filename, const std::string &basedir="""", std::ostream *errlog=&std::cerr)sofa::helper::system::FileRepositoryinline; getFirstPath()sofa::helper::system::FileRepository; getPaths() constsofa::helper::system::FileRepositoryinline; getPathsJoined()sofa::helper::system::FileRepository; getTempPath() constsofa::helper::system::FileRepository; operator<<(std::ostream &_flux, FileRepository _fr)sofa::helper::system::FileRepositoryfriend; print()sofa::helper::system::FileRepository; relativeToPath(std::string path, std::string refPath)sofa::helper::system::FileRepositorystatic; removePath(const std::string &path)sofa::helper::system::FileRepository; setDirectAccessProtocolPrefix(const std::string &protocolPrefix)sofa::helper::system::FileRepositoryinline; vpathsofa::helper::system::FileRepositoryprotected; ~FileRepository()sofa::helper::system::FileRepository.",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository-members.html:2628,protocol,protocolPrefix,2628,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository-members.html,1,['protocol'],['protocolPrefix']
Integrability,"y;  Link to be set to the topology container in the component graph. More...;  ; sofa::core::objectmodel::RenamedData< type::vector< EdgeInformation > > edgeInfo;  ; sofa::core::topology::EdgeData< type::vector< EdgeInformation > > d_edgeInfo;  Internal edge data. More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; SReal m_potentialEnergy;  potential energy accumulate in method More...;  ; sofa::core::topology::BaseMeshTopology * m_topology;  Pointer to the linked topology used to create this spring forcefield. More...;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inheri",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html:2677,message,messages,2677,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_triangular_bending_springs.html,1,['message'],['messages']
Integrability,"yCoefs . ). virtual . add a set of tetrahedra ; Parameters. quadsan array of vertex indices describing the tetrahedra to be created ; ancestorsfor each tetrahedron to be created provides an array of tetrahedron ancestors (optional) ; baryCoefsfor each tetrahedron provides the barycentric coordinates (sum to 1) associated with each ancestor (optional) . ◆ addTetrahedraProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedraProcess ; (; const sofa::type::vector< Tetrahedron > & ; tetrahedra). protectedvirtual . Actually Add some tetrahedra to this topology. ; See alsoaddTetrahedraWarning . ◆ addTetrahedraWarning() [1/2]. void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedraWarning ; (; const size_t ; nTetrahedra, . const sofa::type::vector< Tetrahedron > & ; tetrahedraList, . const sofa::type::vector< TetrahedronID > & ; tetrahedraIndexList . ). protected . Sends a message to warn that some tetrahedra were added in this topology. ; See alsoaddTetrahedraProcess . ◆ addTetrahedraWarning() [2/2]. void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedraWarning ; (; const size_t ; nTetrahedra, . const sofa::type::vector< Tetrahedron > & ; tetrahedraList, . const sofa::type::vector< TetrahedronID > & ; tetrahedraIndexList, . const sofa::type::vector< sofa::type::vector< TetrahedronID > > & ; ancestors, . const sofa::type::vector< sofa::type::vector< SReal > > & ; baryCoefs . ). protected . Sends a message to warn that some tetrahedra were added in this topology. ; See alsoaddTetrahedraProcess . ◆ addTetrahedronProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTetrahedronProcess ; (; Tetrahedron ; e). Add a tetrahedron. . ◆ addTrianglesProcess(). void sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::addTrianglesProcess ; (; const sofa::type::vector< Triangle > & ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html:34751,message,message,34751,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_tetrahedron_set_topology_modifier.html,1,['message'],['message']
Integrability,"yWorldGravity (bool val);  Display flags: Gravity. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseContext;  SOFA_CLASS (BaseContext, Base);  ; virtual BaseContext * getRootContext () const;  Get the root context of the graph. More...;  ; virtual bool hasAncestor (const BaseContext *) const;  ; ComponentNameHelper & getNameHelper ();  Returns utilitary object to uniquely name objects in the context. More...;  ; virtual core::BaseState * getState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual behavior::BaseMechanicalState * getMechanicalState () const;  Mechanical Degrees-of-Freedom. More...;  ; virtual core::topology::Topology * getTopology () const;  Topology. More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopology (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::topology::BaseMeshTopology * getMeshTopologyLink (SearchDirection dir=SearchUp) const;  Mesh Topology (unified interface for both static and dynamic topologies) More...;  ; virtual core::behavior::BaseMass * getMass () const;  Mass. More...;  ; virtual core::visual::Shader * getShader () const;  Global Shader. More...;  ; virtual void * getObject (const ClassInfo &class_info, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; virtual void * getObject (const ClassInfo &class_info, const std::string &path) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, SearchDirection dir=SearchUp) const;  ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ;",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html:4341,interface,interface,4341,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_context.html,1,['interface'],['interface']
Integrability,"ype::Vec< 2, sofa::SignedIndex > m_cachedPositionInGlobalMatrix;  ; SReal m_cachedFactor {};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(BaseAssemblingMatrixAccumulator, c), sofa::core::get_base_object_strong_type< c >);  ; virtual void setMatrixSize (const sofa::type::Vec2u &);  ; sofa::type::Vec2u getMatrixSize () const;  ; void setPositionInGlobalMatrix (const sofa::type::Vec2u &);  ; void setFactor (SReal factor);  ; void setGlobalMatrix (sofa::linearalgebra::BaseMatrix *globalMatrix);  ; type::Vec< 2, unsigned > getPositionInGlobalMatrix () const;  ; void addContributionsToMatrix (sofa::linearalgebra::BaseMatrix *, SReal, const sofa::type::Vec2u &);  . Protected Member Functions;  BaseAssemblingMatrixAccumulator ();  . Attribute details. ◆ d_factor. template<core::matrixaccumulator::Contribution c> . Data< SReal > sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >::d_factor. protected . Factor applied to matrix entries. This factor depends on the ODE solver and the associated component. . ◆ d_matrixSize. template<core::matrixaccumulator::Contribution c> . Data< sofa::type::Vec2u > sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >::d_matrixSize. protected . Size of the local matrix. . ◆ d_positionInGlobalMatrix. template<core::matrixaccumulator::Contribution c> . Data< sofa::type::Vec2u > sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >::d_positionInGlobalMatrix. protected . Position of this local matrix in the global matrix. . ◆ m_cachedFactor. template<core::matrixaccumulator::Contribution c> . SReal sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >::m_cachedFactor {}. protected . ◆ m_cachedPositionInGlobalMatrix. template<core::matrixaccumulator::Contribution c> . sofa::type::Vec<2, sofa::SignedIndex> sofa::component::linearsystem::BaseAssemblingMatrixAccumulator< c >::m_cachedPositionInGlobalMatrix. protected . ◆ m_globalMatrix. template<core::matrixaccumulator::Contribution c",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_assembling_matrix_accumulator.html:1937,depend,depends,1937,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_assembling_matrix_accumulator.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_base_assembling_matrix_accumulator.html,1,['depend'],['depends']
Integrability,"ystem::MatrixLinearSystem< TMatrix, TVector >::assemblePrecomputedMappedMassMatrix ; (; const core::MechanicalParams * ; mparams, . linearalgebra::BaseMatrix * ; destination . ). protected . Assemble the precomputed mapped mass matrices . ◆ assembleSystem(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::assembleSystem ; (; const core::MechanicalParams * ; mparams). overrideprotectedvirtual . Reimplemented from sofa::core::behavior::BaseMatrixLinearSystem. ◆ associateLocalMatrixTo(). template<class TMatrix , class TVector > . template<core::matrixaccumulator::Contribution c> . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::associateLocalMatrixTo ; (; sofa::core::matrixaccumulator::get_component_type< c > * ; component, . const core::MechanicalParams * ; mparams . ). protected . Associate a local matrix to the provided component. The type of the local matrix depends on the situation of the component: type of the component, mapped vs non-mapped . ◆ associateLocalMatrixToComponents(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::associateLocalMatrixToComponents ; (; const core::MechanicalParams * ; mparams). overrideprotectedvirtual . Create the matrix accumulators and associate them to all components that have a contribution ; Reimplemented from sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >. ◆ buildGroupsOfComponentAssociatedToMechanicalStates(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >::buildGroupsOfComponentAssociatedToMechanicalStates ; (; std::map< PairMechanicalStates, GroupOfComponentsAssociatedToAPairOfMechanicalStates > & ; groups). protected . ◆ cleanLocalMatrices(). template<class TMatrix , class TVector > . void sofa::component::linearsystem::MatrixLinearSystem< TMatrix, TVector >:",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html:32261,depend,depends,32261,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_matrix_linear_system.html,1,['depend'],['depends']
Integrability,"ze);  ;  SOFA_ATTRIBUTE_DISABLED__NAMING (""v24.06"", ""v24.06"", showFactorSize, d_showFactorSize);  ;  Public Member Functions inherited from sofa::component::setting::MouseButtonSetting;  SOFA_CLASS (MouseButtonSetting, core::objectmodel::ConfigurationSetting);  ;  Public Member Functions inherited from sofa::core::objectmodel::ConfigurationSetting;  SOFA_CLASS (ConfigurationSetting, BaseObject);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html:3406,depend,dependent,3406,api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gui_1_1component_1_1_attach_body_button_setting.html,1,['depend'],['dependent']
Integrability,"{n+1} * dt; The semi-implicit Euler method is more robust than the standard Euler method. . Public Attributes; Data< bool > d_symplectic;  If true (default), the velocities are updated before the positions and the method is symplectic, more robust. If false, the positions are updated before the velocities (standard Euler, less robust). More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; SingleLink< EulerExplicitSolver, core::behavior::LinearSolver, BaseLink::FLAG_STRONGLINK > l_linearSolver;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (EulerExplicitSolver, sofa::core::behavior::OdeSolver);  ; void solve (const core::ExecParams *params, SReal dt, sofa::core::MultiVecCoordId xResult, sofa::core::MultiVecDerivId vResult) override;  ; SReal getIntegrationFactor (int inputDerivative, int outputDerivative) const override;  ; SReal getSolutionIntegrationFactor (int outputDerivative) const override;  ; void init () override;  Initi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html:2704,message,messages,2704,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1forward_1_1_euler_explicit_solver.html,1,['message'],['messages']
Integrability,"} . Public Attributes; Data< int > d_nbVirtualFinerLevels;  use virtual finer levels, in order to compte non-uniform stiffness More...;  ; Data< bool > d_useMass;  Using this ForceField like a Mass? (rather than using a separated Mass) More...;  ; Data< Real > d_totalMass;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  ;  Public Attributes inherited from sofa::core::behavior::BaseMass; Data< bool > m_separateGravity;  ; Data< SReal > rayleighMass;  Rayleigh Damping mass matrix coefficient. More...;  ;  Public Attributes inherited from sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField< DataTypes >; int method;  ; sofa::core::objectmodel::RenamedData< std::string > f_method;  ; sofa::core::objectmodel::RenamedData< Real > f_poi",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html:2362,message,messages,2362,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1fem_1_1nonuniform_1_1_non_uniform_hexahedron_f_e_m_force_field_and_mass.html,1,['message'],['messages']
Integrability," . ). overridevirtual . Project the global Mechanical Matrix to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >::applyConstraint ; (; const core::MechanicalParams * ; mparams, . linearalgebra::BaseVector * ; vector, . const sofa::core::behavior::MultiMatrixAccessor * ; matrix . ). overridevirtual . Project the global Mechanical Vector to constrained space using offset parameter. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ applyConstraint() [3/3]. template<class DataTypes > . void sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >::applyConstraint ; (; sofa::core::behavior::ZeroDirichletCondition * ; zeroDirichletCondition). overridevirtual . Project the global matrix to constrained space by using the ZeroDirichletCondition interface It allows to define what rows and columns to discard for the projection. ; Reimplemented from sofa::core::behavior::BaseProjectiveConstraintSet. ◆ calcRestRotations() [1/3]. SOFA_COMPONENT_CONSTRAINT_PROJECTIVE_API void sofa::component::constraint::projective::AttachProjectiveConstraint< Rigid3Types >::calcRestRotations ; (; ). protected . ◆ calcRestRotations() [2/3]. template<class DataTypes > . void sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >::calcRestRotations. protected . ◆ calcRestRotations() [3/3]. void sofa::component::constraint::projective::AttachProjectiveConstraint< sofa::defaulttype::Rigid3Types >::calcRestRotations ; (; ). protected . ◆ DerivConstrainedSize(). template<class DataTypes > . unsigned int sofa::component::constraint::projective::AttachProjectiveConstraint< DataTypes >::DerivConstrainedSize ; (; bool ; freeRotations). inlinestaticprotected . ◆ doProjectPosition() [1/3]. template<class DataTypes > . void sofa::comp",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html:30341,interface,interface,30341,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_attach_projective_constraint.html,1,['interface'],['interface']
Integrability," . Protected Member Functions;  MultiStepAnimationLoop ();  ;  ~MultiStepAnimationLoop () override;  ;  Protected Member Functions inherited from sofa::simulation::CollisionAnimationLoop;  CollisionAnimationLoop ();  ;  ~CollisionAnimationLoop () override;  ; virtual void preCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called before the actual collision computation. More...;  ; virtual void internalCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function performing the actual collision computation. More...;  ; virtual void postCollisionComputation (const core::ExecParams *params=core::execparams::defaultInstance());  Function meant to be called after the actual collision computation. More...;  ; virtual void computeCollision (const core::ExecParams *params=core::execparams::defaultInstance());  Activate collision pipeline. More...;  ; virtual void integrate (const core::ExecParams *params, SReal dt);  Activate OdeSolvers. More...;  ; const Solvers & getSolverSequence ();  ;  Protected Member Functions inherited from sofa::core::behavior::BaseAnimationLoop;  BaseAnimationLoop ();  ;  ~BaseAnimationLoop () override;  ; void storeResetState () override;  Save the initial state for later uses in reset() More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::BaseObject;  BaseObject ();  ;  ~BaseObject () override;  ; virtual void doUpdateInternal ();  Implementation of the internal update. More...;  ; void changeContextLink (BaseContext *before, BaseContext *&after);  ; void changeSlavesLink (BaseObject::SPtr ptr, std::size_t, bool add);  This method insures that slaves objects have master and context links set correctly. More...;  ; void trackInternalData (const BaseData &data);  Method called to add the Data to the DataTracker (listing the Data to track) More...;  ; void cleanTracker ();  ; bool hasDataChanged (const BaseData &data);  ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:11878,integrat,integrate,11878,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,1,['integrat'],['integrate']
Integrability," ; Data< SeqTetrahedra > d_tetrahedron;  output mesh tetrahedra More...;  ; Data< SeqQuads > d_quad;  output mesh quads More...;  ; Data< SeqTriangles > d_triangle;  output mesh triangles More...;  ; Data< SeqHexahedra > d_hexahedron;  output mesh hexahedra More...;  ; Data< Vec3 > d_minCorner;  the 3 coordinates of the minimum corner More...;  ; Data< Vec3 > d_maxCorner;  the 3 coordinates of the maximum corner More...;  ; Data< Vec3Int > d_resolution;  the number of cubes in the x,y,z directions. If resolution in the z direction is 0 then a 2D grid is generated More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(GenerateGrid, DataTypes), core::DataEngine);  ;  GenerateGrid ();  ;  ~GenerateGrid () override;  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void reinit () override;  Update method called when variables used in precomputation are modified. More...;  ; void doUpdate () override;  Where you put ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid.html:1799,message,messages,1799,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_generate_grid.html,1,['message'],['messages']
Integrability," ; sofa::core::objectmodel::RenamedData< SReal > f_rayleighMass;  ; sofa::core::objectmodel::RenamedData< bool > f_saveEnergyInFile;  ; sofa::core::objectmodel::RenamedData< bool > f_explicit;  ; sofa::core::objectmodel::RenamedData< std::string > f_fileName;  ; sofa::core::objectmodel::RenamedData< bool > f_computeHamiltonian;  ; sofa::core::objectmodel::RenamedData< SReal > f_hamiltonianEnergy;  ; sofa::core::objectmodel::RenamedData< bool > f_useIncrementalPotentialEnergy;  ; Data< SReal > d_newtonError;  Error tolerance for Newton iterations. More...;  ; Data< unsigned int > d_newtonSteps;  Maximum number of Newton steps. More...;  ; Data< SReal > d_rayleighStiffness;  Rayleigh damping coefficient related to stiffness, > 0. More...;  ; Data< SReal > d_rayleighMass;  Rayleigh damping coefficient related to mass, > 0. More...;  ; Data< bool > d_saveEnergyInFile;  If kinetic and potential energies should be dumped in a CSV file at each iteration. More...;  ; Data< bool > d_explicit;  Use explicit integration scheme. More...;  ; Data< std::string > d_fileName;  File name where kinetic and potential energies are saved in a CSV file. More...;  ; Data< bool > d_computeHamiltonian;  Compute hamiltonian. More...;  ; Data< SReal > d_hamiltonianEnergy;  hamiltonian energy More...;  ; Data< bool > d_useIncrementalPotentialEnergy;  use real potential energy, if false use approximate potential energy More...;  ; Data< bool > d_threadSafeVisitor;  If true, do not use realloc and free visitors in fwdInteractionForceField. More...;  ; sofa::core::objectmodel::lifecycle::RemovedData f_verbose {this, ""v23.12"", ""v24.06"", ""verbose"", ""This Data is no longer used""};  ; std::ofstream energies;  ; int cpt;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttr",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html:2138,integrat,integration,2138,api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1odesolver_1_1backward_1_1_variational_symplectic_solver.html,1,['integrat'],['integration']
Integrability," ; template<class T > ; void initData0 (Data< T > *field, typename Data< T >::InitData &res, const T &value, const char *name, const char *help, bool isDisplayed=true, bool isReadOnly=false);  Helper method used by initData() More...;  . Static Protected Member Functions; template<core::matrixaccumulator::Contribution c> ; static SReal getContributionFactor (const sofa::core::MechanicalParams *mparams, const sofa::core::matrixaccumulator::get_component_type< c > *object);  . Friends; template<class M , class V > ; class CompositeLinearSystem;  . Additional Inherited Members;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Attribute details. ◆ m_forceFields. template<class TMatrix , class TVector > . sofa::type::vector<sofa::core::behavior::BaseForceField*> sofa::component::linearsystem::TypedMatrixLinearSystem< TMatrix, TVector >::m_forceFields. protected . The list of force fields contributing to the matrix assembly. . ◆ m_linearSystem. template<class TMatrix , class TVector > . LinearSystemData<TMatrix, TVector> sofa::component::linearsystem::Ty",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html:16706,message,messages,16706,api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1linearsystem_1_1_typed_matrix_linear_system.html,1,['message'],['messages']
Integrability," ; virtual void getObjects (const ClassInfo &class_info, GetObjectsCallBack &container, const TagSet &tags, SearchDirection dir=SearchUp) const;  ; template<class Object , class Container > ; void getObjects (Container *list, SearchDirection dir=SearchUp);  List all objects of this node deriving from a given class. More...;  ; template<class Container > ; Container * getObjects (Container *result, SearchDirection dir=SearchUp);  Returns a list of object of type passed as a parameter. More...;  ; template<class Container > ; Container & getObjects (Container &result, SearchDirection dir=SearchUp);  ; template<class Object = sofa::core::objectmodel::BaseObject> ; std::vector< Object * > getObjects (SearchDirection dir=SearchUp);  ; template<class T > ; T * get (SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (T *&ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; void get (sptr< T > &ptr, const Tag &tag, SearchDirection dir=SearchUp) const;  Generic object access template wrapper, given a required tag, possibly searching up or down from the current context. More...;  ; template<class T > ; T * get (const ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html:4905,wrap,wrapper,4905,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_context.html,2,['wrap'],['wrapper']
Integrability," ; virtual void rebuildSystem (SReal, SReal);  ; virtual bool solveSystem (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual bool applyCorrection (const ConstraintParams *, MultiVecId res1, MultiVecId res2=MultiVecId::null())=0;  ; virtual void computeResidual (const core::ExecParams *);  ; virtual void removeConstraintCorrection (BaseConstraintCorrection *s)=0;  ; bool insertInNode (objectmodel::BaseNode *node) override;  ; bool removeInNode (objectmodel::BaseNode *node) override;  ; Resolution DOFs vectors API; virtual MultiVecDerivId getLambda () const;  ; virtual MultiVecDerivId getDx () const;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; virtual void draw (const core::visual::VisualParams *);  Render internal data of this object, for debugging purposes. More...;  ; virtual void computeBBox (const core::ExecParams *, bool=false);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  Handle an event. More...;  ; virtual void handleTopologyChange ();  ; virtual void handleTopologyChange (core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html:2647,depend,dependent,2647,api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1behavior_1_1_constraint_solver.html,1,['depend'],['dependent']
Integrability," ; virtual void removeEdgesWarning (sofa::type::vector< EdgeID > &edges);  Sends a message to warn that some edges are about to be deleted. More...;  ; void movePointsProcess (const sofa::type::vector< PointID > &id, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool moveDOF=true) override;  Move input points indices to input new coords. Also propagate event and update edgesAroundVertex for data handling. More...;  ;  Protected Member Functions inherited from sofa::component::topology::container::dynamic::PointSetTopologyModifier;  PointSetTopologyModifier ();  ;  ~PointSetTopologyModifier () override;  ; void addPointsWarning (const sofa::Size nPoints, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< sofa::type::vector< PointID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &coefs, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void addPointsWarning (const sofa::Size nPoints, const sofa::type::vector< core::topology::PointAncestorElem > &ancestorElems, const bool addDOF=true);  Sends a message to warn that some points were added in this topology. More...;  ; void removePointsWarning (sofa::type::vector< PointID > &indices, const bool removeDOF=true);  Sends a message to warn that some points are about to be deleted. More...;  ; void renumberPointsWarning (const sofa::type::vector< PointID > &index, const sofa::type::vector< PointID > &inv_index, const bool renumberDOF=true);  Sends a message to warn that points are about to be reordered. More...;  ; void propagateTopologicalChanges () override;  Called by a topology to warn specific topologies linked to it that TopologyChange objects happened. More...;  ;  Protected Member Functions inherited from sofa::core",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html:24386,message,message,24386,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_dynamic_sparse_grid_topology_modifier.html,3,['message'],['message']
Integrability," Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions;  QuadSetTopologyModifier ();  ;  ~QuadSetTopologyModifier () override;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList);  Sends a message to warn that some quads were added in this topology. More...;  ; void addQuadsWarning (const size_t nQuads, const sofa::type::vector< Quad > &quadsList, const sofa::type::vector< QuadID > &quadsIndexList, const sofa::type::vector< sofa::type::vector< QuadID > > &ancestors, const sofa::type::vector< sofa::type::vector< SReal > > &baryCoefs);  Sends a message to warn that some quads were added in this topology. More...;  ; virtual void addQuadsProcess (const sofa::type::vector< Quad > &quads);  Effectively Add some quads to this topology. More...;  ; virtual void removeQuadsWarning (sofa::type::vector< QuadID > &quads);  Sends a message to warn that some quads are about to be deleted. More...;  ; virtual void removeQuadsProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedEdges=false, const bool removeIsolatedPoints=false);  Remove a subset of quads. Eventually remove isolated edges and vertices. More...;  ; void addEdgesProcess (const sofa::type::vector< Edge > &edges) override;  Add some edges to this topology. More...;  ; void removeEdgesProcess (const sofa::type::vector< QuadID > &indices, const bool removeIsolatedItems=false) override;  Remove a subset of edges. More...;  ; void addPoints",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html:16101,message,message,16101,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1container_1_1dynamic_1_1_quad_set_topology_modifier.html,1,['message'],['message']
Integrability," Helper method to decode the type name to a more readable form if possible. More...;  ; template<class T > ; static std::string typeName ();  Helper method to get the type name of type T. More...;  . Protected Member Functions; bool genericCopyValueFrom (const BaseData *parent);  Try to update this Data from the value of its parent in ""fast mode"";. More...;  ;  Protected Member Functions inherited from sofa::core::objectmodel::DDGNode; virtual void doAddInput (DDGNode *n);  ; virtual void doAddOutput (DDGNode *n);  ; virtual void doDelOutput (DDGNode *n);  ; void cleanDirtyOutputsOfInputs ();  the dirtyOutputs flags of all the inputs will be set to false More...;  . Additional Inherited Members;  Protected Attributes inherited from sofa::core::objectmodel::DDGNode; DDGLinkContainer inputs;  ; DDGLinkContainer outputs;  . Attribute details. ◆ group. std::string sofa::core::objectmodel::BaseData::group {""""}. group . ◆ help. std::string sofa::core::objectmodel::BaseData::help {""""}. Help message. . ◆ m_counter. int sofa::core::objectmodel::BaseData::m_counter. Number of changes since creation. . ◆ m_dataFlags. DataFlags sofa::core::objectmodel::BaseData::m_dataFlags. Flags indicating the purpose and behaviour of this Data. . ◆ m_hasDefaultValue. bool sofa::core::objectmodel::BaseData::m_hasDefaultValue = false. True if this Data has a default value. . ◆ m_isSet. bool sofa::core::objectmodel::BaseData::m_isSet. True if this Data is set, i.e. its value is different from the default value. . ◆ m_name. std::string sofa::core::objectmodel::BaseData::m_name. Data name within the Base component. . ◆ m_owner. Base* sofa::core::objectmodel::BaseData::m_owner {nullptr}. Return the Base component owning this Data. . ◆ ownerClass. std::string sofa::core::objectmodel::BaseData::ownerClass {""""}. Owner class. . ◆ parentData. DataLink<BaseData> sofa::core::objectmodel::BaseData::parentData. Parent Data. . ◆ widget. std::string sofa::core::objectmodel::BaseData::widget {""""}. widget . Co",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:8807,message,message,8807,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability," Internal source -> destination topology hexahedra map. More...;  ; Data< SetIndex > d_hexahedronD2S;  Internal destination -> source topology hexahedra map. More...;  ;  Public Attributes inherited from sofa::core::topology::TopologicalMapping; SingleLink< TopologicalMapping, In, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > fromModel;  Input source BaseTopology. More...;  ; SingleLink< TopologicalMapping, Out, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > toModel;  Output target BaseTopology. More...;  ; Data< sofa::type::vector< Index > > Loc2GlobDataVec;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  SOFA_CLASS (SubsetTopologicalMapping, sofa::core::topology::TopologicalMapping);  ; void init () override;  Initialization method called at graph creation and modification, during top-down traversal. More...;  ; void updateTopologicalMappingTopDown () override;  Translates the TopologyChange objects from the source to the target. More...;  ; bool isTheOutputTopologySubdividingTheInputOne () override;  re",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html:4583,message,messages,4583,api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1topology_1_1mapping_1_1_subset_topological_mapping.html,1,['message'],['messages']
Integrability," Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  ;  Protected Attributes inherited from sofa::core::behavior::SingleStateAccessor< DataTypes >; SingleLink< SingleStateAccessor< DataTypes >, MechanicalState< DataTypes >, BaseLink::FLAG_STRONGLINK > mstate;  . Public Member Functions;  SOFA_CLASS (SOFA_TEMPLATE(FixedPlaneProjectiveConstraint, DataTypes), SOFA_TEMPLATE(ProjectiveConstraintSet, DataTypes));  ; void init () override;  inherited from the BaseObject interface More...;  ; void draw (const VisualParams *vparams) override;  Render internal data of this object, for debugging purposes. More...;  ; void projectResponse (const MechanicalParams *mparams, DataVecDeriv &resData) override;  – Constraint interface More...;  ; void projectVelocity (const MechanicalParams *mparams, DataVecDeriv &vData) override;  project dx to constrained space (dx models a velocity) More...;  ; void projectPosition (const MechanicalParams *mparams, DataVecCoord &xData) override;  project x to constrained space (x models a position) More...;  ; void projectMatrix (sofa::linearalgebra::BaseMatrix *M, unsigned offset) override;  Implement projectMatrix for assembled solver of compliant. More...;  ; void projectJacobianMatrix (const MechanicalParams *mparams, DataMatrixDeriv &cData) override;  ; void applyConstraint (const MechanicalParams *mparams, const MultiMatrixAcce",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html:4138,interface,interface,4138,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1projective_1_1_fixed_plane_projective_constraint.html,1,['interface'],['interface']
Integrability," Remove a data field. More...;  ; void addAlias (BaseData *field, const char *alias);  Add an alias to a Data. More...;  ; void addLink (BaseLink *l);  Add a link. More...;  ; void addAlias (BaseLink *link, const char *alias);  Add an alias to a Link. More...;  ; const VecData & getDataFields () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapData & getDataAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; const VecLink & getLinks () const;  Accessor to the vector containing all the fields of this object. More...;  ; const MapLink & getLinkAliases () const;  Accessor to the map containing all the aliases of this object. More...;  ; virtual bool findDataLinkDest (BaseData *&ptr, const std::string &path, const BaseLink *link);  ; template<class T > ; bool findLinkDest (T *&ptr, const std::string &path, const BaseLink *link);  . Protected Member Functions; void setInverse (OutputType &inv, const Coord &x0);  functions that depends on OutputType and must be specialized More...;  ; void mult (OutputType &out, const OutputType &inv, const Coord &x);  out = out * inv More...;  ; void setInverse (Rigid3Types::Coord &inv, const Coord &x0);  ; void mult (Rigid3Types::Coord &out, const Rigid3Types::Coord &inv, const Coord &x);  ; void setInverse (Mat4x4 &inv, const Coord &x0);  ; void mult (Mat4x4 &out, const Mat4x4 &inv, const Coord &x);  ; void setInverse (defaulttype::Rigid3Types::Coord &inv, const Coord &x0);  ; void mult (defaulttype::Rigid3Types::Coord &out, const defaulttype::Rigid3Types::Coord &inv, const Coord &x);  ; void setInverse (type::Mat4x4 &inv, const Coord &x0);  ; void mult (type::Mat4x4 &out, const type::Mat4x4 &inv, const Coord &x);  ;  Protected Member Functions inherited from sofa::core::DataEngine;  DataEngine ();  Constructor. More...;  ;  ~DataEngine () override;  Destructor. Do nothing. More...;  ; virtual void doInternalUpdate () final;  Prevent engines to use t",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html:13790,depend,depends,13790,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_displacement_transform_engine.html,1,['depend'],['depends']
Integrability," Remove an output from this node. More...;  ; const DDGLinkContainer & getInputs ();  Get the list of inputs for this DDGNode. More...;  ; const DDGLinkContainer & getOutputs ();  Get the list of outputs for this DDGNode. More...;  ; bool isDirty () const;  Returns true if the DDGNode needs to be updated. More...;  ; virtual void setDirtyValue ();  Indicate the value needs to be updated. More...;  ; virtual void setDirtyOutputs ();  Indicate the outputs needs to be updated. This method must be called after changing the value of this node. More...;  ; void cleanDirty ();  Set dirty flag to false. More...;  ; virtual void notifyEndEdit ();  Notify links that the DGNode has been modified. More...;  ; void updateIfDirty () const;  Utility method to call update if necessary. This method should be called before reading of writing the value of this node. More...;  ;  Public Member Functions inherited from sofa::core::objectmodel::BaseObject;  SOFA_CLASS (BaseObject, Base);  ; void setSrc (const std::string &v, std::vector< std::string > *attributeList=nullptr);  Sets a source Object and parses it to collect dependent Data. More...;  ; void setSrc (const std::string &v, const BaseObject *loader, std::vector< std::string > *attributeList=nullptr);  ; Base * findLinkDestClass (const BaseClass *destType, const std::string &path, const BaseLink *link) override;  ; virtual std::string getPathName () const override;  Return the full path name of this object. More...;  ; virtual bool insertInNode (BaseNode *);  ; virtual bool removeInNode (BaseNode *);  ; SReal getTime () const;  Current time. More...;  ; const BaseContext * getContext () const;  ; BaseContext * getContext ();  ; const BaseObject * getMaster () const;  ; BaseObject * getMaster ();  ; const VecSlaves & getSlaves () const;  ; BaseObject * getSlave (const std::string &name) const;  ; virtual void addSlave (BaseObject::SPtr s);  ; virtual void removeSlave (BaseObject::SPtr s);  ; virtual void handleEvent (Event *);  H",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html:6423,depend,dependent,6423,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1transform_1_1_smooth_mesh_engine.html,8,['depend'],['dependent']
Integrability," The color of the text to display. (default='gray') More...;  ; Data< bool > d_selectContrastingColor;  Override the color value but one that contrast with the background color. More...;  ; Data< unsigned int > d_updateLabelEveryNbSteps;  Update the display of the label every nb of time steps. More...;  ; core::objectmodel::lifecycle::RemovedData d_visible {this, ""v23.06"", ""23.12"", ""visible"", ""Use the 'enable' data field instead of 'visible'""};  ;  Public Attributes inherited from sofa::core::visual::VisualModel; Data< bool > d_enable;  Display the object or not. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; unsigned int m_stepCounter;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html:1996,message,messages,1996,api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1gl_1_1component_1_1rendering2d_1_1_ogl_label.html,1,['message'],['messages']
Integrability," d_angularLimit;  angular limit (max; min) values where the force applies More...;  ; Data< bool > d_drawSpring;  draw Spring More...;  ; Data< type::RGBAColor > d_springColor;  spring color More...;  ; linearalgebra::EigenBaseSparseMatrix< typename DataTypes::Real > matS;  ;  Public Attributes inherited from sofa::core::behavior::BaseForceField; Data< SReal > rayleighStiffness;  Rayleigh Damping stiffness matrix coefficient. More...;  ; objectmodel::lifecycle::DeprecatedData isCompliance;  Considered as compliance, else considered as stiffness (default to false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Protected Attributes; core::behavior::MechanicalState< DataTypes > * mState;  ; VecReal k;  ;  Protected Attributes inherited from sofa::core::behavior::StateAccessor; MultiLink< StateAccessor, BaseMechanicalState, BaseLink::FLAG_DUPLICATE > l_mechanicalStates;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_sl",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html:2728,message,messages,2728,api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1solidmechanics_1_1spring_1_1_angular_spring_force_field.html,1,['message'],['messages']
Integrability," displayPaths () const;  ; const std::string getTempPath () const;  . Static Public Member Functions; static std::string cleanPath (const std::string &path);  ; static std::string relativeToPath (std::string path, std::string refPath);  ; static char entrySeparator ();  OS-dependant character separating entries in list of paths. More...;  . Static Protected Member Functions; static bool findFileIn (std::string &filename, const std::string &path);  Search file in a given path. More...;  . Friends; std::ostream & operator<< (std::ostream &_flux, FileRepository _fr);  Display all current sofa search paths. More...;  . Attribute details. ◆ directAccessProtocolPrefix. std::string sofa::helper::system::FileRepository::directAccessProtocolPrefix. protected . A protocol like http: or file: which will bypass the file search if found in the filename of the findFile* functions that directly returns the path as if the function succeeded Use case: add the prefix ram: as the direct protocol, this way the FileRepository will not try to look for the file on the hard disk and will directly return then the inherited FileAccess singleton enhanced with the capacity to find ram file will deliver a correct stream to this in-ram virtual file . ◆ vpath. std::vector<std::string> sofa::helper::system::FileRepository::vpath. protected . Vector of paths. . Constructor details. ◆ FileRepository() [1/6]. sofa::helper::system::FileRepository::FileRepository ; (; ). inline . Initialize the set of paths using the environment variable SOFA_DATA_PATH as default. . ◆ FileRepository() [2/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar). inline . Initialize the set of paths using the environment variable specified by the parameter envVar. . ◆ FileRepository() [3/6]. sofa::helper::system::FileRepository::FileRepository ; (; const char * ; envVar, . const char * ; relativePath . ). inline . Initialize the set of paths using the environment variable specified by the param",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html:3559,protocol,protocol,3559,api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1system_1_1_file_repository.html,2,['protocol'],['protocol']
Integrability,"◆ m_isSet. bool sofa::core::objectmodel::BaseData::m_isSet. True if this Data is set, i.e. its value is different from the default value. . ◆ m_name. std::string sofa::core::objectmodel::BaseData::m_name. Data name within the Base component. . ◆ m_owner. Base* sofa::core::objectmodel::BaseData::m_owner {nullptr}. Return the Base component owning this Data. . ◆ ownerClass. std::string sofa::core::objectmodel::BaseData::ownerClass {""""}. Owner class. . ◆ parentData. DataLink<BaseData> sofa::core::objectmodel::BaseData::parentData. Parent Data. . ◆ widget. std::string sofa::core::objectmodel::BaseData::widget {""""}. widget . Constructor details. ◆ BaseData() [1/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const BaseInitData & ; init). explicit . Constructor used via the Base::initData() methods. . ◆ BaseData() [2/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const std::string & ; helpMsg, . DataFlags ; flags = FLAG_DEFAULT . ). Constructor. Parameters. helpMsgA help message that describes this Data. ; flagsThe flags for this Data (see DataFlagsEnum). . ◆ BaseData() [3/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const char * ; helpMsg, . DataFlags ; flags = FLAG_DEFAULT . ). ◆ BaseData() [4/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const std::string & ; helpMsg, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). Constructor. Parameters. helpMsgA help message that describes this Data. ; isDisplayedWhether this Data should be displayed in GUIs. ; isReadOnlyWhether this Data should be modifiable in GUIs. . ◆ BaseData() [5/5]. sofa::core::objectmodel::BaseData::BaseData ; (; const char * ; helpMsg, . bool ; isDisplayed = true, . bool ; isReadOnly = false . ). ◆ ~BaseData(). sofa::core::objectmodel::BaseData::~BaseData ; (; ). override . Destructor. . Function details. ◆ beginEditVoidPtr(). void * sofa::core::objectmodel::BaseData::beginEditVoidPtr ; (; ). Begin edit current value as a void pointer (use getValueTypeInfo to find how",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html:10169,message,message,10169,api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1core_1_1objectmodel_1_1_base_data.html,1,['message'],['message']
Integrability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::ScopedAdvancedTimer Member List . This is the complete list of members for sofa::helper::ScopedAdvancedTimer, including all inherited members. m_idsofa::helper::ScopedAdvancedTimer; m_objIdsofa::helper::ScopedAdvancedTimer; ScopedAdvancedTimer(const std::string &message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message)sofa::helper::ScopedAdvancedTimerexplicit; ScopedAdvancedTimer(const char *message, T *obj)sofa::helper::ScopedAdvancedTimerexplicit; ~ScopedAdvancedTimer()sofa::helper::ScopedAdvancedTimer. Generated on Mon Nov 11 2024 03:31:02 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html:377,message,message,377,api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/structsofa_1_1helper_1_1_scoped_advanced_timer-members.html,3,['message'],['message']
Integrability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandler, including all inherited members. getInstance()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; removeAllFilters()sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::MainRoutingMessageHandlerstatic. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html:123,rout,routingmessagehandler,123,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_main_routing_message_handler-members.html,5,['rout'],['routingmessagehandler']
Integrability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::helper::logging::routingmessagehandler::RoutingMessageHandler Member List . This is the complete list of members for sofa::helper::logging::routingmessagehandler::RoutingMessageHandler, including all inherited members. process(Message &m) overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlervirtual; removeAllFilters()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; RoutingMessageHandler()sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; setAFilter(FilterFunction, MessageHandler *handler)sofa::helper::logging::routingmessagehandler::RoutingMessageHandler; ~MessageHandler()sofa::helper::logging::MessageHandlerinlinevirtual; ~RoutingMessageHandler() overridesofa::helper::logging::routingmessagehandler::RoutingMessageHandlerinline. Generated on Mon Nov 11 2024 03:31:03 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html:123,rout,routingmessagehandler,123,api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1helper_1_1logging_1_1routingmessagehandler_1_1_routing_message_handler-members.html,7,['rout'],['routingmessagehandler']
Integrability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailure Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailure, including all inherited members. finalize()sofa::testing::GtestMessageFrameinlinevirtual; GtestMessageFrameFailure(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailure; m_filenamesofa::testing::GtestMessageFrame; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailurevirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html:588,message,message,588,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure-members.html,1,['message'],['message']
Integrability,"﻿. SOFA API: Member List. . SOFA API;  679a9147. Open source framework for multi-physics simuation. sofa::testing::GtestMessageFrameFailureWhenMissing Member List . This is the complete list of members for sofa::testing::GtestMessageFrameFailureWhenMissing, including all inherited members. finalize() overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; GtestMessageFrameFailureWhenMissing(Message::Type type, const char *filename, int lineno)sofa::testing::GtestMessageFrameFailureWhenMissing; m_filenamesofa::testing::GtestMessageFrame; m_gotMessagesofa::testing::GtestMessageFrameFailureWhenMissing; m_linenosofa::testing::GtestMessageFrame; m_typesofa::testing::GtestMessageFrame; process(Message &message) overridesofa::testing::GtestMessageFrameFailureWhenMissingvirtual; ~GtestMessageFrame()sofa::testing::GtestMessageFrameinlinevirtual. Generated on Mon Nov 11 2024 03:35:59 for SOFA API by 1.9.1 . ",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html:717,message,message,717,api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1testing_1_1_gtest_message_frame_failure_when_missing-members.html,1,['message'],['message']
Integrability,"﻿. SOFA API: sofa::component::animationloop::MultiStepAnimationLoop Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::animationloop::MultiStepAnimationLoop Class Reference . #include <MultiStepAnimationLoop.h>. Inheritance diagram for sofa::component::animationloop::MultiStepAnimationLoop:. [legend]. Public Attributes; sofa::core::objectmodel::RenamedData< int > collisionSteps;  ; sofa::core::objectmodel::RenamedData< int > integrationSteps;  ; Data< int > d_collisionSteps;  number of collision steps between each frame rendering More...;  ; Data< int > d_integrationSteps;  number of integration steps between each collision detection More...;  ;  Public Attributes inherited from sofa::core::behavior::BaseAnimationLoop; SingleLink< BaseAnimationLoop, core::objectmodel::BaseNode, BaseLink::FLAG_STOREPATH > l_node;  ; Data< bool > d_computeBoundingBox;  If true, compute the global bounding box of the scene at each time step. Used mostly for rendering. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definition",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html:586,integrat,integrationSteps,586,api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1animationloop_1_1_multi_step_animation_loop.html,2,['integrat'],"['integration', 'integrationSteps']"
Integrability,"﻿. SOFA API: sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection Class Reference . #include <GenericConstraintCorrection.h>. Inheritance diagram for sofa::component::constraint::lagrangian::correction::GenericConstraintCorrection:. [legend]. Public Attributes; SingleLink< GenericConstraintCorrection, sofa::core::behavior::LinearSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_linearSolver;  Link towards the linear solver used to compute the compliance matrix, requiring the inverse of the linear system matrix. More...;  ; SingleLink< GenericConstraintCorrection, sofa::core::behavior::OdeSolver, BaseLink::FLAG_STOREPATH|BaseLink::FLAG_STRONGLINK > l_ODESolver;  Link towards the ODE solver used to recover the integration factors. More...;  ; Data< SReal > d_complianceFactor;  Factor applied to the position factor and velocity factor used to calculate compliance matrix. More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefine",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html:1055,integrat,integration,1055,api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1constraint_1_1lagrangian_1_1correction_1_1_generic_constraint_correction.html,1,['integrat'],['integration']
Integrability,﻿. SOFA API: sofa::component::controller Namespace Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Classes |; Functions |; Variables . sofa::component::controller Namespace Reference . Classes; class  Controller;  Controller Class. Interface of user interaction on SOFA Components. Provides also an interface for BeginAnimation and EndAnimation events launched at the beginning and the end of a time step. More...;  ; class  MechanicalStateController;  MechanicalStateController Class. More...;  . Functions; void registerMechanicalStateController (sofa::core::ObjectFactory *factory);  ; SOFA_EXPORT_DYNAMIC_LIBRARY void initExternalModule ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleName ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY const char * getModuleVersion ();  ; SOFA_EXPORT_DYNAMIC_LIBRARY void registerObjects (sofa::core::ObjectFactory *factory);  ; void init ();  . Variables; template class SOFA_COMPONENT_CONTROLLER_API MechanicalStateController< Vec1Types >;  ; template class SOFA_COMPONENT_CONTROLLER_API MechanicalStateController< Rigid3Types >;  . Function Documentation. ◆ getModuleName(). const char * sofa::component::controller::getModuleName ; (; ). ◆ getModuleVersion(). const char * sofa::component::controller::getModuleVersion ; (; ). ◆ init(). SOFA_COMPONENT_CONTROLLER_API void sofa::component::controller::init ; (; ). ◆ initExternalModule(). void sofa::component::controller::initExternalModule ; (; ). ◆ registerMechanicalStateController(). void sofa::component::controller::registerMechanicalStateController ; (; sofa::core::ObjectFactory * ; factory). ◆ registerObjects(). void sofa::component::controller::registerObjects ; (; sofa::core::ObjectFactory * ; factory). Variable Documentation. ◆ MechanicalStateController< Rigid3Types >. template class SOFA_COMPONENT_CONTROLLER_API sofa::component::controller::MechanicalStateController< Rigid3Types >. ◆ MechanicalStateController< Vec1Types >. template class SOFA_COMPONENT_C,MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1controller.html:336,interface,interface,336,api/master/sofa/html/namespacesofa_1_1component_1_1controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/namespacesofa_1_1component_1_1controller.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::controller::Controller Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Protected Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::controller::Controller Class Reference . #include <Controller.h>; Controller Class. Interface of user interaction on SOFA Components. Provides also an interface for BeginAnimation and EndAnimation events launched at the beginning and the end of a time step. ; More... Inheritance diagram for sofa::component::controller::Controller:. [legend]; Detailed Description; Controller Class. Interface of user interaction on SOFA Components. Provides also an interface for BeginAnimation and EndAnimation events launched at the beginning and the end of a time step. . Protected Attributes; sofa::core::objectmodel::RenamedData< bool > handleEventTriggersUpdate;  ; Data< bool > d_handleEventTriggersUpdate;  Event handling frequency controls the controller update frequency. More...;  ;  Protected Attributes inherited from sofa::core::objectmodel::BaseObject; SingleLink< BaseObject, BaseContext, BaseLink::FLAG_DOUBLELINK > l_context;  ; LinkSlaves l_slaves;  ; SingleLink< BaseObject, BaseObject, BaseLink::FLAG_DOUBLELINK > l_master;  ;  Protected Attributes inherited from sofa::core::objectmodel::Base; std::map< std::string, sofa::core::DataTrackerCallback > m_internalEngine;  ; VecData m_vecData;  List of fields (Data instances) More...;  ; MapData m_aliasData;  name -> Data multi-map (includes names and aliases) More...;  ; VecLink m_vecLink;  List of links. More...;  ; MapLink m_aliasLink;  name -> Link multi-map (includes names and aliases) More...;  . Public Member Functions;  SOFA_CLASS (Controller, core::behavior::BaseController);  ; virtual void onMouseEvent (core::objectmodel::MouseEvent *);  Mouse event callback. More...;  ; virtual void onHapticDeviceEvent (core::objectmodel::HapticDeviceEvent *);  HapticDevice even",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html:415,interface,interface,415,api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1controller_1_1_controller.html,2,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::engine::generate::MergePoints< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::engine::generate::MergePoints< DataTypes > Class Template Reference . #include <MergePoints.h>. Inheritance diagram for sofa::component::engine::generate::MergePoints< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::engine::generate::MergePoints< DataTypes >; This class merge 2 coordinate vectors. . Public Attributes; bool initDone;  ; Data< VecCoord > f_X1;  position coordinates of the degrees of freedom of the first object More...;  ; Data< VecCoord > f_X2;  Rest position coordinates of the degrees of freedom of the second object. More...;  ; Data< SetIndex > f_X2_mapping;  Mapping of indices to inject position2 inside position1 vertex buffer. More...;  ; Data< SetIndex > f_indices1;  Indices of the points of the first object. More...;  ; Data< SetIndex > f_indices2;  Indices of the points of the second object. More...;  ; Data< VecCoord > f_points;  position coordinates resulting from the merge More...;  ; Data< bool > f_noUpdate;  do not update the output at each time step (false) More...;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Dat",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html:943,inject,inject,943,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1generate_1_1_merge_points.html,1,['inject'],['inject']
Integrability,"﻿. SOFA API: sofa::component::engine::select::BaseROI< DataTypes > Class Template Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; Protected Member Functions |; List of all members . sofa::component::engine::select::BaseROI< DataTypes > Class Template Referenceabstract . #include <BaseROI.h>. Inheritance diagram for sofa::component::engine::select::BaseROI< DataTypes >:. [legend]; Detailed Description; template<class DataTypes>; class sofa::component::engine::select::BaseROI< DataTypes >; This interface defines the features for Regions Of Interest (ROI) . Public Attributes; Data< VecCoord > d_positions;  ; Data< VecEdge > d_edges;  Edge Topology. More...;  ; Data< VecTriangle > d_triangles;  Triangle Topology. More...;  ; Data< VecQuad > d_quads;  Quad Topology. More...;  ; Data< VecTetra > d_tetrahedra;  Tetrahedron Topology. More...;  ; Data< VecHexa > d_hexahedra;  Hexahedron Topology. More...;  ; Data< bool > d_computeEdges;  If true, will compute edge list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeTriangles;  If true, will compute triangle list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeQuads;  If true, will compute quad list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeTetrahedra;  If true, will compute tetrahedra list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_computeHexahedra;  If true, will compute hexahedra list and index list inside the ROI. (default = true) More...;  ; Data< bool > d_strict;  If true, an element is inside the box if all of its nodes are inside. If False, only the center point of the element is checked. (default = true) More...;  ; Data< SetIndex > d_indices;  Indices of the points contained in the ROI. More...;  ; Data< SetIndex > d_edgeIndices;  Indices of the edges contained in the ROI. More...;  ; Data< SetI",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html:583,interface,interface,583,api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1engine_1_1select_1_1_base_r_o_i.html,1,['interface'],['interface']
Integrability,"﻿. SOFA API: sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO Class Reference. . SOFA API;  679a9147. Open source framework for multi-physics simuation. Public Attributes |; Public Member Functions |; List of all members . sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO Class Referenceabstract . #include <BaseVTKReader.h>. Inheritance diagram for sofa::component::io::mesh::basevtkreader::BaseVTKReader::BaseVTKDataIO:. [legend]. Public Attributes; string name;  ; int dataSize;  ; int nestedDataSize;  ;  Public Attributes inherited from sofa::core::objectmodel::BaseObject; Data< bool > f_listening;  if true, handle the events, otherwise ignore the events More...;  ;  Public Attributes inherited from sofa::core::objectmodel::Base; std::vector< lifecycle::DeprecatedData * > m_oldAttributes;  ; Data< int > d_messageLogCount;  ; Data< std::string > name;  Name of the object. More...;  ; Data< bool > f_printLog;  if true, emits extra messages at runtime. More...;  ; Data< sofa::core::objectmodel::TagSet > f_tags;  list of the subsets the object belongs to More...;  ; Data< sofa::type::BoundingBox > f_bbox;  this object bounding box More...;  ; Data< sofa::core::objectmodel::ComponentState > d_componentState;  The state of the component among (Dirty, Valid, Undefined, Loading, Invalid). More...;  ; std::string m_definitionSourceFileName {""""};  ; int m_definitionSourceFilePos {-1};  ; std::string m_instanciationSourceFileName {""""};  ; int m_instanciationSourceFilePos {-1};  . Public Member Functions;  BaseVTKDataIO ();  ;  ~BaseVTKDataIO () override;  ; virtual void resize (int n)=0;  ; virtual bool read (istream &f, int n, int binary)=0;  ; virtual bool read (const string &s, int n, int binary)=0;  ; virtual bool read (const string &s, int binary)=0;  ; virtual bool write (ofstream &f, int n, int groups, int binary)=0;  ; virtual const void * getData ()=0;  ; virtual void swap ()=0;  ; virtual BaseData * createSofaData ()=0;  ;  P",MatchSource.WIKI,sofa-framework,sofa,v24.06.00,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o.html:986,message,messages,986,api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o.html,https://www.sofa-framework.org,https://www.sofa-framework.org/api/master/sofa/html/classsofa_1_1component_1_1io_1_1mesh_1_1basevtkreader_1_1_base_v_t_k_reader_1_1_base_v_t_k_data_i_o.html,1,['message'],['messages']
