quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1525:299,config,configuration,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525,2,"['config', 'extend']","['configuration', 'extend']"
Modifiability,"I am not sure about the nightly build - and still trying to look at some runtime problems - it crashes and corrupts the stack.; ------------; # gdb /usr/local/bin/babel; GNU gdb (GDB) 7.0.1; Copyright (C) 2009 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""alphaev68-dec-osf5.1a"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /usr/local/bin/babel...done.; (gdb) run -imol2 MOL-1.mol2 -opdb gaba038.pdb ; Starting program: /usr/local/bin/babel -imol2 MOL-1.mol2 -opdb gaba038.pdb. Program received signal SIGSEGV, Segmentation fault.; 0x000003ff80019e7c in ?? () from /sbin/loader; (gdb) bt; #0 0x000003ff80019e7c in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e7c; This warning occurs if you are debugging a function without any symbols; (for example, in a stripped executable). In that case, you may wish to; increase the size of the search with the `set heuristic-fence-post' command. Otherwise, you told GDB there was a function where there isn't one, or; (more likely) you have encountered a bug in GDB.; #1 0x000003ff80019e38 in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e38; Backtrace stopped: previous frame identical to this frame (corrupt stack?); (gdb) . ---------------. The last babel on this machine was built on Nov 11 2005 with a libopenbabel.so.0.0.0 (current ggives is 3.0.3). I am building the latest version because the old one has stopped working (hasn't been used for a while) due to libstdc++ incompatibility related to pthread (the last one was possibliy built with a gcc 3.x; obviously libstdc++ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281:511,config,configured,511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281,1,['config'],['configured']
Modifiability,"I am requesting that the ability to script OB with; Python/Perl be extended to Windows. Someone here (Unilever Centre, Cambridge) has already; asked me what the story was with Windows scripting. I; think that this is important if you want; cheminformaticians to use the OB library (most people; here use Windows, even though all the servers are *nix). Regards,; Noel. Reported by: @baoilleach. Original Ticket: ""openbabel/feature-requests/81"":https://sourceforge.net/p/openbabel/feature-requests/81",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1450:67,extend,extended,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450,1,['extend'],['extended']
Modifiability,"I am seeing the same test failures, plus a few others, for the 2.3.0 source release of OpenBabel on CentOS 5.5 / i386:. 3 - builder_Test (Failed); 22 - inchiSamples_Test (Failed); 28 - charge-mmff94_Test (Failed); 32 - ffgaff_Test (Failed); 33 - ffghemical_Test (Failed); 35 - ffuff_Test (Failed); 43 - logp_psa_Test (Failed); 53 - pytest_babel (Failed); 54 - pytest_sym (Failed); 55 - pytest_fastsearch (Failed); 56 - pytest_unique (Failed); 57 - pytest_kekule (Failed); 58 - pybindtest_bindings (Failed); 59 - pybindtest__pybel (Failed); 60 - pybindtest_example (Failed). I assume the test numbers differ from the OP's because of different CMake options. Specifically, I configured CMake (version 2.6.4) this way:. JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0 \; /usr/bin/cmake ../openbabel-2.3.0 \; -DCMAKE_INSTALL_PREFIX=/usr \; -DJAVA_BINDINGS=ON \; -DPERL_BINDINGS=ON \; -DPERL_INCLUDE_PATH=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE \; -DPERL_LIBRARY=/usr/lib/perl5/5.8.8/i386-linux-thread-multi/CORE/libperl.so \; -DPYTHON_BINDINGS=ON -DRUBY_BINDINGS=ON. No OpenBabel binaries, libraries, or environment configuration was yet installed on the build system. This is significant at least because I had to patch a bug in the Ruby bindings' build configuration to build successfully (I will report that bug separately), but it may also affect the tests. I ran ""make"" with no additional options or environment variables, then ""make test"" to produce the test failures. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801:673,config,configured,673,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797801,4,"['config', 'variab']","['configuration', 'configured', 'variables']"
Modifiability,"I am using Mac osx 10.9.5. Do you offer a 2.3.2 open babel for mac?; Thanks a lot!. On Tue, Mar 10, 2015 at 5:03 AM, baoilleach notifications@github.com; wrote:. > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > ; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Sy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:304,Config,Config,304,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Config'],['Config']
Modifiability,"I am using Open Babel ver 2.3.1 on a win7 Home machine 64bit; It seems that open babel cannot compute the valence of ANY radical carbon.; Here is how I found this problem. I want to find carbon radicals using SmartsDescriptors.; To do that, I added a SmartsDescriptor to plugindefines.txt in my working folder; according to daylight ; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD. I tried with some single-radicals, and the program never found a match for the RandomTest.txt file (see attachment). Trying to understand why, I set these following descriptors (in plugindefines.txt). SmartsDescriptor; v4; [v4]; Number of atoms with valence of 4. SmartsDescriptor; v3; [v3]; Number of atoms with valence of 3. #the following copied from Daylight; SmartsDescriptor; CR; [CX3v3+0]; C radicals. When testing the program I had the following output; obabel RandomTest.txt -h -ismi -otxt --append cansmi formula CR V3 V4; I had as output the following; cansmi formula CR V3 V4; [CH3] CH3 0 0 1; C[CH2] 	C2H5 0 0 2; C[CH]C 	C3H7 0 0 3; C[C](C)C 	C4H9 0 0 4; C=[CH] 	C2H3 0 0 2; C[C]=C 	C3H5 0 0 3; C#[C] 	C2H 0 0 2. No radicals are found (first numeric column). ; That’s because no carbon has a valence of 3 (second numeric column): all carbons always have valence of 4 (last column).; I expected the ""v3"" being equal to 1 for all the tested molecules and the V4 being lower by 1.; It is not clear to me if this is a bug, an unsupported feature or if I didn't really understand what obabel means with ""valence"".; Am I missing something or this is a bug?; Samuele; samuele.sommariva@gmail.com. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1160:271,plugin,plugindefines,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1160,2,['plugin'],['plugindefines']
Modifiability,"I am using OpenBabel2.3.2a_windows_Installer.exe for ""silent install"" mass deployment. NSIS ""/S"" command line switch works fine until certain point. Somewhere at the end the installer drops off the silent mode and starts asking if user wants to install Visual C++ 2010 x86 runtimes. Running installer interactively shows the possible bug in C++ runtime command line:; ""C:\Program Files (x86)\OpenBabel-2.3.2\vcredist_x86.exe /q:a"". My guess - it supposed to run in silent mode, but somehow it does not. Probably silent install switches are incorrect, particularly ""/q:a"" one. I've tried ""vcredist_x86.exe /?"" so the correct switch probably is ""/q"", not ""/q:a"". Please fix the silent install so it acts silently without user interaction. Configuration: MS Windows 7 x64 SP1, SCCM 2012R2 deployment. Personal thoughts:; NSIS installers are usually one-way road, once packed the installation exe cannot be fixed by end-users with parameters or so. Have you considered using some other installer? *.msi might be the most flexible choice. Plus it gives Group Policy deployment advantages, transforms,etc. Reported by: romanzhv. Original Ticket: [openbabel/bugs/911](https://sourceforge.net/p/openbabel/bugs/911)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1291:737,Config,Configuration,737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1291,2,"['Config', 'flexible']","['Configuration', 'flexible']"
Modifiability,"I am using xcode 3.1. Looks like it may be problem with babelconfig.h. There is no mac version of babelconfig.h file provided in the package; what i did was copied babelconfig.h file from windows vc++ directory and uncommented vc++ include, may be i have messed up in this process. In down loads there is no source code download for mac OS and only have dmg. If I have I can build it for iPhone. . I have tried to compile code in mac os 10.5 and got same error as compiling using iphone os 2.2. /Developer/SDKs/MacOSX10.5.sdk/usr/include/c++/4.0.0/i686-apple-darwin9/bits/c++locale.h:72: error: 'snprintf' is not a member of 'std'. Because you have successfully compiled and created dmg, looks like I am missing some configuration settings. I will greatly appreciate it If you can please look into this issue.; Thanks. Ravi Singareddy; http://www.ooftish.com . Original comment by: singareddy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372:717,config,configuration,717,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372,1,['config'],['configuration']
Modifiability,"I am working on command line using obabel ver 2.3.1 on Win 7 machine.; I'm working on group additivity calculations (enthalpies).; I simply edited the plugindefines.txt adding at the end the definition of my new property (HF_Try) and defined my groups (at the moment: alkanes only) ; I attached a zip file containig:; - plugindefines.txt (last rows are what I edited); - HF_Try.txt (the groups I have added); - HC.txt (input file); There are two main problems: ; 1 - It looks like when more than 1 H atom is present on the group, multiple (= number of H) matches are found.; Using -d or -h combined with --gen2d or --gen3d didn't help. I have inserted in the database only alkanes group, so each attachment will be a saturaded carbon (-[CX4]); I defined the following groups:(HF_Try.txt, attached). First time with SMARTS, to be sure I did it right, I checked them with ; http://smartsview.zbh.uni-hamburg.de/smartsview/view. [CH3](-[CX4])	11 Primary C; [CH2](-[CX4])(-[CX4])	111 Secondary C; [CH](-[CX4])(-[CX4])(-[CX4])	1111 Tertiary C; [C](-[CX4])(-[CX4])(-[CX4])(-[CX4])	11111 Quaternary C. And I tryied with the following Hydrocarbons getting the following results: (C:\Translator>obabel HC.txt -ismi -otxt --append HF_Try). CC 66; CCC 288; CCCC 510; CC(C)C 1210; CCCCC 732; CC(C)CC 1432; CC(C)(C)C 132. Looking at the results the some things seem wrong to me.; I figured out how the program gets those results: every time H is present is counted with a ""multiplicity"". a - Every time there is a match on the methyl group, it is counted 3 times more than expected; 		(CC = 6*11, instead of 2*11); 		this problem is found also every time a methyl group is present ; b - Every time a Secondary group is found, it is counted twice ; 		(CCC = 2*111 + 6*11, instead of 2*11+111); 		(CCCC = 4*111 + 6*11, instead of 2*11+2*111); 		(CCCCC = 6*111+6*11 , instead of 2*11+3*111); c - Tertiary carbons itself seems ok; 		(CC(C)C = 1111 + 9*11 instead 1111 + 3*11, reffers to the (a) in this list); 		(CC(C)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159:151,plugin,plugindefines,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159,2,['plugin'],['plugindefines']
Modifiability,"I am working to build Avogadro on Windows using VS2008 Pro, with all libraries and components. Following directions on OpenBabel here:. http://openbabel.org/wiki/Install_(MSVC). with suitable adjustments for the new environment; and latest SVN. Solution OpenBabelOBF needs OBCommonFormats to be; built first (or obcommonD.lib not found error will; result if FastSearch is built first). This is the result of the OBCommonFormats compile:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:486,Config,Configuration,486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,4,"['Config', 'variab']","['Configuration', 'variable']"
Modifiability,"I appreciate your point, but:; 1) I'm not going to merge this without on-list discussion. There has been much debate on this off-and-on for ages, and I've ended up dealing with bug reports and patch requests going both ways. Unless there's public non-GItHub discussion about an enhancement change, someone is bound to get upset.; 2) While I can't immediately find the thread, I remember the point being made that the PDB itself was purifying files to remove any use of multiple CONECT records. Moreover, I believe there were cases of software behaving badly to such files (from Open Babel). My point is - while I like the 'extension', I've had to deal with this debate for ages. I'm not making a change without people having the opportunity to weigh in. If there's consensus (or apathy) to the change, no problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514386361:278,enhance,enhancement,278,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514386361,1,['enhance'],['enhancement']
Modifiability,"I believe it's needed so that instantiating OBConversion() will work (which loads the plugins). Again, I believe that resetting the flags will not affect anything. If you can test and let me know for sure, then I can look into moving the code inside OBConversion's __init__ itself. At the moment, the code is at the start of openbabel.py. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931:86,plugin,plugins,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931,1,['plugin'],['plugins']
Modifiability,"I believe the problem with plugins has been resolved in 2.2.0 branch, so yes, this bug can be counted as closed.; I'd be happy to assist with the testing/feedback for MinGW installation of OB, I see that the questions show up moderately often. The compilation of executables (e.g. babel.exe) still fails even in 2.2.0 and this is something that I think will have to be addressed eventually. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073:27,plugin,plugins,27,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073,1,['plugin'],['plugins']
Modifiability,"I can add a probe radius too, no problem.; On 28 Apr 2015 20:11, ""Geoff Hutchison"" notifications@github.com wrote:. > Looks nice, although I have some questions beyond point clouds.. Many; > people would like solvent-accessible or solvent-excluded surfaces at; > variable probe radii. The ""radius multiplier"" seems like it would be more; > useful from a user perspective as an additive factor (e.g., VdW + 0, +1 +; > 1.5Ang, etc.); > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717:263,variab,variable,263,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717,1,['variab'],['variable']
Modifiability,"I can install `pip install openbabel-wheel` from [here](https://pypi.org/project/openbabel-wheel/) just fine, but when I try to run `pip install openbabel` again, it still gives me the same error. . It looks like the command is unable to either find my openbabel installation, which is in `C:\Program Files\openbabel 3.1.1`, or that it is looking for something in that folder that it needs for the installation procedure it cannot find. . How exactly is SWIG trying to locate your babel install on windows? Is it looking specifically for the location of the obabel.exe? I have no idea what it is looking for, where it is looking for it nor how to edit my installation prompt in such a way that I can provide that info manually if it messes up by looking in the wrong place. Is it checking the PATH variables on windows?. Anyways I installed the wheel using pip but it changes nothing...Is anaconda really the only way? I really dislike anaconda...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1792327048:798,variab,variables,798,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1792327048,1,['variab'],['variables']
Modifiability,"I check the configuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12,config,configuration,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,4,['config'],['configuration']
Modifiability,"I cross-compiled it on x86_64 for armv7l using Void Linux’s package building tool [xbps-src](https://github.com/voidlinux/void-packages). Void Linux cross compiles all packages for armv6l, armv7l, aarch64. So I didn’t target a specific device. There is a problem with the cross-compiled wxWidgets (wx-config returning the cross-build paths when used natively) I tried to fix and ran into this issue when cross-building all packages depending on wxWidgets.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345519265:301,config,config,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1689#issuecomment-345519265,1,['config'],['config']
Modifiability,"I disagree that the depiction lacks an essential detail. If one departs from the Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgra",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:151,config,configuration,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436,1,['config'],['configuration']
Modifiability,"I don't know how Spyder work when it comes to environment variables. If you see the lines with `set ...` when activating the conda environment, the variables should be set. If Spyder doesn't pick them up, maybe it has some kind of setting where you can specify environment variables? You could also try to set the variable before importing openbabel through `os.environ[""BABEL_DATADIR""] = r""D:\ProgramData\Anaconda38\envs\python37\share\openbabel""`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268:58,variab,variables,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482#issuecomment-1141775268,4,['variab'],"['variable', 'variables']"
Modifiability,"I don't really know about MGLTools so I don't know how they add openbabel (but it seems like it's an old version...). If `which obabel` points to the MGLTools version, you could try to use a command like `/home/{user}/miniconda3/bin/obabel` instead, that should force the use of the conda version from the main env or `/home/{user}/miniconda3/envs/{mainenv}/bin/obabel` to use the version in your main virtual environment.; Normally, the activation of the environment should handle this but I suspect that the MGLTools install is doing something to the path variables that makes this automatic path handling fail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301:558,variab,variables,558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022186301,1,['variab'],['variables']
Modifiability,"I dug a bit deeper. The error appears in the generated OpenBabel3_EXPORTS.cmake. In line 103, it checks whether the targets for maeparser and coordgen are set. They are not, as the coordgen-config.cmake and maeparser-config.cmake, present in /usr/local/lib/cmake, are never searched for or imported.; If I understand correctly, creation of those files happens around line 717 in the top level CMakeLists.txt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979:190,config,config,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2568#issuecomment-1420152979,2,['config'],['config']
Modifiability,"I e-mailed the original poster of https://sourceforge.net/p/openbabel/mailman/message/34502202/ to follow-up, and present my hypothesis after researching the HRESULT error code that appeared in the attached log. openbabel_csharp.dll may fail to load in this manner if other DLLs it depends upon (notably, the Microsoft VC++ Run-Time library DLL corresponding to the Visual Studio used to build OB) are not present on the IIS server. The DLLs must match version / target architecture (32 or 64bit) / build configuration (debug or release). I'm unaware of the specifics of the original poster's machine configurations, but recommended carefully verifying that all depedent DLLs exist and match between the two machines. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872:505,config,configuration,505,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872,2,['config'],"['configuration', 'configurations']"
Modifiability,"I feel some small pride when this isn't actually the bug. The configure script is fine -- it won't build libinchi. What you want, is not to build the inchiformat code. This is now fixed in the 2.2 branch. It should also be fine with CMake instead of configure. (The folks who wrote the CMakeLists.txt did the right thing from the beginning.). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/801#issuecomment-281793557:62,config,configure,62,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/801#issuecomment-281793557,2,['config'],['configure']
Modifiability,"I finally got the AFL fuzz tester to work. This was on Linux with a static build. The build failed when linking the obabel executable, but works if you do it manually after removing the ""-rdynamic"" from the VERBOSE=1 output. Anyway, I ran it for a while (-ismi -onul) and fixed the segfaults it found:; 1. SMILES starting with a bond symbol; 2. Self-bonding through ring closures; 3. Square planar and tetrahedral stereo with 5 nbors (where the nbor might be described by a ring closure). Anything that's a reaction SMILES also segfaults if read as smi (I rejected these SMILES when testing), but hopefully we can fix this as described in my enhancement proposal. I also tightened up the parsing of square planar stereo so that only @SP1/2/3 are accepted.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1770:642,enhance,enhancement,642,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1770,1,['enhance'],['enhancement']
Modifiability,"I had libxml2 compiled from source with configure flags; --without-threads --disable-shared. While it compiled fine the resulting library didn't link with OB.; After your advice I tried compiling libxml2 from source as provided at MinGW, unfortunately the script they have did not run for me.; So now I installed libxml2 binary library (-dev and -dll packages) from; http://sourceforge.net/projects/mingw/files/MSYS/libxml2/; as well as libiconv (dll only) and zlib (dll only). This allows for openbabel to compile and tests to run, but it's certainly not a static library which was the goal from the beginning as it requires 3 additional DLLs to load. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713:40,config,configure,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713,1,['config'],['configure']
Modifiability,"I have a 1.0 install version of InChI which doesn't compile with OpenBabel 2.2. . /usr/bin/ld: Undefined symbols:; _GetINCHIKeyFromINCHI. This is because of the new function in InChI for producing a key. While possible to support both versions though #ifdef checks, it's okay, I think, to have this compilation problem. Few use InChI and fewer use the older code. I wanted to disable InChI support for my build. The configure script says. --disable-inchi do not build the InChI library. I tracked the problem down to this line:. if test x""$LIBINCHI"" = ""x"" -o ""$inchi"" = ""yes""; then. It should be. if test x""$LIBINCHI"" = ""x"" -o ""$inchi"" = ""no""; then. That is, ""if the inchi code could not be found or the inchi option is *disabled*"". . Reported by: dalke",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/801:416,config,configure,416,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/801,1,['config'],['configure']
Modifiability,I have a failure when trying to compile Open Babel 2.4.1 on fedora 30 x64.; I configure with this command from the created build directory:; cmake -DRUN_SWIG=yes -DPYTHON_BINDINGS=yes -DBUILD_GUI=yes ..; Then run make -j4; Then it fails like this:; [ 20%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.o; [ 21%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.o; [ 21%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.o; [ 21%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.o; [ 21%] Linking CXX shared module ../lib/plugin_forcefields.so; /usr/bin/ld: CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.o(.debug_loc+0x800000001262df): reloc against `.text._ZN9OpenBabel12OBForceFieldD0Ev': error 4; /usr/bin/ld: final link failed: nonrepresentable section on output; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/plugin_forcefields.dir/build.make:134: lib/plugin_forcefields.so] Error 1; make[1]: *** [CMakeFiles/Makefile2:1159: src/CMakeFiles/plugin_forcefields.dir/all] Error 2; make: *** [Makefile:141: all] Error 2. Any hint?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1984:78,config,configure,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1984,1,['config'],['configure']
Modifiability,"I have been trying the cmake build of openbabel. After 'make install' I get the following errors when running babel. All listed files do exist in the specified directory. ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/chemdrawcdxformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/chemdrawctformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/chemkinformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/molreportformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/rsmiformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/rxnformat.so did not load properly. This error does not occur when using autotools, i.e. running configure then make. I am using Mac OS X Leopard. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756:1062,config,configure,1062,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756,1,['config'],['configure']
Modifiability,"I have compiled openbabel-2.3.0 from source on my linux box (Debian wheezy) following the instructions on you website and can confirm that the molecular coordinates from my g98 file are parsed correctly with 2.3.0. That is, I have compiled openbabel on the exact same computer with the exact same config that was crashing with openbabel 2.3.1. It clearly appears that I uncovered a regression. By the way, you library does exactly what I need with a nice API so that I am very interested in seeing it fixed!. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204:297,config,config,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204,1,['config'],['config']
Modifiability,"I have only tested on OS X. The main thing I could see being an issue across platforms is using pkg-config to locate the Open Babel install. I added a fallback so if pkg-config fails, `/usr/local/` is guessed as the install location. If this is different across platforms, it should be possible to add some platform detection with alternative paths. I suspect this won't get a lot of use, considering it seems no one noticed setup.py has been broken for ages until Joshua fixed it a couple of weeks ago – I guess everyone just uses the cmake options when compiling. However this is useful for anyone who wants to install using pip and for virtualenv support. With regards to the name, the -python suffix seems uncommon on PyPI, seeing as by definition everything is python. If you are doing `pip install openbabel` you know you are getting python bindings. With the linux package managers I assume the -python suffix is necessary because Open Babel itself is also a package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681:100,config,config,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681,2,['config'],['config']
Modifiability,"I have the same problem with version 2.4.1 on Gentoo, reading output from GAMESS-US ver. 11 Nov 2017 (R3). I did some debugging and I found the problem to be in actual part of **gamessformat.cpp** that reads frequencies. Namely in line **515**, before reading reduced mass, it should also read SYMMETRY line:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; Fixed:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // SYMMETRY; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; otherwise lines **549-550** process a blank line instead of an atom - hence the segfault. Patch is attached that fixes the code. Here is a fragment of the GAMESS output where the problem appears:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; > IR INTENSITY: 0.23456 0.34034 0.01209 0.00004 0.00182. The second issue arises at the end of the loop that reads the modes (lines **582-584**):; ```; ifs.getline(buffer, BUFF_SIZE);; tokenize(vs, buffer);; modeCount = vs.size() - 3;; ```; At the end of the modes `buffer` variable contains empty string, so `vs.size()` returns 0. However, `modeCount` is defined as `unsigned int` (in line **544**):; ```; unsigned int modeCount = vs.size() - 3;; ```; therefore line **584** produces a huge positive value instead of -3, and the program does not leave the loop (condition in line **547**), leading to another segfault, which wasn't exposed due to the first one. Again - a fix is proposed in the included patch. [segfault_when_reading_vib.txt](https://github.com/openbabel/openbabel/files/1691481/segfault_when_reading_vib.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531:1169,variab,variable,1169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531,1,['variab'],['variable']
Modifiability,"I have tried everything in this thread and nothing is working. 4 years and counting. How the hell is this still not fixed? Why do I have to install conda just so I can use one single library? Why are the docs not updated to warn prospective users of this at all? . This is getting ridiculous so let's try this one last time:. I have installed openbabel using the 32bit binary from [here](https://github.com/openbabel/openbabel/releases) on Windows 11. I have it in `C:\Program Files (x86)\OpenBabel-3.1.1`. I have ensured that this dir is in my system path and user path variable:. User PATH: C:\Program Files (x86)\OpenBabel-3.1.1; System PATH: C:\Program Files (x86)\OpenBabel-3.1.1; BABEL_DATADIR: C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data. Now I try to install the python key bindungs using PyPI as instructed [here](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html) using `pip install -U openbabel`. That returns the following error traceback:; ```; C:\Users\chris>pip install -U openbabel; Defaulting to user installation because normal site-packages is not writeable; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Installing build dependencies ... done; Getting requirements to build wheel ... done; Preparing metadata (pyproject.toml) ... done; Building wheels for collected packages: openbabel; Building wheel for openbabel (pyproject.toml) ... error; error: subprocess-exited-with-error. × Building wheel for openbabel (pyproject.toml) did not run successfully.; │ exit code: 1; ╰─> [15 lines of output]; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\Python310\\include', 'C:\\Program Files\\Python310\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\Python310\\libs', 'C:\\Program Files\\Python310', 'C:\\Program Files\\Python310\\PCbuild\\amd64', '/usr/local/lib']; building",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554:571,variab,variable,571,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554,1,['variab'],['variable']
Modifiability,"I hope that the error I'm encountering actually belongs to this area. However, I don't know where else to discuss it.; I tried to compile the OpenBabel source code myself under Visual Studio 2022. After downloading OpenBabel v3.1.1 from Github, I first downloaded the following optional libs and successfully compiled them all with CMake (libxml2, InChI, zlib, Eigen3, RapidJSON, wxWidgets and Cairo). After setting various paths for optional libraries in CMake, I was able to successfully configure and generate OpenBabel in CMake and open it in Visual Studio 2022. The project was also able to be compiled (Release) in Visual Studio without any errors. I then created a new console project and configured various paths for the include and .lib files of OpenBabel for it.; Here is the short console programm I found in the net:. ```. #include <openbabel/obconversion.h>; #include <openbabel/mol.h>; #include <iostream>. using namespace std;; using namespace OpenBabel;. int main() {; // SMILES string; string smiles = ""CCO"";. // Create an OBMol object; OBMol mol;; OBConversion conv;; conv.SetInFormat(""smi"");; conv.ReadString(&mol, smiles);. // Get IUPAC name; string iupac_name = mol.GetTitle();. // Output IUPAC name; cout << ""IUPAC name: "" << iupac_name << endl;. return 0;; }; ```. But when I tried to compile this console project, the following errors were displayed:; ```; Error (active) E0020 The identifier """"strcasecmp"""" is not defined. OpenBable C:\Libs\OpenBabel\v3.1.1\install\include\openbabel3\openbabel\plugin.h 44; Error C3861 ""strcasecmp"": Identifier not found. OpenBable C:\Libs\OpenBabel\v3.1.1\install\include\openbabel3\openbabel\plugin.h 44; ```. I know that ""strcasecmp"" is not included in the C standard, but only in POSIX.; I'm now wondering how I can fix this error? Did I make a mistake when compiling OpenBabel?. ## Environment Information; Open Babel version: v3.1.1; Used optional Libs: libxml2, InChI, zlib, Eigen3, RapidJSON, Cairo, wxWidgets; Operating system and ve",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2670:490,config,configure,490,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2670,2,['config'],"['configure', 'configured']"
Modifiability,"I keep thinking about this and the difference between the clang and gcc builds. It's nothing to do with the compiler, so it must be something about the linker flags when either the plugins or openbabel.so are being created. I think that is where the real fix should be.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364873741:181,plugin,plugins,181,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364873741,1,['plugin'],['plugins']
Modifiability,"I released Open Babel 2.0 in 2005, and v3.0 was released in 2019. That's 14 years of API compatibility. One reason I *intentionally* added the version number to the pkg-config file was to signal a strong backwards-incompatible change. One should not just make a simple patch to switch a pkg-config arrangement. My guess is that whenever 4.0 comes out, the 100 projects (or whatever) will similarly need to make updates - and possibly significant ones. I don't have a problem with switching to `openbabel.pc` but frankly you, or any other package maintainer shouldn't just assume that projects will be compatible with another major version change by tinkering with the `pkg-config` or cmake files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415:169,config,config,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415,3,['config'],['config']
Modifiability,"I think I have discovered the problem. File test/CMakeLists.txt includes this command that appears aimed, in part, at controlling the relevant environment variables when the tests are run:. set_tests_properties(${test}_Test PROPERTIES; FAIL_REGULAR_EXPRESSION ""ERROR;FAIL;Test failed""; ENVIRONMENT ""BABEL_LIBDIR=${CMAKE_BINARY_DIR}/lib""; ENVIRONMENT ""BABEL_DATADIR=${CMAKE_SOURCE_DIR}/data""). ""ENVIRONMENT"" is a documented test property in CMake 2.8, but not in CMake 2.6. For what it's worth, the build requirements at http://openbabel.org/docs/2.3.0/Installation/install.html specify CMake 2.4 as a minimum requirement. Original comment by: johnbollinger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802:155,variab,variables,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797802,1,['variab'],['variables']
Modifiability,I think adding; obErrorLog = cvar.obErrorLog; to openbabel.py will solve the problem for users. Then dir(openbabel) will show obErrorLog and all will be well. Are there other global variables that should be handled in the same way?. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794170:182,variab,variables,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794170,1,['variab'],['variables']
Modifiability,"I think my ""BTW"" is wrong. ""isprint"" is a more portable way to handle what *_ptr<0 is I think trying to do. Original comment by: dalke",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1138#issuecomment-281801100:47,portab,portable,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1138#issuecomment-281801100,1,['portab'],['portable']
Modifiability,"I think, it would be a good idea to follow the patch from CCT, mentioned in the original description. In particular, to define a set of rhombohedral groups:. ```; standard_rhombohedral_space_group_symbols = [; ""R 3 :H"",; ""R 3 :R"",; ""R -3 :H"",; ""R -3 :R"",; ""R 3 2 :H"",; ""R 3 2 :R"",; ""R 3 m :H"",; ""R 3 m :R"",; ""R 3 c :H"",; ""R 3 c :R"",; ""R -3 m :H"",; ""R -3 m :R"",; ""R -3 c :H"",; ""R -3 c :R""]; ```. And if the space group is one of those, than to rewrite R .. :H with H, as you noted.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/251#issuecomment-176899997:443,rewrite,rewrite,443,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/251#issuecomment-176899997,1,['rewrite'],['rewrite']
Modifiability,I thought I could call this function by openbabel.addFragment(). This is what the documentation suggests. I also tried OBMol.addFragment() with no luck. Anyone know how to access this function? Is it in a plugin or something?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2536:205,plugin,plugin,205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2536,1,['plugin'],['plugin']
Modifiability,"I tried to compile OpenBabel from source 76420f4d4c6bf786a5a0671f7c9b169718257121. Environment: Win7, CygWin, MinGW-w64 5.2.0, CMake 3.5.0. Used commands:. ```; mkdir build; cd build; cmake.exe -G ""Unix Makefiles"" -DBUILD_SHARED=OFF -DBUILD_GUI=OFF ..; make; ```. I got following errors:. ```; [ 76%] Linking CXX executable ../bin/babel.exe; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel18theOrcaInputFormatE[.refptr._ZN9OpenBabel18theOrcaInputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaInputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel19theOrcaOutputFormatE[.refptr._ZN9OpenBabel19theOrcaOutputFormatE]+0x0): undefined reference to `OpenBabel::theOrcaOutputFormat'; ../src/libopenbabel.a(plugin.obj):plugin.cpp:(.rdata$.refptr._ZN9OpenBabel13theEXYZFormatE[.refptr._ZN9OpenBabel13theEXYZFormatE]+0x0): undefined reference to `OpenBabel::theEXYZFormat'; ```. After a brief inspection I find out that the undefined references points to files in src/fromats. Those files are listed in the CMakeLists.txt file but not in the formats.cmake file, which is probably used during the build process. So the files were not build and that caused the undefined reference. It looks like this situation can be solved in at least two ways:; - Add exyzformat and orcaformat files to the formats.cmake .; - Remove reference to theOrcaOutputFormat, theOrcaInputFormat, theEXYZFormat from include/openabel/plugin.h and src/plugin.cpp . I do not know if this is caused by my environment or not, but I though that it may be a good idea to let you know about this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/282:364,plugin,plugin,364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282,8,['plugin'],['plugin']
Modifiability,"I tried to compile openbabel from github (5f0837...) on OSX 10.9 Mavericks with python extensions, using anaconda python. By default, cmake picks Apple's libpython2.7.dylib to compile the python extension against. This can be overridden by editing the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1296:288,variab,variables,288,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296,1,['variab'],['variables']
Modifiability,I tried to run configure;make without --disable-dynamic-modules; and the result is the same - babel.exe compilation fails at the same exact point... Original comment by: igor_filippov,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795360:15,config,configure,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795360,1,['config'],['configure']
Modifiability,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1290:586,config,config,586,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290,15,"['Config', 'config']","['Config', 'config']"
Modifiability,"I use debian stretch and for get a python binding i've had problem to install from pip, installation always search for swig program and in my system the installed version is the swig3.0, so i configure the setup to search between both version to choose always any installed version.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1665:192,config,configure,192,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1665,1,['config'],['configure']
Modifiability,"I used a profiler to find the stereofacade issue. That was essentially a misuse of the class. After that, there are a few more things that could probably be rewritten for speed such as CreateCanonTree, testing whether two stereo configs are equal, and finding the smallest ring a bond is in (maybe this latter is unnecessary in the smiles code). More generally, calling buffer.reserve at the start might help, caching option lookups, caching multiple accesses to GetIdx (etc).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019:229,config,configs,229,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019,1,['config'],['configs']
Modifiability,I want to add a reference here to https://github.com/openbabel/enhancement-proposals/pull/3. The code for atom-based spin multiplicity is undergoing some revisions at the moment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/340#issuecomment-311260181:63,enhance,enhancement-proposals,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/340#issuecomment-311260181,1,['enhance'],['enhancement-proposals']
Modifiability,I was (unfortunately) able to pinpoint the regression to 4094c68b87415889150377bd9dc419398ac78d8b which is @chrismorl 's rewrite of the cdx parser. So no easy revert there...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531794823:121,rewrite,rewrite,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531794823,1,['rewrite'],['rewrite']
Modifiability,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:281,plugin,plugins,281,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,1,['plugin'],['plugins']
Modifiability,"I was pulling my hair out over this failure, which occurred only with the Clang build (on Linux)...but it's right. It's not loading the plugins that requires this to be set, but ""import _openbabel"" (or it's equivalent) in the openbabel.py. That pulls in the .so file. Still don't understand the underlying reason why, but at least I know where the fix goes now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991:136,plugin,plugins,136,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991,1,['plugin'],['plugins']
Modifiability,"I would like to set up an automated system to generate 'dev' snaps. There is a place for these on the 'edge' channel. The documentation at https://docs.snapcraft.io/build-snaps/ci-integration describes how to do this, either via Travis or Launchpad. I'm not keen to rope Travis into this as the configuration is a bit involved, and according to the Travis docs, the credentials only last a year at a time. Via Launchpad, it says to set up an openbabel project. One exists, and it's currently owned by @ginggs. So, the question is, would you (@ginggs) be willing to run through the steps required? Obviously I'd be happy to do it instead, but I guess I'd need to be made an admin or something of the openbabel Launchpad project - is this possible?. Note that I haven't already checked in a snapcraft.yaml, but I guess I'd need to do that. (It doesn't say this anywhere in the docs.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1679:295,config,configuration,295,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1679,1,['config'],['configuration']
Modifiability,"I'd be happy to draft something for the OBChargeModel class. It's something I considered previously to allow parameterization, e.g. of the EEM methods.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/157#issuecomment-97423014:109,parameteriz,parameterization,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157#issuecomment-97423014,1,['parameteriz'],['parameterization']
Modifiability,"I'm afraid that this fix doesn't work on Windows 7. If you look in winnt.h what is __TEXT defined as?. I have:; #define __TEXT(quote) L##quote // r_winnt; #define TEXT(quote) __TEXT(quote) // r_winnt. ...so all TEXT does is stick the letter L in front of the string, which doesn't do anything sensible if it's a variable name.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311641969:312,variab,variable,312,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311641969,1,['variab'],['variable']
Modifiability,"I'm going to mark this as closed at this stage. Based on John's comment, it looks like CMake 2.8 is required for running the tests correctly, otherwise the environment variables need to be set manually. I guess it's more of a documentation problem than a bug. We should bump up our requirements for CMake version perhaps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803:168,variab,variables,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797803,1,['variab'],['variables']
Modifiability,"I'm going to suggest MinGW or using automake/configure. If you have problems building either of these, please follow up. I don't think we can support a buggy Cygwin compiler anymore. GCC 3.4 was released 2004-2005. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/811#issuecomment-281793733:45,config,configure,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/811#issuecomment-281793733,1,['config'],['configure']
Modifiability,"I'm in favor. It seems like the OpenSMILES list has adopted the enhancement, and RDKit has also merged.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-340573155:64,enhance,enhancement,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-340573155,1,['enhance'],['enhancement']
Modifiability,"I'm interested in using babel for getting Dreiding atom types. I've ; tried using v1.100.2 for this, but there were some configurations that ; would not be typed right. Going through the mailing list archives I ; found that in the v2 snapshots a lot has been done to improve atom ; typing. ; Today I compiled v2 (complete version 2.0.0b5-20051001) to get see ; if this new version would improve things.; When I convert the following xyz file to bgf the . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485:121,config,configurations,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485,1,['config'],['configurations']
Modifiability,"I'm no expert in gdb either, but you need to set a breakpoint on the relevant line before typing `run`. I think it's something like; `break mcdlutil.cpp:2575`; And then you can inspect the variables by doing things like `print i` and step through the program with `next`. `l` will show you the current source line to make sure you are where you think you are in the program.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942283686:189,variab,variables,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942283686,1,['variab'],['variables']
Modifiability,"I'm not entirely sure, but I suppose this check for ZLIB availability is necessary.; Otherwise, CMake throws an error due to missing variable 'ZLIB_LIBRARY'.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/357:133,variab,variable,133,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/357,1,['variab'],['variable']
Modifiability,"I'm not using pybel at all, but importing pybel fixes my problem of `Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable`. Kind of weird.; ```; from openbabel import openbabel as ob # the original import ; from openbabel import pybel # adding this line fixes my problem; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-2076907385:94,plugin,plugins,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-2076907385,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"I'm using the r4724 developer version (where radical valence have been corrected). I am intensively using group additivity and I found the following problem:; I defined an ObGroupContrib in plugindefines as follow . OBGroupContrib; LnIntSymm ; LnInternalSymm.txt ; LOWER BOUND: ln internal symmetry number. I defined the following groups in LnInternalSymm.txt (methyl, single substituted c6 aromatic ring, meta substituted c6 aromatic ring); ;heavy; [CH3]-* 1; *-c1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; *-c1:[cH]:[cH]:[c](-*):[cH]:[cH]:1 100. I checked my smiles using http://www.daylight.com/daycgi_tutorials/depictmatch.cgi. I expected 11 for toluene, 202 for para xylene (the ""meta"" substitution will be found twice), 2 for orto and meta xylene.; I got 10 for toluene, 200 for para xylene, 2 for orto and meta xylene. I tried to ""understand"" the error:; 1 - If I leave only the methyl group, it is properly recognized. Toluene gives 1, xylenes 2); 2 - If I swap 1st and 2nd group in LnInternalSymm.txt Toluene will give 1, while para-xylene, mantains 200.; 3 - If I put methyl groups as the last group. Only the number of methyl groups is found. (1 for toluene, 2 for any xylene). It seems to me that if on a bond both conditions match, then only the ""last one"" is considered.; I don't need a fix for this: modifying the smiles as follow (i.e. considering only the atoms on ""one side"" of the bond), I have the correct results:. ;heavy; [CH3v4] 1; [cH0v4]1:[cH]:[cH]:[cH]:[cH]:[cH]:1 10; [cH0v4]1:[cH]:[cH]:[cH0v4]:[cH]:[cH]:1 100. Still, I think that is a bug and should be corrected on your next release; Samuele Sommariva. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1164:190,plugin,plugindefines,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1164,1,['plugin'],['plugindefines']
Modifiability,"I've been working on eliminating warnings from ""-W -Wall"" (for ""make openbabel"") with the aim of adding this to Travis. Here's one I don't immediately see the correct solution for (does it indicate a bug, for example?), but @ghutchis might:; ```; /home/noel/Tools/openbabel-git/src/forcefield.cpp: In member function 'void OpenBabel::OBForceField::DistanceGeometry()':; /home/noel/Tools/openbabel-git/src/forcefield.cpp:1962:26: error: variable 'l_bc' set but not used [-Werror=unused-but-set-variable]; double l_ab, l_bc, l_ac; // lower limits; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1735:436,variab,variable,436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1735,2,['variab'],['variable']
Modifiability,"I've installed vanilla OpenBabel2 on a Fedora Core 4 Linux:. ./configure; make; make install. After that 'babel' and 'obgrep' give a 'Segmentation; Fault' with no further reason. My first try was to disable the SELinux protection; subsystem, but to no avail. regards,. Ernst-Georg. Reported by: @ergo70",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517:63,config,configure,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517,1,['config'],['configure']
Modifiability,"I've just installed openbabel-2.1.1 from source without incident (though make and configure outputs are attached), and when I then create the perl makefile and run make, I also experience no errors). However, when I run 'make test', the conversion test fails:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0, 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok ; t/bond.............ok ; t/conversion.......FAILED tests 5-6, 8 ; Failed 3/9 tests, 66.67% okay; t/data.............ok ; t/format...........ok ; t/internalcoord....ok ; t/mol..............ok ; t/residue..........ok ; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 9 3 33.33% 5-6 8; Failed 1/8 test scripts, 87.50% okay. 3/35 subtests failed, 91.43% okay.; make: *** [test_dynamic] Error 2. Doing a little debugging of the conversion test script, it looks like the line:. $obConversion->ReadString($obMol,""C1=CC=CS1"");. ; is failing silently as it creates an empty $obMol object, with no atoms. Also, the line:. $obConversion->WriteFile($obMol, ""test.mdl"");. appears to be failing silently as no file is created. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/677:82,config,configure,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/677,1,['config'],['configure']
Modifiability,"I've just installed the mac binary version 2.1.1, and so far all attempts to run the program generate a set of LoadFormatFiles errors. I've tried several files, going from cml to pdb or pdb to cml, and I've tried both direct command-line invocation and running via iBabel. This might be an installer problem, a system config problem, or simple user error. os version: osX 10.4.11; python version: 2.3.5; babel version: 2.1.1 via mac binary installer pkg. typical error message (this one from iBabel, but command-line is the same). computer:~ me$ /usr/local/bin/babel -icml '/Users/me/Documents/web_downloads/1UD0.pdb' -ocml '/Users/me/Desktop/outputfile.cml' ; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cdxmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlreactlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/pubchem.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/xmlformat.so did not load properly; babel: cannot read input format!. Am attaching a typical pdb file that fails to convert. Reported by: eingersoll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744:318,config,config,318,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744,1,['config'],['config']
Modifiability,"I've now been able to work round this issue by setting the required variables manually in my program's CMakeLists.txt:. set(OPENBABEL3_INCLUDE_DIR ""/home/kevin2/software/openbabel/3.1.1/include/openbabel3""); set(OPENBABEL3_LIBRARIES ""/home/kevin2/software/openbabel/3.1.1/lib/libopenbabel.so""). Program now works fine although I unfortunately I loose portability. However it solves the immediate problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2305#issuecomment-735896928:68,variab,variables,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2305#issuecomment-735896928,2,"['portab', 'variab']","['portability', 'variables']"
Modifiability,"I've taken a chance on this one, rather than writing up the Enhancement Proposal. Here goes... Atom class data is currently stored as an OBAtomClassData object on an OBMol. This PR moves it to being stored on an OBAtom directly. The overall rationale for this change is not so much the conceptual issue of atom data being stored on the molecule object - sure, this is true, but it's something I could live with. The problem is that the data is currently stored using atom indices, and these require bookkeeping/updating when the molecule is modified. All of this bookkeeping goes away if the information is stored directly on an atom. This is a performance issue for a molecule with multiple atom classes - just consider that a call to DeleteAtom() ~~for an atom with an atom class~~ means that all of the existing atom classes may need to be adjusted. Note that this doesn't yet address #1731, but I will do this next.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1741:60,Enhance,Enhancement,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1741,1,['Enhance'],['Enhancement']
Modifiability,"If ""folding"" is requested for fingerprints from smaller to larger; bit sizes, simply extend the vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1658:85,extend,extend,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1658,1,['extend'],['extend']
Modifiability,"If OpenBabel choses to adopt to support the `CFG=2` marker in `.mol` / `.sdf` files for alkenes, this equally would affect the assignment of SMILES. At present, a `.sdf` (v3000) file about (*Z*)-butene, (*E*)-butene, and but-2-ene without an explicit assignment of configuration (i.e., three entries) assigns as SMILES; ```; C/C=C/C; C/C=C\C; C/C=C/C; ```; where the last one is anticipated as `CC=CC`. Should InChI trust adopt a license compatible to OpenBabel, working with `CFG=2` would equally influence the assignment of InChI and InChIKey, too. [butene_conformer.zip](https://github.com/openbabel/openbabel/files/7537445/butene_conformer.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660:265,config,configuration,265,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429#issuecomment-968699660,1,['config'],['configuration']
Modifiability,"If you can figure out how to get the installer to a create soft link from openbabel-3.pc to openbabel.pc, we'll accept a PR. I don't know much about the conventions for pkg-config - are we sure that the correct convention is to leave out the major library version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626932111:173,config,config,173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626932111,1,['config'],['config']
Modifiability,"If you use CMake 2.8, and rerun the configure step, ""make test"" should work better now. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353:36,config,configure,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796353,1,['config'],['configure']
Modifiability,Importing pybel instantiates an OBConversion and gets the list of formats. I'd presume that any non-trivial 'openbabel' script would trigger the same problem. So it could be that the plugins aren't found. I keep meaning to fix the segfault triggered by no-formats found...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-126202747:183,plugin,plugins,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-126202747,1,['plugin'],['plugins']
Modifiability,Improve the CMake config files,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2315:18,config,config,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2315,1,['config'],['config']
Modifiability,"In a previous commit, the type of the variable i was changed from int to unsigned int. As a result, the back substitution loop became infinite (comparison of unsigned int with zero) and the arrays B and A were accessed beyond their bounds causing a segfault.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/241:38,variab,variable,38,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241,1,['variab'],['variable']
Modifiability,"In addition (or better, as an alternative) to automake/autoconf support, I ; suggest support for CMake. KDE recently switched to using CMake for ; configuration and building on Linux/UNIX, Windows, and Mac. Supporting CMake would make it much easier to integrate KDE programs ; and Open Babel. :-). Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/100"":https://sourceforge.net/p/openbabel/feature-requests/100",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469:147,config,configuration,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469,1,['config'],['configuration']
Modifiability,"In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/op.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12257,plugin,plugin,12257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"In future, it's best to make separate pull requests for unrelated changes. The plugin fix is long overdue. Maybe Geoff can comment on the other.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/239#issuecomment-159933229:79,plugin,plugin,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/239#issuecomment-159933229,1,['plugin'],['plugin']
Modifiability,"In some MDL files, I found the R# symbols can not handle by MDL plugin. for example:; 51.0955 -14.3670 0.0000 R# 0 0 0 0 0 0 0 0 0 0 0 0. And in bool MDLFormat::TestForAlias() it does not support this format. if(symbol.size()==1 || isdigit(symbol[1]) || symbol[1]=='\'' || symbol[1]=='¢'). Thank you. Reported by: axot. Original Ticket: [openbabel/bugs/876](https://sourceforge.net/p/openbabel/bugs/876)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1256:64,plugin,plugin,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1256,1,['plugin'],['plugin']
Modifiability,"In the SMILES writer, the profiler showed IsOption() as talking up a percent or two. I've cached a few of the options in the functions highlighted by the profiler. Is it possible to persist some variables between repeated calls to the writer (or would this cause some threading issues) as this would be a potential improvement?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718:195,variab,variables,195,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718,1,['variab'],['variables']
Modifiability,"In the current parser for mmCIF `mmcifformat.cpp`, only part of the fields are read into the molecule.; For example, below are read:. ```; _atom_site_fract_x, // The x coordinate specified as a fraction of _cell_length_a; _atom_site_fract_y, // The y coordinate specified as a fraction of _cell_length_b; _atom_site_fract_z, // The z coordinate specified as a fraction of _cell_length_c; _atom_site_Cartn_x, // The x coordinate in angstroms; _atom_site_Cartn_y, // The y coordinate in angstroms; _atom_site_Cartn_z, // The z coordinate in angstroms; _atom_site_label, // The atomic label if more detailed label info unavailable; _atom_site_label_atom_id, // The atomic label within the residue; _atom_site_label_comp_id, // The residue abbreviation, e.g. ILE; _atom_site_label_entity_id, // The chain entity number of the residue, e.g. 2; _atom_site_label_asym_id, // The unique chain id; _atom_site_label_seq_id, // The sequence number of the residue, within the chain, e.g. 12; _atom_site_type_symbol, // Atomic symbol, e.g. C; ```. such are not (from a typical mmCIF file):. ```; _struct_site_gen.auth_comp_id ; _struct_site_gen.auth_asym_id ; _struct_site_gen.auth_seq_id ; ```. Is there any chance that the mmCIF parser can be updated to read such fields into the molecule?. My current project needs to parse the mmCIF files and requires the information in __struct_site_gen.auth_comp_id_. It is not difficult to modify the parser to read such attributes, but I cannot find the corresponding _setter_ and _getter_ in `OBMol`. Maybe a class that inherits `OBMol` with its own additional private variable and _setters_ can do the job. My c++ is poor and I am wondering if such a derived class is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/230:1550,inherit,inherits,1550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/230,2,"['inherit', 'variab']","['inherits', 'variable']"
Modifiability,"Inputs similar to the following:. #b3lyp/6-31g. asfas. 0 1; xx; n 1 nxx2 ; h 2 hn3 1 hnxx3 ; h 2 hn3 1 hnxx3 3 dih4 ; h 2 hn3 1 hnxx3 3 -dih4 ; Variables: ; nxx2 0.980000; hn3 1.089000; hnxx3 109.471; dih4 120.000. were not read correctly, for two reasons: (1) the minus sign on the dihedral was not dealt with correctly and (2) when the code created the internal coordinates, the read dihedral angle was erroneously assigned to the bond angle. I have fixed the bug, here are the diffs:. diff gausszmatformat.cpp.bug gausszmatformat.cpp; 353,356c353,362; < if (endptr != (char*)vs[6].c_str()); < vic[j]->_ang = temp;; < else; < vic[j]->_ang = variables[vs[6].c_str()];; ---; > if (endptr != (char*)vs[6].c_str()) {; > vic[j]->_tor = temp;; > }; > else {; > const char* tor_str = vs[6].c_str();; > if (tor_str[0] == '-'); > vic[j]->_tor = -1 * variables[tor_str+1];; > else; > vic[j]->_tor = variables[tor_str];; > }. Regards; Hugh Chaffey-Millar; hugh.chaffey-millar@ch.tum.de. Reported by: hughc318",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/896:144,Variab,Variables,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/896,4,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"It is hard to change all APIs related to PRNG, so I added `OB_RANDOM_SEED` environment variable (#2241). ```shellsession; $ export OB_RANDOM_SEED=42; $ diff <(obabel -:CCC --gen3D -oxyz) <(obabel -:CCC --gen3D -oxyz); 1 molecule converted; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-644515730:87,variab,variable,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-644515730,1,['variab'],['variable']
Modifiability,"It used to be openbabel-2.0.pc, and now it is openbabel-3.pc. This practice just forces all projects to update their pkg-config arguments, whether this is needed or not. In case this isn't needed this is just an unnecessary disruption. In case there are changes that break this project the project still needs to be fixed. Encoding the version into .pc file doesn't accomplish anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216:121,config,config,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216,1,['config'],['config']
Modifiability,"It would depend on how the variables are retained, as far as threading goes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349808243:27,variab,variables,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349808243,1,['variab'],['variables']
Modifiability,It's not apparent from the Jmol documentation how the pngj format is constructed. But looking at the supplied file suggests that it is too dissimilar to the OpenBabel png format to be easily adapted. Instead it should probably be a separate format and I do not know how big the overlap is.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434:191,adapt,adapted,191,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428#issuecomment-969047434,1,['adapt'],['adapted']
Modifiability,"It's the static inclusion of external libraries into the gui executable that's the problem (I think?), not so much shared library build. The variable names in the CMake file are a bit confused.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304996412:141,variab,variable,141,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304996412,1,['variab'],['variable']
Modifiability,"Iter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData.java:64: cannot find symbol; symbol : variable OBBitVec; location: class OBResidueData; return openbabelJNI.OBResidueData_AssignBonds(swigCPtr, OBMol.getCPtr(arg0),; OBBitVec.getCPtr(arg1));. ^; OBSmartsPattern.java:100: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_2(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv), single);. ^; OBSmartsPattern.java:104: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_3(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv));. ^; OBUnitCell.java:61: cannot find symbol; symbol : variable SpaceGroup; location: class OBUnitCell; openbabelJNI.OBUnitCell_SetSpaceGroup__SWIG_0(swigCPtr, SpaceGroup.getCPtr(s; g));; ^; OBUnitCell.java:106: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; return (cPtr == 0) ? null : new SpaceGroup(cPtr, false);; ^; OBUnitCell.java:126: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetCellMatrix(swigCPtr), true);. ^; OBUnitCell.java:130: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetOrthoMatrix(swigCPtr), true); ;; ^; OBUnitCell.java:134: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetFractionalMatrix(swigCPtr),; true);; ^; openbabel.java:160: cannot find symbol; symbol : variable OBAromaticTyper; location: class openbabel; openbabelJNI.aromtyper_set(OBAromaticTyper.getCPtr(value));; ^; openbabel.java:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:4971,variab,variable,4971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"Just checked openbabel.cvar on Linux. It gives the following:. Swig global variables (AliasDataType, resdat, chainsparser, atomtyper, aromtyper, isotab, ttab, etab, ElemNo, ResNo, ElemDesc, Residue, obErrorLog, VZ, VY, VX, VZero). (On Windows, ""print openbabel.cvar"" crashes Python - a SWIG error). Is it worthwhile making any of these additional variables accessible? After all, it's easy for the user to instantiate most of them. This is in contrast to obErrorLog, where it is important to be able to access that specific instance. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171:75,variab,variables,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171,2,['variab'],['variables']
Modifiability,"Just like you can re-use an OBMol, it would be nice to be able to reuse a std::vector as there might be some performance benefit both from avoiding creating the variable again in Python, and from avoiding some mallocs on the C++ side. With this in mind, I've commented out the SWIG directive to ignore the .clear() method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:161,variab,variable,161,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,1,['variab'],['variable']
Modifiability,"Just remembered that I left this comment hanging. To finish my thoughts:. Already as part of the kekulization changes the SMILES output has changed. For example, I write out a bond symbol between aromatic atoms if the bond in is a ring and is not itself aromatic. So don't let changing the canonical order hold you back - improving the speed of the canonicalisation would be great. There are some other features of the current approach that would be great to change if you decide to do this (interested in writing an OB Enhancement Proposal?). Regarding John's canonicalisation, he hopes to write this up but nothing is going to happen in the short term - he's busy working on some CIP stuff.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386#issuecomment-317710436:520,Enhance,Enhancement,520,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386#issuecomment-317710436,1,['Enhance'],['Enhancement']
Modifiability,"Logged In: NO . Hi,. I had the very same problem. As yuo can see, the error arise from the use ; of gcc 4.0.0 (in the lines /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/). So, in order to have a working version of open babel you should:. > sudo gcc_select 3.3; > ./configure; > make; > make install. You see, the trick is to tell the system to use gcc v3.3.; After you succesfully compile openbabel, remember to:. > sudo gcc_select 4.0. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857:261,config,configure,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775857,1,['config'],['configure']
Modifiability,"Logged In: NO . One of the disadvantages of compiling from the HEAD code is that people keep changing it. The errors about _finite are due somebody's changes which necessitates including float.h in mol.h. Revision 2528 and later have this. Do another Update. I not entirely sure what odbccp32.libi is and it is not in the VC2005 Express distribution I have, so I can be of limited help. odbccp32.lib appears in the list of Additional Dependencies in \VC\VCProjectDefaults\CoreWin.vsprops but not in my express version. You could try removing it and restarting Visual Studio (or maybe there is something in your version's IDE to do this), but this may affect some of your other programs. Alternatively, you could add odbccp32.lib to each project's Properties Configuration Properties/Linker/Input/Ignore Specific Library. The other warnings can be ignored. (There are fewer than there were.). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143:758,Config,Configuration,758,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781143,1,['Config'],['Configuration']
Modifiability,"Logged In: NO . These 'extra' functions are in the Boost header library, AFAIK. They must be included with GCC4. Could one of the C++ gurus please explain update the Configure and Makefile if Boost is required with GCC3.4.x? Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199:166,Config,Configure,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780199,1,['Config'],['Configure']
Modifiability,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:68,plugin,plugin,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"Logged In: YES ; user_id=1102637; Originator: YES. I don't know if hardcoding the binary name is a good idea. One can change the binary name via the configure options --program-prefix, --program-suffix or --program-transform-name. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479:149,config,configure,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780479,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1189615. I can see the cause of the problem, introduced in the recent ; upgrading of Options. It arises because an over-ambitious ; attempt at generality and extendibility. Options can take ; associated text (e.g. -s) or not (e.g. -p), but this is not known ; to the main() function because an option may be introduced ; by a format class. If the option was a single letter and the ; text was concatinated, there would be no problem. But with ; the text following after a space (also a unix way? and ; necessary with long options), main() can mistake a following ; file name for option-associated text. This is not easy. If a -S option takes a filterfilename, . babel infilename outfilename -S filterfilename; babel infilename -oxxx -S filterfilename. would be unambiguous. But. babel -S filterfilename infilename outfilename; babel -S filterfilename infilename -oxxx. would be difficult for main() if it didn't know whether -S took ; data or not, since it may think filterfilename is an input file. A solution would be for formats to register at start up whether ; their options had associated text, like they currently register ; their file extensions. While this may be over-elaborate, it ; would be transparent to the user, and not difficult for a format ; class developer. I'll look into it. . Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691:183,extend,extendibility,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/472#issuecomment-281775691,1,['extend'],['extendibility']
Modifiability,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:179,variab,variable,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,1,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:313,extend,extended,313,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076,1,['extend'],['extended']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I have added OBCommonFormats to FastSearch's dependencies, which should sort out the build order. The warnings can ignored. Keeping these tidy is a continuing task since not all developers get the same warnings. You probably want to build in Release mode. There was a recent glitch which meant that Debug configurations were being used even when it said Release at the top. I hope this is now corrected. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137:355,config,configurations,355,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137,1,['config'],['configurations']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I think these molecules are handled correctly if the attached atomtyp.txt replaces that in v2.2.0. The current way of handling valence requires a SMARTS pattern for each configuration, e.g. the one for O+ with a triple bond was missing. There may be other SMARTS patterns needed, so could you try with some more of your exotic molecules? . Chris; File Added: atomtyp.txt. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756:220,config,configuration,220,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756,1,['config'],['configuration']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:323,variab,variable,323,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476,1,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:108,plugin,plugin,108,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644,2,['plugin'],"['plugin', 'pluginiter']"
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. In OpenBabel v2.2.0 you can also use:; babel -L formats ; which has an output like:; xml -- General XML format [Read-only]; xyz -- XYZ cartesian coordinates format; yob -- YASARA.org YOB format; zin -- ZINDO input format [Write-only]; which I don't think is too difficult to parse and is almost what you suggest. or ; babel -L formats read; which has the same output (except the bracketed item is omitted) for formats that can be read, and of course similarly for write. babel -L formats verbose or babel -Hall; gives complete information on all formats, including the format-specific options. It would not be less easy to parse however. If you were using the C++ API or the Python or other scripting interface there are other more flexible ways of listing the formats. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016:782,flexible,flexible,782,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016,1,['flexible'],['flexible']
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. Is this what is required?. >echo CCO|babel -ismi -ocml --AddPolarH; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a3 a4"" order=""1""/>; </bondArray>; </molecule>; 1 molecule converted; 22 audit log messages. Options like these can be added as plugins, without altering existing code.; The code is in src/ops/addpolarh.cpp and it should be compiled like gen3d.cpp. (It is very similar - I just altered a few words.) Feel free to make or suggest improvements. Command-line options which are OBTransforms can be added without compiling, see data/plugindefines.txt. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957:581,plugin,plugins,581,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957,2,['plugin'],"['plugindefines', 'plugins']"
Modifiability,Logged In: YES ; user_id=1189615; Originator: NO. The main cause of this seems to be that the fragments.txt data file is not being found.; Setting the Environment Variable BABEL_DATADIR to the installation directory (this is C:\Program Files\OpenBabel-2.2.0 for me) seems to fix the problem. (Use Control Panel/System/Advanced/Environment Variables). What is going on needs further investigation since the current directory does not seem to be what I was expecting. It would probably worth setting the Environment Variable in the installer. This is partly the same problem as bug #2013806 and partly the bug with linear molecules #2014055. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435:163,Variab,Variable,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435,3,['Variab'],"['Variable', 'Variables']"
Modifiability,"Logged In: YES ; user_id=1189615; Originator: NO. Try setting an environment variable BABEL_DATADIR to the directory where OpenBabel was installed, probably, C:\Program Files\OpenBabel-2.2.0 . You can set environment variables in Control Panel/System/Advanced/Environment Variables. Post here again if this doesn't work. . The installer should have set BABEL_DATADIR, and it not doing so has caused other problems too. The installer OpenBabel2.2.0_Windows_Installer2.exe does set it. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531:77,variab,variable,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531,3,"['Variab', 'variab']","['Variables', 'variable', 'variables']"
Modifiability,"Logged In: YES ; user_id=1189615; Originator: YES. [CH4] now works, but [OH][OH] and c1[nH]ccc1 don't. The OO and the non-standard c1nccc1 are ok. Its difficult for you to find a bug if you can't reproduce it. I can, so I'll urgently look into this further because it is a show-stopper. Previous intermittent bugs were the non-terminated char array in atoi and returning references to local variables. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125:391,variab,variables,391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125,1,['variab'],['variables']
Modifiability,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:128,config,configure,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1377149; Originator: NO. OpenBabel 2.2.0 is in my PATH variable, but I still get this error unless fragments.txt is in my current working directory. I've found that a solution is to set the BABEL_DATADIR variable. Sam. Original comment by: sea36",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427:80,variab,variable,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427,2,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:528,config,configure,528,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:381,config,configuration,381,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164,1,['config'],['configuration']
Modifiability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:548,plugin,plugins,548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356,1,['plugin'],['plugins']
Modifiability,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:585,extend,extend,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,2,['extend'],"['extend', 'extended']"
Modifiability,"Logged In: YES ; user_id=169818; Originator: NO. Thanks for the clustering links and I am more in favor of creating an appropriate output format based on fingerprints and/or molecular features. ; A comma or space delimited format should work, e.g. by extending obprop? Does anyone know the best input format for this cluster package?. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327:251,extend,extending,251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327,1,['extend'],['extending']
Modifiability,Logged In: YES ; user_id=1871725; Originator: YES. I was able to compile a functioning executable babel.exe under cygwin.; Here are the sequence of steps for 2.1.1:; tar -xzf openbabel-2.1.1.tar.gz; cd openbabel-2.1.1; ./configure; cd src/formats/inchi; make; cd ../../../tools; edit the Makefile to add the following lines ; (output of diff Makefile Makefile.orig):; ############# begin output ########################; 15c15; < formats_objects := $(wildcard ../src/formats/*.o) ../src/formats/inchi/.libs/libinchi.a; ---; > ; 52c52; < babel_DEPENDENCIES = ../src/libopenbabel.la $(formats_objects); ---; > babel_DEPENDENCIES = ../src/libopenbabel.la; 223c223; < babel_LDADD = ../src/libopenbabel.la $(formats_objects); ---; > babel_LDADD = ../src/libopenbabel.la ; ####################### end output ##############; (you will have to repeat the editing for the rest of the executables; if you need more than babel.exe); cd ..; make; make install. Original comment by: igor_filippov,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069:221,config,configure,221,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069,2,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Build from FastSearch. LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'. Another dependency?. Result:. ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprint",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:209,Config,Configuration,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Error	1	fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory	c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel\reaction.h	26	OBMoreFormats; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory	BSCMAKE	OBMoreFormats. Results:; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; chemdrawct.cpp; chemtoolformat.cpp; cifformat.cpp; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\map(78) : see reference to class template instantiation 'std::_Tree<_Traits>' being compiled; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; ..\..\src\formats\cifformat.cpp(176) : see reference to class template instantiation 'std::map<_Kty,_Ty>' being compiled; with; [; _Kty=std::set",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:402,Config,Configuration,402,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Errors Remaining:. OBMoreFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . OBXMLFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . Results for All OB Components: . FastSearch:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific bab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:435,Config,Configuration,435,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. Looks like that squashed it. I will continue and try to build; all the other parts. Results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150:193,Config,Configuration,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150,2,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. building OBCommonFormats debug mode; 16 errors; error LNK2001: unresolved external symbol. results:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atomrecord.cpp; mdlformat.cpp; obmolecformat.cpp; opendxformat.cpp; smilesformat.cpp; Generating Code...; Compiling...; APIInterface.cpp; mol2format.cpp; pdbformat.cpp; Generating Code...; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); smilesformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); obmolecformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); opendxformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054:200,Config,Configuration,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. did svn update. Build FastSearch. Result:. LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'. log below:. ------ Build started: Project: OBError, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Debug\BuildLog.htm""; OBError - 1 error(s), 0 warning(s); ------ Build started: Project: OBDLL, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atom.cpp; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:208,Config,Configuration,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,2,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. doing some more tracing,; show include files and; boost/detail/workaround.hpp; is where it starts to go wrong. this file contains info related to; fixes for various compilers. the latest boost provides support; for VC9 (VS2008) but it seems; that it is not configured or; called in the application. (makes sense as the recommended; version is VS2005). hopefully someone with more knowledge; will be able to grok this file; and get it sorted. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160:308,config,configured,308,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160,1,['config'],['configured']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; building OBCommonFormats release mode - success. results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055:173,Config,Configuration,173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; compiling OpenBabelOBF.sln now works:. Results:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ----",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:155,Config,Configuration,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,3,"['Config', 'plugin']","['Configuration', 'plugin']"
Modifiability,"Logged In: YES ; user_id=1918617; Originator: YES. so this time I made sure it was release mode for all projects; (see attached screen from configuration manager). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:140,config,configuration,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,3,"['Config', 'config', 'plugin']","['Configuration', 'configuration', 'plugin']"
Modifiability,"Logged In: YES ; user_id=1933558; Originator: YES. Thanks Chris, that's great.; I had no idea that OB offered this plugin system... perhaps it should be mentioned on the wiki?. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959:115,plugin,plugin,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959,1,['plugin'],['plugin']
Modifiability,"Logged In: YES ; user_id=196016; Originator: NO. OK, I think I found the issue. The current code expects a lines ""Variables:"" to seperate the connectivity block from the variables block. So, the following input works for me:. #. water. 0 1; O; H 1 r; H 1 r 2 a; Variables:; r 0.9572; a 104.52. However, this is a bug, as the Gaussian manual says:. ""Variable definitions are separated from the atom position definitions by a blank line or a line like the following:; Variables: "". Furthermore, just putting the variables into the connectivity block like. #. water. 0 1; O; H 1 0.9572; H 1 0.9572 2 104.52. should work as well (at least Gaussian accepts it as input), however the gzmat format does not assign coordinates in this case either. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681:114,Variab,Variables,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681,6,"['Variab', 'variab']","['Variable', 'Variables', 'variables']"
Modifiability,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:403,portab,portable,403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087,1,['portab'],['portable']
Modifiability,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:255,adapt,adapting,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761,1,['adapt'],['adapting']
Modifiability,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:78,variab,variables,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:124,variab,variables,124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=21420. I'd be glad to enhance SMILES support for canonical SMILES -- but I ; cannot find a definitive specification anywhere. If someone could supply ; a URL or specification file, I'd be glad to ensure that output SMILES can ; be canonical. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815:47,enhance,enhance,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815,1,['enhance'],['enhance']
Modifiability,"Logged In: YES ; user_id=21420. I'm marking this closed, pending further comment or obvious bits that ; should be incorporated. I've perused the changes between the Open ; Babel fork and the last OELib iteration. The *vast* majority are changes in whitespace. Many others are changes that have been made in Open Babel (often ; with different approaches). Open Babel isn't OELib anymore -- it's evolved considerably.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542:394,evolve,evolved,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542,1,['evolve'],['evolved']
Modifiability,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:166,extend,extend,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242,1,['extend'],['extend']
Modifiability,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:120,config,config,120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932,3,['config'],['config']
Modifiability,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:88,variab,variable,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875,1,['variab'],['variable']
Modifiability,"Logged In: YES ; user_id=21420. Should be fixed in new code now in CVS -- starts adding &quot;const&quot; to char * variables in appropriate places (e.g. tokenize, GlobalDataBase data, etc.). -GRH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280:116,variab,variables,116,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=21420. Steps 6 and 9 are now absolutely complete.; Step 7 is partially implemented, though a more flexible; system (i.e. reading SMARTS patterns from a file) would be; much more useful. I've compiled the file, but not written; the code.; Step 8 will be the most difficult. Still, the current CVS code does a pretty good job if all; the valences exist (i.e. hydrogens have been added).; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501:123,flexible,flexible,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501,1,['flexible'],['flexible']
Modifiability,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:276,adapt,adaptation,276,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498,1,['adapt'],['adaptation']
Modifiability,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:126,config,configure,126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174,3,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:111,config,configure,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:136,plugin,plugin,136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed -- the Ruby bits are only run if Ruby was found by configure. Use the latest SVN trunk (revision 1627 or later, Dec. 2nd). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653:119,config,configure,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:137,plugin,plugins,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181,1,['plugin'],['plugins']
Modifiability,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:153,plugin,plugins,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645,2,"['evolve', 'plugin']","['evolve', 'plugins']"
Modifiability,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:775,config,configure,775,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:140,Config,Configuration,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926,1,['Config'],['Configuration']
Modifiability,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:78,variab,variables,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929,1,['variab'],['variables']
Modifiability,"Logged In: YES ; user_id=787122. To answer Peter's questions:; - DATADIR is the directory where applications have their; resources (as icons, static data, helpfiles,...) stored. The; default value is $(prefix)/share. Then in most cases the; real data are in a subdirectory, generally; $(datadir)/appname. Should DATADIR have been the default; value in OpenBabel, the bug would have not been found now.; Much worse, babelconfig.h defines VERSION...; -There is no need for a babelconfig.h in the CVS.; babelconfig.h.in is enough. The smae is true for configure,; Makefile.in and Makefile as far as the package uses autoconf; and automake.; My conclusion is that we have here a critical bug. A; priority of 5 is really a minimum. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928:549,config,configure,549,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:73,plugin,plugins,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176,3,"['config', 'plugin']","['configuration', 'plugin', 'plugins']"
Modifiability,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:140,config,config,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908,1,['config'],['config']
Modifiability,"Logged In: YES ; user_id=787122; Originator: NO. I have that too. This comes from the cifformat plugin. Apparently the cifformat mixes all the data blocks with a logic I don't understand, and calls SpaceGroup::Find with a group which has no name, no id, and no transform, clearly an invalid group. I'll try to investigate when time permits. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166:96,plugin,plugin,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166,1,['plugin'],['plugin']
Modifiability,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:169,config,configuration,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393,1,['config'],['configuration']
Modifiability,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:163,config,configured,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265,2,['config'],['configured']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. Attaching configure from David. checking for libxml - version >= 2.6.5... yes (version 2.6.16). Hmmm...so it does have XML. Can I suggest that you download the latest snapshot (""Get latest beta release (01-Mar-08)"" on the install page) and see whether the issue has been resolved since the release of 2.1.1?; File Added: configure.out. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833:59,config,configure,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833,2,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. I assumed you looked at script/Makefile.in for the build instructions. In fact, the Ruby related lines in Makefile.in deviate from what you have done. To compile the SWIG extensions yourself, you should run configure as follows:; ./configure --enable-maintainer-mode. Then running make in the scripts directory should build the Ruby extension automatically. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978:256,config,configure,256,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978,2,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I've just spent an hour or two trying to figure out this problem myself, and it has also caused several bug reports to date. I suggest sorting this out in configure by adding some extra tests. Here is what I suggest:; (0) The user optionally sets BOOSTDIR. (1) If BOOSTDIR is defined, then add ""-DUSE_BOOST"" to DEFS, and ""-I$(BOOSTDIR)"" to INCLUDES. (2) configure should then try to compile a test program involving ""tr1/whatever"". If it succeeds, it sets a flag HAS_BOOSTLIKE_HEADERS. Otherwise, it prints a warning message saying ""It looks like you don't have the Boost headers so the following formats will not be compiled: chemdrawcdx, etc.. This is probably because you are using GCC3.x and don't have Boost installed. For more information, see http://openbabel.sf.net/Install (Source Code)"". (3) If HAS_BOOSTLIKE_HEADERS is not defined, don't compile any format that relies on the existence of Boost-like headers. (4) Update the documentation appropriately. I will do 4, and I can test 1-->3. (By the way, I note that although ./configure --includedir=whatever correctly sets includedir in the Makefile, the value of includedir does not seem to be incorporated into $INCLUDES.). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200:235,config,configure,235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200,3,['config'],['configure']
Modifiability,Logged In: YES ; user_id=850620; Originator: NO. Regarding the line:. cml...........FAILED tests 1-6. This indicates that you may not have compiled with CML support. Can you pipe the output of configure into a file and attach it to this bug report. This will let us know whether you are compiling with CML support or not. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831:193,config,configure,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831,1,['config'],['configure']
Modifiability,"Logged In: YES ; user_id=850620; Originator: NO. These snapshots don't contain the SWIG wrappers. You need to generate them yourself, with ./configure --enable-maintainer-mode (requires recent version of SWIG). I'm marking this bug as closed (pending). (For a related bug, see 1881688). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413:141,config,configure,141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413,1,['config'],['configure']
Modifiability,"Looks like a good idea. One thing that's been requested to add an OBOp plugin to set the RNG seed (e.g., #1934) - would you be willing to add that too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2241#issuecomment-633694665:71,plugin,plugin,71,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2241#issuecomment-633694665,1,['plugin'],['plugin']
Modifiability,"Looks like bug #1905826 (https://sourceforge.net/tracker/?func=detail&aid=1905826&group_id=40728&atid=428740) is back. \""Error: operand out of range\"" assembler error occurs while compiling openbabel-2.3.1 on ppc64 running Fedora 16:; ...; g++ -c -I../../include -I/builddir/build/BUILD/openbabel-2.3.1/include -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mminimal-toc -DVERSION=\\\""1.5.0\\\"" -DXS_VERSION=\\\""1.5.0\\\"" -fPIC \""-I/usr/lib64/perl5/CORE\"" openbabel-perl.cpp; In file included from /builddir/build/BUILD/openbabel-2.3.1/scripts/python/openbabel-python.cpp:3353:0:; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryAtom::Matches(const OpenBabel::OBAtom*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:101:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h: In member function \'virtual bool OpenBabel::OBQueryBond::Matches(const OpenBabel::OBBond*) const\':; /builddir/build/BUILD/openbabel-2.3.1/scripts/python/../../include/openbabel/query.h:179:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; openbabel-perl.cpp: In function \'void boot_Chemistry__OpenBabel(PerlInterpreter*, CV*)\':; openbabel-perl.cpp:44614:3: warning: unused variable \'items\' [-Wunused-variable]; {standard input}: Assembler messages:; {standard input}:1233442: Error: operand out of range (0x0000000000008000 is not between 0xffffffffffff8000 and 0x0000000000007ffc). Reported by: dmierzej",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1147:1646,variab,variable,1646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1147,2,['variab'],['variable']
Modifiability,"Looks nice, although I have some questions beyond point clouds.. Many people would like solvent-accessible or solvent-excluded surfaces at variable probe radii. The ""radius multiplier"" seems like it would be more useful from a user perspective as an additive factor (e.g., VdW + 0, +1 + 1.5Ang, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062:139,variab,variable,139,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062,1,['variab'],['variable']
Modifiability,Looks to me like the conditional for the cmake variable PYTHON_PREFIX has an error causing the variable to be always ignored. Patch attached. Reported by: volkmuth,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1004:47,variab,variable,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1004,2,['variab'],['variable']
Modifiability,"Major enhancement of PHP bindings. BaPHPel basically replicates Pybel API, which makes it very easy to transfer code from python with little effort. Also some minor enhancements are made, such as: exposing size() method on vectors, or installing the PHP extension in PHP configured directory.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/42:6,enhance,enhancement,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42,3,"['config', 'enhance']","['configured', 'enhancement', 'enhancements']"
Modifiability,Make install-dir configurable for each binding,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2289:17,config,configurable,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289,1,['config'],['configurable']
Modifiability,"Make sure that your server has the LD_LIBRARY_PATH set correctly. Otherwise, it cannot find shared modules. I think this is a user configuration problem on your server. I'd be happy to debug this on the openbabel-discuss list, but if it works fine from the shell, it's not an Open Babel bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/827#issuecomment-281793985:131,config,configuration,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/827#issuecomment-281793985,1,['config'],['configuration']
Modifiability,"May you please clarify what represents for you a «3D builder»?. *Assuming* this refers to a program to set up a computation in a program like Gaussian, Gamess-UK, Games-US, etc. the state of a molecule as radical is described by the spin of the molecule, independent to assigning the molecule as neutral, or charged. As an example, [Avogadro](https://avogadro.cc/) may either read a normal closed-shell molecule (like methane) from a `.mol` or `.sdf` or one may build one from which e.g., hydrogens are removed. With optional extensions you may then export this as as starting point for quantum chemistry calculations as illustrated below:*. ![example_avogadro](https://user-images.githubusercontent.com/19709084/184554375-3077e7f3-932e-40dc-b8b7-cc81995097c0.gif). Some assignments of charges and multiplicities for CH3 above only serve as illustration that it can be set up yet it shows that you can discern between e.g., methyl cation, methyl carbanion, and methy radical. In this perspective, Avogadro trades similar to interfaces like [gabedit](http://gabedit.sourceforge.net/). ![gabedit](https://user-images.githubusercontent.com/19709084/184554505-6e69ed1e-432b-4771-9996-c4bf568f104d.png). (image credit: example 7 of [screenshots](https://sites.google.com/site/allouchear/Home/gabedit/screenshots)). or [chemcompute](https://chemcompute.org). ![chemcompute](https://user-images.githubusercontent.com/19709084/184554567-311ae995-edc4-4533-aeb5-654503d08c79.png). *) In case the optional Avogadro Input Generators plugin (in Avogadro's GUI, Extensions -> Download Plugins; this one requires a working installation of Python) does not yet offer a bridge to your quantum chemical program, you may consider proposing an addition either on [GitHub](https://github.com/OpenChemistry/avogadroapp), or the public [discussion board](https://discuss.avogadro.cc/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938:1522,plugin,plugin,1522,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214448938,2,"['Plugin', 'plugin']","['Plugins', 'plugin']"
Modifiability,"Maybe I am wrong, my speculation however is you would like to define by yourself which program should display the .svg generated Openbabel when running the GUI. I think the developers' choice for a web browser like Firefox was that these programs capable to display the .svg as an image rather than a text typically already are installed. Running Linux Debian 11 bullseye (branch testing) comprising both OpenBabel (version 3.1.0) as well as the graphical editor [Inkscape](https://inkscape.org/) (version 1.0.2) I use successfully the «display only» program of the later, `inkview` to inspect a single .svg by. `inkview example.svg &`. or to browse through a collection of .svg in a folder by. `inkview *.svg &`. As mentioned earlier [here](https://gitlab.com/inkscape/inbox/-/issues/3712#note_422339579), this works well for .svg generated by RDKit, but equally for .svg by OpenBabel. (For comparison, I attach reference data by both below.) Thus, if running `obgui` in Linux, I would welcome if it were possible to set a pointer like `/usr/bin/inkview %s` when instructing OpenBabel about which viewer to use. There are other programs to display .svg visually, too. Examples include [irfanview](https://www.irfanview.com/) if extended by the optional plugin; or [Xnview](https://www.xnview.com/en/xnviewmp/), and `display` of [ImageMagick](https://imagemagick.org/script/index.php). However, these often rasterize the display of the image; by consequence, the benefits scaling a vector image (crisp representation) may be lost. [RDKit_example_svg.zip](https://github.com/openbabel/openbabel/files/6056583/RDKit_example_svg.zip); [babel_test.zip](https://github.com/openbabel/openbabel/files/6056584/babel_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625:1229,extend,extended,1229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625,2,"['extend', 'plugin']","['extended', 'plugin']"
Modifiability,"Maybe something with the SMILES you process is wrong, which could be accidental (e.g., manual entry to a database), or systematic (a computer program generates the molecules/SMILES). Especially if it is for the later, it would be worth to identify the SMILES currently causing the problem in first place before engaging the generation of 2D or 3D structure for a .mol file. It is possible to run the program with SMILES as input as well as output format, e.g., by -ocan. Since SMILES of one (more complex) structure may differ depending on the algorithm/implementation used (e.g., universal, inchified, canonical SMILES in OpenBabel), this often is a good first (or zeroth) step when working with SMILES from different sources/databases anyway. To retain the problematic SMILES, it then might be a question of reading out the error stream, or a try-escape clause (in Python) to check if it is an error in SMILES syntax causing OpenBabel's message. If the molecule in question contains a great number of bonds which -- in principle -- are flexible to rotation, the conversion SMILES -> 3D structure may take substantially more time, than for rigid molecules (note that --gen3d only is one of five levels to guess a conformer, see the manual) though the syntax of the SMILES is a correct one. If you only want one conformer to start with, and not need the of lowest energy (OpenBabel equally offers a systematic conformer search), the two-step SMILES -> 2D (--gen2d) into a .mol, and subsequent 2D mol -> 3D mol (with --gen3d) sometimes is faster (this assumes you have a valid SMILES in first place).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870:1038,flexible,flexible,1038,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229902870,1,['flexible'],['flexible']
Modifiability,Minor fix. Clang rightly warns about my setting ```int _rxnrole = 1;``` in the variable declaration of SmilesParser:; ```; in-class initialization of non-static data member is a C++11 extension; [-Wc++11-extensions]; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1949:79,variab,variable,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1949,1,['variab'],['variable']
Modifiability,Missing Boost dependency in cmake config file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197:34,config,config,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197,1,['config'],['config']
Modifiability,More flexible searching,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1447:5,flexible,flexible,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447,1,['flexible'],['flexible']
Modifiability,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1348:263,plugin,plugin,263,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348,1,['plugin'],['plugin']
Modifiability,My preference is to keep the tests independent files rather than an archive. Otherwise it will be a pain for people to modify/extend the test sets - every small change will require updating the tarball.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846:126,extend,extend,126,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846,1,['extend'],['extend']
Modifiability,New plugin for generating VDW surface points,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156:4,plugin,plugin,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156,1,['plugin'],['plugin']
Modifiability,"New plugin to produce points quasi-randomly distributed on VDW surfaces. The output is a list of {x,y,z} tuples in Angstrom. options:. -r A comma-separated list of VDW radius-multipliers for surfaces to map (default 1.0); -d A comma-separated list of point densities (AA^2/point) (default 1.0); - used to calculate minima distance between points; -p Radius in AA of the probe atom (default 0.A); -x Write out in XYZ format",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/160:4,plugin,plugin,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/160,1,['plugin'],['plugin']
Modifiability,New plugin: STL output of VDW surface,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/161:4,plugin,plugin,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/161,1,['plugin'],['plugin']
Modifiability,"No, normally it works. You just need to make sure that the BABEL_DATADIR environmental variable is set correctly. How you do that depends on your installation method, see e.g. https://openbabel.org/docs/Installation/install.html#troubleshooting-build-problems",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2356#issuecomment-2413353256:87,variab,variable,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2356#issuecomment-2413353256,1,['variab'],['variable']
Modifiability,"No, not at present. Several people tried, but the current code would need a good rewrite. There are some ideas on a ""bridge"" from Open Babel to OpenMM, which has support for custom forces. It would certainly take some coding work. BTW, the general mailing list is openbabel-discuss @ lists.sourceforge.net and there's a developer list at openbabel-devel @ lists.sourceforge.net",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2174#issuecomment-612967014:81,rewrite,rewrite,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2174#issuecomment-612967014,1,['rewrite'],['rewrite']
Modifiability,"No, the goal is that the openbabel cmake target doesn't depend on things it doesn't use. libopenbabel itself (not talking about libmaeparser) doesn't use boost, so it shouldn't link to it. And if it did, then the dependency must be declared in the cmake config file, otherwise the boost:: targets can't be resolved.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625318661:254,config,config,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625318661,1,['config'],['config']
Modifiability,"Noel, thank you for the link.; I tried setting CFLAGS to ""-DLIBXML_STATIC"" but it did not make any difference. ; Perhaps it should be a system-wide environment variable and not the one in MSYS shell?. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797711:160,variab,variable,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797711,1,['variab'],['variable']
Modifiability,Now GitHub can offer multiple issue templates. https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2387:147,config,configuring-issue-templates-for-your-repository,147,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2387,1,['config'],['configuring-issue-templates-for-your-repository']
Modifiability,"OBAromaticTyper, OBPhModel, OBAtomTyper, OBRingTyper are now all thread-safe (I believe), with only minimal changes needed for all but OBAromaticTyper. I've also tided up the use of some externs in residue.cpp/.h, which were probably not a problem but it's good to eliminate suspects from our enquiries. NOT DONE: chains.cpp has several static variables, which will cause problems. This is a bit of work; hence, this pull request with the low-hanging fruit.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/381:344,variab,variables,344,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/381,1,['variab'],['variables']
Modifiability,"OK, what's your proposed fix - a special case for ""R .. :H"" space groups to rewrite to ""H"" instead?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/251#issuecomment-176896402:76,rewrite,rewrite,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/251#issuecomment-176896402,1,['rewrite'],['rewrite']
Modifiability,"OP was @adalke, but I think I can answer for this one. When I did the rewrite you referenced, I had forgotten this bug report, but in the course of rewriting I did accidentally fix it. ```; >>> pybel.readstring(""smi"", ""C\vC"").molwt; ==============================; *** Open Babel Error in OpenBabel::OBSmilesParser::ParseSimple; SMILES string contains a character '♂' which is invalid; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Tools\openbabel\baoilleach\scripts\python\pybel.py"", line 209, in rea; dstring; string, format)); OSError: Failed to convert 'C♂C' to format 'smi'; ```; Thanks for the poke.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1138#issuecomment-383410862:70,rewrite,rewrite,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1138#issuecomment-383410862,1,['rewrite'],['rewrite']
Modifiability,"OS: SuSE linux 8.1 (gcc 3.2) and 9.0 (gcc 3.3.1) ; OB version: 1.100.1 ; ; configure and make work without problems, but a 'make ; install' does not install the header files found under ; src/math to $PREFIX/include/openbabel/math. ; Doing that manually, the library can be linked without ; problems to other programs. ; ; 	 ; Ben ; (benswerts@yahoo.com) . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/431:75,config,configure,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/431,1,['config'],['configure']
Modifiability,Obrms enhancement,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1978:6,enhance,enhancement,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1978,1,['enhance'],['enhancement']
Modifiability,"Okay, this isn't a valid fix. There is no simple fix. If the istream belongs to the user, you have no way of knowing if it has been deallocated or not by the time you get to the OBConversion destructor (if they were both declared as local variables, for instance, and go out of scope at the same time). It it is still valid, then the rdbuf needs to be replaced before deallocating pLineEndBuf. It is no longer valid, you can't do this. The correct solution is to install all filtering on top of the user provided stream. This could be done relatively easily as a general framework that would apply to the zlib filters (which I'm guessing, from looking at the code, also leak memory). I'd be willing to take the time to implement this, but would be much more enthusiastic about it if I could use the boost iostreams libraries. Is this acceptable?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122:239,variab,variables,239,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122,1,['variab'],['variables']
Modifiability,"On Debian Sarge, the CVS version of the OpenBabel 'make; installs' to /usr/local/lib. I think it should be in; /usr/lib because:; (1) there's nothing much else in /usr/local/lib; (2) the python bindings cannot find the; libopenbabel.so.1 library:; ----------------Quote; python; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in ?; ImportError: libopenbabel.so.1: cannot open shared; object file: No such file or directory; ----------------Unquote. Without setting some environment variables, Python; doesn't look in /usr/local/lib automatically. I don't know much about C/C++ development so I cannot; suggest a fix, but this must be a common problem for; all 'make installs' on different Linux distributions. Regards,; Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501:517,variab,variables,517,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501,1,['variab'],['variables']
Modifiability,"On Linux Cinnamon 17.3, with g++ 4.8.4, the build fails with:. ```; -- Checking available shared pointer...; -- Could NOT find Boost; CMake Error at CMakeLists.txt:346 (message):; Boost is required to compile OpenBabel with GCC 3.x. -- Configuring incomplete, errors occurred!; See also ""/home/noel/openbabel/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/noel/openbabel/build/CMakeFiles/CMakeError.log"".; noel@noel-VirtualBox ~/openbabel/build $ which g++; /usr/bin/g++; noel@noel-VirtualBox ~/openbabel/build $ g++ --version; g++ (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4; Copyright (C) 2013 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; For the moment, I'm going to install boost, but it shouldn't be necessary, as far as I know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1774:236,Config,Configuring,236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1774,1,['Config'],['Configuring']
Modifiability,"On Mon, Apr 27, 2015 at 10:20:36AM -0700, M J Harvey wrote:. > Hi,; > ; > I'd like to add a new format type - could anyone give me - or; > point me to - instructions for doing this please? I'm at sea; > with Cmake. You can look in Git history for previous examples, e.g. [1]. From; that you could see that you need to add the name of your plugin; to src/formats/CMakeLists.txt and src/formats/formats.cmake, but; all other changes are in C++ files. There is an old wiki article on the general topic [2]. Reinis. [1] https://github.com/openbabel/openbabel/pull/113/files; [2] http://openbabel.org/wiki/HowTo:Add_A_New_File_Format",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/155#issuecomment-96753460:339,plugin,plugin,339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/155#issuecomment-96753460,1,['plugin'],['plugin']
Modifiability,"On occasion, I sometimes embark a route like. ```bash; obabel -:""c1ccncc1"" -can | obabel -ismi -h --gen2d -osdf | obabel; -isdf --gen3d -osdf; ```; for «difficult» cases. Because, the more conformational flexible; (number of one may rotate) a molecule is, especially with stereogenic; centres, the more computational demanding the provision of /a/; conformation by OpenBabel is. For a rigid molecule like pyridine; above, this has no benefit. I do not possess a one-fits-all scale; to anticipate ahead of time when this extended route is necessary. Note, by documentation (incl. a reference to an open-access; publication), `--gen3d` is only one out of five levels to provide you; /one/ starting conformation. And though it does not aim to compete; with protein folding programs, OpenBabel's `--conformer` flag allows; you to generate conformers, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212:204,flexible,flexible,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212,2,"['extend', 'flexible']","['extended', 'flexible']"
Modifiability,"On pc Debian x86-64 with master sources updated today, I don't reproduce this.; After having tuning a bit the script (fix typos and added a variable), I had the all the 12792 molecules.; Could you give it a new try with a more recent Openbabel version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/351#issuecomment-388574481:140,variab,variable,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/351#issuecomment-388574481,1,['variab'],['variable']
Modifiability,"Open Babel converts to CONFIG (DL_POLY) format, but the generated file is not ; usable by the DL_POLY program, who gives this error message:; At line 1160 of file setup_module.f (unit = 10, file = 'CONFIG'); Fortran runtime error: Bad value during floating point read. I think the problem is that DL_POLY uses a fixed format for the atom coordinates,; requiring 3 floating numbers with 20 spaces for each of them (f20.0). But the; output file generated by Open Babel writes x in columns 1-20 (OK), y in columns 21-41 (instead of 21-40) and z in columns 42-62 (instead of 41-60). Searching for advice in the web I found the code dlpolyformat.cpp in the Github; and I saw that in line 369 you use the format ""%20.15f %20.15f %20.15f\n"" to; write the CONFIG output. I guess that using ""%20.15f%20.15f%20.15f\n"" will; remove the extra space that makes the file unusable by DL_POLY. PS: I found this using Open Babel 2.3.0 in a Ubuntu virtual machine. I converted the file attached using obabel -i pdb argon_864_v2.pdb -o CONFIG -O CONFIG. ; The conversion works, but the CONFIG file will not work. Reported by: magg71. Original Ticket: [openbabel/bugs/922](https://sourceforge.net/p/openbabel/bugs/922)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1302:23,CONFIG,CONFIG,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1302,6,['CONFIG'],['CONFIG']
Modifiability,"Open Babel relies on the BABEL_DATADIR variable to find the data files. The install/uninstall scripts add/remove this variable. Can you try starting over, by uninstalling all of the Open Babels? Then look at your environment variables (just type ""set"" at a *new* command prompt) to see whether the value of BABEL_DATADIR is set. Then install OB2.4.1 and type set again (at a *new* command prompt).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635#issuecomment-338206518:39,variab,variable,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635#issuecomment-338206518,3,['variab'],"['variable', 'variables']"
Modifiability,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295:737,variab,variables,737,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295,1,['variab'],['variables']
Modifiability,OpenBabel-3.1.1-x64 remove all environment variables in $PATH on win10,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2304:43,variab,variables,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304,1,['variab'],['variables']
Modifiability,"OpenBabel-FP2/1; #software=OpenBabel/2.4.90; #source=; #; ```. ## Actual Behavior. The above code on the current Open Babel HEAD (and with 2.4.1) causes segmentation faults:. ## Steps to Reproduce. ### Example 1 (actual); ```; >>> import pybel; >>> pybel.readstring(""smi"", ""C"").write(""fps""); Segmentation fault; ```. ### Example 2 (actual); ```; >>> import openbabel as ob; >>> conv = ob.OBConversion(); >>> conv.SetInAndOutFormats(""smi"", ""fps""); True; >>> mol = ob.OBMol(); >>> conv.ReadString(mol, ""C""); True; >>> conv.WriteString(mol); Segmentation fault; ```; (Replace the WriteString() with the WriteFile() and there is still a segmentation fault.). The problem seems to be that WriteString() and WriteFile() on a newly constructed OBConversion() leave the Index at the initial value of 0. Some of the formats use GetOutputIndex() and, if it is 1, perform an initialization. For the FPS format, the initialization loads the correct fingerprint type. If it is uninitialized then it will deference an unassigned variable, causing the segfault. I have patched WriteString() and WriteFile(). I will submit a pull request shortly to demonstrate one possible solution. ## Related symptoms. ### issue #1783. Note that this is likely related to issue #1783 . With an un-patched system:; ```; >>> import pybel; >>> pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt""); '>\n'; ```. with my patch in place:; ```; >>> import pybel; >>> print(pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt"")); > 6 bits set; 00000000 00000000 00000000 00000200 00000000 00000000; 00000000 00000000 00000000 00000840 00000000 00008000; 00000000 00000000 00000000 00000000 00000000 00000000; 00000000 00000000 00000000 08000000 00000000 00000000; 00000000 00000000 00000000 00000000 00000000 00020000; 00000000 00000000; ```. The proposed solution in that issue was to enable the 'h' option, which worked because the relevant code sets hexoutput using the following.; ```; if(pConv->IsOption(""h"") || (pConv->GetOutputIndex()==1 && ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1922:1993,variab,variable,1993,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1922,1,['variab'],['variable']
Modifiability,OpenBabel3_LIBRARY cmake variable not populated,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2196:25,variab,variable,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2196,1,['variab'],['variable']
Modifiability,"OpenEyes released one final release of the OELib; library under the GPL, including some bug fixes and; feature enhancements. This should be merged into Open; Babel, where appropriate. (Unfortunately, this will be a difficult merge, as many; things have been fixed and/or changed in Open Babel; since the two diverged.). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/10"":https://sourceforge.net/p/openbabel/feature-requests/10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1379:111,enhance,enhancements,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379,1,['enhance'],['enhancements']
Modifiability,"Or try EIGEN2 instead. I think both are supported, but the CMAKE; environment variable is different. On Fri, 22 Feb 2019 at 13:49, David Hall <notifications@github.com> wrote:. > It appears the root error is:; >; > 1>c:\bld\openbabel_1550159794694\_h_env\library\include\eigen3\eigen\src/Core/arch/SSE/PacketMath.h(811) : fatal error C1001: An internal error has occurred in the compiler.; > 8701>(compiler file 'msc1.cpp', line 1411); > 8711> To work around this problem, try simplifying or changing the program near the locations listed above.; > 8721>Please choose the Technical Support command on the Visual C++; > 8731> Help menu, or open the Technical Support help file for more information; > 8741>Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\x86_amd64\cl.exe. You will be prompted to send an error report to Microsoft later.; >; > I'm not sure much can be done when the error message is that the compiler; > cannot handle the file.; >; > The best advice is probably to just have it target python 3.5-3.7 and drop; > python 2.7 support, which will cause condo-forge to use Visual Studio 14.0; > (2017) instead of Visual Studio 9.0 (2008 aka over a decade old).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGQWf1XGtO8-yDR2XrEPV_BHKUEoxks5vP_VwgaJpZM4bJldO>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459:78,variab,variable,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459,1,['variab'],['variable']
Modifiability,"Our usual approach is not to add things to the standard namespace but to have a level of indirection. That is, have a variable ISNAN which we use in the code, and assign a value to it at the top, either std::isnan or your templated definition.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1586#issuecomment-307401225:118,variab,variable,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1586#issuecomment-307401225,1,['variab'],['variable']
Modifiability,"Over time, the C++ language has evolved and parts of the language that were experimental have become part of the core. The shared_ptr is one of those parts. The fix for newer compilers should be in the more recent Open Babel releases. Unfortunately, community support is only for the current release 2.4.x. The community does not have the resources to backport changes/fixes to older versions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1837#issuecomment-390140320:32,evolve,evolved,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1837#issuecomment-390140320,1,['evolve'],['evolved']
Modifiability,"PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; u",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5602,variab,variables,5602,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['variab'],['variables']
Modifiability,PHP binding enhancements,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/42:12,enhance,enhancements,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42,1,['enhance'],['enhancements']
Modifiability,Patch for 2.3.2 perl_bindings configuration. Original comment by: cwilling,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1219#issuecomment-281802898:30,config,configuration,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219#issuecomment-281802898,1,['config'],['configuration']
Modifiability,Patch using export to set variables. Original comment by: @jiahao,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800039:26,variab,variables,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800039,1,['variab'],['variables']
Modifiability,"Pattern_RestrictedMatch__SWIG_3(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv));. ^; OBUnitCell.java:61: cannot find symbol; symbol : variable SpaceGroup; location: class OBUnitCell; openbabelJNI.OBUnitCell_SetSpaceGroup__SWIG_0(swigCPtr, SpaceGroup.getCPtr(s; g));; ^; OBUnitCell.java:106: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; return (cPtr == 0) ? null : new SpaceGroup(cPtr, false);; ^; OBUnitCell.java:126: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetCellMatrix(swigCPtr), true);. ^; OBUnitCell.java:130: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetOrthoMatrix(swigCPtr), true); ;; ^; OBUnitCell.java:134: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetFractionalMatrix(swigCPtr),; true);; ^; openbabel.java:160: cannot find symbol; symbol : variable OBAromaticTyper; location: class openbabel; openbabelJNI.aromtyper_set(OBAromaticTyper.getCPtr(value));; ^; openbabel.java:164: cannot find symbol; symbol : class OBAromaticTyper; location: class openbabel; return new OBAromaticTyper(openbabelJNI.aromtyper_get(), false);; ^; openbabel.java:168: cannot find symbol; symbol : variable OBAtomTyper; location: class openbabel; openbabelJNI.atomtyper_set(OBAtomTyper.getCPtr(value));; ^; openbabel.java:172: cannot find symbol; symbol : class OBAtomTyper; location: class openbabel; return new OBAtomTyper(openbabelJNI.atomtyper_get(), false);; ^; openbabel.java:176: cannot find symbol; symbol : variable OBChainsParser; location: class openbabel; openbabelJNI.chainsparser_set(OBChainsParser.getCPtr(value));; ^; openbabel.java:180: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; return new OBChainsParser(openbabelJNI.chainsparser_get(), false);; ^; 40 errors. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:5851,variab,variable,5851,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,3,['variab'],['variable']
Modifiability,Per-atom vectors in extended (xyz+vec) format,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1703:20,extend,extended,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1703,1,['extend'],['extended']
Modifiability,"Perhaps we could compile both versions of Tanimoto, and then at run time when it opens a fs file, make a dummy __builtin_popcount call and trap the illegal instruction signal (if it is trappable) and change a function pointer to use the other version. Of course trying to do that in a portable way would also be problematic. Another the issue is that the ""emulated"" __builtin_popcount you get when lacking the -mpopcnt flag is probably better than the fallback which openbabel uses. So we would need to improve that fall-back method as well, or some systems would end up worse off. . Unless we put the two Tanimoto functions in different compilation modules, and compiled one with -mpopcnt and one without that, but with identical source code. This is rapidly getting over my head. Does anyone know of other examples of packaged software that has dealt with this issue? I haven't been able to find any.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105808981:285,portab,portable,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105808981,1,['portab'],['portable']
Modifiability,"Periodically we run into the problem where openbabel can't find the plugin directory. Instead of generating a useful error message, you usually get something like ""cannot open file"" and you spend a certain amount of time trying to figure out what is wrong with the file. Once you realize the problem, you spend a certain amount of time figuring out what the necessary environment variable (BABEL_LIBDIR) is. . This pull request will output a useful error message describing the problem and the fix when plugins can't be found. I've also included a test script, but am hoping someone else can figure out how to hook it into cmake (and possibly document the process).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826:68,plugin,plugin,68,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826,3,"['plugin', 'variab']","['plugin', 'plugins', 'variable']"
Modifiability,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:0,Plugin,Plugins,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716,1,['Plugin'],['Plugins']
Modifiability,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:40,extend,extend,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462,1,['extend'],['extend']
Modifiability,Populate OpenBabel3_LIBRARIES cmake variable - fix #2196,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2198:36,variab,variable,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2198,1,['variab'],['variable']
Modifiability,"Previously the default build type was Release with debug info. This massively inflated the size of the compiled library (in particular the plugins). Previously, the Release build had the -O2 switch.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/352:139,plugin,plugins,139,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/352,1,['plugin'],['plugins']
Modifiability,"Probably a good idea. :-) If could rewrite to use a straightforward ""if"" statement I think the intention would be clearer and avoid the self-assignments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075:35,rewrite,rewrite,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075,1,['rewrite'],['rewrite']
Modifiability,"Re AWK: by default, one space, multiple free spaces, or a tabulator is all one white space. It is one argument e.g. to use [bioawk](https://github.com/vsbuffalo/bioawk-tutorial) to process pdb and FASTA. One however can explicitly define (by `FS`) what AWK should consider as *field separator*, between the columns in a line (a *record*), and by `RS` what should separate the lines. (There equally are the variables `OFS` and `ORS` to specify *output field separator* and *output record separator*. Regarding the task ahead, however, I recommend to substantiate your question with a typical .sdf you want to process, to document the intended workflow, and output format you aim for. So far, it is not clear if you want to remove (or retain) structures which could be considered as a sugar. Perhaps the filter intended shall be more specific (e.g., remove residues of galactose, but not glucose). The project [SugarRemoval](https://github.com/JonasSchaub/SugarRemoval) is an example of such a ""structure cleaner"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489:406,variab,variables,406,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489,1,['variab'],['variables']
Modifiability,Refactor atom class to being data on an atom rather than on a molecule,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1741:0,Refactor,Refactor,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1741,1,['Refactor'],['Refactor']
Modifiability,Refactor python bindings so that openbabel.py and pybel.py are within an openbabel folder,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946:0,Refactor,Refactor,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946,1,['Refactor'],['Refactor']
Modifiability,"Related to above, I received the same ValueError after installing openbabel/pybel Python bindings using an unofficial .whl from [https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel](https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel) on a Windows (11) machine (Python 3.9; pip install openbabel did not work). The apparent reason for the pybel ValueError was that after installing openbabel 3.1.1 on Windows (GUI version), there is an environment variable *BABEL_DATADIR* set under the Windows environment variables. Deleting or renaming that variable entry solved the ""ValueError: smi is not a recognised Open Babel format"" issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1898#issuecomment-1660952014:452,variab,variable,452,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1898#issuecomment-1660952014,3,['variab'],"['variable', 'variables']"
Modifiability,"Revert ""CMakeLists.txt: Allow configuring BABEL_DATADIR""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1943:30,config,configuring,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1943,1,['config'],['configuring']
Modifiability,"Reverted + put changes into a new commit, mainly because of the `openbabel-python.cpp` bloat. > Can you revert the portion of the PEP-compliance commit to return the docstrings for outformats, informats, etc.? Docstrings are part of the documentation. Done, but I've never seen this pattern before. I'm curious to learn more - is SWIG recognizing variable docstrings?. > Is your idea that the JS files be installed beside pybel.py?. Yes, I put them in a `js` folder. They could instead be linked to a remote URL, but then 3D rendering would be dependent on an internet connection. > The toggle could be done as RDKit does, just have a pybel global attribute with a default value which the user can assign to, e.g. pybel.ipython_whatever = True. Done. It's `pybel.ipython_3d`, and it defaults to False. I think 2D is more useful than 3D in common use cases. ![screenshot from 2013-12-09 09 09 34](https://f.cloud.github.com/assets/1449833/1706053/d2ebffa4-60e8-11e3-9526-be9603b1cc19.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558:347,variab,variable,347,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558,1,['variab'],['variable']
Modifiability,"Run ./configure; and run make which created libopenbabel.dylib. It is working for mac os and need to work it for iPhone os. I do not think it is cross compiled for iPhone. Open Babel uses Boost and libxml2. In order to build for iPhone, I need to flatten out all library file and rebuild for them in iPhone OS. Let me dig little more into this . Original comment by: singareddy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794374:6,config,configure,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794374,1,['config'],['configure']
Modifiability,"Run ./configure; make That will properly build libopenbabel.dylib on Mac (or, presumably cross-compile for iPhone). Don't copy the babelconfig.h file from Windows -- Windows is not a POSIX-compliant operating system, so there are many workarounds. iPhone and Mac are UNIX-based systems and everything will be smooth. A quick Google search for configure script iPhone gave me these links:; http://pseudogreen.org/blog/iphone/; http://pseudogreen.org/bzr/sandbox/iphone/build_for_iphoneos. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373:6,config,configure,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373,3,"['config', 'sandbox']","['configure', 'sandbox']"
Modifiability,"Running . ```shell; obabel ATP.cdx -O convert.cdxml; ```. with obabel 3.1.1 and subsequent copy-paste into [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) via Structure -> Load .cdxml *somewhat* improves the situation: phosphates are now negatively charged. Good. Except that the absolute values are not reasonable:. ![ChemDraw_samplepage](https://user-images.githubusercontent.com/60490931/190347730-cdcc62d4-93d5-4438-a65a-9a5a15bff01a.png). What version of ChemDraw do you use (release, Win or MacOS) to generate the .cdx? Or, do you use an other program which exports in this format (e.g., [chemdoodle](https://www.chemdoodle.com/), or [Marvin Sketcher](https://marvinjs-demo.chemaxon.com/latest/examples/demo.html) to mention just two. Note the red rectangles (furanose cycle) indicate a potential problem how the stereochemistry was defined; in ChemDraw, there are wedges (varying width), and bold single bonds (constant width) as separate buttons to click. (For better portability across OSes and different programs, I prefer .cdxml over Chemdraw's binary .cdx format; the file size is a bit bigger but often this is no issue.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814:1018,portab,portability,1018,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814,1,['portab'],['portability']
Modifiability,"SMARTS match is wrong for SMARTS containing cis/trans double bonds. Examples:. $ echo 'C\C=C/C' | obgrep 'C\C=C/C'; C\C=C/C; $ echo 'C/C=C\C' | obgrep 'C\C=C/C'; C/C=C\C; $ echo 'C/C=C/C' | obgrep 'C/C=C/C'; C/C=C/C; $ echo 'C\C=C\C' | obgrep 'C/C=C/C'; (no output). The last example ""C\C=C\C"" is the exact same trans configuration as the second-to-last one, so it should match ""C/C=C/C"", but it doesn't. You simply can't use SMARTS if it contains '/' or '\' because it frequently gives the wrong answer. Reported by: @cjames53. Original Ticket: ""openbabel/feature-requests/110"":https://sourceforge.net/p/openbabel/feature-requests/110",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479:318,config,configuration,318,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479,1,['config'],['configuration']
Modifiability,"SMILES rewrite by RDKit occasionally resolves ""Open Babel Warning in CorrectStereoAtoms""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:7,rewrite,rewrite,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['rewrite'],['rewrite']
Modifiability,"See background reference:; http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14608. Building openbabel 2.2.3 with gcc 4.3.3 on Tru64 requires two things:; (1) -D_GLIBCXX_USE_C99_MATH in CXX_FLAGS , e.g.; CXXFLAGS='-D_GLIBCXX_USE_C99_MATH -g -O2' ./configure; (2) whenever isfinite() is used, #include <cmah> is needed, there are too many of them; and I got fed up after adding the first couple, so I just added it to the end of src/config.h.in; (adding it to the end of include/openbabel/babelconfig.h also get included to everything). These steps are probably required for most older unix systems which is not linux nor Mac X.; (I'd like to know if either of these are needed on linux, actually, but can't be bothered, since openbabel is shipped with fedora). Also I have a comment to make: the top level INSTALL is misleading. since isfinite() is C99, the c89 part in; CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure; is misleading, and further more, most of openbabel is c++ code so the effective variables are really CXX and CXXFLAGS, not CC/CFLAGS . Reported by: htl10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964:242,config,configure,242,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964,4,"['config', 'variab']","['config', 'configure', 'variables']"
Modifiability,Select which shared pointer implementation to be used at configure time,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/277:57,config,configure,57,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/277,1,['config'],['configure']
Modifiability,"Shameless plug here, but flexible docking is a lot easier with gnina (you can directly specify what residues you want to be flexible without having to setup separate files):; https://github.com/gnina/gnina?tab=readme-ov-file#usage",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654:25,flexible,flexible,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2666#issuecomment-1896519654,2,['flexible'],['flexible']
Modifiability,"Should have fixed this a long time ago. The DL flags kludge was needed for some platforms or else the plugins didn't load. I can't say whether it's still needed but at least now the code resets the flag value after forcing the plugins to load with OBPlugin::LoadAllPlugins(). I believe this fixes #917, #1222, and #1702. I can't reproduce the original problems though.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775:102,plugin,plugins,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775,2,['plugin'],['plugins']
Modifiability,"Since OpenBabel is written in C++, I really doubt that there would be an impact. The parts that are written in python are wrappers and hence limited to the variable types in C++. I also have problem seeing where such large numbers would be of use in cheminformatics.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485:156,variab,variable,156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2535#issuecomment-1247659485,1,['variab'],['variable']
Modifiability,"Since the Fingerprint framework is flexible and expandable, it would be ; nice to dynamically load/unload fingerprints much like OBFormat. For ; example, a program which does not use fingerprints at all would not need ; fingerprints in libopenbabel but could load as needed. As this would affect the availability of API functions in the library, this is ; best targeted at 3.0. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/89"":https://sourceforge.net/p/openbabel/feature-requests/89",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1458:35,flexible,flexible,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1458,1,['flexible'],['flexible']
Modifiability,"Sorry don't know where else to ask this. Is there a plugin or something that lets you GPU accelerate MMFF94 force field minimizations, energy calculations, etc?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2174:52,plugin,plugin,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2174,1,['plugin'],['plugin']
Modifiability,Sorry for not providing this information initially. - Anaconda information (Python):; ```Current conda install:. platform : linux-64; conda version : 4.3.30; conda is private : False; conda-env version : 4.3.30; conda-build version : 2.1.13; python version : 3.5.4.final.0; requests version : 2.18.4; root environment : /home/henrique/anaconda3 (writable); default environment : /home/henrique/anaconda3; envs directories : /home/henrique/anaconda3/envs; /home/henrique/.conda/envs; package cache : /home/henrique/anaconda3/pkgs; /home/henrique/.conda/pkgs; channel URLs : https://repo.continuum.io/pkgs/main/linux-64; https://repo.continuum.io/pkgs/main/noarch; https://repo.continuum.io/pkgs/free/linux-64; https://repo.continuum.io/pkgs/free/noarch; https://repo.continuum.io/pkgs/r/linux-64; https://repo.continuum.io/pkgs/r/noarch; https://repo.continuum.io/pkgs/pro/linux-64; https://repo.continuum.io/pkgs/pro/noarch; config file : None; netrc file : None; offline mode : False; user-agent : conda/4.3.30 requests/2.18.4 CPython/3.5.4 Linux/3.19.0-32-generic debian/jessie/sid glibc/2.19 ; UID:GID : 1000:1000; ```. - Operating System: Linux Mint 17.3 Cinnamon Edition 64bits - Kernel 3.19.0-32-generic. - Versions:; The versions that *don't* work together (all using the above Anaconda Python):; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.1 py35hbf1f462_0; ```; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.0 py35hbf1f462_0; ```; The versions that *work* together:; ```; openbabel 2.4.1 <pip>; scikit-learn 0.18.2 np113py35_0; ```; ```; openbabel 2.4.1 py35_3 openbabel; scikit-learn 0.19.1 py35hbf1f462_0; ```. All the dependencies for the Python libraries were automatically satisfied by conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756:925,config,config,925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756,1,['config'],['config']
Modifiability,Sorry for the delay - this one got buried over the summer.; Is the environment variable BABEL_DATADIR set? It seems like the install can't find the files for force field optimization. If you use .localopt() does the geometry change?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729:79,variab,variable,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729,1,['variab'],['variable']
Modifiability,"Sorry for the long delay. For some reason, I'm not getting the bug postings by e-mail. Try installing pkg-config and see if that helps. http://www.freedesktop.org/wiki/Software/pkg-config/. Supplying the path for EIGEN3 should be enough, but if things work with pkg-config, I'll be better able to find the problem. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803567:106,config,config,106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803567,3,['config'],['config']
Modifiability,"Sorry it's taking me a while to respond. Could energyToKcal be implemented instead of a set of consts in the header file (e.g. ""const double JOULE_TO_CAL = whatever"")? This wouldn't need any API changes though we could expose it if useful. We have something similar for DEG_TO_RAD I think. The nice thing about a const is that the IDE will fill in the name of the variable, though I guess a function taking an enum would do the same. I'll do the necessary work for extract_thermochemistry tomorrow. Hopefully I can send you a pull request directly, and then you get to hassle me about my patch! :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407:364,variab,variable,364,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407,1,['variab'],['variable']
Modifiability,"Static builds of the OB 2.0 snapshots or the new-framework CVS ; branch fail on UNIX. The build does not produce *.so files for the ; formats, so the dynamic loader cannot find any formats. The build Makefiles need to fall back to static loading when the ; configure scripts fail to set shared library support. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458:257,config,configure,257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458,1,['config'],['configure']
Modifiability,"Submitted for comment -. Intended to facilitate interchangeability of QM codes, this patch adds code for generating Gaussian and PSI4 input files. Inputs are constructed them from a common set of configuration options:. ```; psi4in -- Generate a PSI4 Input file. [Write-only]; Write Options:; T<theory> Theory level for calculation. Options: (rhf); b3lyp; rhf; rohf; uhf; B<basis-set> Basis set for calculation. Options: (6-31g*); 6-31g*; cc-pvdz; M# Multiplicity of the molecule (default 1); E Calculate field and potential on points from grid.dat; O<type> Optimise geometry. Options: (default none); none loose normal tight; F<...> List of bonds, angles and dihedrals to freeze; Atoms indexed from 1, comma-separated.; Each term colon-separated.; Eg freezing one angle, one dihedral: ; -xF 1,2,3:3,5,6,7; m# Amount of memory to allocate (GB) (default 2.0); n# Number of CPUs/threads to allocate (default 1). ```. This is a derivative of something we use in-house; I've another few formats I can add in the same model",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/169:196,config,configuration,196,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169,1,['config'],['configuration']
Modifiability,Substitute obsolete Config constant with RbConfig constant.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/133:20,Config,Config,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/133,1,['Config'],['Config']
Modifiability,"Sure,. several errors about undeclared variables, like:. [ 82%] Building CXX object src/GUI/CMakeFiles/obgui.dir/OBGUI.o; In file included from /usr/include/wx-2.8/wx/window.h:23,; from /usr/include/wx-2.8/wx/generic/splitter.h:15,; from /usr/include/wx-2.8/wx/splitter.h:44,; from /home/bioinfp/jang/sumpf/openbabel/openbabel-2.3.1/src/GUI/./stdwx.h:29,; from /home/bioinfp/jang/sumpf/openbabel/openbabel-2.3.1/src/GUI/OBGUI.cpp:20:; /usr/include/wx-2.8/wx/cursor.h: In constructor ‘wxBusyCursorSuspender::wxBusyCursorSuspender()’:; /usr/include/wx-2.8/wx/cursor.h:65: error: ‘wxIsBusy’ was not declared in this scope. Full error:; http://paste.pocoo.org/show/tYo8uwvHZPlCOCna9EVg/. That was obviously due to some missing include file, although I did not find a compiler error like ""could not find file..."". Original comment by: gurke111",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1145#issuecomment-281801191:39,variab,variables,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1145#issuecomment-281801191,1,['variab'],['variables']
Modifiability,Sure. I re-based the patch. The other EEM patch also addressed the segfault but fixed it by changing the loop variable to an integer. This patch now fixes all warnings due to signedness.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/241#issuecomment-169414562:110,variab,variable,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241#issuecomment-169414562,1,['variab'],['variable']
Modifiability,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:95,evolve,evolved,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909,1,['evolve'],['evolved']
Modifiability,"Thanks @ghutchis and @dkoes that's really helpful. I was struggling to find some of these attributes. I actually have another question regarding chirality, it seems that the methods `IsPositiveStereo()` and `IsNegativeStereo()` are not supported in OpenBabel == 3.x. I'm looking in `ob.OBStereoFacade(obmol).GetTetrahedralStereo.GetConfig().winding` but this always seems to be 1, even when I pass in a SMILE string that is in a different orientation (i.e. should return 2 if its anticlockwise -> see [here](http://openbabel.org/api/3.0/structOpenBabel_1_1OBStereo.shtml#af1dfb9e747d80437422fdb5fba87c2c7)). Am I doing something wrong? See code snippet below. ```; num_tetra = 0; mol = pybel.readstring(""smi"", ""F/C=C/C[C@@H](Cl)Br""). m = mol.OBMol. facade = ob.OBStereoFacade(m). for atom in ob.OBMolAtomIter(m):; mid = atom.GetId(); if facade.HasTetrahedralStereo(mid):; tetra = facade.GetTetrahedralStereo(mid); print(tetra.GetConfig().winding) # this always prints 1, even if I rewrite the SMILES string; if tetra.IsSpecified():; num_tetra += 1; ```. > The place to look is in https://github.com/openbabel/openbabel/blob/master/src/formats/pdbformat.cpp, specifically, `parseAtomRecord`. If it isn't parsed from a PDB, then there isn't a standard place to store the information. Surprisingly, it doesn't look like the temperature factor is retained, but the occupancy is stored as a data attribute. It would be great if you submitted a pull request that also stored the temperature. Yes I noticed that temperature factor isn't stored so I'd be happy to submit a PR for that. I'm currently under the pump with university and my project but I will make myself a note to submit a PR once I have some free time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2258111025:981,rewrite,rewrite,981,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2258111025,1,['rewrite'],['rewrite']
Modifiability,"Thanks for the report. Incidently, the _ang<->_tor problem had been reported and fixed yesterday already, but I have committed your fix for negative dihedral variable references to the 2.2 branch. cheers,. Michael. PS: If possible, send unified diffs (diff -u on Unix computers) in the future, and maybe attach them. That makes them slightly easier to apply. PPS: A fellow TUM scientist!. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/896#issuecomment-281795321:158,variab,variable,158,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/896#issuecomment-281795321,1,['variab'],['variable']
Modifiability,"Thanks! So, I guess OB loads libraries or plugins on the fly. 0) Out curiosity, do you know that library is loaded in the process? is it some internal library to OB?. 1) does it make sense to load libraries on the fly and each time a Read operation is performed? . 2) I deduce that this is done in every instance of `OBConversion`, so it is better to recycle them?. I wonder these because it may not be unheard of that a program opens a few hundred thousand files (or streams), that could amount to several gigabytes of leaked memory.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271:42,plugin,plugins,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271,1,['plugin'],['plugins']
Modifiability,"That commit introduce working bindings to PHP. Finally it can be compiled with cmake, and ""-DPHP_BINDINGS=ON"" option is available. As with other bindings, PHP needs ""-DRUN_SWIG=ON"" flag to generate .php and other files by SWIG. PHP binding needs following packages: php, php-devel, or php-dev or whatever the distro naming is, it should contain php-config binary. Since there is no current FindPhp library in cmake, only mentioned php-config is checked. Finally, i've done some testing on CentOS/SL 6.4 and everything compiles, installs, and works fine, although further testing is needed on other distros. Comments are welcome.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/7:349,config,config,349,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/7,2,['config'],['config']
Modifiability,"That would be a problem alright. Ignore my prevoius comment so. Ultimately the issue is that on some platforms, the DL loader fails to load the plugins without this kludge. This is also the case for other bindings and I think the correct solution is to move towards statically including the plugins in the main .so, so to avoid this issue completely.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952:144,plugin,plugins,144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952,2,['plugin'],['plugins']
Modifiability,"That's right. But it's only needed for plug-in load, and can be turned off afterwards. Maybe the bindings should instantiate an OBConversion object to force plugin loading, and then turn it off.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834:39,plug-in,plug-in,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834,2,"['plug-in', 'plugin']","['plug-in', 'plugin']"
Modifiability,"The DLFCN module has been removed from python 3.6, as it is not; documented. Same funtionality can be achive with the os module; that makes available the os.RTLD_GLOBAL variable for dlopen()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/372:169,variab,variable,169,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/372,1,['variab'],['variable']
Modifiability,The EIGEN2 problem is fixed in r4356. I used an easier way to pass the environment variable. I did not pass any custom CFLAGS in though. Has this caused you some problems? (I'm wary of applying fixes for issues that have not yey been reported as problems.). Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800042:83,variab,variable,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077#issuecomment-281800042,1,['variab'],['variable']
Modifiability,The INSTALL file for OpenBabel still has the obsolete instructions for the old 'configure' program rather than the new cmake(1) that was introduced recently. Reported by: @cjames53,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/915:80,config,configure,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/915,1,['config'],['configure']
Modifiability,"The InChI code (in src/formats/inchi) should really be spun out into a ; separate library to facilitate packaging (e.g., Debian, Fedora Core...). Right now, the code is compiled every time, even if it's already installed ; on your system. This is slow for users (e.g., upgrading from 2.0.0 to ; 2.0.1) and developers. A useful fix would be:; * Check if libinchi is installed (e.g., with pkg-config and configure tests ; for libinchi).; If installed, don't bother re-compiling; * If not installed, compile src/formats/inchi and install for users. Right now, I don't think the library is widely-deployed, so Open Babel ; should still include a copy of the sources. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524:391,config,config,391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524,2,['config'],"['config', 'configure']"
Modifiability,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:29,layers,layers,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,2,"['layers', 'portab']","['layers', 'portable']"
Modifiability,"The Ruby extensions for Open Babel fail to compile under Mac OS X 10.5.1 Leopard. The system is a Core2Duo MacBook Pro (2.2 GHz Santa Rosa chipset). Steps to reproduce:. Source for OpenBabel-2.1.1 was downloaded from the SourceForge site. OpenBabel was compiled with:; > ./configure; > make; > sudo make install. SWIG files were generated from scratch (using the openbabel-ruby.i definitions) and the Ruby extconf.rb script was run as follows (from the scripts/ruby directiory):. > swig -ruby -autorename -c++ -I../../include -o openbabel_ruby.cpp ../openbabel-ruby.i; > ARCHFLAGS=""-arch i386"" ruby extconf.rb; > make. Results:. See attached log files. SWIG throws a number of warnings, but generates openbabel.cpp regardless. Ruby's mkmf doesn't complain, however the bundle creation step during compilation appears to not recognize any OpenBabel library symbols. Reported by: jballanc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704:273,config,configure,273,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704,1,['config'],['configure']
Modifiability,"The Windows equivalent returns 0 for error/no files, this variant should; do the same. This member is used to load all plugins, and can result in; an infinite loop when -1 is returned.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/273:119,plugin,plugins,119,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/273,1,['plugin'],['plugins']
Modifiability,"The Windows project files (in particular oblib.dsp); aren't current with the Makefiles. * Some source files aren't included in the .dsp; * Without the ./configure script, the DATADIR isn't set; properly. Thanks to Leif Laaksonen for bringing this up. -Geoff. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/391:153,config,configure,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/391,1,['config'],['configure']
Modifiability,"The apparently latest API's documentation [on-line](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/CppAPI.html) of OpenBabel (OpenBabel's main index [here](https://open-babel.readthedocs.io/en/latest/index.html)) equally does so, as well as the hyperlinks in chapter 11.1 of the then generated .pdf ahead of the description relevant to e.g., C++ and Python. It is worth noting chapter 11.8 «Updating to Open Babel 3.0 from 2.x» starts by. > «Open Babel 3.0 breaks the API in a number of cases, and introduces some new behavior behind-the-scenes. These; changes were necessary to fix some long standing issues impacting chemical accuracy as well as performance.; Here we describe the main changes, and how to change existing code to adapt.». At present, the .pdf was created on June 14, 2020, possibly to reflect about OpenBabel 3.0.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389:743,adapt,adapt,743,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389,1,['adapt'],['adapt']
Modifiability,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:205,plugin,plugin,205,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733,2,"['plugin', 'variab']","['plugin', 'variable']"
Modifiability,The attached patch to xml.cpp prevents the crash. I'll commit it to the development code if no side effects come to light. (The xml code is unpleasantly complex.). The problem was that the extended OBConversion object needed for XML formats was reused without being updated with the new output stream. . Chris; File Added: xml.diff. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794025:189,extend,extended,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794025,1,['extend'],['extended']
Modifiability,The attribute is not effective unless `-std=c++17` is supplied. Actually there are many unused variables.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2075#issuecomment-552222160:95,variab,variables,95,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2075#issuecomment-552222160,1,['variab'],['variables']
Modifiability,"The choices here set the scene for other API additions/removals. Are you saying that it's okay to extend the API to add more readable functions that duplicate existing functionality (and may lead to less efficient code)?. If you are set on this, please at least consider making the name consistent with the existing Get/Set function; i.e. Has/IsAtomicNum rather than IsElement. Regarding the elements, again why must we add duplicates? What problem is this solving? We shouldn't just make changes because ""I think that would be useful"". Either go completely with symbols, or go completely with IUPAC English names. If it turns out that we need both, we can add them down the line. But we can't remove them if we push them out, just in case.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358222612:98,extend,extend,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358222612,1,['extend'],['extend']
Modifiability,"The configure script should detect expat if available; for use with CML and other XML-based file formats.; (These will probably become more widely used soon.). This would greatly simplify the cml.cpp code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/21"":https://sourceforge.net/p/openbabel/feature-requests/21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390:4,config,configure,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390,1,['config'],['configure']
Modifiability,"The configure target fails:. ```; -- Found Threads: TRUE ; CMake Error at src/CMakeLists.txt:258 (target_compile_options):; Cannot specify compile options for target ""PUBLIC"" which is not built by; this project. -- Found Boost: /usr/local/include (found version ""1.72.0"") found components: program_options iostreams regex ; ```. Version 3.1.0; OS: FreeBSD 12.1; Compiler: clang-9; cmake-3.17.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2201:4,config,configure,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2201,1,['config'],['configure']
Modifiability,"The cppcheck package is a relatively new static analysis program for C++.; http://cppcheck.wiki.sourceforge.net/. It turned up several issues in the 2.2.x branch (and trunk).; The following report lists the issues and line numbers for trunk. Some of these may be false positives. [src/GUI/OBGUI.cpp:92]: (all) Memory leak: frame; [src/descriptor.cpp:336]: (all) Memory leak: dp; [src/formats/chemkinformat.cpp:584]: (all) Memory leak: pRD; [src/formats/fastsearchformat.cpp:352]: (all) Memory leak: pidx; [src/formats/gamessformat.cpp:761]: (all) Memory leak: gmsset; [src/formats/gamessformat.cpp:560]: (all) Memory leak: data; [src/formats/inchiformat.cpp:313]: (all) Memory leak: cd; [src/formats/mdlformat.cpp:389]: (all) Memory leak: ad; [src/formats/pdbformat.cpp:560]: (all) Buffer overrun; [src/formats/povrayformat.cpp:123]: (all) Memory leak: titleCpy; [src/formats/smilesformat.cpp:3533]: (all) Memory leak: pmol; [src/formats/smilesformat.cpp:2866]: (error) After push_back or push_front, the iterator 'ai' may be invalid; [src/formats/smilesformat.cpp:2966]: (error) After push_back or push_front, the iterator 'bi' may be invalid; [src/formats/xml/cmlformat.cpp:144]: (all) Memory leak: CMLFormat::pUnitCell; [src/formats/xml/cmlformat.cpp:1075]: (error) Returning pointer to local array variable; [src/formats/xml/cmlreactformat.cpp:96]: (all) Memory leak: CMLReactFormat::_pRD; [src/math/spacegroup.cpp:121]: (all) Memory leak: group; [src/mcdlutil.cpp:1830]: (error) Memory leak: bk; [src/mol.cpp:3082]: (error) After push_back or push_front, the iterator 'i' may be invalid; [src/pointgroup.cpp:198]: (all) Memory leak: PointGroupPrivate::DistanceFromCenter; [src/pointgroup.cpp:212]: (all) Memory leak: PointGroupPrivate::NormalAxesCounts; [src/pointgroup.cpp:213]: (all) Memory leak: PointGroupPrivate::ImproperAxesCounts; [src/rotamer.cpp:448]: (error) Memory leak: rot. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/876:1302,variab,variable,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/876,1,['variab'],['variable']
Modifiability,"The current OBBond class is very limited. The idea of chemical bonds ; includes quite a variety:. * standard covalent bonds; * ionic bonds; * hydrogen bonds; * disulfide and chalcogenide bonds (e.g., Se-S); * agostic interactions; * metal coordinatation; * three-center bonds (e.g., diborane). Recent papers have discussed metal-metal bonds going up to 4-fold, 5-; fold, and 6-fold M-M bonds (i.e., not just single, double, and triple). And of course covalent bonds include ""hapticity"" where ferrocene is eta-5 ; coordinate, and the Fe atom interacts equally with all five carbon atoms in ; the Cp group. The current OBBond class has support for little of this flexibility. In ; general, there are few backwards-incompatible problems (except perhaps ; for bond orders, where BO = 5 currently implies aromatic). But a more ; flexible hierarchy would improve support for additional chemical ontology ; in future OB versions. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/70"":https://sourceforge.net/p/openbabel/feature-requests/70",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1439:824,flexible,flexible,824,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1439,1,['flexible'],['flexible']
Modifiability,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524:98,variab,variable,98,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524,3,['variab'],"['variable', 'variables']"
Modifiability,"The development/Git master version of the library has diverged significantly from the SWIG bindings packaged with the 2.4.1 version on PyPI. This means a development version of the library can't be used trivially with virtualenvs, for example:; ```; $ pip install openbabel; Collecting openbabel; Using cached https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz; Building wheels for collected packages: openbabel; Running setup.py bdist_wheel for openbabel ... error; Complete output from command /home/eric/data/virtualenvs/cclib_berquist/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-install-3un05okd/openbabel/setup.py';f=getattr(tokeniz; e, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" bdist_wheel -d /tmp/pip-wheel-6z874m0l --python-tag cp37:; running bdist_wheel; running build; running build_ext; Open Babel location automatically determined by pkg-config:; - include_dirs: ['/usr/include/python3.7m', '/usr/include/openbabel-2.0']; - library_dirs: ['/usr/lib', '/usr/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/include/python3.7m -I/usr/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install. ----------------------------------------; Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; Complete output from command /home/eric/dat",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1916:1017,config,config,1017,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1916,1,['config'],['config']
Modifiability,The first plugin reads ORCA output files or writes an ORCA input file as a template.; The other plugin reads and write an extended xyz format file ( we called exyz) which will be used by a feature of the ORCA program in the near future.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/75:10,plugin,plugin,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/75,3,"['extend', 'plugin']","['extended', 'plugin']"
Modifiability,"The following SMILES strings represent 16-membered rings, each containing two E-configured double bonds:. 1.) O=C(O[C@@H](C)C(/C=C/1)=O)/C=C/[C@@H](O)[C@H](C)OC(C[C@H](C)OC1=O)=O; 2.) O=C(O[C@@H](C)[C@@H](O)/C=C/C1=O)/C=C/C([C@H](C)OC(C[C@H](C)O1)=O)=O. When generating coordinates using the --gen3d option, OpenBabel builds the correct structure in case of the first SMILES; but in case of the second SMILES, the geometry of one of the two endocyclic double bonds is changed from E to Z. Furthermore, the planarity of this double bond is destroyed.; The two SMILES strings were saved in a file called 'test.smi' and the following command was executed:; babel test.smi test.pdb --gen3d -m. The error also occures when the two molecules mentioned above are used as 2D-sdf files, so it seems to be an issue of 3D coordinates generation. Version: 2.3.2 -- Oct 5 2012 -- 10:02:15; OS: Windows 7 (error also occures under Linux). Reported by: upgrayedd7. Original Ticket: [openbabel/bugs/869](https://sourceforge.net/p/openbabel/bugs/869)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1249:80,config,configured,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249,1,['config'],['configured']
Modifiability,"The following code segfaults when run on the attached; gzipped SD file. It runs fine when the uncompressed SD; file is used. from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf.gz""); while notatend:; print obmol.GetMolWt(); print obmol.NumAtoms(); obmol = OBMol(); notatend = obconversion.Read(obmol). On running this code the output I get is:. 560.6309496; 70; Segmentation fault. My configuration is:. openbabel-2.0.2b1-20060701; Python 2.4; SWIG 1.3.29; Ubuntu Dapper. Reported by: @rajarshi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562:488,config,configuration,488,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562,1,['config'],['configuration']
Modifiability,"The function should probably return the atom charges, just like calcfp(), calcdesc() and so forth. Apart from this, you should probably add a list of charge models like for the other plugins at the start of the file.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/61#issuecomment-32341433:183,plugin,plugins,183,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/61#issuecomment-32341433,1,['plugin'],['plugins']
Modifiability,"The incomplete reading problem reported by Noel was that ALL_READS_BINARY had not been set by CMake build. (It is now done in the code.) Without it, seekg() gave incorrect results with UNIX file endings under MSVC. In revision 3556 in the trunk code the binary read and write of header variables in fs files are done separately, to avoid the possibility that a struct is laid out differently on other platforms. Maybe this will cure the problem on Linux 64 bit systems? . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339:286,variab,variables,286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339,1,['variab'],['variables']
Modifiability,"The install instructions are correct. The build system for 2.2.2 is ./configure, make. The build system for 2.3 will be cmake. I'm marking this bug as pending. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/915#issuecomment-281795501:70,config,configure,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/915#issuecomment-281795501,1,['config'],['configure']
Modifiability,The issue with the tests is simply that you need to set some environment variables. I'll write them up on the wiki tomorrow - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352:73,variab,variables,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352,1,['variab'],['variables']
Modifiability,"The latest version is 2.3.1? I installed 2.3.1. ; Could you send me a link?. Yujie Tian. > On Mar 10, 2015, at 5:03 AM, baoilleach notifications@github.com wrote:; > ; > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:310,Config,Config,310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Config'],['Config']
Modifiability,"The main improvement is getting rid of the hard-coded path by using the already-existing variable. (Also introduces the possibility of the include install path to something else using -DOB_INCLUDE_DIRS in cmake; this was my personal reason for looking through and editing the CMakeLists.txt file, I wanted the option to install headers to ~/include/openbabel/ instead of ~/include/openbabel-2.0/openbabel/, for example.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/287:89,variab,variable,89,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287,1,['variab'],['variable']
Modifiability,"The method marks ring bonds as potential rotors and supplies some; initial constraints on rings of size 4-8. Performance can be greatly; enhanced by checking rotors for physically realistic conformations; (i.e., sum of the dihedrals in ring = 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/132:137,enhance,enhanced,137,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/132,1,['enhance'],['enhanced']
Modifiability,The motivation is discussed at https://github.com/openbabel/enhancement-proposals/pull/9. The OBAtom API was changed as follows:. 1. BOSum -> GetExplicitValence(); 2. GetValence() -> GetExplicitDegree(); 3. Added GetTotalValence() and GetTotalDegree(); 4. GetHvyValence() -> GetHvyDegree(); 5. GetHeteroValence() -> GetHeteroDegree(). (I thought I could get rid of 4 and 5 but they are widely used.),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1975:60,enhance,enhancement-proposals,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1975,1,['enhance'],['enhancement-proposals']
Modifiability,"The original behavior of the toolkit is to write asterisk without brackets. This is the behavior of Daylight. The rewrite of the handling of implicit hydrogens caused them to be bracketed. . This PR ensures returns to the original behavior, that asterisk is not bracketed unless necessary. This involved adding asterisk to the organic subset (with valence 0), and special-casing the handling of hypervalent ""*"" (as we now add square brackets around hypervalent atoms). Also I got rid of a warning about unrealistic charge state for [*+] (triggered because the charge is greater than the atomic no).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1759:114,rewrite,rewrite,114,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1759,1,['rewrite'],['rewrite']
Modifiability,The output of `grep PYTHON CMakeCache.txt` is :; ```; PYTHON_BINDINGS:BOOL=ON; PYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python3.10; PYTHON_INCLUDE_DIR:PATH=/usr/local/include/python3.10; PYTHON_LIBRARY:FILEPATH=/usr/local/lib/libpython3.10.a; PYTHON_LIBRARY_DEBUG:FILEPATH=PYTHON_LIBRARY_DEBUG-NOTFOUND; //ADVANCED property for variable: PYTHON_EXECUTABLE; PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_INCLUDE_DIR; PYTHON_INCLUDE_DIR-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY; PYTHON_LIBRARY-ADVANCED:INTERNAL=1; //ADVANCED property for variable: PYTHON_LIBRARY_DEBUG; PYTHON_LIBRARY_DEBUG-ADVANCED:INTERNAL=1; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476:329,variab,variable,329,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2618#issuecomment-1671384476,4,['variab'],['variable']
Modifiability,The problem is that MinGW always disabled dynamic modules in configure. I'm making a new configure script... Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795362:61,config,configure,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795362,2,['config'],['configure']
Modifiability,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:232,extend,extending,232,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,1,['extend'],['extending']
Modifiability,"The python binding compile step is not aware of the CMAKE variable EIGEN2_INSTALL_DIR as of r2349. If Eigen2 was not installed in the default include path, the python bindings do not compile successfully. Similarly, any custom CFLAGS set in CMAKE are not passed on to the python binding compilation. The workaround is to export CFLAGS=""${CFLAGS} -I${EIGEN2_INSTALL_DIR}"" into the local environment before compiling, but this is not ideal. Attached is an attempted solution using export to set the environment variables before compiling, but it is not complete since it would not work in shells like csh that use setenv instead of export. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1077:58,variab,variable,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1077,2,['variab'],"['variable', 'variables']"
Modifiability,"The solution is much simpler than I've anticipated. There is `SWIG_PYTHON_2_UNICODE` variable that has to be defined to [support unicode in Python 2.x](http://www.swig.org/Doc3.0/Python.html). Although swig has to be at least 3.0.8 to work, which is the case for Anaconda - we should be fine. There shouldn't be any downside to this resolution for earlier versions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870:85,variab,variable,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870,1,['variab'],['variable']
Modifiability,"The stereo objects are correctly updated (with OBStereo::ImplicitRef) when the hydrogens are removed. However, the InChI format did not handle this correctly. The first 2 examples are actually a special case. The molecules are not stereogenic because there are two implicit neighbors. These should be (explicitly) ignored, similarly how C\[C@](C)(C)C would be handled. For tetrahedral stereochemistry the inchi format could only handle implicit refs if these were the first or second atom in the smiles string. This was easily extended to the general case. Fix with regression tests (pull request created): https://github.com/timvdm/openbabel/tree/issue2111",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357:527,extend,extended,527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357,1,['extend'],['extended']
Modifiability,"The variable was called as Boltzmann's constant but actually gas constant, and the value was incorrect.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2045:4,variab,variable,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2045,1,['variab'],['variable']
Modifiability,The variable-length array bites again!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517913006:4,variab,variable-length,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517913006,1,['variab'],['variable-length']
Modifiability,The whole point of the switch statement is to be super fast. Adding function calls to tolower() makes no sense. The switch statement is automatically generated and can be adapted to handle every case. But I thought we agree that tolower() would be called by the XYZ format rather than put in here.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2338#issuecomment-805056504:171,adapt,adapted,171,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2338#issuecomment-805056504,1,['adapt'],['adapted']
Modifiability,"The wx-widgets test is called and stored in the Makefile even when the wx-gui is not enabled. This results in a build failure on Gentoo Linux. The wx-config command should never be called if the GUI hasn't been enabled. config.status: executing include/openbabel/babelconfig.h commands; Makefile:162: *** missing separator. Stop.; *; * ERROR: sci-chemistry/openbabel-2.2.0_beta5 failed.; * Call stack:; * ebuild.sh, line 49: Called src_compile; * environment, line 2104: Called die; * The specific snippet of code:; * emake || die ""emake failed""; * The die message:; * emake failed. Reported by: @cryos",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764:150,config,config,150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764,2,['config'],['config']
Modifiability,"Then there's examples with 3 nitrogens in the ring. Similar story. To make matters more complicated, it's the extended PI system that's important. See for example http://www.daylight.com/daycgi/depict?4f3d63316e636e63325b6e485d5b6e485d63633132 where the pyrimidinone does not have a H on either N, but everything is balanced out by the fused ring (as far as I can tell). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794887:110,extend,extended,110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794887,1,['extend'],['extended']
Modifiability,"There are a few example about how to use the OpenBabel Module here: https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonDoc.html. Taking the SMILES example and adapting for .mol2, try using the following as a starting point:; ```python; from openbabel import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""mol2""). mol = openbabel.OBMol(); obConversion.ReadString(mol, ""C1=CC=CS1""); mol.AddHydrogens(); openbabel.OBBuilder().Build(mol) # To get coordinates. # If you just want the string; mol2string = obConversion.WriteString(mol). # To save as a .mol2 file; obConversion.WriteFile(mol, ""out.mol2""); ```. Alternatively, you can use the `pybel` module, which is somewhat simplified:; ```python; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C1=CC=CS1""); mol.addh(); mol.make3D(); mol.write(""mol2"", ""out.mol2""); ```. However, I believe it is much simpler to call the `obabel` executable:; ```sh; obabel -:""C1=CC=CS1"" --gen3D -O out.mol2; ```; which can be called from Python via:; ```python; import os; os.system(""obabel -:\""C1=CC=CS1\"" --gen3D -O out.mol2""); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811:172,adapt,adapting,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811,1,['adapt'],['adapting']
Modifiability,"There are a few related changes here:; 1. Move the setting of the HasChainsPerceived() flag into the perception function itself, rather than out here in OBAtom::GetResidue(). What if someone calls the perception function directly? The new behavior is consistent with other perceived properties.; 2. Rewrite the function so that it is driven by the HasChainsPerceived() flag, rather than first checking whether the atom has a _residue assigned. This is the behavior I've been fixing for other lazily perceived properties.; 3. Remove the code to force (or avoid) perception added by @ghutchis 11 years ago to help Avogadro and others. This looks like a workaround because (2) was not done. How the lazily evaluated system is supposed to work is that you can force or avoid perception using the HasChainsPerceived() flag. Adding or removing an atom will call EndModify() and blow away this flag (I haven't changed this behavior but we could), but the user can store and reset the flag after edits if so desired.; 4. Remove the code to wipe the existing _residue if the chains perception returns false. This code doesn't make any sense as it only wipes a single residue. If all of the residues should be wiped then this is the responsibility of the perception code, which is in charge of setting these.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849:299,Rewrite,Rewrite,299,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849,1,['Rewrite'],['Rewrite']
Modifiability,"There is a live ebuild in science overlay, you can install latest development version using that. Though there is a bug currently which prevents installation of Python bindings for the live version because of the issue with sandbox, which I don't know how to resolve (have reported it on bugzilla).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484:224,sandbox,sandbox,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484,1,['sandbox'],['sandbox']
Modifiability,There's no BABEL_DATADIR environment variable after clean 2.4.1 installation. I also can't seem to find the data directory that would be comparable to %USERPROFILE%\AppData\Roaming\OpenBabel-2.3.2\data after the 2.3 installation.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1635#issuecomment-363459298:37,variab,variable,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1635#issuecomment-363459298,1,['variab'],['variable']
Modifiability,"These commits provide some improvements to the python bindings.; - Converted the python README to [rst](http://docutils.sourceforge.net/rst.html) so it displays nicely formatted on [PyPI](https://pypi.python.org/pypi/openbabel).; - Changed the order of subcommands so `build_ext` comes before `build_py` when running the `build` or `install` commands. This ensures SWIG is run to generate `openbabel.py` before `build_py` attempts to copy it into the build directory.; - Added some error checking and fallback for if `pkg-config` fails.; - Allows the Open Babel library and include directories to be specified manually using command line options, i.e. `python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib`.; - Warn if the Open Babel version is less than 2.3.0, as it isn't supported.; - Added better error message if SWIG fails to find Open Babel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65:522,config,config,522,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65,1,['config'],['config']
Modifiability,"These kind of problems are almost always due to a problem with the BABEL_DATADIR environment variable. Are you using a Conda install of OpenBabel? In that case, you could look at the following comment to find out how to set the variable. https://github.com/openbabel/openbabel/issues/2372#issuecomment-850439612; There is also work being done on improving the Conda install to eliminate these problems (https://github.com/conda-forge/openbabel-feedstock/pull/22#issue-992108462)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385:93,variab,variable,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-917893385,2,['variab'],['variable']
Modifiability,This PR fix #1987 by adding quotes to the variable `${DEFINES}`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1988:42,variab,variable,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1988,1,['variab'],['variable']
Modifiability,"This PR partially implements periodic boundary conditions in Open Babel by applying the minimum image convention and using `OBUnitCell` data. Some formats or existing code may not be expecting this behavior, so it is currently hidden behind an `OB_PERIODIC_MOL` flag in `OBMol`. See also https://github.com/openbabel/enhancement-proposals/pull/6 for more discussion. Currently this PR is more of a minimum viable product, but over the summer I'm planning to submit additional PR's after combing through more of the codebase. This PR also adds an option to write bonding information to CIF output, including notation for bonds across periodic boundaries. Before the code can be merged, there's a handful of details to take care of:. 1. There are some merge conflicts (and we should be careful that any changes are compatible with PR#1823). What's the quickest/cleanest way to address these?; 2. Const correctness is tricky: I couldn't keep the `const` keyword on `OBBond::GetLength()` without making a lot of other changes to `OBMol::HasFlag` and some related methods.; 3. What is best practice for the argument of `OBGenericData->Clone(NULL)`? Is it NULL, the OBMol, or something context-dependent?; 4. Any other comments or cleanup would also be appreciated. Thanks!. Special thanks to Giovanni Garberoglio for helpful discussion and his code in <http://software-lisc.fbk.eu/obgmx/>. I tried to combine the best parts of both of our PBC implementations in this PR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853:317,enhance,enhancement-proposals,317,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853,1,['enhance'],['enhancement-proposals']
Modifiability,"This fixes #1676. The wrong variable name was used in the loop: should have been (*it), not atom. It would have been found by the original author if atom had been scoped a bit more tightly.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1745:28,variab,variable,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1745,1,['variab'],['variable']
Modifiability,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/234:148,plugin,plugin,148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234,4,['plugin'],['plugin']
Modifiability,"This is a bug when babel is used on the command-line . The sizing of the table works ok in the GUI and with the alternative command-line interface obabel (see the example below). The development code now has a fix for babel, but it requires the use of --rows and --cols instead of xr and -xc (and --px instead of -xp). With babel the options are shared with other formats, which causes conflicts when they take different numbers of parameters (as here). obabel is more flexible because it does not need to be told the number of parameters. This, and its greater protection against mistakingly overwriting input files, make it the command-line interface of choice. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1047#issuecomment-281797830:469,flexible,flexible,469,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1047#issuecomment-281797830,1,['flexible'],['flexible']
Modifiability,"This is an instance of a long-standing difficulty which arises because the query is either SMARTS or is converted into SMARTS.; Converting search1.mol and search2.mol is to SMILES and gives; c1c2c(ccc1)nc[nH]2; OC(=O)OC(OC(=O)C)C; When used as SMARTS, they do not match target.mol because; in the first, the explicit H is not present and; in the second, the terminal C is aliphatic rather than aromatic. ; 	; c1c2c(ccc1)ncn2 and; OC(=O)OC(OC(=O)[#6])C; do match. So there is no bug when the query is in the -s option (or the GUI) and it would be a pity to degrade the interpretation of the parameter in -s option to something less than SMARTS. On the other hand, this is not what many people expect, particularly if they provided the query as a molecule. I'm currently working on an extended -s option which can also take a filename. The molecule in the file is matched in a more relaxed way (with Tim's new isomorphism code). With this, the queries, search1.mol and search2.mol, now match target.mol. I'll commit to the development code when I've sorted out the interaction with fastsearch. Maybe the new isomorphism code could be used in tigress?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/998#issuecomment-281796899:783,extend,extended,783,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/998#issuecomment-281796899,1,['extend'],['extended']
Modifiability,"This is certainly a bug (we need more testcases) but while it is true that the original code did handle ""CL"" and ""Chlorine"" among other synonyms, I decided during the rewrite that the GetAtomicNum should just contain the atomic symbol 'Cl'. This function should do one job and do it well. In other words, I'd prefer not to change a core function for the sake of a particular format, and instead just lower-case the 2nd letter before lookup.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974:167,rewrite,rewrite,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974,1,['rewrite'],['rewrite']
Modifiability,"This is fixed in the 2.2.x branch, revision 2831 or later. I've address missing ""Variables"" line as well as z-matrices with embedded numbers (and no variables). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793682:81,Variab,Variables,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793682,2,"['Variab', 'variab']","['Variables', 'variables']"
Modifiability,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064:686,variab,variables,686,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064,1,['variab'],['variables']
Modifiability,"This is not a bug. The Open Babel install should be configured using CMake parameters, not at the ""make"" stage. See the installation instructions. If you want to discuss this in more detail, for example if you feel that our approach does not allow you to do something in particular, please send an email to the dev list and people can weigh in on this. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1075#issuecomment-281799997:52,config,configured,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075#issuecomment-281799997,1,['config'],['configured']
Modifiability,"This is now fixed in svn. However, you are still not able to optimize your molecule because there are three deuterium atoms present. AFAIK you can safly remove the M ISO line in the file without affecting the results. (atom mass is not used in parameterization/optimization). Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954:244,parameteriz,parameterization,244,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954,1,['parameteriz'],['parameterization']
Modifiability,"This is related to https://github.com/openbabel/enhancement-proposals/pull/7. I only made the change for SMILES and InChI, as MOL needs more thought. The change was simple in the end and didn't require any API changes. A one line change in the relevant readers. It was figuring out why test cases failed that took the time. A number of bugs were fixed in the course of getting the test suite back to working:; - if a molecule didn't have hybridisation perceived, OBBuilder did not work correctly.; - OBAtom:: and Bond:IsAromatic() did not always trigger reperception, even where the OBMol flag was unset. I've changed this behavior, as I think it's unexpected.; - vector3::randomUnitVector() created a static OBRandom but set the seed using system time each time it was called. This meant that the same 'random' vector was returned during a period of 1s. Meanwhile, the OBBuilder is looping around for 1 second trying to find a suitable vector.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1696:48,enhance,enhancement-proposals,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1696,1,['enhance'],['enhancement-proposals']
Modifiability,This isn't a bug - the correct variable names are documented. You need to specify the location with EIGEN3_INCLUDE_DIR.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1918#issuecomment-453948396:31,variab,variable,31,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1918#issuecomment-453948396,1,['variab'],['variable']
Modifiability,"This isn't a bug. SMILES are limited to 32,767 characters, and the attached file contains a SMILES with over 200,000 characters. If this is something you need, you should re-file this as an enhancement request. I will open a different bug for this issue: SMILES are truncated to 32,767 characters without warning, which will produce either an incorrect error message or the wrong molecule. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1180#issuecomment-281801806:190,enhance,enhancement,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1180#issuecomment-281801806,1,['enhance'],['enhancement']
Modifiability,"This isn't a problem with trunk, although the file exposes another bug:. #0 0x0000000100195610 in OpenBabel::OBTetrahedralStereo::IsValid (this=0x0) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:114; #1 0x0000000100195877 in OpenBabel::OBTetrahedralStereo::GetConfig (this=0x0, winding=OpenBabel::OBStereo::Clockwise, view=OpenBabel::OBStereo::ViewFrom) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/tetrahedral.cpp:152; #2 0x00000001001a66f4 in OpenBabel::OBStereoFacade::InitMaps (this=0x7fff5fbfb210) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:84; #3 0x00000001001a6c22 in OpenBabel::OBStereoFacade::EnsureInit (this=0x7fff5fbfb210) at stereo.h:404; #4 0x000000010131fa81 in OpenBabel::OBStereoFacade::HasTetrahedralStereo (this=0x7fff5fbfb210, atomId=48) at /Volumes/Home/ghutchis/Devel/openbabel/src/stereo/facade.cpp:44; #5 0x0000000101227130 in OpenBabel::OBGraphSym::BreakChiralTies (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:541; #6 0x0000000101228805 in OpenBabel::OBGraphSym::ExtendInvariants (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfba00) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1003; #7 0x0000000101229435 in OpenBabel::OBGraphSym::CalculateSymmetry (this=0x7fff5fbfbd50, atom_sym_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1058; #8 0x000000010122988c in OpenBabel::OBGraphSym::GetSymmetry (this=0x7fff5fbfbd50, symmetry_classes=@0x7fff5fbfbde0) at /Volumes/Home/ghutchis/Devel/openbabel/src/graphsym.cpp:1094. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794:1110,Extend,ExtendInvariants,1110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/934#issuecomment-281795794,1,['Extend'],['ExtendInvariants']
Modifiability,"This issue will be closed, but not for failing to create a 3D structure *at all*. I retract the issue because I don't possess enough insight how OpenBabel and RDKit's guess the spatial arrangement of the atoms if a SMILES string is the sole input at hand. If the structures are read by Jmol, and if the later is requested to assign the absolute configuration (apparently, taking into account for the non-bonded electron pair on nitrogen then assigned priority `0`) then the two programs offer an output Jmol eventually assigns as either (*R*), or (*S*) about N. ![ezgif com-gif-maker](https://user-images.githubusercontent.com/19709084/124796016-35e47e00-df40-11eb-9b66-3ccc1aab40dc.gif). For the interested, the archive below documents the steps and files leading to the animation shown. [close_wegdes.zip](https://github.com/openbabel/openbabel/files/6778775/close_wegdes.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408:345,config,configuration,345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393#issuecomment-875751408,1,['config'],['configuration']
Modifiability,"This looks like a false positive to me, but it's harmless. I don't see how, if atom->GetIdx() is uninitialized, assigning it to a variable is going to initialize it. As I said, it's harmless, so assuming the builds pass, I'm fine with merging.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350020279:130,variab,variable,130,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350020279,1,['variab'],['variable']
Modifiability,"This may be related to issue #1551, but I tried using OBResidue's GetAtoms method because I'm trying to get the character code of the atoms in each residue. I can call the method and assign the result to a variable, but the result can't be indexed (has no __getitem__ attribute). Also, when I evaluate the variable in the interpreter, I get a message about a memory leak. I've tried demonstrating this behaviour below. ```; >>> r = mol.GetResidue(2); >>> r.GetNumAtoms(); 16; >>> r.GetAtoms(); <Swig Object of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *' at 0x105e14450>; >>> atom_list = r.GetAtoms(); >>> atom_list; swig/python detected a memory leak of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *', no destructor found.; <Swig Object of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *' at 0x105e14420>; >>> atom_list[1]; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: 'SwigPyObject' object has no attribute '__getitem__'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1552:206,variab,variable,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1552,2,['variab'],['variable']
Modifiability,This on a Mac G4 ; Mac OS X 10.3.4 (7H63); after ; ./configure ; make ; make check. [macdeh:~/openbabel-1.100.2] deh% make install; Making install in src; make install-recursive; Making install in math; make[4]: Nothing to be done for `install-exec-am'.; mkdir -p -- . /usr/local/include/openbabel/math; /usr/bin/install -c -m 644 matrix3x3.h /usr/local/include/; openbabel/math/matrix3x3.h; /usr/bin/install -c -m 644 vector3.h /usr/local/include/openbabel/; math/vector3.h; Making install in windows; make[4]: Nothing to be done for `install-exec-am'.; make[4]: Nothing to be done for `install-data-am'.; mkdir -p -- . /usr/local/lib; /bin/sh ../libtool --mode=install /usr/bin/install -c libopenbabel.la ; /usr/local/lib/libopenbabel.la; /usr/bin/install -c .libs/libopenbabel.0.0.0.dylib /usr/local/lib/; libopenbabel.0.0.0.dylib; install: /usr/local/lib/libopenbabel.0.0.0.dylib: Permission denied; make[4]: *** [install-libLTLIBRARIES] Error 71; make[3]: *** [install-am] Error 2; make[2]: *** [install-recursive] Error 1; make[1]: *** [install] Error 2; make: *** [install-recursive] Error 1; [macdeh:~/openbabel-1.100.2] deh% . Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/434:53,config,configure,53,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434,1,['config'],['configure']
Modifiability,"This pull request is related to issue #1298 on which I have commented. The segfault was caused by line with symmetry of the mode like this one:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; The line was skipped by the program and the following loop did not read atoms correctly. The problem was apparently fixed in master, however fixing it exposes new segfault caused by the fact that `modeCount` variable is defined in line **548** as `unsigned int` and then used to leave the loop in lines **551-591**. At the end of loop there is a line; ```; modeCount = vs.size() - 3;; ```; For an empty vector the result (-3) is incorrectly casted to `unsigned int` and the condition in line **551**; ```; while (modeCount >= 1) {; ```; fails. This has been resolved in lines **554-555** like this:; ```; if (!atom); break; // something is very wrong; ```; My suggestion is to simply declare `modeCount` as `int`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1772:474,variab,variable,474,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1772,1,['variab'],['variable']
Modifiability,"This script fails:; ```; import pybel; mymol=pybel.readstring('smi','CCOC(=O)C'); mymol.addh(); mymol.make3D(); print mymol.write(format='mol2'); ```; ```; Traceback (most recent call last):; File ""x.py"", line 3, in <module>; mymol=pybel.readstring('smi','CCOC(=O)C') ; File ""/usr/local/lib/python2.7/site-packages/pybel.py"", line 199, in readstring; raise ValueError(""%s is not a recognised Open Babel format"" % format); ValueError: smi is not a recognised Open Babel format; ```. But when queried, it says that ```smi``` is supported:; ```; import pybel; print sorted(pybel.informats); ```; ```; ['CONFIG', 'CONTCAR', 'CONTFF', 'HISTORY', 'MDFF', 'POSCAR', 'POSFF', 'VASP', 'abinit', 'acesout', 'acr', 'adfout', 'alc', 'aoforce', 'arc', 'axsf', 'bgf', 'box', 'bs', 'c09out', 'c3d1', 'c3d2', 'caccrt', 'can', 'car', 'castep', 'ccc', 'cdjson', 'cdx', 'cdxml', 'cif', 'ck', 'cml', 'cmlr', 'crk2d', 'crk3d', 'ct', 'cub', 'cube', 'dallog', 'dalmol', 'dat', 'dmol', 'dx', 'ent', 'exyz', 'fa', 'fasta', 'fch', 'fchk', 'fck', 'feat', 'fhiaims', 'fract', 'fs', 'fsa', 'g03', 'g09', 'g92', 'g94', 'g98', 'gal', 'gam', 'gamess', 'gamin', 'gamout', 'got', 'gpr', 'gro', 'gukin', 'gukout', 'gzmat', 'hin', 'inchi', 'inp', 'ins', 'jin', 'jout', 'log', 'lpmd', 'mcdl', 'mcif', 'mdl', 'ml2', 'mmcif', 'mmd', 'mmod', 'mol', 'mol2', 'mold', 'molden', 'molf', 'moo', 'mop', 'mopcrt', 'mopin', 'mopout', 'mpc', 'mpo', 'mpqc', 'mrv', 'msi', 'nwo', 'orca', 'out', 'outmol', 'output', 'pc', 'pcjson', 'pcm', 'pdb', 'pdbqt', 'png', 'pos', 'pqr', 'pqs', 'prep', 'pwscf', 'qcout', 'res', 'rsmi', 'rxn', 'sd', 'sdf', 'siesta', 'smi', 'smiles', 'smy', 'sy2', 't41', 'tdd', 'text', 'therm', 'tmol', 'txt', 'txyz', 'unixyz', 'vmol', 'xml', 'xsf', 'xyz', 'yob']; ```. Downstream FreeBSD bug report: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=194599. Version 2.4.1 on FreeBSD 11.2 installed from the port.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1898:600,CONFIG,CONFIG,600,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1898,1,['CONFIG'],['CONFIG']
Modifiability,"This was a bug found by the gcc warnings. It's the same as the one that bit me in #1723. In the expression:; ```; if ( (a=((*ppat) & (*p++)) ^ (*ppat++)) ) break;; ```; ...the order of evaluation of *ppat and *ppat++ is undefined. Which means that our fingerprint screen may not have been working as intended for some users who compiled it (though I'm not aware of any complaints). Actually, the rewrite should be slightly faster as the break now occurs before ppat and p are incremented.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1749:396,rewrite,rewrite,396,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1749,1,['rewrite'],['rewrite']
Modifiability,This was left out by the earlier commit while using mmcif as default; plugin for cif files.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/130:70,plugin,plugin,70,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/130,1,['plugin'],['plugin']
Modifiability,"This works:; obabel molecules.sdf -O new.png -opng2 -m; producing new1.png, new2.png, etc. On Windows, this also works:; obabel molecules.sdf -O new*.png -opng2. The new --split option has the same problem as -m. The trouble is that PNGFormat is not quite a normal format because it has been adapted from a different purpose. PNG2Format is a normal format, so outputting to it does what is expected. I'll look to see if I can do something to make the more obvious command line work as expected. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1156#issuecomment-281801403:292,adapt,adapted,292,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1156#issuecomment-281801403,1,['adapt'],['adapted']
Modifiability,"To begin with, this PR addresses the following bugs:; 1. Atom maps were not being updated when atoms/hydrogens were deleted; 2. Atom maps were not being copied on adding two molecules together. It also changes the behaviour of the OBAtomClassData somewhat:; 1. If an atom does not have any class, the value of 0 is returned (instead of -9999); 2. Setting a value of zero removes the value; 3. It is not enforced, but the documentation now states that atom classes can only be positive integers in keeping with the Open Smiles spec (previously it was documented as allowing any integer). While these changes make the library work as expected, I plan to submit an Enhancement Proposal to suggest that we either use AtomIds to store this data (instead of AtomIdxs), or store it directly on the OBAtoms (instead of on the OBMol).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1698:662,Enhance,Enhancement,662,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1698,1,['Enhance'],['Enhancement']
Modifiability,Travis use Swig 2.0.x ([log](https://travis-ci.org/openbabel/openbabel/jobs/145775600#L254)) and all tests pass. Defining arbitrary variable should not mess with anything (unless it is not meant for anything else). I may try building OB with Swig 3.0.7 which is just before that feature was used if you think it will help.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055:132,variab,variable,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055,1,['variab'],['variable']
Modifiability,"Try a more recent version of Open Babel.; - Noel. On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:. > Cmake Config is like following:; > [image: screen shot 2015-03-09 at 5 14 26 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > [image: screen shot 2015-03-09 at 5 14 38 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake W",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:126,Config,Config,126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Config'],['Config']
Modifiability,"Trying out the new ""obmm"" tool, and running a CG step yields a fast crash. The ""logos"" variable is never initialized, so the code attempts to write to a NULL stream. While this can be fixed with modifications to obmm, I worry that there's no guarantee that the stream pointer will be set. (i.e., there's no exposed constructor). So this can occur easily in even well-meaning client code. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606:87,variab,variable,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606,1,['variab'],['variable']
Modifiability,"Two of the three fingerprinters are based on SMARTS patterns. The two files (""patterns.txt"" and ""SMARTS_InteLigand.txt"") use different file formats. That doesn't make sense. Why not rewrite one so both use the same format? The decision code is in. bool ReadPatternFile(const string& filename, vector<string>& lines); {; //Reads two types of file: SMARTS + comments and vice versa; //depending on whether the first line is #Comments after SMARTS; //Output strings in vector are SMARTS + comments. The lack of consistency makes it harder for someone to figure out how the formats work (because one is different than the other) and to add a new SMARTS-based definition (which format should someone use?). Reported by: dalke. Original Ticket: ""openbabel/feature-requests/131"":https://sourceforge.net/p/openbabel/feature-requests/131",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1500:182,rewrite,rewrite,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1500,1,['rewrite'],['rewrite']
Modifiability,"Ultimately I think the solution is to rewrite that format to avoid this dependency. But in the meanwhile, looks like a reasonable fix.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853:38,rewrite,rewrite,38,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853,1,['rewrite'],['rewrite']
Modifiability,"Unable to recall if you or an other leading developer of openbabel attended the virtual meeting «InChI Days 2022» in April by [InChI trust](https://www.inchi-trust.org/) or/and are subscriber to the (low traffic) public [discussion board](https://sourceforge.net/p/inchi/mailman/inchi-discuss/), I would like to draw your attention to their [technical meeting](https://www.inchi-trust.org/june-2022-technical-sessions) June 17--19 in Cambridge UK. Again, virtual attendance of the event is possible. . While the meeting wants to focus on ""progress toward adding extended stereochemistry and tautomers"", on Friday, Gerd Blanke chairs one session to clarify if ongoing work is going to be named InChI 1.07 (or 2.0).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2488#issuecomment-1152082101:562,extend,extended,562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2488#issuecomment-1152082101,1,['extend'],['extended']
Modifiability,Unused argument variable in header file,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2376:16,variab,variable,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2376,1,['variab'],['variable']
Modifiability,"Use the modern CMake macros to produce config files that properly work (hopefully). This also makes it possible to deprecate the `OpenBabel3_INCLUDE_DIRS` & `OpenBabel3_LIBRARIES` public CMake variables, and use only the `openbabel` imported library. This fixes #2264.; This fixes #2305.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2315:39,config,config,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2315,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"Usually it's good to have one feature or fix per pull request.; On 24 Mar 2016 10:53 p.m., ""arkose"" notifications@github.com wrote:. > The main improvement is getting rid of the hard-coded path by using the; > already-existing variable.; > ; > (Also introduces the possibility of the include install path to something; > else using -DOB_INCLUDE_DIRS in cmake; this was my personal reason for; > looking through and editing the CMakeLists.txt file, I wanted the option to; > install headers to ~/include/openbabel/ instead of; > ; > ## ~/include/openbabel-2.0/openbabel/, for example.); > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/openbabel/openbabel/pull/287; > Commit Summary; > - CMakeLists.txt fix for wrongly hard-coded path; > ; > File Changes; > - _M_ CMakeLists.txt; > https://github.com/openbabel/openbabel/pull/287/files#diff-0 (6); > ; > Patch Links:; > - https://github.com/openbabel/openbabel/pull/287.patch; > - https://github.com/openbabel/openbabel/pull/287.diff; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/287",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/287#issuecomment-201225319:227,variab,variable,227,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287#issuecomment-201225319,1,['variab'],['variable']
Modifiability,Variable set but not used in OBForceField::DistanceGeometry(),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1735:0,Variab,Variable,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1735,1,['Variab'],['Variable']
Modifiability,"We can blame CMake, but we still need to sort it out at our end. Hopefully we can do this. The other problem is building the GUI. You need wxWidgets 2.8, but you don't have this. Configure CMake with ""-DBUILD_GUI=OFF"" to stop building the GUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800651:179,Config,Configure,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800651,1,['Config'],['Configure']
Modifiability,"We should remove this format, as it duplicates smi and I did not update it; in the implicit H rewrite. On Sat, 14 Apr 2018, 12:16 Julien Nabet, <notifications@github.com> wrote:. > With master sources updated today, I could retrieve a bt:; > Error: attempt to subscript container with out-of-bounds index 2147483647,; > but container only holds 24 elements.; >; > Objects involved in the operation:; > sequence ""this"" @ 0x0x7fffffffc910 {; > type = std::__debug::vector<int, std::allocator >;; > }; >; > Program received signal SIGABRT, Aborted.; > __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > 51 ../sysdeps/unix/sysv/linux/raise.c: Aucun fichier ou dossier de ce type.; > (gdb) bt; > #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > #1 <https://github.com/openbabel/openbabel/pull/1> 0x00007ffff7a54231 in; > __GI_abort () at abort.c:79; > #2 <https://github.com/openbabel/openbabel/pull/2> 0x00007ffff667e4d5 in; > ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; > #3 <https://github.com/openbabel/openbabel/pull/3> 0x00007ffff730d5d9 in; > std::__debug::vector<int, std::allocator >::operator[]; > (this=0x7fffffffc910, __n=2147483647) at /usr/include/c++/7/debug/vector:417; > #4 <https://github.com/openbabel/openbabel/pull/4> 0x00007fffe8282bbd in; > OpenBabel::OpenBabelCallback::setChiral (this=0x7fffffffc8d0, index=0,; > chirality=Smiley::AntiClockwise,; > chiralNbrs=std::__debug::vector of length 4, capacity 4 = {...}) at; > /home/julien/projects/openbabel/src/formats/smileyformat.cpp:140; > #5 <https://github.com/openbabel/openbabel/pull/5> 0x00007fffe8286e39 in; > Smiley::ParserOpenBabel::OpenBabelCallback::processStereochemistry; > (this=0x7fffffffc7b0); > at /home/julien/projects/openbabel/src/formats/smiley.h:2656; > #6 <https://github.com/openbabel/openbabel/pull/6> 0x00007fffe828475f in; > Smiley::ParserOpenBabel::OpenBabelCallback::parse (this=0x7fffffffc7b0,; > str=""[C@H]1(C@@HO)O\tInositol_trisphosphate"") at;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184:94,rewrite,rewrite,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184,1,['rewrite'],['rewrite']
Modifiability,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:1251,variab,variables,1251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586,1,['variab'],['variables']
Modifiability,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:182,plugin,plugins,182,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,1,['plugin'],['plugins']
Modifiability,"Well, it still had to be done. Thanks. On Mon, 16 Sep 2019, 15:11 fredrikw, <notifications@github.com> wrote:. > I was (unfortunately) able to pinpoint the regression to 4094c68; > <https://github.com/openbabel/openbabel/commit/4094c68b87415889150377bd9dc419398ac78d8b>; > which is @chrismorl <https://github.com/chrismorl> 's rewrite of the cdx; > parser. So no easy revert there...; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2021?email_source=notifications&email_token=AAALCGPGQUFCQXTD6WTSVCTQJ6HXZA5CNFSM4ISQVHSKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD6ZIXBY#issuecomment-531794823>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AAALCGMVTZJZZFRHXQCDCC3QJ6HXZANCNFSM4ISQVHSA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531828265:327,rewrite,rewrite,327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2021#issuecomment-531828265,1,['rewrite'],['rewrite']
Modifiability,"What I can't figure out is why it's not working for you, when it's working fine for me...if I can't reproduce the problem at this end, it'll be difficult to sort it out... I have access to a Centos 5.5, 64-bit system. Using CMake 2.8.0, building in a separate directory from the source, and ensuring that there are no other OpenBabel installations on my system, and that ""env | grep -i babel"" yields nothing, ""make test"" passes with flying colours. Can you try doing this also? If we can pinpoint the source of the problem, we can sort it out. BTW, it's instructive to look into $OBBUILDDIR/test/CTestTestfile.cmake and see how the environment for the tests has been set. You could try going in there and setting some more variables and seeing if it affects the outcome of a particular test. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795:723,variab,variables,723,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795,1,['variab'],['variables']
Modifiability,"What is the Tanimoto coefficient of two molecules that have no bits set? The answer should be 0. This can occur where you are comparing two molecules that don't have any functional groups, e.g. using FP3. In the Python interface (Windows) I get an answer of ""-1.#IND"" which is a new one on me. I guess it means division by zero error. Here's a test case:. >>> import pybel; >>> mols = [pybel.readstring(""smi"", x) for x in ['CCCC', 'CCCN']]; >>> fps = [x.calcfp(""FP3"") for x in mols]; >>> fps[0] | fps[1]; -1.#IND. Here's a page that suggests that this results from a variable not being initialised:; http://www.thescripts.com/forum/thread62988.html. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/648:567,variab,variable,567,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648,1,['variab'],['variable']
Modifiability,"What version of CMake are you using? The CMakeLists.txt file definitely sets up environment variables for ""make test"", so I'm curious if you have an older version of CMake or something. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792:92,variab,variables,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792,1,['variab'],['variables']
Modifiability,"What version of Cmake are you using? Also, can you paste (or attach) the entire CMake configuration output. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800642:86,config,configuration,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800642,1,['config'],['configuration']
Modifiability,"When I want to do multiple Tanimoto similarity searches of the same fastsearch index using the command line tools, I have to invoke obabel multiple times because the -s argument only processes one line from the file-agument. Starting up the obabel process and mapping the fastsearch index into memory actually takes more time than doing the actual search itself, so this really slows things down. I can make my own standalone code to link into the openbabel library to do multiple searching, but I would prefer to add this feature to one of the community tools if there is a good place to do so. I thought of extending obabel so that it would process more than the first line of the -s file, but that would not be backward compatible because some people might have code depending on giving it a multiline -s file but having it process just one line, and because I would have to invent some way to delimit the output for one query line from the output of the next query line. I've actually done this in a very crude way in a branch:. https://github.com/jeffjanes/openbabel/tree/multi_fastsearch. but it is really only useful to explore the timing, and not as a real tool. Any advice on how to implement such a feature into an existing tool? Or should I just make a new single-purpose program? Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/195:609,extend,extending,609,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195,1,['extend'],['extending']
Modifiability,"When taking the last molecule configuration from a Gaussian 03 output file (or fchk file, same issue) to a gzmat file, some of the bond lengths have wrong values. The -ogau xyz-type file does not have this problem, using the same g03 output file as the source.; I've uploaded a simple example g03 output file.; babel -ig03 h2o.log -ogau test_xyz.com; gives the correct (same as log file) atom 1 to atom 3 bond length of 0.95991; babel -ig03 h2o.log -ogzmat test_gzmat.com; gives an incorrect atom 1 to atom 3 bond length of 0.95990; The first file I found this with had a significantly larger error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1008:30,config,configuration,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1008,1,['config'],['configuration']
Modifiability,"When the Linux one is installed, the plugins alone take up almost 120MB. Do the Windows and OSX conda packages include the underlying library or are they just the Python parts?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251137685:37,plugin,plugins,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251137685,1,['plugin'],['plugins']
Modifiability,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1178:217,variab,variables,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178,1,['variab'],['variables']
Modifiability,Which platform are you on?. Which environment variable did you set in particular so that it worked?. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797790:46,variab,variable,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797790,1,['variab'],['variable']
Modifiability,"Which version of Open Babel 3.0.0 exactly did you install? The 32-bit or 64-bit? If you used the default installation directory, it will be ""Program Files"" for 64-bit and ""Program Files (x86)"" for 32-bit. Is the Open Babel 3.0 installation folder on the PATH? From Python you can check this with ""import sys; print(sys.path)"". If not, add it to the front of your Windows environment variable (google ""how to change path""), and restart VS Code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2129#issuecomment-586917409:383,variab,variable,383,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2129#issuecomment-586917409,1,['variab'],['variable']
Modifiability,"While you're in there, it would be great if you could take a look at warnings in the file. There are a number of unused variables for example, as well as signed/unsigned comparisons. I'll paste mine in here, but your version is likely different (build with -DCMAKE_CXX_FLAGS=""-W -Wall""):; ```; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:489:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:58",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:120,variab,variables,120,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,1,['variab'],['variables']
Modifiability,"Why does openbabel-2.1 install the header files in /usr/include/openbabel-2.0?. Also the pkg-config file is called openbabel-2.0.pc. If the minor version number does not matter for the include files and the pkg-config file, I suggest to drop it from the names. Reported by: mok0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642:93,config,config,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642,2,['config'],['config']
Modifiability,Why not just re-upload a newer 3.1.0? It think there might be more problems downstream if we change the variable names between 3.1.0 and 3.1.1.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2190#issuecomment-625101453:104,variab,variable,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2190#issuecomment-625101453,1,['variab'],['variable']
Modifiability,"With -DPERL_BINDINGS=ON, cmake fails in the configure stage:; ... -- Found Perl: /usr/bin/perl (found version ""5.16.1"") ; -- Found PerlLibs: /usr/lib64/perl5/CORE/libperl.so (found version ""5.16.1"") ; -- Perl bindings will be compiled; CMake Error at scripts/CMakeLists.txt:245 (add_custom_target):; add_custom_target cannot create target ""bindings_perl"" because another; target with the same name already exists. The existing target is a module; library created in source directory ""/tmp/SBo/openbabel-2.3.2/scripts"".; See documentation for policy CMP0002 for more details.; ... The attached patch fixes the reported duplication and enables configuration (and subsequent) build to complete correctly. This patch tested on Linux - unsure of any impact on other platforms. Reported by: cwilling. Original Ticket: [openbabel/bugs/839](https://sourceforge.net/p/openbabel/bugs/839)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1219:44,config,configure,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219,2,['config'],"['configuration', 'configure']"
Modifiability,"With OB 3.0, it's possible to write out a molfile where the title has more than 80 characters. The ctfile.pdf spec states that it should be limited to 80:. ```; Molecule name. This line is unformatted, but like all other lines in a molfile cannot; extend beyond column 80. If no name is available, a blank line must be present.; ```. This might be one of those cases where we allow this as an option (for those programs that accept titles of this length). However, the default should be to write files that conform to the spec. Here's an example:; ```; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C""); mol.title = ""*""*100. digits = ""0123456789""; mol.title = digits * 10; print(mol.write(""mol"")); ```; ...the full title of 100 characters is written to the molfile.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2112:248,extend,extend,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2112,1,['extend'],['extend']
Modifiability,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/62:53,plugin,plugindefines,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62,7,['plugin'],"['plugin', 'plugindefines', 'plugins']"
Modifiability,"Works for me. What operating system, and what the cmake configure command?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800640:56,config,configure,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800640,1,['config'],['configure']
Modifiability,Wrong install dir for CMake config file on Windows,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2462:28,config,config,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2462,1,['config'],['config']
Modifiability,"Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);. > does it make sense to load libraries on the fly and each time a Read operation is performed?. No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. - Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't *required* to be in loops. A variable inside the loop is created / destroyed every iteration.; - The docs note that `ReadFile` retains the stream object, which is a small leak. If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300. There are plenty of examples in the `tools` directory...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607:552,variab,variable,552,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607,1,['variab'],['variable']
Modifiability,"Yes I think this is expected behavior too, we normally use the convention of plural for external variables, i.e. the library might be defined in OpenBabel3_LIBRARY, but the variable for the public interface would be OpenBabel3_LIBARIES which may have more things added in the future. Same with _INCLUDE_DIR being internal often, and INCLUDE_DIRS being external - may be the same, but the plural normally defines the interface to use from the outside.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-556334570:97,variab,variables,97,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-556334570,2,['variab'],"['variable', 'variables']"
Modifiability,"Yes, I think flavors of aromaticity should be a separate enhancement discussion to get the API right. I'll take a look at the pull request this weekend. Thanks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329499075:57,enhance,enhancement,57,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329499075,1,['enhance'],['enhancement']
Modifiability,"You could set the environment in python, but you would have to make sure this is done before loadallplugins is called and you might poison all future plugin load attempts. It would have to be a standalone test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681:150,plugin,plugin,150,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681,1,['plugin'],['plugin']
Modifiability,"You don't need to use either boost or libxml2. These are optional and discovered while running ./configure. If you don't have these libraries, alternatives will be used -- although XML file formats will not be supported if libxml2 is not available. Take a look at the script I linked to. It will run the configure script to cross-compile for iPhone. I don't think this is a bug and will close this report. If you have questions, please post to the openbabel-discuss mailing list. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794376:97,config,configure,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794376,2,['config'],['configure']
Modifiability,"You have two down bonds coming off atom 4. What's the origin of the Smiles; string?. On Fri, 12 Nov 2021, 17:31 nbehrnd, ***@***.***> wrote:. > By syntax, the SMILES string is fine. What the SMILES string describes,; > however, represents a hurdle for OpenBabel.; >; > If you paste the SMILES string into an other structure2picture converter,; > e.g., CDK Depict <https://www.simolecule.com/cdkdepict/depict.html>, one; > of the double bonds of the pyrrolidine is resolved as a double bond without; > explicitly assigned configuration. For me, it looks related to observations; > about the isomers of 2-butene filed earlier (here; > <https://github.com/openbabel/openbabel/issues/2429>).; >; > With the information shared by you, I aimed for a replication with a; > pristine copy of the .cif from COD, which was translated into a .sdf with; > cod-tools, and submitted to OpenBabel to assign a SMILES string.; >; > codcif2sdf ./4021153.cif > reconstruct.sdf; >; > obabel reconstruct.sdf -osmi; >; > Not anticipated by mine, the result is not; > C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > but; > C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > In other words, the then other double bond is «wavy».; >; > While the intermediate .sdf follows the v2000 dialect, it may be read by; > e.g., by DataWarrior <https://openmolecules.org/datawarrior/index.html>; >; > datawarrior ./reconstruct.sdf; >; > which promptly identifies both double bonds as (*Z*) configured (which; > indeed is .true.). No surprise,; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529354/cod_cif_EZ_issue.zip>; > CDK Depict converts SMILES string; > Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O; > into a structure without a wavy bond.; >; > Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and; > cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing].; >; > [image: CDK_depict]; > <https://user-images.githubusercontent.com/19709084/141",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461:521,config,configuration,521,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461,1,['config'],['configuration']
Modifiability,"[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:1428,variab,variable,1428,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"[src/data.cpp:108]: (error) Width 4 given in format string (no. 2) is larger than destination buffer 'symbol[4]', use %3s to prevent overflowing it.; [src/forcefields/forcefieldmm2.cpp:496]: (style) 'operator=' should return reference to 'this' instance.; [src/forcefields/forcefieldmm2.cpp:354]: (style) Unused variable: idx; [src/forcefields/forcefieldmm2.cpp:519]: (style) Unused variable: filename; [src/forcefields/forcefieldmm2.cpp:520]: (style) Unused variable: currently_parsing; [src/formats/libinchi/ichi_bns.c:6018]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:6071]: (warning) Size of pointer 'pNewVert' used instead of size of its data.; [src/formats/libinchi/ichi_bns.c:9614]: (error) Expression 'pBond.cap=pBond.flow=pBond.cap=0' depends on order of evaluation of side effects; [src/formats/libinchi/ichimake.c:2088] -> [src/formats/libinchi/ichimake.c:2088]: (style) Same expression on both sides of '||'; [src/formats/mdffformat.cpp:233]: (warning) Return value of std::remove() ignored. Elements remain in container; [src/formats/mol2format.cpp:47]: (style) Statements following return, break, continue, goto or throw will never be executed",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/299:312,variab,variable,312,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/299,3,['variab'],['variable']
Modifiability,"^; openbabel.java:171: cannot find symbol; symbol : class OBAtomTyper; location: class openbabel; public static OBAtomTyper getAtomtyper() {; ^; openbabel.java:175: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static void setChainsparser(OBChainsParser value) {; ^; openbabel.java:179: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static OBChainsParser getChainsparser() {; ^; OBMol.java:570: cannot find symbol; symbol : variable OBBitVec; location: class OBMol; openbabelJNI.OBMol_FindLargestFragment(swigCPtr, OBBitVec.getCPtr(frag));; ^; OBRing.java:44: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; openbabelJNI.OBRing__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBRing.java:48: cannot find symbol; symbol : class OBBitVec; location: class OBRing; return new OBBitVec(openbabelJNI.OBRing__pathset_get(swigCPtr), false);; ^; OBRing.java:60: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; this(openbabelJNI.new_OBRing__SWIG_2(vectorInt.getCPtr(path), OBBitVec.getCP; tr(set)), true);; ^; OBMolRingIter.java:65: cannot find symbol; symbol : variable OBBitVec; location: class OBMolRingIter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData.java:64: cannot find symbol; symbol : variable OBBitVec; location: class OBResidueData; return openbabelJNI.OBResidueData_AssignBonds(swigCPtr, OBMol.getCPtr(arg0),; OBBitVec.getCPtr(arg1));. ^; OBSmartsPattern.java:100: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_2(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv), single);. ^; OBSmartsPattern.java:104: cannot find symbol; symbol : variab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:3745,variab,variable,3745,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cmpdfilter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/d",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:28771,plugin,plugin,28771,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:13561,variab,variable,13561,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:11269,variab,variable,11269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:4048,variab,variable,4048,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['variab'],['variable']
Modifiability,"```gen3D``` plugin should erase randomness, and rewrite them with new values it generates. Why does it keep random coordinates?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466929373:12,plugin,plugin,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466929373,2,"['plugin', 'rewrite']","['plugin', 'rewrite']"
Modifiability,"arning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (); with Atom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/bookworm) one may consider more like a *rolling release* (comparison to Debian stable, or LTS releases in the Ubuntu family), I do not perceive the delays as problematic. After preparing a package, improvements unrelated to security stay in the purgatory of Debian's b",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:1723,config,configuration,1723,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['config'],['configuration']
Modifiability,"arning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opalign.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opconfab.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:66838,plugin,plugin,66838,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"arning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opconfab.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:67862,plugin,plugin,67862,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"arting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to conve",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1081,plugin,plugin,1081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['plugin'],['plugin']
Modifiability,"at openbabel generated up to now, versus the canonicals that are generated now for organometallic compounds. For further details consult my personal [repository for my end-of-degree project](https://github.com/Jesnm01/TFG) and in particular the [pdf document](https://mega.nz/file/FPJkhJga#ZU-TXKrflhvMlD_9RLcnW0eJ8yV8RCQG4e08vYytXXk) for the project. Bear in mind that the pdf document as well as most of the explanatory comments that I make in the code are in Spanish, so if not familiar with the language it may be difficult to understand it directly. Most relevant sections of the pdf are chapter 4.2 and chapter 5. Looking at the sizes of the other pull requests, I understand that the changes I propose are quite large and many features need to be revised or even rejected entirely. These are the classes to which I added new variables or methods:; - Added new features or variables to these classes:; - _OBMol_; - _OBAtom_; - _OBMol2Cansmi_; - _OBCanSmiNode_; - _SVGPainter_ (consecuently to _OBPainter_, _ASCIIPainter_ and _CommandPainter_); - Added these new classes:; - _CpComplex_: handle and define Cp (cyclopentadienyl) structures; - _BranchBlock_: detect branches during the canonicalization process, mainly for Cp depiction purposes; - _OpCpDraw_: plugin operation for identification and Cp storing inside the molecule for its later depiction.; - _SubTreeSizes_: helping struct for new organometallic canonicalization method.; - _subtreecomp_ and _mycomp_: custom comparator objects for the new organometallic canonicalization method.; - Modified some methods such as _CreateCansmiString_ or _OBDepict::DrawMolecule_ (among others) to fit in the new code. Modifications have comments above starting with '//New:' explaining them. In case its relevant, I've been working in Visual Studio C++ 2022 for Windows. . Let me know any concerns regarding the code.; Right now I don't have a lot of time to dedicate to this project, so I may not be able to quickly address any changes requested.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616:2001,variab,variables,2001,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616,3,"['plugin', 'variab']","['plugin', 'variables']"
Modifiability,"ation: class OBRing; this(openbabelJNI.new_OBRing__SWIG_2(vectorInt.getCPtr(path), OBBitVec.getCP; tr(set)), true);; ^; OBMolRingIter.java:65: cannot find symbol; symbol : variable OBBitVec; location: class OBMolRingIter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData.java:64: cannot find symbol; symbol : variable OBBitVec; location: class OBResidueData; return openbabelJNI.OBResidueData_AssignBonds(swigCPtr, OBMol.getCPtr(arg0),; OBBitVec.getCPtr(arg1));. ^; OBSmartsPattern.java:100: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_2(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv), single);. ^; OBSmartsPattern.java:104: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_3(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv));. ^; OBUnitCell.java:61: cannot find symbol; symbol : variable SpaceGroup; location: class OBUnitCell; openbabelJNI.OBUnitCell_SetSpaceGroup__SWIG_0(swigCPtr, SpaceGroup.getCPtr(s; g));; ^; OBUnitCell.java:106: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; return (cPtr == 0) ? null : new SpaceGroup(cPtr, false);; ^; OBUnitCell.java:126: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetCellMatrix(swigCPtr), true);. ^; OBUnitCell.java:130: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetOrthoMatrix(swigCPtr), true); ;; ^; OBUnitCell.java:134: cannot find symbol; symbol : class matrix3x3; location: class OBUnitCell; return new matrix3x3(openbabelJNI.OBUnitCell_GetFracti",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:4751,variab,variable,4751,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\B",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:3506,Config,Configuration,3506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['Config'],['Configuration']
Modifiability,babel-python_wrap.cpp openbabel-python.i; openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel-python.i:233: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel-python.i:234: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel-python.i:238: Error: Unable to find 'openbabel/base.h'; openbabel-python.i:240: Error: Unable to find 'openbabel/generic.h'; openbabel-python.i:241: Error: Unable to find 'openbabel/griddata.h'; openbabel-python.i:243: Error: Unable to find 'openbabel/chains.h'; openbabel-python.i:244: Error: Unable to find 'openbabel/typer.h'; openbabel-python.i:252: Error: Unable to find 'openbabel/plugin.h'; openbabel-python.i:257: Error: Unable to find 'openbabel/oberror.h'; openbabel-python.i:258: Error: Unable to find 'openbabel/format.h'; openbabel-python.i:259: Error: Unable to find 'openbabel/obconversion.h'; openbabel-python.i:260: Error: Unable to find 'openbabel/residue.h'; openbabel-python.i:261: Error: Unable to find 'openbabel/internalcoord.h'; openbabel-python.i:262: Error: Unable to find 'openbabel/atom.h'; openbabel-python.i:263: Error: Unable to find 'openbabel/bond.h'; openbabel-python.i:264: Error: Unable to find 'openbabel/reaction.h'; openbabel-python.i:282: Error: Unable to find 'openbabel/mol.h'; openbabel-python.i:289: Error: Unable to find 'openbabel/ring.h'; openbabel-python.i:290: Error: Unable to find 'openbabel/parsmart.h'; openbabel-python.i:291: Error: Unable to find 'openbabel/alias.h'; openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'; openbabel-python.i:294: Error: Unable to find 'openbabel/fingerprint.h'; open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620:2850,plugin,plugin,2850,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620,2,['plugin'],['plugin']
Modifiability,"babel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/forcefield.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:53697,plugin,plugin,53697,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"babel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/tautomer.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/typer.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/obmolecformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:16117,plugin,plugin,16117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"babel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/conformer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:64994,plugin,plugin,64994,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"bel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:2375,variab,variable,2375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"bel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opsplit.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:21,; from ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:57996,plugin,plugin,57996,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,bel-python.i; > openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; > openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; > openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; > openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; > openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; > openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; > openbabel-python.i:233: Error: Unable to find 'openbabel/math/transform3d.h'; > openbabel-python.i:234: Error: Unable to find 'openbabel/math/spacegroup.h'; > openbabel-python.i:238: Error: Unable to find 'openbabel/base.h'; > openbabel-python.i:240: Error: Unable to find 'openbabel/generic.h'; > openbabel-python.i:241: Error: Unable to find 'openbabel/griddata.h'; > openbabel-python.i:243: Error: Unable to find 'openbabel/chains.h'; > openbabel-python.i:244: Error: Unable to find 'openbabel/typer.h'; > openbabel-python.i:252: Error: Unable to find 'openbabel/plugin.h'; > openbabel-python.i:257: Error: Unable to find 'openbabel/oberror.h'; > openbabel-python.i:258: Error: Unable to find 'openbabel/format.h'; > openbabel-python.i:259: Error: Unable to find 'openbabel/obconversion.h'; > openbabel-python.i:260: Error: Unable to find 'openbabel/residue.h'; > openbabel-python.i:261: Error: Unable to find 'openbabel/internalcoord.h'; > openbabel-python.i:262: Error: Unable to find 'openbabel/atom.h'; > openbabel-python.i:263: Error: Unable to find 'openbabel/bond.h'; > openbabel-python.i:264: Error: Unable to find 'openbabel/reaction.h'; > openbabel-python.i:282: Error: Unable to find 'openbabel/mol.h'; > openbabel-python.i:289: Error: Unable to find 'openbabel/ring.h'; > openbabel-python.i:290: Error: Unable to find 'openbabel/parsmart.h'; > openbabel-python.i:291: Error: Unable to find 'openbabel/alias.h'; > openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'; > openbabel-python.i:294: Error: Unable to find 'op,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:3134,plugin,plugin,3134,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,2,['plugin'],['plugin']
Modifiability,"bel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: dec",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71278,plugin,plugin,71278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"berformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_pt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:11792,Config,Configuration,11792,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Windows 11. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm just trying to convert a SMILES string to an .xyz file using the --gen3d to get an approximate low energy conformation. I expect to get an xyz file with 3d coordinates. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> It generates the xyz file, but I do not get 3D coordinates ( in that the z column is all 0s) showing that no optimization is happening. I get the following output:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. ## Steps to Reproduce; I am using the command 'obabel -:""CCCC"" -O 1.xyz --gen3D -xb -h' in the command line.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. I saw a different thread about someone who added BABEL_DATADIR as an environment variable and fixing a similar problem, but that didn't work for me.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676:2240,variab,variable,2240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676,1,['variab'],['variable']
Modifiability,"c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bondtyper.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/builder.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:2460,plugin,plugin,2460,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"cceeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchifor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:3926,Config,Configuration,3926,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"ce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:7311,variab,variable,7311,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['variab'],['variable']
Modifiability,"charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:71735,plugin,plugin,71735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"clude/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/plugin.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:12885,plugin,plugin,12885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"cmake defines OpenBabel3_FOUND itself if all checks insinde the config file pass, yes",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2205#issuecomment-625389493:64,config,config,64,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2205#issuecomment-625389493,1,['config'],['config']
Modifiability,"cmake version 2.6-patch 4, on Centos 5.3 (2.6.18-164.el5), 64-bit. The environment variables set are those in the INSTALL file:. >Environment Variables; >==================; >Open Babel uses a few environment variables to find things at; >runtime. If Open Babel is installed to the location specified at; >compile time, none of these variables need to be set. >BABEL_LIBDIR - the location of Open Babel format plugins; >BABEL_DATADIR - the location of the data files. Since the standard way to build packages is to run:; make; make test; make install. the programs are not installed to the final destination yet, so it seems that the environment variables need to be set. I set them to the ""data"" and ""src/plugins"" directories under the source root. Original comment by: argenta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794:83,variab,variables,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794,7,"['Variab', 'plugin', 'variab']","['Variables', 'plugins', 'variables']"
Modifiability,"cmake; cmake version 2.6-patch 0. cmake -DCMAKE_INSTALL_PREFIX=/home/henritzi/build/openbabel -DEIGEN2_INLCUDE_DIR=/home/henritzi/Eigen2/ ~/src/openbabel; -- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Could NOT find Eigen2; -- Cairo found. PNG output will be supported.; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; CMake Error: Error in cmake code at; /home/henritzi/src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("".; -- Configuring done. I don't know how to fix th PKG message but it is only a warning same with Eigen2 i tried to specif it's location with the; -DEIGEN2_INLCUDE_DIR=/home/henritzi/Eigen2/ option yet the same message; I use debian ; cat /proc/version; Linux version 2.6.26-2-amd64 (Debian 2.6.26-26lenny2) (dannf@debian.org) (gcc version 4.1.3 20080704 (prerelease) (Debian 4.1.2-25)) #1 SMP Tue Jan 25 05:59:43 UTC 2011. Thanks in advance. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800643:592,Config,Configuring,592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800643,1,['Config'],['Configuring']
Modifiability,"code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:3074,Config,Configuration,3074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"conda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1836,variab,variables,1836,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['variab'],['variables']
Modifiability,configure.out. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780834:0,config,configure,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780834,1,['config'],['configure']
Modifiability,"coordgen-1.4.0 (as installed from its GitHub repository https://github.com/schrodinger/coordgenlibs) installs these cmake files:; ```; $ pkg info -l coordgenlibs | grep -i cmake; 	/usr/local/lib/cmake/coordgen-config-release.cmake; 	/usr/local/lib/cmake/coordgen-config.cmake; ```. Yet, OpenBabel-3.1.1 doesn't find it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2214:210,config,config-release,210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2214,2,['config'],"['config', 'config-release']"
Modifiability,cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/oberror.cpp.o; [ 12%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/runichi.c.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/obfunctions.cpp.o; [ 13%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/sha2.c.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/obiter.cpp.o; [ 13%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/strutil.c.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/obutil.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.cpp.o; [ 13%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/util.c.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/op.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/patty.cpp.o; [ 15%] Linking C shared library ../../../lib/libinchi.so; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/residue.cpp.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/ring.cpp.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/rotamer.cpp.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/rotor.cpp.o; [ 16%] Built target inchi; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/spectrophore.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/tautomer.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/typer.cpp.o; [ 18%] Building CXX object src/C,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:10059,plugin,plugin,10059,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['plugin'],['plugin']
Modifiability,"cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable]; int loopCount = 0;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: At global scope:; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:745:8: warning: unused parameter 'iterations' [-Wunused-parameter]; void OBDistanceGeometry::TriangleSmooth(int iterations). /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::AddConformer()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:30: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->GetIdx() == second || a->GetIdx() == third); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:55: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->GetIdx() == second || a->GetIdx() == third); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:80: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->GetIdx() == second || a->GetIdx() == third); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1042:18: warning: unused variable 'attempts' [-Wunused-variable]; unsigned int attempts = 0;. ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:3923,variab,variable,3923,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1582,extend,extended,1582,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,2,['extend'],"['extended', 'extended-smiles-and-smarts-cxsmiles-and-cxsmarts']"
Modifiability,"deprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:21,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/optransform.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/phmodel.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:59125,plugin,plugin,59125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ding to `obabel -L png`, it is possible to append/include e.g., the mol file to/in the `.png` written. See e.g., legacy documentation of OpenBabel 2.3.1 [here](http://openbabel.org/docs/current/FileFormats/PNG2_format.html) and comment by @frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:1800,extend,extended,1800,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['extend'],['extended']
Modifiability,"distro = built from source; All dev packages are present, I assure you. I was able to manually rewrite the CMakeLists.txt and the generated flags.cmake and link.txt to force it to build obgui.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780#issuecomment-366430589:95,rewrite,rewrite,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780#issuecomment-366430589,1,['rewrite'],['rewrite']
Modifiability,"dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72201,plugin,plugin,72201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,duplicate submission with email address: deh@lanl.gov; Mac G4 running Mac OS X 10.3.4 (7H63); after; ./configure; make; make check. [macdeh:~/openbabel-1.100.2] deh% make install; Making install in src; make install-recursive; Making install in math; make[4]: Nothing to be done for `install-exec-am'.; mkdir -p -- . /usr/local/include/openbabel/math; /usr/bin/install -c -m 644 matrix3x3.h /usr/local/include/; openbabel/math/matrix3x3.h; /usr/bin/install -c -m 644 vector3.h /usr/local/include/openbabel/; math/vector3.h; Making install in windows; make[4]: Nothing to be done for `install-exec-am'.; make[4]: Nothing to be done for `install-data-am'.; mkdir -p -- . /usr/local/lib; /bin/sh ../libtool --mode=install /usr/bin/install -c libopenbabel.la ; /usr/local/lib/libopenbabel.la; /usr/bin/install -c .libs/libopenbabel.0.0.0.dylib /usr/local/lib/; libopenbabel.0.0.0.dylib; install: /usr/local/lib/libopenbabel.0.0.0.dylib: Permission denied; make[4]: *** [install-libLTLIBRARIES] Error 71; make[3]: *** [install-am] Error 2; make[2]: *** [install-recursive] Error 1; make[1]: *** [install] Error 2; make: *** [install-recursive] Error 1; [macdeh:~/openbabel-1.100.2] deh% . Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/435:103,config,configure,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435,1,['config'],['configure']
Modifiability,"e Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\Bu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2996,Config,Configuration,2996,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['Config'],['Configuration']
Modifiability,"e post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed through anaconda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1370,variab,variables,1370,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['variab'],['variables']
Modifiability,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2250:1232,Config,Configure,1232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250,1,['Config'],['Configure']
Modifiability,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1496,extend,extend,1496,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['extend'],['extend']
Modifiability,"e/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicano.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichicans.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichiisot.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichilnct.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichimak2.c.o; [ 27%] Building C object src/formats/libinchi/CMakeFiles/in",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:76104,plugin,plugin,76104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"e/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 26%] Linking CXX shared module ../lib/plugin_charges.so; [ 26%] Built target plugin_charges; Consolidate compiler generated dependencies of target inchi; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_bns.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichi_io.c.o; [ 26%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/ichican2.c.o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75638,plugin,plugin,75638,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"el here:. http://openbabel.org/wiki/Install_(MSVC). with suitable adjustments for the new environment; and latest SVN. Solution OpenBabelOBF needs OBCommonFormats to be; built first (or obcommonD.lib not found error will; result if FastSearch is built first). This is the result of the OBCommonFormats compile:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Micr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:1148,variab,variable,1148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['variab'],['variable']
Modifiability,el-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/op,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408:2832,plugin,plugin,2832,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408,1,['plugin'],['plugin']
Modifiability,"el/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/changecell.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:20:; /home/icamps/Temp/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:48771,plugin,plugin,48771,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"el/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/phmodel.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/optransform.h:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/partialcharges.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/readconformers.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBER",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:60129,plugin,plugin,60129,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"emplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/canonical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/canonical.cpp:19:; /home/icamps/Temp/openbab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:46918,plugin,plugin,46918,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"emplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:22:; /home/icamps/Temp/openbabel/openb",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:50834,plugin,plugin,50834,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,enhanced mol2-&gt;pdb conversion,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1394:0,enhance,enhanced,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1394,2,['enhance'],['enhanced']
Modifiability,enhancements to obrms to support optimization of pose alignment,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961:0,enhance,enhancements,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961,1,['enhance'],['enhancements']
Modifiability,"ent; and latest SVN. Solution OpenBabelOBF needs OBCommonFormats to be; built first (or obcommonD.lib not found error will; result if FastSearch is built first). This is the result of the OBCommonFormats compile:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:1246,variab,variable,1246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['variab'],['variable']
Modifiability,"erseConfGen(double, unsigned int, double, bool)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:444:77: warning: ‘std::binder2nd<_Operation> std::bind2nd(const _Operation&, const _Tp&) [with _Operation = plus<double>; _Tp = double]’ is deprecated: use 'std::bind' instead [-Wdeprecated-declarations]; 444 | transform(_energies.begin(), _energies.end(), _energies.begin(), bind2nd(std::plus<double>(), energy_offset));; | ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12/backward/binders.h:172:5: note: declared here; 172 | bind2nd(const _Operation& __fn, const _Tp& __x); | ^~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/distgeom.cpp:38:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/distgeom.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/distgeom.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.cpp.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/depict/depict.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/depict/svgpainter.cpp.o; [ 15%] Building CXX object src/CMakeFiles/openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:22034,plugin,plugin,22034,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"es produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:7267,variab,variable,7267,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"figuration step, and realize that had some missing libraries, like `boost` and `RapidJSON`, for example. Everything if ok now at configuration step ([configuration.log](https://github.com/openbabel/openbabel/files/14922029/configuration.log)). Now, when running `make`, I got new errors ([make.log](https://github.com/openbabel/openbabel/files/14922176/make.log)):. ```; Consolidate compiler generated dependencies of target maeparser; [ 1%] Built target maeparser; Consolidate compiler generated dependencies of target coordgen; [ 4%] Built target coordgen; Consolidate compiler generated dependencies of target openbabel; [ 4%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/alias.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/base.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bitvec.cpp.o; [ 5%] Building CXX object src/CMakeFiles/openbabel.dir/bond.cpp.o; [ 5%] Building ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:1022,plugin,plugin,1022,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"find it below, I have added Bq case in the switch block). regards. Enguerran Vanquelef. #!/usr/bin/tclsh. set path [pwd]; puts $path; set liste_log [lsort -dictionary [glob $path/*.log]]; set nb_log [llength $liste_log]; puts ""il y a $nb_log fichiers .log""; #find the last standard orientation :; for {set n 0} {$n<$nb_log} {incr n} {; set nom_fich_log [lindex $liste_log $n]; puts ""nom du fichier en cours : [file tail $nom_fich_log]""; set log_courant [open $nom_fich_log r]; set hfichxyz [file rootname [file tail $nom_fich_log]]_opt.xyz; set fichxyz [open $hfichxyz w]; set ligne [gets $log_courant]; while {$ligne!="" -- Stationary point found.""} {; set ligne [gets $log_courant]; }; # I'm just after ""Stationnary point found""; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; while {$phrase!=""Standardorientation:""} {; set ligne [gets $log_courant]; set mot1 [lindex $ligne 0]; set mot2 [lindex $ligne 1]; set phrase $mot1$mot2; }; #I'm just after the line ""Standard orientation""; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; set ligne [gets $log_courant]; #Next line is the start of coordinates block; set i 1; while {[lindex $ligne 0]!=""---------------------------------------------------------------------""} {; switch [lindex $ligne 1] {; 6 {set tab(nom,$i) ""C""}; 1 {set tab(nom,$i) ""H""}; 8 {set tab(nom,$i) ""O""}; 7 {set tab(nom,$i) ""N""}; 16 {set tab(nom,$i) ""S""}; 0 {set tab(nom,$i) ""Bq""}; default {set tab($i,nom) ""*""}; }; set tab(X,$i) [lindex $ligne 3]; set tab(Y,$i) [lindex $ligne 4]; set tab(Z,$i) [lindex $ligne 5]; set ligne [gets $log_courant]; incr i; }; puts $fichxyz ""[expr $i-1]""; puts $fichxyz ""[file tail $nom_fich_log]""; for {set m 1} {$m<$i} {incr m} {; puts $fichxyz ""$tab(nom,$m)\t[format %+8.6f $tab(X,$m)]\t[format %+8.6f $tab(Y,$m)]\t[format %+8.6f $tab(Z,$m)]""; }; }; close $fichxyz; close $log_courant; #I must unset all variables. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649:2281,variab,variables,2281,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780649,1,['variab'],['variables']
Modifiability,"follow on from bug 1985163 ; (getting long). KFReader.c(101) : warning C4996: 'open': The POSIX name for this item is deprecated. ... chemdrawcdx.cpp; ../../include\openbabel/reaction.h(27) : error C2386: 'tr1' : a symbol with this name already exists in the current scope. Results:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; KFReader.c; ..\..\src\formats\KFReader.c(101) : warning C4996: 'open': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _open. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(123) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(178) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(319) : warning C4996: 'open': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _open. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:330,Config,Configuration,330,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['Config'],['Configuration']
Modifiability,"for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Just install openbabel v3.0.0 and run the above code with a bad BABEL_LIBDIR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:2886,plugin,plugins,2886,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['plugin'],['plugins']
Modifiability,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2461:3147,plugin,plugin,3147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461,3,['plugin'],['plugin']
Modifiability,"g I have been doing. I'm running the same smi-sdf-can roundtrip test from `test/testdistgeom.py` on a large dataset (eMolecules SMILES database, only considering chiral molecules). So far, **17670 molecules** have been processed **without any segfaults or wrong stereochemistry**. There is only a minor cosmetic issue which should be fixed I think. For some structures, the number of iterations in `OBDistanceGeometry` is not enough to generate a valid structure. This results in a warning message:; ```; ==============================; *** Open Babel Warning in AddConformer; Distance Geometry failed.; ```; The full roundtrip still produces the correct geometry since we now have an additional loop in Gen3D. However, seeing this message is confusing if the whole process actually worked. Ideally, `AddConformer()` would return a boolean to indicate success. This would change the API/ABI. Some possible workarounds:; 1. Increase the number of iterations (currently equal to the number of atoms).; 2. Add function and member variable (in `OBDistanceGeometryPrivate`) to silence this message.; 3. Remove message and add function to check succes/failure. For the 17670 molecules, there were only 7 such cases. These are listed below together with the number of times OBDistanceGeometry failed. ```; O\C=C1\CCCCC1=O 1 iteration failed; C[C@H]1CCC\C=C\[C@@H]2C[C@H](O)C[C@H]2[C@H](O)\C=C\C(=O)O1 5 iterations failed; Cl\C=C\Cl 1 iteration failed; CO[C@H]1[C@H](O)CC(=O)O[C@H](C)C\C=C\C=C\[C@H](OC2CCC(C(C)O2)N(C)C)[C@H](C)C[C@H](CC=O)[C@@H]1OC1OC(C)C(OC2CC(C)(O)C(O)C(C)O2)C(C1O)N(C)C 3 iterations failed; C\C1=C/CC(C)(C)\C=C\C\C(C)=C\CC1 1 iteration failed; CCO\C=C\CC 1 iteration failed; CO[C@H]1[C@@H](CC(=O)O[C@H](C)C\C=C\C=C\[C@H](O)[C@H](C)C[C@H](CC=O)[C@@H]1O[C@@H]1O[C@H](C)[C@@H](O[C@H]2C[C@@](C)(O)[C@@H](OC(=O)CC(C)C)[C@H](C)O2)[C@@H]([C@H]1O)N(C)C)OC(C)=O 5 iterations failed; ```; In any case, it might be a good idea to have a minimum number of iterations to handle these small molecules.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981:1084,variab,variable,1084,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-610071981,1,['variab'],['variable']
Modifiability,"g for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /home/syesylevsky/install/openbabel-build; ```. But after that build fails:. ```; [ 69%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp: In member function ‘bool OpenBabel::GAM",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3686,config,config,3686,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,1,['config'],['config']
Modifiability,"g: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 134 | : public std::binary_function<const std::string&, const std::string&, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Linking CXX shared module ../../lib/inchiformat.so; [ 35%] Built target inchiformat; Consolidate compiler generated dependencies of target asciiformat; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/asciiformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/asciiformat.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 35%] Building CXX object src/formats/CMakeFiles/asciiformat.dir/__/depict/asciipainter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/depict/asciipainter.cpp:18:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obutil.h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:96936,plugin,plugin,96936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"g: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/changecell.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/delnonpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:20:; /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:49800,plugin,plugin,49800,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,gen3D plugin fails to render smiles for cholesterol,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1933:6,plugin,plugin,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1933,1,['plugin'],['plugin']
Modifiability,"generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize those variables in my wrapper's constructor right after the pybel Atom and OBAtom are constructed before their data becomes corrupted. My speculation would be that somewhere in the (pybel Atom -> swig OBAtom wrapper -> C++ OBAtom -> variable) chain memory is being deallocated even though I still have a reference to the pybel Atom. This is because using the debugger I was able to determine that I can access an Atom's variable (e.g. ""valence"") right after I initialize it without a failure and then receive a segmentation fault when trying to access the same variable at the same memory location later in the program. P.S. I'm new so I didn't want to change the wiki without communicating with anyone else but maybe the instructions on bug reporting at http://openbabel.org/wiki/Help should point directly to GitHub instead of pointing to SourceForge which then points to here",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:2477,variab,variables,2477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,5,['variab'],"['variable', 'variables']"
Modifiability,grep -r isfinite .; ```; ./build-sys/include/openbabel/babelconfig.h: #define isfinite _finite; ./src/config.h.cmaker: #define isfinite _finite; ./src/obutil.cpp: if (!isfinite(vic[k]->_tor)); ./src/forcefield.cpp: if (!isfinite(theta)); ./src/forcefield.cpp: if (!isfinite(currentE)); ./src/forcefield.cpp: if (isfinite(direction[c])) {; ./src/forcefield.cpp: if (isfinite(direction[c])) {; ./src/forcefield.cpp: if (isfinite(direction[c])) {; ./src/forcefield.cpp: if (!isfinite(atom->GetX())); ./src/forcefield.cpp: if (!isfinite(atom->GetY())); ./src/forcefield.cpp: if (!isfinite(atom->GetZ())); ./src/forcefields/forcefielduff.cpp: if (!isfinite(theta)); ./src/forcefields/forcefielduff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefielduff.cpp: if (IsNearZero(dotAbbcBccd) || !isfinite(tor)) { // stop any NaN or infinity; ./src/forcefields/forcefielduff.cpp:	 if (!isfinite(angle)); ./src/forcefields/forcefielduff.cpp: if (!isfinite(angle)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(angle)); ./src/mol.cpp: if (isfinite(v.x()) || isfinite(v.y()) || isfinite(v.z())) {; ./src/depict/svgpainter,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066:102,config,config,102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066,1,['config'],['config']
Modifiability,"guration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\Bu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:3259,Config,Configuration,3259,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['Config'],['Configuration']
Modifiability,"gzmat format does not handle missing ""Variables:"" line",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808:38,Variab,Variables,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808,1,['Variab'],['Variables']
Modifiability,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:3150,config,configuring-code-scanning,3150,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['config'],['configuring-code-scanning']
Modifiability,"h file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBXMLFormats:. ------ Build started: Project: OBXMLFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; xmlformat.cpp; xml.cpp; thermoformat.cpp; rxnformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; rsmiformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; pubchem.cpp; cmlreactformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cmlformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chemkinformat.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; cdxmlformat.cpp; Generating Code...; Build log was sa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:12365,Config,Configuration,12365,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"harges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/mmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Res",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:70812,plugin,plugin,70812,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"havior -->; - It causes error like:; [error-deps.log](https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dependencies.patch.txt](https://github.com/openbabel/openbabel/files/9179786/adjust-dependencies.patch.txt). ## Note; - There's an another static build issue(https://github.com/openbabel/openbabel/issues/2377), but this issue does not identical to it.; - libxml2 relies on libicu for processing character set related functionality. I think it's libxml2 bug that its dependency is not explicitly set, but for workaround we can try to find and use it.; - libxml2 relies on liblzma for processing LZMA-compressed files. Yes, it has similar issues mentioned above.; - It seems that the command binaries are reference dynamic loading functions(libdl) even static build. It causes error without removing BUILD_SHARED condition like following log. And it moved to the end of libs variable, because it should be located on last position of library chain.; [error-libdl.log](https://github.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:1997,config,config,1997,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['config'],['config']
Modifiability,"hi, opensuse buildservice stop publish openbabel 2.2.0 rpms because of that:. I: Statement is overflowing a buffer; E: openbabel bufferoverflow forcefield.cpp: 1897, 1921, 1369, 1390, 1254, 1275, 2413, 2426, 2458, 2473, 2493; E: openbabel bufferoverflow forcefieldmmff94.cpp: 4061, 4064, 4094, 4096, 4126, 4128, 4157, 4161, 4165, 4169, 4173, 4177, 4181, 4186. I: Program causes undefined operation; (likely same variable used twiceand post/pre incremented in the same expression).; e.g. x = x++; Split it in two operations.; E: openbabel sequence-point chemkinformat.cpp: 631. any ideas how can i fix it?. Reported by: anubisg1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/821:412,variab,variable,412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/821,1,['variab'],['variable']
Modifiability,"ib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17677,variab,variable,17677,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['variab'],['variable']
Modifiability,"ic std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opconfab.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Linking CXX shared module ../lib/plugin_ops.so; [ 24%] Built target plugin_ops; Consolidate compiler generated dependencies of target plugin_charges; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eem.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | str",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69055,plugin,plugin,69055,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:32:28: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 32 | struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opisomorph.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.h:15,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:63102,plugin,plugin,63102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"idine is resolved as a double bond without; > explicitly assigned configuration. For me, it looks related to observations; > about the isomers of 2-butene filed earlier (here; > <https://github.com/openbabel/openbabel/issues/2429>).; >; > With the information shared by you, I aimed for a replication with a; > pristine copy of the .cif from COD, which was translated into a .sdf with; > cod-tools, and submitted to OpenBabel to assign a SMILES string.; >; > codcif2sdf ./4021153.cif > reconstruct.sdf; >; > obabel reconstruct.sdf -osmi; >; > Not anticipated by mine, the result is not; > C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > but; > C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > In other words, the then other double bond is «wavy».; >; > While the intermediate .sdf follows the v2000 dialect, it may be read by; > e.g., by DataWarrior <https://openmolecules.org/datawarrior/index.html>; >; > datawarrior ./reconstruct.sdf; >; > which promptly identifies both double bonds as (*Z*) configured (which; > indeed is .true.). No surprise,; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529354/cod_cif_EZ_issue.zip>; > CDK Depict converts SMILES string; > Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O; > into a structure without a wavy bond.; >; > Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and; > cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing].; >; > [image: CDK_depict]; > <https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png>; >; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLXPMPSRSODXRI7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461:1471,config,configured,1471,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461,1,['config'],['configured']
Modifiability,"igen3 -DNDEBUG -DNDEBUG -O2 -pipe -pthread -fopenmp -fPIC -DOB_MODULE_PATH=""\""/usr/lib64/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/data.o -c /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/data.cpp; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:63: src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make[1]: *** [CMakeFiles/Makefile2:1196: src/CMakeFiles/openbabel.dir/all] Error 2; make[1]: Leaving directory '/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build'; make: *** [Makefile:141: all] Error 2; ```. My full build log (showing the source configuration using cmake and the entire compilation output) is [here](https://paste.pound-python.org/show/UBYYuKH3qSq84yOe2ux4/). . `emerge -pqv '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` returns (to show the USE flags, which affect configure options, refer to the ebuild linked earlier for how):. ```bash; [ebuild N ] sci-chemistry/openbabel-2.3.2-r1 USE=""openmp wxwidgets -doc {-test}""; ```. The output of `emerge --info '=sci-chemistry/openbabel-2.3.2-r1::gentoo'` (which will show details about my Gentoo system, like compiler options):. ```bash; Portage 2.3.5 (python 3.4.6-final-0, default/linux/amd64/13.0/desktop/plasma/systemd, gcc-6.3.0, glibc-2.24-r1, 4.11.0-gentoo x86_64); =================================================================; System Settings; =================================================================; System uname: Linux-4.11.0-gentoo-x86_64-Intel-R-_Core-TM-_i7-4700MQ_CPU_@_2.40GHz-with-gentoo-2.3; KiB Mem: 16344248 total, 10297040 free; KiB Swap: 0 total, 0 free; sh bash 4.4_p12; ld GNU ld (Gentoo 2.27 p1.0) 2.27; app-shells/bash: 4.4_p12::gentoo; dev-java/java-config: 2.2.0-r3::gentoo; dev-lang/perl: 5.24.1-r1::gentoo; dev-lang/python: 2.7.13::gentoo, 3.4.6::gentoo; dev-util/cmake: 3.8.1::",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:6156,config,configure,6156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['config'],['configure']
Modifiability,"ile: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Relea",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5336,Config,Configuration,5336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"iles.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; -------------------------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018:1157,config,config,1157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018,1,['config'],['config']
Modifiability,"iles/inchi.dir/inchi_dll_main.c.o; [ 32%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/runichi.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/sha2.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/strutil.c.o; [ 33%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/util.c.o; [ 33%] Linking C shared library ../../../lib/libinchi.so; [ 33%] Built target inchi; Consolidate compiler generated dependencies of target smilesformat; [ 33%] Building CXX object src/formats/CMakeFiles/smilesformat.dir/smilesformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/smilesformat.cpp: In member function ‘bool OpenBabel::OBMol2Cansmi::GetSmilesElement(OpenBabel::OBCanSmiNode*, std::vector<OpenBabel::OBAtom*>&, std::vector<unsigned int>&, std::string&)’:; /home/icamps/Temp/o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:80296,plugin,plugin,80296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ils.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(319) : warning C4996: 'open': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _open. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2219,variab,variable,2219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['variab'],['variable']
Modifiability,"inary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcef",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:40737,plugin,plugin,40737,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,inchi writer uninitialized variable,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1252:27,variab,variable,27,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252,1,['variab'],['variable']
Modifiability,"include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at test/CMakeLists.txt:174 (include):; Syntax Warning in cmake code at. ```; /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; ```. Argument not separated from preceding token by whitespace.; This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:1889,variab,variable,1889,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['variab'],['variable']
Modifiability,"include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:75109,plugin,plugin,75109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qtpie.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qtpie.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74643,plugin,plugin,74643,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"inite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Debug\BuildLog.htm""; OBDLL - 15 error(s), 0 warning(s); ------ Build started: Project: OBConv, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Debug\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Debug\BuildLog.htm""; OBFPRT - 1 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Debug\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 5 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:2606,Config,Configuration,2606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,2,['Config'],['Configuration']
Modifiability,"int; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configuring done; -- Generating done; -- Build files have been written to: /home/building/science/openbabel-2.4.1/build. If it's relevant, there is no ""FindWxWidgets.cmake"" in the modules directory:. > ls openbabel-2.4.1/cmake/modules/; FindCairo.cmake FindEigen3.cmake MacroEnsureVersion.cmake; FindEigen2.cmake FindInchi.cmake UsePythonTest.cmake",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:2275,config,config,2275,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,2,"['Config', 'config']","['Configuring', 'config']"
Modifiability,"io 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2541,variab,variable,2541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['variab'],['variable']
Modifiability,"ions]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger3.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/fingerecfp.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:37227,plugin,plugin,37227,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1250,portab,portable,1250,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['portab'],['portable']
Modifiability,"it . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having wxwidgets installed correctly; sukis@sukis-virtual-machine:~$ wx-config --version; 3.1.3. Please help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2179:1665,Config,Configuring,1665,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179,2,"['Config', 'config']","['Configuring', 'config']"
Modifiability,"it; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative dri dts dvd dvdr emboss encode exif fam firefox flac fortran gdbm gif glamor gpm gtk iconv ipv6 jpeg kde kipi kms kwallet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phono",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9626,config,config-protect-if-modified,9626,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,2,"['config', 'sandbox']","['config-protect-if-modified', 'sandbox']"
Modifiability,"l_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:4006,plugin,plugin,4006,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"lass OBChainsParser; location: class openbabel; public static void setChainsparser(OBChainsParser value) {; ^; openbabel.java:179: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static OBChainsParser getChainsparser() {; ^; OBMol.java:570: cannot find symbol; symbol : variable OBBitVec; location: class OBMol; openbabelJNI.OBMol_FindLargestFragment(swigCPtr, OBBitVec.getCPtr(frag));; ^; OBRing.java:44: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; openbabelJNI.OBRing__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBRing.java:48: cannot find symbol; symbol : class OBBitVec; location: class OBRing; return new OBBitVec(openbabelJNI.OBRing__pathset_get(swigCPtr), false);; ^; OBRing.java:60: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; this(openbabelJNI.new_OBRing__SWIG_2(vectorInt.getCPtr(path), OBBitVec.getCP; tr(set)), true);; ^; OBMolRingIter.java:65: cannot find symbol; symbol : variable OBBitVec; location: class OBMolRingIter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData.java:64: cannot find symbol; symbol : variable OBBitVec; location: class OBResidueData; return openbabelJNI.OBResidueData_AssignBonds(swigCPtr, OBMol.getCPtr(arg0),; OBBitVec.getCPtr(arg1));. ^; OBSmartsPattern.java:100: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_2(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv), single);. ^; OBSmartsPattern.java:104: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_3(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv));. ^; OBUnitCell.java:61: cannot fin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:3939,variab,variable,3939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"lass _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.cpp.o; [ 11%] Building CXX object src/CMakeFiles/openbabel.dir/query.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/bond.h:31,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/query.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/query.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/residue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:13475,plugin,plugin,13475,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"le>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either uplo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:2591,plugin,plugins,2591,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['plugin'],['plugins']
Modifiability,"les/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opsplit.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:57089,plugin,plugin,57089,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/961:350,variab,variables,350,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961,2,"['Config', 'variab']","['Configuring', 'variables']"
Modifiability,"libcoordgen and libmaeparser are configured to require boost (although it looks like only maeparser links in a library - boost_iostream). If I remember correctly, there was some discussion about this at the time and the consensus (but not unanimous opinion) was including boost dependencies for extra features that are not required is okay. What is the goal? To build without boost?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625308309:33,config,configured,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197#issuecomment-625308309,1,['config'],['configured']
Modifiability,"ll in; > ./.local/lib/python3.6/site-packages (from eden==0.2) (0.2.7.1); > Requirement already satisfied: esmre in; > /usr/local/lib/python2.7/dist-packages (from eden==0.2) (0.3.1); > Collecting openbabel (from eden==0.2); > Downloading; > https://mirrors.aliyun.com/pypi/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz; > (74kB); > ###############################################################; >; > so it downloads openbabel and try to install it, errors:; > ###############################################################; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /usr/bin/python3 -u -c ""import setuptools,; > tokenize;*file*='/tmp/pip-install-vokwsrny/openbabel/setup.py';f=getattr(tokenize,; > 'open', open)(*file*);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, *file*, 'exec'))"" bdist_wheel -d; > /tmp/pip-wheel-4bdr_2wn --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > - include_dirs: ['/usr/include/python3.6m',; > '/usr/local/include/openbabel-2.0']; > - library_dirs: ['/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar; > -I/usr/include/python3.6m -I/usr/local/include/openbabel-2.0 -o; > openbabel-python_wrap.cpp openbabel-python.i; > unable to execute 'swig': No such file or directory; > ################################################################; >; > I'm using python2, OS is Ubuntu18.04; > when I install openbabel by myself, I set the environment in ~/.bashrc:; > #################################################################; > export PATH=/usr/local/bin:$PATH; > export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib; > export PYTHONPATH=/usr/local/lib/python2.7/site-packages:$PYTHONPATH; > #################################",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891:1584,config,config,1584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1844#issuecomment-394077891,1,['config'],['config']
Modifiability,"lude/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/smartsdescriptors.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Linking CXX shared module ../lib/plugin_descriptors.so; [ 18%] Built target plugin_descriptors; Consolidate compiler generated dependencies of target plugin_fingerprints; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger2.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/finger2.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:36079,plugin,plugin,36079,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"lude/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:74120,plugin,plugin,74120,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"lude/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/qeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73654,plugin,plugin,73654,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119:2236,variab,variables,2236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119,1,['variab'],['variables']
Modifiability,mmcifformat plugin now support atoms occupancy and atom_type category,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/189:12,plugin,plugin,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/189,1,['plugin'],['plugin']
Modifiability,"monFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1935,Config,Configuration,1935,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,morphism.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/kekulize.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/locale.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/matrix.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/mcdlutil.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/molchrg.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/mol.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/obconversion.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/oberror.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/obiter.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/obutil.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/op.o; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/parsmart.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/patty.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/phmodel.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/plugin.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/pointgroup.o; [ 15%] Building CXX object src/CMakeFiles/openbabel.dir/query.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/rand.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/residue.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/ring.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/rotamer.o; [ 16%] Building CXX object src/CMakeFiles/openbabel.dir/rotor.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/spectrophore.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/tautomer.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/transform.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/typer.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/obmolecformat.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.o; [ 18%] Building CXX object src/CMakeFiles/,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:7092,plugin,plugin,7092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['plugin'],['plugin']
Modifiability,"mp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen3d.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:55534,plugin,plugin,55534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"mpare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable]; int loopCount = 0;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: At global scope:; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:745:8: warning: unused parameter 'iterations' [-Wunused-parameter]; void OBDistanceGeometry::TriangleSmooth(int iterations). /home/noel/Tools/openbabel-baoilleach/src/dis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:2023,variab,variable,2023,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"mplate<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/conformersearch.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/atom.h:30,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp: In constructor ‘OpenBabel::OBDiversePoses::OBDiversePoses(const OpenBabel::OBMol&, double, bool)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:134:66: warning: ‘std::binder2nd<_Operation> std::bind2nd(const _Operation&, const _Tp&) [with _Operation = less<double>; _Tp = double]’ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:19472,plugin,plugin,19472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"n: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skippe",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1430,Config,Configuration,1430,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2394:4761,variab,variables,4761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394,1,['variab'],['variables']
Modifiability,"nbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/op",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:7481,plugin,plugin,7481,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"nd unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::T",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:1564,variab,variable,1564,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"ndLargestFragment(swigCPtr, OBBitVec.getCPtr(frag));; ^; OBRing.java:44: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; openbabelJNI.OBRing__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBRing.java:48: cannot find symbol; symbol : class OBBitVec; location: class OBRing; return new OBBitVec(openbabelJNI.OBRing__pathset_get(swigCPtr), false);; ^; OBRing.java:60: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; this(openbabelJNI.new_OBRing__SWIG_2(vectorInt.getCPtr(path), OBBitVec.getCP; tr(set)), true);; ^; OBMolRingIter.java:65: cannot find symbol; symbol : variable OBBitVec; location: class OBMolRingIter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData.java:64: cannot find symbol; symbol : variable OBBitVec; location: class OBResidueData; return openbabelJNI.OBResidueData_AssignBonds(swigCPtr, OBMol.getCPtr(arg0),; OBBitVec.getCPtr(arg1));. ^; OBSmartsPattern.java:100: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_2(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv), single);. ^; OBSmartsPattern.java:104: cannot find symbol; symbol : variable OBBitVec; location: class OBSmartsPattern; return openbabelJNI.OBSmartsPattern_RestrictedMatch__SWIG_3(swigCPtr, OBMol.; getCPtr(mol), OBBitVec.getCPtr(bv));. ^; OBUnitCell.java:61: cannot find symbol; symbol : variable SpaceGroup; location: class OBUnitCell; openbabelJNI.OBUnitCell_SetSpaceGroup__SWIG_0(swigCPtr, SpaceGroup.getCPtr(s; g));; ^; OBUnitCell.java:106: cannot find symbol; symbol : class SpaceGroup; location: class OBUnitCell; return (cPtr == 0) ? null : new SpaceGroup(cPtr, false);; ^; OBUnitCell.java:126: cannot find symbol; symbol : class m",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:4305,variab,variable,4305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"ndler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/pl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:73128,plugin,plugin,73128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"nds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Cycling fixes the issue; # mol = pybel.readstring(""cif"", mol.write(""cif"")); mol.OBMol.Center(); mol.write(""cif""); ```. The `Center()` method operates off of a bunch of private variables. I'm guessing something isn't getting updated when `FillUnitCell` is called, but I couldn't figure out what it was. I'll look into this one again, but I'd appreciate any pointers in the mean time! **EDIT** Fixed this.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:2532,variab,variables,2532,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['variab'],['variables']
Modifiability,"ne; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Found PkgConfig: /usr/local/bin/pkg-config (found version ""0.27.1""); -- checking for module 'cairo'; -- package 'cairo' not found; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- GUI will not be built; -- Found PythonInterp: /Library/Frameworks/Python.framework/Versions/2.7/bin/python (found version ""2.7.4""); -- Found PythonLibs: /usr/lib/libpython2.7.dylib (found version ""2.7.4""); -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /Volumes/Macintosh HD2/Software/libraries/obabel/ob-build. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:2306,config,config,2306,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,2,"['Config', 'config']","['Configuring', 'config']"
Modifiability,new formats - orca output files and extended xyz files,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/75:36,extend,extended,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/75,1,['extend'],['extended']
Modifiability,"nloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:17541,variab,variable,17541,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"nly objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete for",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1258,variab,variable,1258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['variab'],['variable']
Modifiability,"nning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs wer",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:1382,config,configuration,1382,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['config'],['configuration']
Modifiability,"nsform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(co",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:1795,Config,Configuration,1795,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['Config'],['Configuration']
Modifiability,"nstalled?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ; ----------------------------------------; Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;__file__='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-2iizw9um-record/install-record.txt --single-version-externally-managed --compile:; running install; running build_ext; Open Babel location automatically determined by pkg-config:; - include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; - library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/Paulin/miniconda3/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel-python.i:233: Error: Unable to find 'openbabel/math/transform3d.h'; openbabe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620:6426,config,config,6426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620,1,['config'],['config']
Modifiability,"o be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1). ## Steps to Reproduce; <!--; from openbabel import pybel; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357:1958,plugin,plugins,1958,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,"o on Windows using VS2008 Pro, with all libraries and components. Following directions on OpenBabel here:. http://openbabel.org/wiki/Install_(MSVC). with suitable adjustments for the new environment; and latest SVN. Solution OpenBabelOBF needs OBCommonFormats to be; built first (or obcommonD.lib not found error will; result if FastSearch is built first). This is the result of the OBCommonFormats compile:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse informatio",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:1050,variab,variable,1050,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['variab'],['variable']
Modifiability,"o openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.5.0 (2017-XX-XX) (cloned from github.com); Operating system and version: Ubuntu 16.04.4 LTS; Running Anaconda python 3.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Openbabel imports fine, but Pybel returns a unicode error. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. compiled using:. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON . make & sudo make install all run ok. make test all tests run fine. Output from python below:. Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) ; [GCC 7.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; >>> import pybel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 43, in <module>; descs = _getpluginnames(""descriptors""); File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in _getpluginnames; return [x.split()[0] for x in plugins]; File ""/home/xxxx/anaconda3/lib/python3.6/site-packages/pybel.py"", line 41, in <listcomp>; return [x.split()[0] for x in plugins]; UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf0 in position 0: invalid continuation byte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1805:2165,plugin,plugins,2165,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1805,2,['plugin'],['plugins']
Modifiability,"ocation: /var/lib/layman/games-overlay; sync-type: git; sync-uri: git://github.com/hasufell/games-overlay.git; masters: gentoo; priority: 50. gnome; location: /var/lib/layman/gnome; sync-type: git; sync-uri: git://github.com/gentoo/gnome.git; masters: gentoo; priority: 50. grub2-themes; location: /var/lib/layman/grub2-themes; sync-type: git; sync-uri: git://github.com/gentoo/grub2-themes-overlay.git; masters: gentoo; priority: 50. mozilla; location: /var/lib/layman/mozilla; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9299,config,config,9299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['config'],['config']
Modifiability,"oilleach/src/distgeom.cpp:503:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[a] || nbr->GetIdx() == path[c]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:509:68: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (nbr->GetIdx() == path[d] || nbr->GetIdx() == path[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable];",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:1700,variab,variable,1700,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,"omaticTyper value) {; ^; openbabel.java:163: cannot find symbol; symbol : class OBAromaticTyper; location: class openbabel; public static OBAromaticTyper getAromtyper() {; ^; openbabel.java:167: cannot find symbol; symbol : class OBAtomTyper; location: class openbabel; public static void setAtomtyper(OBAtomTyper value) {; ^; openbabel.java:171: cannot find symbol; symbol : class OBAtomTyper; location: class openbabel; public static OBAtomTyper getAtomtyper() {; ^; openbabel.java:175: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static void setChainsparser(OBChainsParser value) {; ^; openbabel.java:179: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static OBChainsParser getChainsparser() {; ^; OBMol.java:570: cannot find symbol; symbol : variable OBBitVec; location: class OBMol; openbabelJNI.OBMol_FindLargestFragment(swigCPtr, OBBitVec.getCPtr(frag));; ^; OBRing.java:44: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; openbabelJNI.OBRing__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBRing.java:48: cannot find symbol; symbol : class OBBitVec; location: class OBRing; return new OBBitVec(openbabelJNI.OBRing__pathset_get(swigCPtr), false);; ^; OBRing.java:60: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; this(openbabelJNI.new_OBRing__SWIG_2(vectorInt.getCPtr(path), OBBitVec.getCP; tr(set)), true);; ^; OBMolRingIter.java:65: cannot find symbol; symbol : variable OBBitVec; location: class OBMolRingIter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData.java:64: cannot find symbol; symbol : variable OBBitVec; location: class OBResidueData; return openbabelJNI.OBResidueData_AssignBonds(swigCPtr, OBMol.getCPtr(arg0),;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:3423,variab,variable,3423,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"on = equal_to<long unsigned int>; _Tp = long unsigned int]’ is deprecated: use 'std::bind' instead [-Wdeprecated-declarations]; 3005 | const std::binder1st<std::equal_to<OBStereo::Ref> > equal_to_implicitRef = std::bind1st (equal_to<OBStereo::Ref>(), (OBStereo::Ref) OBStereo::ImplicitRef);; | ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/include/c++/12/backward/binders.h:136:5: note: declared here; 136 | bind1st(const _Operation& __fn, const _Tp& __x); | ^~~~~~~; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/facade.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/gen3dstereohelper.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/stereo/gen3dstereohelper.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Linking CXX shared library ../lib/libopenbabel.so; [ 17%] Built target openbabel; Consolidate compiler generated dependencies of target plugin_descriptors; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cansmidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:27564,plugin,plugin,27564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"on of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2863,variab,variable,2863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['variab'],['variable']
Modifiability,"ool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/groupcontrib.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/groupcontrib.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:33:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/groupcontrib.cpp:25:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/filters.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/filters.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::bin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:31172,plugin,plugin,31172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | tail -1); brew reinstall $download_path; done; else; brew install cairo; fi; brew install gnu-sed eigen; '''; ]; ```. ---; I'd like to contribute it to the main repo, but we need to discuss some details mentioned above like 1 and 3.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:3333,config,configure,3333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122,1,['config'],['configure']
Modifiability,"openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addfilename.cpp:18:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addinindex.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/base.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addinindex.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addpolarh.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/addpolarh.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, cl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:44940,plugin,plugin,44940,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/readconformers.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/sort.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/sort.cpp:32:28: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 32 | struct Order : public std::binary_function<std::pair<OBBase*,T>, std::pair<OBBase*,T>, bool>; | ^~~~~~~~~~~~~~~; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:61769,plugin,plugin,61769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/conformer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/conformer.cpp:29:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opalign.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opalign.cpp:20:; /home/icamps/Temp/openbabel/open",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:65814,plugin,plugin,65814,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"or.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:2247,Config,Configuration,2247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['Config'],['Configuration']
Modifiability,"ormats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test yo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:2641,variab,variable,2641,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['variab'],['variable']
Modifiability,"ort_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6677,variab,variable,6677,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"ot found error will; result if FastSearch is built first). This is the result of the OBCommonFormats compile:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 0 error(s), 8 warning(s); ===",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:1345,variab,variable,1345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['variab'],['variable']
Modifiability,"ouble' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Bu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:1968,Config,Configuration,1968,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['Config'],['Configuration']
Modifiability,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:12694,variab,variable,12694,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['variab'],['variable']
Modifiability,"output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:10533,variab,variable,10533,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['variab'],['variable']
Modifiability,"ownloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:20453,variab,variable,20453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"p; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; ..\..\src\formats\mdlformat.cpp(629) : error C2780: 'const _Ty &std::min(const _Ty &,const _Ty &,_Pr)' : expects 3 arguments - 2 provided; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3379) : see declaration of 'std::min'; ..\..\src\formats\mdlformat.cpp(629) : error C2782: 'const _Ty &std::min(const _Ty &,const _Ty &)' : template parameter '_Ty' is ambiguous; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xutility(3371) : see declaration of 'std::min'; could be 'unsigned long'; or 'unsigned int'; atomrecord.cpp; APIInterface.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 2 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 5 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:3934,Config,Configuration,3934,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['Config'],['Configuration']
Modifiability,"p<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; chemtoolformat.cpp; Generating Code...; Compiling...; chemdrawct.cpp; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; titleformat.cpp; reportformat.cpp; povrayformat.cpp; pngformat.cpp; molreport.cpp; copyformat.cpp; Generating Code...; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBUtilFormats\Release\BuildLog.htm""; OBUtilFormats - 0 error(s), 0 warning(",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:11204,Config,Configuration,11204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"penbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/opisomorph.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 23%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/parsmart.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/ophighlight.cpp:16:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/xout.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_funct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:64100,plugin,plugin,64100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,perl bindings fail to configure in 2.3.2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1219:22,config,configure,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1219,1,['config'],['configure']
Modifiability,"piling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; unichemformat.cpp; turbomoleformat.cpp; tinkerformat.cpp; shelxformat.cpp; qchemformat.cpp; PQSformat.cpp; pcmodelformat.cpp; nwchemformat.cpp; msmsformat.cpp; msiformat.cpp; mpqcformat.cpp; mpdformat.cpp; mopacformat.cpp; moldenformat.cpp; mmodformat.cpp; Generating Code...; Compiling...; mmcifformat.cpp; jaguarformat.cpp; hinformat.cpp; gromos96",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5908,Config,Configuration,5908,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,plugin.h is not C++17 compatible,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2461:0,plugin,plugin,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461,1,['plugin'],['plugin']
Modifiability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14625,variab,variable,14625,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:12175,variab,variable,12175,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"ps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 18%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/inchidescriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/inchidescriptor.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/inchiformat.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:33030,plugin,plugin,33030,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"put); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8977,variab,variable,8977,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,pybel error when handling missing plugins,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:34,plugin,plugins,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['plugin'],['plugins']
Modifiability,quat.c is the sole C source in openbabel. Only two routines are needed and one of them was ; already rewritten in C++. Rewrite the other one and abandon quat.c. Michael. Reported by: @mbanck,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/388:119,Rewrite,Rewrite,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/388,1,['Rewrite'],['Rewrite']
Modifiability,"r strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.16"") ; -- Found SWIG: /usr/bin/swig (found version ""3.0.12"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""3.0.12"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (found version ""2.7.16"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/usr/local/openbabel-2.4.1/build. # make -j4; [ 0%] Building C object src/formats/libinchi/CMakeFiles/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:3180,config,config,3180,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['config'],['config']
Modifiability,refactor: always use `std::shared_ptr`,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2501:0,refactor,refactor,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2501,1,['refactor'],['refactor']
Modifiability,refactor: remove deprecated std::bind2nd,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2569:0,refactor,refactor,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2569,1,['refactor'],['refactor']
Modifiability,refactor: use `std::unordered_map` for hash map,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2500:0,refactor,refactor,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2500,1,['refactor'],['refactor']
Modifiability,"revision 2578. results:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; unichemformat.cpp; turbomoleformat.cpp; tinkerformat.cpp; shelxformat.cpp; qchemformat.cpp; PQSformat.cpp; pcmodelformat.cpp; nwchemformat.cpp; msmsformat.cpp; msiformat.cpp; mpqcformat.cpp; mpdformat.cpp; mopacformat.cpp; moldenformat.cpp; mmodformat.cpp; Generating Code...; Compiling...; mmcifformat.cpp; jaguarformat.cpp; hinformat.cpp; gromos96format.cpp; ghemicalformat.cpp; gausszmatformat.cpp; gaussformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applied to unsigned type, result still unsigned; gamessformat.cpp; freefracformat.cpp; fhformat.cpp; featformat.cpp; fchkformat.cpp; fastaformat.cpp; dmolformat.cpp; cssrformat.cpp; CSRformat.cpp; crkformat.cpp; cifformat.cpp; ..\..\src\formats\cifformat.cpp(284) : warning C4305: '*=' : truncation from 'double' to 'float'; ..\..\src\formats\cifformat.cpp(285) : warning C4305: '*=' : truncation from 'double' to 'float'; ..\..\src\formats\cifformat.cpp(286) : warning C4305: '*=' : truncation from 'double' to 'float'; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(46) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(46) : warning C4503: 'std::_Tree<_Traits>::_Myval' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<Open",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/775:71,Config,Configuration,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/775,1,['Config'],['Configuration']
Modifiability,"revision 2588. this one is still hanging on; using boost include dir but still lots of; 'shared_ptr' : is not a member of 'std::tr1'. the rest works but VS2008 consistently; barfs on this one. played with the include directive; in reaction.h but it is like; shooting in the dark - no difference. ideas to try?. results:; ------ Skipped Build: Project: OBGUI, Configuration: Debug Win32 ------; Project not selected to build for this solution configuration ; ------ Skipped Build: Project: OBJava, Configuration: Debug Win32 ------; Project not selected to build for this solution configuration ; ------ Skipped Build: Project: OBCSharp, Configuration: Debug Win32 ------; Project not selected to build for this solution configuration ; ------ Skipped Build: Project: OBPythonOBF, Configuration: Release Win32 ------; Project not selected to build for this solution configuration ; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(27) : error C2386: 'tr1' : a symbol with this name already exists in the current scope; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2039: 'shared_ptr' : is not a member of 'std::tr1'; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2065: 'shared_ptr' : undeclared identifier; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2275: 'OpenBabel::OBMol' : illegal use of this type as an expression; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/mol.h(104) : see declaration of 'OpenBabel::OBMol'; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2059: syntax error : '>'; c:\PFE.Sar",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:359,Config,Configuration,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,9,"['Config', 'config']","['Configuration', 'configuration']"
Modifiability,"rg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/conformersearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/conformersearch.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/conformersearch.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 14%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/confsearch.cpp:24:; /home/icamps/Temp/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:18437,plugin,plugin,18437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"rge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:1453,variab,variable,1453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['variab'],['variable']
Modifiability,"rmer cutoff = 1000000; ..Write input conformation? False; ..Verbose? False. **Molecule 1; ..title = 0 1; ..number of rotatable bonds = 0; !!Cannot set up forcefield for this molecule; !!Skipping. 0 molecules converted; ```~~. (3) Ubuntu, 2.3.90, confab not recognized, so it just converts xyz to xyz, same as (1). ```~~; 1 molecule converted; ```~~. Genetic Algorithm; -----------------; Documentation input:. ```~~; obabel startingConformer.mol -O ga_conformers.sdf --conformer --nconf 30; --score rmsd --writeconformers; ```~~. My input:. ```~~; obabel r.xyz -O a.xyz --conformer --nconf 30 --score rmsd --writeconformers; ```~~. (1) Mac, 2.3.1, Works as expected. ```~~; Initial conformer count: 3; 0 ; 2 ; 1 ; Generation #1 0; Generation #2 0.000189885; Generation #3 0.000189885; Generation #4 0.000189885; Generation #5 0.000189885; Generation #6 0.000189885; Generation #7 0.000189885; Generation #8 0.000189885; Generation #9 0.000189885; Generation #10 0.000189885; Generation #11 0.000189885; Generation #12 0.000189885; Generation #13 0.000189885; Generation #14 0.000189885; Generation #15 0.000189885; Generation #16 0.000189885; Generation #17 0.000189885; Generation #18 0.000189885; Generation #19 0.000189885; Generation #20 0.000189885; Generation #21 0.000189885; Generation #22 0.000189885; Generation #23 0.000189885; Generation #24 0.000189885; Generation #25 0.000189885; Generation #26 0.000189885; Generation #27 0.000189885; 0 ; 2 ; 1 ; GetConformers:; 0 ; 2 ; 1 ; 1 molecule converted; ```~~. (2) Mac 2.3.90, conformer not recognized, so it just converts xyz to xyz. ```~~; 1 molecule converted; ```~~. (3) Ubuntu, 2.3.90, conformer not recognized, so it just converts xyz to xyz, same as (2). ```~~; 1 molecule converted; ```~~. As a side note, if anyone has a working build configuration or input options to get the confab algorithm working, please let me know. Reported by: benalbrecht. Original Ticket: [openbabel/bugs/950](https://sourceforge.net/p/openbabel/bugs/950)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1330:3262,config,configuration,3262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1330,1,['config'],['configuration']
Modifiability,"rror: SWIG failed. Is Open Babel installed?; > You may need to manually specify the location of Open Babel include and library directories. For example:; > python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; > python setup.py install; > Failed building wheel for openbabel; > Running setup.py clean for openbabel; > Failed to build openbabel; > Installing collected packages: openbabel; > Running setup.py install for openbabel ... error; > Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;file='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, file, 'exec'))"" install --record /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-2iizw9um-record/install-record.txt --single-version-externally-managed --compile:; > running install; > running build_ext; > Open Babel location automatically determined by pkg-config:; > - include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; > - library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/Paulin/miniconda3/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; > openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; > openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; > openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; > openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; > openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; > openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; > openbabel-python.i:233: Error: Unable to find 'openbabel/mat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:6753,config,config,6753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,1,['config'],['config']
Modifiability,"rt_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:6203,variab,variable,6203,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['variab'],['variable']
Modifiability,"ry directories. For example:; > python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; > python setup.py install; >; > I have done: brew install swig, but the errors still exist.; > Could you please let me know how to solve this?; > Thank you.; > Paul; > The detailed errors from pip install openbabel is:; > Paulin@Paulins-MBP:~$ pip install openbabel; > Collecting openbabel; > Using cached openbabel-2.4.1.tar.gz; > Building wheels for collected packages: openbabel; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;file='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, file, 'exec'))"" bdist_wheel -d /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/tmpwh85q9mepip-wheel- --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > • include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; > • library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/Paulin/miniconda3/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; > openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; > openbabel-python.i:227: Error: Unable to find 'openbabel/data.h'; > openbabel-python.i:228: Error: Unable to find 'openbabel/rand.h'; > openbabel-python.i:229: Error: Unable to find 'openbabel/obutil.h'; > openbabel-python.i:230: Error: Unable to find 'openbabel/math/vector3.h'; > openbabel-python.i:232: Error: Unable to find 'openbabel/math/matrix3x3.h'; > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:1663,config,config,1663,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,1,['config'],['config']
Modifiability,"s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Buil",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:2516,Config,Configuration,2516,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"s/mmff94.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/fromfile.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/fromfile.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/eqeq.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eqeq.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/pl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:72662,plugin,plugin,72662,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"s/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/generic.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/graphsym.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/grid.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/griddata.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/isomorphism.cpp.o; [ 8%] Building CXX object src/CMakeFiles/openbabel.dir/kekulize.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/locale.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/matrix.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mcdlutil.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:7947,plugin,plugin,7947,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"scripts/perl/Makefile.PL tries to do exactly that. Can you find out if the OBJ_DIR environment variable isn't set when cmake runs the ""perl Makefile.PL"" command?. Also, your summary mentions Python and Ruby. What about these?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797227:95,variab,variable,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1019#issuecomment-281797227,1,['variab'],['variable']
Modifiability,"se as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partialsmiles perceive as problematic. Thus my change to focus on SMILES approved by partialsmiles/OpenBabel may process (the complementary set). The above SMILES string yielding a warning because of extended stereochemistry (options for .and. and .or.) equally calls for an adjustment of the parameters how the molecules are generated (outside OpenBabel) to use only SMILES with unambiguous stereochemistry. ---. *) On a tangent, this reminds me a bit to the extended stereochemistry options in .sdf (v3000 format) with logical .and. and .or. as seen e.g., in a presentation[3] by Andrey Yerin's about how to possibly improve InChI:. ![2022-03-30_Yerin_InChI]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:1787,config,configurations,1787,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256,1,['config'],['configurations']
Modifiability,"sr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rand.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/reactionfacade.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/residue.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/ring.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rotamer.cpp.o; [ 12%] Building CXX object src/CMakeFiles/openbabel.dir/rotor.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/spectrophore.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tautomer.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:26:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/tautomer.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/tautomer.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 13%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/transform.cpp:23:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:15150,plugin,plugin,15150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"sr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprints/fingerecfp.cpp:15:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_fingerprints.so; [ 19%] Built target plugin_fingerprints; Consolidate compiler generated dependencies of target plugin_forcefields; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:29:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldgaff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:39641,plugin,plugin,39641,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ssue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2b211d6acfc0f9e1c6746a984da3483b729aa32b; Operating system and version: EndeavourOS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. CIF has a Hermann–Mauguin symbol entry, [`space_group_name_H-M_alt`](https://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Ispace_group_name_H-M_alt.html):. > _space_group_name_H-M_alt allows any Hermann-Mauguin symbol; > to be given. The way in which this item is used is determined; > by the user and *in general is not intended to be interpreted by; > computer*. It may, for example, be used to give one of the; > extended Hermann-Mauguin symbols given in Table 4.3.2.1 of; > International Tables for Crystallography Vol. A (2002) or; > a Hermann-Mauguin symbol for a conventional or unconventional; > setting. (emphasis mine). Usually *short* forms of HM symbols are used instead of *full* ones, e.g., #&shy;225 `F m -3 m` vs `F 4/m -3 2/m`.; <!-- This applies to Open Babel as well:. https://github.com/openbabel/openbabel/blob/2b211d6acfc0f9e1c6746a984da3483b729aa32b/data/space-groups.txt#L8265-L8267; https://github.com/openbabel/openbabel/blob/2b211d6acfc0f9e1c6746a984da3483b729aa32b/src/generic.cpp#L569; https://github.com/openbabel/openbabel/blob/2b211d6acfc0f9e1c6746a984da3483b729aa32b/src/math/spacegroup.cpp#L400. The latter does not seem to be (explicitly) used, and the former is treated as a correct notation.-->. CIF also has symmetry operation entry, [`_space_group_symop_operation_xyz`](https://www.iucr.org/__data/iucr/cifdic_html/1/cif_core.dic/Ispace_group_symop_operation_xyz.html):. > Whe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2586:1183,extend,extended,1183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2586,1,['extend'],['extended']
Modifiability,"struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/mcdlutil.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/molchrg.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; [ 9%] Building CXX object src/CMakeFiles/openbabel.dir/obconversion.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:48:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/fstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/obconversion.cpp:37:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/oberror.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obfunctions.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obiter.cpp.o; [ 10%] Building CXX object src/CMakeFiles/openbabel.dir/obutil",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:10190,plugin,plugin,10190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:32:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefielduff.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Linking CXX shared module ../lib/plugin_forcefields.so; [ 19%] Built target plugin_forcefields; Consolidate compiler generated dependencies of target plugin_ops; [ 20%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/addfilename.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:42990,plugin,plugin,42990,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/mol.h:44,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldghemical.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/forcefieldmmff94.cpp:31:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefields/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:41825,plugin,plugin,41825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:1634,config,configuring-code-scanning,1634,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['config'],['configuring-code-scanning']
Modifiability,"t.; I tried to compile the OpenBabel source code myself under Visual Studio 2022. After downloading OpenBabel v3.1.1 from Github, I first downloaded the following optional libs and successfully compiled them all with CMake (libxml2, InChI, zlib, Eigen3, RapidJSON, wxWidgets and Cairo). After setting various paths for optional libraries in CMake, I was able to successfully configure and generate OpenBabel in CMake and open it in Visual Studio 2022. The project was also able to be compiled (Release) in Visual Studio without any errors. I then created a new console project and configured various paths for the include and .lib files of OpenBabel for it.; Here is the short console programm I found in the net:. ```. #include <openbabel/obconversion.h>; #include <openbabel/mol.h>; #include <iostream>. using namespace std;; using namespace OpenBabel;. int main() {; // SMILES string; string smiles = ""CCO"";. // Create an OBMol object; OBMol mol;; OBConversion conv;; conv.SetInFormat(""smi"");; conv.ReadString(&mol, smiles);. // Get IUPAC name; string iupac_name = mol.GetTitle();. // Output IUPAC name; cout << ""IUPAC name: "" << iupac_name << endl;. return 0;; }; ```. But when I tried to compile this console project, the following errors were displayed:; ```; Error (active) E0020 The identifier """"strcasecmp"""" is not defined. OpenBable C:\Libs\OpenBabel\v3.1.1\install\include\openbabel3\openbabel\plugin.h 44; Error C3861 ""strcasecmp"": Identifier not found. OpenBable C:\Libs\OpenBabel\v3.1.1\install\include\openbabel3\openbabel\plugin.h 44; ```. I know that ""strcasecmp"" is not included in the C standard, but only in POSIX.; I'm now wondering how I can fix this error? Did I make a mistake when compiling OpenBabel?. ## Environment Information; Open Babel version: v3.1.1; Used optional Libs: libxml2, InChI, zlib, Eigen3, RapidJSON, Cairo, wxWidgets; Operating system and version: Windows 11 Pro x64; Compiler: Visual Studio C++ 2022; CMake GUI v3.28.1. Thx in advance for trying to help.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2670:1520,plugin,plugin,1520,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2670,2,['plugin'],['plugin']
Modifiability,"t.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/stl_tree.h:65,; from /usr/include/c++/12/set:60,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/format.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/format.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations];",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:6634,plugin,plugin,6634,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/builder.h:23,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/builder.cpp:22:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/canon.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chains.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/chargemodel.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/chargemodel.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data.cpp.o; [ 6%] Building CXX object src/CMakeFiles/openbabel.dir/data_utilities.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/descriptor.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:23:; /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:3540,plugin,plugin,3540,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"t_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:4391,variab,variable,4391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"te, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; optswx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; Generating Code...; Project : warning PRJ0018 : The following environment variables were not found:; $(WXWIN); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:4809,Config,Configuration,4809,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['Config'],['Configuration']
Modifiability,"tem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:5411,config,config,5411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,1,['config'],['config']
Modifiability,"ters: gentoo; priority: 50. grub2-themes; location: /var/lib/layman/grub2-themes; sync-type: git; sync-uri: git://github.com/gentoo/grub2-themes-overlay.git; masters: gentoo; priority: 50. mozilla; location: /var/lib/layman/mozilla; sync-type: git; sync-uri: git://anongit.gentoo.org/proj/mozilla.git; masters: gentoo; priority: 50. spring; location: /var/lib/layman/spring-overlay; sync-type: git; sync-uri: git://github.com/springlobby/overlay.git; masters: gentoo; priority: 50. steam-overlay; location: /var/lib/layman/steam-overlay; sync-type: git; sync-uri: git://github.com/anyc/steam-overlay.git; masters: gentoo; priority: 50. ACCEPT_KEYWORDS=""amd64 ~amd64""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative d",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:9486,sandbox,sandbox,9486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['sandbox'],['sandbox']
Modifiability,"th the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I would move this comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1528,extend,extend,1528,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875,1,['extend'],['extend']
Modifiability,"th[b]); ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:389:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:429:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'OpenBabel::OBCisTransStereo* OpenBabel::OBDistanceGeometry::GetCisTransStereo(OpenBabel::OBBond*)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:587:19: warning: unused variable 'bond_id' [-Wunused-variable]; OBStereo::Ref bond_id;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::Set15Bounds()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:18: warning: unused variable 'i' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:617:21: warning: unused variable 'j' [-Wunused-variable]; unsigned int i, j;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::TriangleSmooth(int)':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:748:9: warning: unused variable 'loopCount' [-Wunused-variable]; int loopCount = 0;; ^; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: At global scope:; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:745:8: warning: unused parameter 'iterations' [-Wunused-parameter]; void OBDistanceGeometry::TriangleSmooth(int iterations). /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp: In member function 'void OpenBabel::OBDistanceGeometry::AddConformer()':; /home/noel/Tools/openbabel-baoilleach/src/distgeom.cpp:1108:30: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]; if (a->GetIdx() == origin || a->Get",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265:2298,variab,variable,2298,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354878265,2,['variab'],['variable']
Modifiability,thread_local storge for global variables with state,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295:31,variab,variables,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295,1,['variab'],['variables']
Modifiability,"tly in the code), I always get expected output. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS Mojave 10.14.5; Python version: 2.7.16; numpy version: 1.16.2. ## Expected Behavior; I want to receive vector normal to the ring's plane for each aromatic ring. ## Actual Behavior; ### INPUT:. ```; import pybel; import numpy as np. def find_ligand_rings(file_type,ligands_file):; ''' find all aromatic rings in all ligands '''; ; mols = list(pybel.readfile(file_type,ligands_file)); dictionary = {}; ; for i in range(len(mols)): # for molecule in ligand file; ; rings_candidates = mols[i].OBMol.GetSSSR(); name = mols[i].title; dictionary[name]=[] ; rings = []; all_atoms = mols[i].atoms; ; for ring in rings_candidates:; if ring.IsAromatic():; ring_atoms = [a for a in all_atoms if ring.IsMember(a.OBAtom)]; rings.append([ring,ring_atoms]); ; dictionary[name].extend(rings); ; return dictionary. all_ligands_dict=find_ligand_rings('sdf','docking.txt') . for ligand in all_ligands_dict.keys():; ligand_rings = all_ligands_dict[ligand]; for aring in ligand_rings:; ring_atoms_ligand = aring[1]; ; atoms_creating_planar_space_ligand = np.array([ring_atoms_ligand[0].coords,ring_atoms_ligand[1].coords,ring_atoms_ligand[2].coords], dtype=np.float128). v1 = np.array(atoms_creating_planar_space_ligand[-1]) - np.array(atoms_creating_planar_space_ligand[-3]); v2 = np.array(atoms_creating_planar_space_ligand[-2]) - np.array(atoms_creating_planar_space_ligand[-3]); ; cp = np.cross(v1,v2); a,b,c = cp; planar = [a,b,c]; print planar; ```; Input file:; [docking.txt](https://github.com/openbabel/openbabel/files/3341651/docking.txt); (sdf file is not supported to attach, therefore extension was changed to txt). ### OUTPUTS. I receive different outputs, for example:. ```; [0.6089214299999996571, -0.25672263999999994757, -1.6856687399999995224]; [0.4635365400000002664, -0.4144325400",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2000:1606,extend,extend,1606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2000,1,['extend'],['extend']
Modifiability,"tor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creati",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2420,Config,Configuration,2420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['Config'],['Configuration']
Modifiability,"tput); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command; > > to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:23526,Config,Configuring,23526,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Config'],['Configuring']
Modifiability,"trLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/elements.cpp.o; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/fingerprint.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/fingerprint.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:27:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/bits/refwrap.h:39,; from /usr/include/c++/12/vector:66,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/fingerprint.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 7%] Building CXX object src/CMakeFiles/openbabel.dir/forcefield.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/forcefield.h:28,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/forcefield.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:5772,plugin,plugin,5772,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ts to use openbabel in Azure Jupyter notebooks without experience of installing packages. Therefore a command like this. !pip install openbabel. would have to work robustly. Thank you. At the moment this happens:. Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); 100% |████████████████████████████████| 81kB 2.9MB/s ta 0:00:01; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; Complete output from command /home/nbuser/anaconda3_501/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-install-1cp6ol8m/openbabel/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" bdist_wheel -d /tmp/pip-wheel-yi7goy8r --python-tag cp36:; running bdist_wheel; running build; running build_ext; Warning: package openbabel-2.0 could not be found by pkg-config.; Guessing Open Babel location:; - include_dirs: ['/home/nbuser/anaconda3_501/include/python3.6m', '/usr/local/include/openbabel-2.0']; - library_dirs: ['/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/home/nbuser/anaconda3_501/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; unable to execute 'swig': No such file or directory; ; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ; ----------------------------------------; Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1956:1141,config,config,1141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1956,1,['config'],['config']
Modifiability,"ttps://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:1083,variab,variable,1083,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['variab'],['variable']
Modifiability,"uce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9725,variab,variable,9725,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['variab'],['variable']
Modifiability,"ude/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/eem.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 24%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/gasteiger.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/gasteiger.cpp:20:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/dlhandler.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 25%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/none.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/chargemodel.h:24,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/charges/none.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result>",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:69893,plugin,plugin,69893,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; Fil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357:1074,variab,variable,1074,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357,1,['variab'],['variable']
Modifiability,"usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 33%] Linking CXX shared module ../../lib/mol2format.so; [ 33%] Built target mol2format; Consolidate compiler generated dependencies of target pdbformat; [ 33%] Building CXX object src/formats/CMakeFiles/pdbformat.dir/pdbformat.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/format.h:22,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:37,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obmolecformat.h:36,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:17:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/obconversion.h:24:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp: In member function ‘virtual bool OpenBabel::PDBFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; /home/icamps/Temp/openbabel/openbabel-3.1.1/src/formats/pdbformat.cpp:684:58",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:88651,plugin,plugin,88651,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"ut; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:183 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; Policy CMP0053 is not set: Simplify variable reference and escape sequence; evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning. For input:. ```; '; SET(ENV{PYTHONPATH} ${pyenv}); SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} ${ob_libdir}); SET(ENV{BABEL_DATADIR} ${ob_datadir}); MESSAGE(\""${pyenv}\""); EXECUTE_PROCESS(; COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. the old evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} NOTFOUND); SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""NOTFOUND""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:8372,variab,variable,8372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['variab'],['variable']
Modifiability,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1252:48,variab,variable,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252,1,['variab'],['variable']
Modifiability,"warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 2 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1863,Config,Configuration,1863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Config'],['Configuration']
Modifiability,"warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/delnonpolarh.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:22:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/ostream:38,; from /usr/include/c++/12/iostream:39,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/gen2D.cpp:21:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 21%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/fillUC.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/fillUC.cpp:20:; /home/icamps/Temp/openbabel/openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:51857,plugin,plugin,51857,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"wnloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:16319,variab,variable,16319,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['variab'],['variable']
Modifiability,"x3 GetFractionalMatrix() {; ^; openbabel.java:159: cannot find symbol; symbol : class OBAromaticTyper; location: class openbabel; public static void setAromtyper(OBAromaticTyper value) {; ^; openbabel.java:163: cannot find symbol; symbol : class OBAromaticTyper; location: class openbabel; public static OBAromaticTyper getAromtyper() {; ^; openbabel.java:167: cannot find symbol; symbol : class OBAtomTyper; location: class openbabel; public static void setAtomtyper(OBAtomTyper value) {; ^; openbabel.java:171: cannot find symbol; symbol : class OBAtomTyper; location: class openbabel; public static OBAtomTyper getAtomtyper() {; ^; openbabel.java:175: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static void setChainsparser(OBChainsParser value) {; ^; openbabel.java:179: cannot find symbol; symbol : class OBChainsParser; location: class openbabel; public static OBChainsParser getChainsparser() {; ^; OBMol.java:570: cannot find symbol; symbol : variable OBBitVec; location: class OBMol; openbabelJNI.OBMol_FindLargestFragment(swigCPtr, OBBitVec.getCPtr(frag));; ^; OBRing.java:44: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; openbabelJNI.OBRing__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBRing.java:48: cannot find symbol; symbol : class OBBitVec; location: class OBRing; return new OBBitVec(openbabelJNI.OBRing__pathset_get(swigCPtr), false);; ^; OBRing.java:60: cannot find symbol; symbol : variable OBBitVec; location: class OBRing; this(openbabelJNI.new_OBRing__SWIG_2(vectorInt.getCPtr(path), OBBitVec.getCP; tr(set)), true);; ^; OBMolRingIter.java:65: cannot find symbol; symbol : variable OBBitVec; location: class OBMolRingIter; openbabelJNI.OBMolRingIter__pathset_set(swigCPtr, OBBitVec.getCPtr(value));; ^; OBMolRingIter.java:69: cannot find symbol; symbol : class OBBitVec; location: class OBMolRingIter; return new OBBitVec(openbabelJNI.OBMolRingIter__pathset_get(swigCPtr), false; );; ^; OBResidueData",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721:3258,variab,variable,3258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721,1,['variab'],['variable']
Modifiability,"xWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2234:2343,Config,Configuring,2343,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234,1,['Config'],['Configuring']
Modifiability,"your speculations seems to be correct , As you mentioned, strcasecmp is a POSIX function, and its usage on Windows may cause compilation issues. either we can make changes to local build by adding something similar to following lines of code in plugin.h; ```; struct OBERROR CharPtrLess; {; bool operator()(const char* p1, const char* p2) const; {; #if defined(_MSC_VER); return _stricmp(p1, p2) < 0;; #else; return strcasecmp(p1, p2) < 0;; #endif; }; };; ```; this should work since _srticmp is a valid function under Microsoft Visual C++ or else you can add a custom function; ```; #include <cctype>. struct CharPtrLess; {; bool operator()(const char* p1, const char* p2) const; {; #if defined(_MSC_VER); return _stricmp(p1, p2) < 0;; #else; while (*p1 && *p2) {; char ch1 = std::toupper(static_cast<unsigned char>(*p1));; char ch2 = std::toupper(static_cast<unsigned char>(*p2));. if (ch1 < ch2) return true;; if (ch1 > ch2) return false;. ++p1;; ++p2;; }. return *p1 < *p2;; #endif; }; };. ```. please verify and correct me if I am wrong , @ghutchis , @chris9672",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2670#issuecomment-1946474684:245,plugin,plugin,245,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2670#issuecomment-1946474684,1,['plugin'],['plugin']
Modifiability,"ype, result still unsigned; gaussformat.cpp; gausszmatformat.cpp; ghemicalformat.cpp; gromos96format.cpp; hinformat.cpp; jaguarformat.cpp; mmcifformat.cpp; mmodformat.cpp; moldenformat.cpp; mopacformat.cpp; mpdformat.cpp; mpqcformat.cpp; msiformat.cpp; Generating Code...; Compiling...; msmsformat.cpp; nwchemformat.cpp; pcmodelformat.cpp; PQSformat.cpp; qchemformat.cpp; shelxformat.cpp; tinkerformat.cpp; turbomoleformat.cpp; unichemformat.cpp; viewmolformat.cpp; xedformat.cpp; xyzformat.cpp; yasaraformat.cpp; zindoformat.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\KFReader.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-ae-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 62 error(s), 23 warning(s); ------ Build started: Project: OBXMLFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; chemkinformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; cmlreactformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rsmiformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; rxnformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': N",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:19789,Config,Configuration,19789,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,1,['Config'],['Configuration']
Modifiability,"ython3.7m -I/usr/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install. ----------------------------------------; Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; Complete output from command /home/eric/data/virtualenvs/cclib_berquist/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-install-3un05okd/openbabel/setup.py';f=getattr(token; ize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-record-t7xj8x5f/install-record.txt --single-version-e; xternally-managed --compile --install-headers /home/eric/data/virtualenvs/cclib_berquist/include/site/python3.7/openbabel:; running install; running build_ext; Open Babel location automatically determined by pkg-config:; - include_dirs: ['/usr/include/python3.7m', '/usr/include/openbabel-2.0']; - library_dirs: ['/usr/lib', '/usr/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/include/python3.7m -I/usr/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install. ----------------------------------------; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1916:2556,config,config,2556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1916,1,['config'],['config']
Modifiability,"| struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cansmidescriptor.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/cmpdfilter.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descriptor.h:27,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:21:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /usr/include/c++/12/bits/locale_classes.h:40,; from /usr/include/c++/12/bits/ios_base.h:41,; from /usr/include/c++/12/ios:42,; from /usr/include/c++/12/istream:38,; from /usr/include/c++/12/sstream:38,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/oberror.h:26,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/descriptors/cmpdfilter.cpp:20:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 17%] Building CXX object src/CMakeFiles/plugin_descriptors.dir/descriptors/groupcontrib.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/descr",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:29929,plugin,plugin,29929,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['plugin'],['plugin']
Modifiability,"} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY ; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. but the new evaluation rules produce:. ```; '; SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); EXECUTE_PROCESS(; COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py ; #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; RESULT_VARIABLE import_res; OUTPUT_VARIABLE import_output; ERROR_VARIABLE import_output; ). # Pass the output back to ctest; IF(import_output); MESSAGE('; ```. Using the old result for compatibility since the policy is not set.; Call Stack (most recent call first):; test/CMakeLists.txt:209 (ADD_PYTHON_TEST); This warning is for project developers. Use -Wno-dev to suppress it. Python bindings will be compiled; Configuring done; CMake Warning (dev):; Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; --help-policy CMP0042"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. MACOSX_RPATH is not specified for the following targets:. inchi; openbabel. This warning is for project developers. Use -Wno-dev to suppress it. Generating done. Need help! Thank you~",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131:20498,Config,Configuring,20498,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131,1,['Config'],['Configuring']
Modifiability,"…s update maxgrad; proposed fix for github issue 1366. I think this fixes issue #1366 ; The problem was that the maxgrad variable was never being updated (and thus was never found to be lower than its initial value of 1.0e20). Therefore, the energetic criteria for convergence could be satisfied, but not the gradient condition. This change affects the steepest descent and conjugate gradients (N steps) methods.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2017:121,variab,variable,121,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2017,1,['variab'],['variable']
Performance," *; . CARTESIAN COORDINATES . NO. ATOM X Y Z. 1 O 0.0100 -0.0030 0.0000; 2 C 1.4240 -0.0040 0.0000; 3 H 1.6860 1.0620 0.0010; 4 H 1.8060 -0.4910 0.9030; 5 H 1.8060 -0.4890 -0.9030; 6 H -0.3290 -0.9190 -0.0030. ===================== shared-memory parallel CPU Section ======================; ** **; ** MOPAC calculations will run in shared-memory parallel CPUs **; ** **; ** Number of Threads = 2 **; ** **; ** **; ** For information on this work, see: **; ** **; ** Maia, J.D.C., et al., J. Chem. Theory Comput. 2012, 8, 3072-3081. **; ** DOI: 10.1021/ct3004645. **; ** **; ===================== shared-memory parallel CPU Section ======================; . H: (AM1): M.J.S. DEWAR ET AL, J. AM. CHEM. SOC. 107 3902-3909 (1985); C: (AM1): M.J.S. DEWAR ET AL, J. AM. CHEM. SOC. 107 3902-3909 (1985); O: (AM1): M.J.S. DEWAR ET AL, J. AM. CHEM. SOC. 107 3902-3909 (1985). Empirical Formula: C H4 O = 6 atoms. MOLECULAR POINT GROUP : Cs . RHF CALCULATION, NO. OF DOUBLY OCCUPIED LEVELS = 7. Geometry optimization using EF. DIAGONAL MATRIX USED AS START HESSIAN. CYCLE: 1 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 47.504 HEAT: -55.99889; CYCLE: 2 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 28.130 HEAT: -56.58412; CYCLE: 3 TIME: 0.016 TIME LEFT: 2.00D GRAD.: 16.700 HEAT: -56.88593; CYCLE: 4 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 19.239 HEAT: -56.90030; CYCLE: 5 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 19.043 HEAT: -56.91750; CYCLE: 6 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 6.533 HEAT: -57.02012; CYCLE: 7 TIME: 0.016 TIME LEFT: 2.00D GRAD.: 5.460 HEAT: -57.03173; CYCLE: 8 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.285 HEAT: -57.04181; CYCLE: 9 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.583 HEAT: -57.04692; CYCLE: 10 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 2.497 HEAT: -57.05054; CYCLE: 11 TIME: 0.000 TIME LEFT: 2.00D GRAD.: 0.673 HEAT: -57.05291. GRADIENT = 0.67290 IS LESS THAN CUTOFF = 1.00000. -------------------------------------------------------------------------------; AM1; --- C:\MOPAC.dir\MeOH_test.pdb ---; MOPAC input gener",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1346:2617,optimiz,optimization,2617,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1346,1,['optimiz'],['optimization']
Performance," -- you see an alternating pattern of single and double bonds. (This is a formalism only, because aromatic bonds are neither single, nor double bonds.) Thus, instead of `c1ccccc1` to describe benzene, you may write `C1=CC=CC=C1`, too. The potential hurdle on the side of chemistry is that by e.g., cyclopentadiene (`C1C=CC=C1`), insaturation _alone_ is a necessary, yet not a sufficient condition to consider a compound as _aromatic_. On the other side, there are multiple SMILES dialects used; OpenBabel provides canonical, universal, and inchified SMILES ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). The more complex the molecular structure to describe, the higher the chance you are going to spot a difference in SMILES strings assigned along these rules. Assuming you didn't know about SMILES earlier, there is a brief entry in [wikipedia](https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system), and thanks to Daylight some [tutorial](https://daylight.com/dayhtml_tutorials/languages/smiles/index.html), [theory](https://daylight.com/dayhtml/doc/theory/theory.smiles.html), and [examples](https://www.daylight.com/dayhtml_tutorials/languages/smiles/smiles_examples.html) compiled in one spot to get started. In case you launch your scripts from the CLI, a slight modification of your code offers to test one SMILES string at a time:. ```python; #!/usr/bin/env python3. import argparse. from openbabel import openbabel; from openbabel import pybel. def main():; """"""Collect SMILES and perform the analysis""""""; parser = argparse.ArgumentParser(; description='Check if OpenBabel considers a structure aromatic'); parser.add_argument('smiles', help='structure to test (SMILES string)'); args = parser.parse_args(). # Reading the molecule; mol = pybel.readstring(""smi"", args.smiles). # Checking the aromaticity; print([; int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol); ]). if __name__ == '__main__':; main(); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159:2002,perform,perform,2002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176280159,1,['perform'],['perform']
Performance," 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force field, enter `minimize addHydrogens;` after the prompt. (To run the optimization again, use a command in pattern of `minimize steps 1000;`.) When you are satisfied with the geometry suggested, either one of the following lines on Jmol's console yields a permanent record:. ```; write ""result.mol"";; write ""result.xyz"";; write ""result.png"";; ```. ![case2_Jmol_100iterations](https://user-images.githubusercontent.com/19709084/173328469-2f164aa0-2921-4f56-9638-5136ccf3d68f.png). (Yes, it equally is possible to write Jmol scripts for recurrent tasks/loop over files.). [replication.zip](https://github.com/openbabel/openbabel/files/8889967/replication.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:1769,load,load,1769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280,3,"['load', 'optimiz']","['load', 'optimization']"
Performance," : 36 bits physical, 48 bits virtual; power management:; processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; </pre>. And here's my /proc/meminfo:. <pre>; MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS_Unstable: 0 kB; Bounce: 0 kB; WritebackTmp: 0 kB; CommitLimit: 4066748 kB; Committed_AS: 9573052 kB; VmallocTotal: 34359738367 kB; VmallocUsed: 134508 kB; VmallocChunk: 34359595004 kB; HardwareCorrupted: 0 kB; AnonHugePages: 0 kB; HugePages_Total: 0; HugePages_Free: 0; HugePages_Rsvd: 0; HugePages_Surp: 0; Hugepagesize: 2048 kB; DirectMap4k: 7632896 kB; DirectMap2M: 714752 kB; </pre>. Let me know if any other sort of information might be helpful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:10273,Cache,Cached,10273,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['Cache'],['Cached']
Performance," This is a feature request. ## Environment Information; Open Babel version: 2.4.0; Operating system and version: Ubuntu 16.04. ## Actual Behavior; I am using openbabel in my java application(app). I want to distribute my application as jar file(app.jar). My jar file library contains openbabel.jar and other jar files required for the application to run in the lib directory. . I complied java bindings for openbabel using the command ; ```; sudo cmake /home/vin/openbabel2.4 ; -DCMAKE_INSTALL_PREFIX=~/Tools ; -DCMAKE_BUILD_TYPE=DEBUG ; -DJAVA_BINDINGS=ON ; -DEIGEN3_INCLUDE_DIR=/home/vin/Eigen3 ; -DSWIG_EXECUTABLE=/usr/bin/swig ; -DRUN_SWIG=ON; sudo make; ```. The compilation went well and took the libopenbabel_java.so and libopenbabel.so from the build directory and packed it along with my application in the directory (app/rescources) and specified the path to the app/resources directory in the source code (system.load(""/home/vin/app/resources/libopenbabel_java.so"")) of my application for performing an openbabel task. When I run my application jar file (app.jar) and perform an openbabel task (generate conformers) I am getting the below error . Exception in thread ""AWT-EventQueue-0"" java.lang.UnsatisfiedLinkError: /home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: **/home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: undefined symbol: _ZTVN9OpenBabel30OBMinimizingRMSDConformerScoreE**. I am not sure that it is a bug in openbabel or am I missing something in the java bindings compilation? I have attached the CMakeCache.txt; [CMakeCache.txt](https://github.com/openbabel/openbabel/files/2192825/CMakeCache.txt). I also looked into the Java bindings trouble #1102 in the issues, it is some what close but not exactly the same. Thank you for your time. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868:1641,perform,performing,1641,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868,1,['perform'],['performing']
Performance," a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1132,cache,cache,1132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['cache'],['cache']
Performance," an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; description=""""""; One, or multiple .xyz files can be processed to yield a individual .sdf files.; A molecule carrying an overall charge will not yield a .sdf; instead, the name; of the .xyz file to check again will be reported to the CLI."""""",; formatter_class=argparse.ArgumentDefaultsHelpFormatter,; ). parser.add_argument(; ""file"",; metavar=""FILE"",; type=argparse.FileType(""rt""),; nargs=""+"",; help=""""""; Provide one, or multiple .xyz files to process (`*.xyz` is possible, too)."""""",; ). parser.add_argument(; ""-p"", ""--parallel"", help=""process with all available CPU"", action=""store_true""; ). return parser.parse_args(). def apply_xyz2mol(input_xyz):; """"""convert .xyz int",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:1655,perform,perform,1655,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462,1,['perform'],['perform']
Performance," binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56193,load,loader,56193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['load'],['loader']
Performance," deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56643,load,loader,56643,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['load'],['loader']
Performance," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:3495,Perform,Performing,3495,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,4,['Perform'],['Performing']
Performance," src/CMakeFiles/openbabel.dir/tokenst.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/transform.cpp.o; [ 17%] Building CXX object src/CMakeFiles/openbabel.dir/typer.cpp.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/obmolecformat.cpp.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/conformersearch.cpp.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/confsearch.cpp.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.cpp.o; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.cpp.o; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/depict/depict.cpp.o; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/depict/svgpainter.cpp.o; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/math/matrix3x3.cpp.o; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/math/spacegroup.cpp.o; In static member function ?static void OpenBabel::matrix3x3::jacobi(unsigned int, double*, double*, double*)?:; cc1plus: warning: iteration 2147483647 invokes undefined behavior [-Waggressive-loop-optimizations]; /mnt/usr/local/openbabel-2.4.1/src/math/matrix3x3.cpp:650:19: note: within this loop; 650 | for (j = 0; j < static_cast<int>(n)-1; j++); | ~~^~~~~~~~~~~~~~~~~~~~~~~; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/math/transform3d.cpp.o; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/math/vector3.cpp.o; [ 20%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.cpp.o; [ 20%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/stereo.cpp.o; [ 20%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/tetranonplanar.cpp.o; [ 20%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/tetraplanar.cpp.o; [ 20%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/squareplanar.cpp.o; [ 21%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/cistrans.cpp.o; [ 21%] Building CXX object src/CMakeFiles/openbabel.dir/stereo/tetrahedral.cpp.o; [ 21%] Building CXX ob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:11921,optimiz,optimizations,11921,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['optimiz'],['optimizations']
Performance, target MCDLformat; Scanning dependencies of target bgfformat; [ 67%] Building CXX object src/formats/CMakeFiles/bgfformat.dir/bgfformat.o; [ 67%] Linking CXX shared module ../../lib/cccformat.so; [ 67%] Built target cccformat; Scanning dependencies of target gaussformat; [ 68%] Building CXX object src/formats/CMakeFiles/gaussformat.dir/gaussformat.o; [ 68%] Linking CXX shared module ../../lib/bgfformat.so; [ 68%] Built target bgfformat; Scanning dependencies of target boxformat; [ 68%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.o; [ 68%] Linking CXX shared module ../../lib/boxformat.so; [ 68%] Built target boxformat; Scanning dependencies of target cacheformat; [ 68%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.o; [ 68%] Linking CXX shared module ../../lib/gaussformat.so; [ 68%] Linking CXX shared module ../../lib/cacheformat.so; [ 68%] Built target gaussformat; [ 68%] Built target cacheformat; Scanning dependencies of target fchkformat; Scanning dependencies of target cacaoformat; [ 69%] Building CXX object src/formats/CMakeFiles/fchkformat.dir/fchkformat.o; [ 70%] Building CXX object src/formats/CMakeFiles/cacaoformat.dir/cacaoformat.o; [ 70%] Linking CXX shared module ../../lib/cacaoformat.so; [ 70%] Built target cacaoformat; Scanning dependencies of target carformat; [ 70%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.o; [ 70%] Linking CXX shared module ../../lib/fchkformat.so; [ 70%] Built target fchkformat; Scanning dependencies of target pqrformat; [ 71%] Building CXX object src/formats/CMakeFiles/pqrformat.dir/pqrformat.o; [ 72%] Linking CXX shared module ../../lib/carformat.so; [ 72%] Built target carformat; Scanning dependencies of target chem3dformat; [ 72%] Building CXX object src/formats/CMakeFiles/chem3dformat.dir/chem3dformat.o; [ 72%] Linking CXX shared module ../../lib/chem3dformat.so; [ 72%] Built target chem3dformat; Scanning dependencies of target chemdrawct; [ 72%] Buildin,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:42469,cache,cacheformat,42469,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['cache'],['cacheformat']
Performance," that appears to not be able to do anything. Additionally, babel mysteriously reports it's version as 2.2.3. For example :. babel -H returns: (note the file formats supported). Open Babel converts chemical structures from one file format to another. Usage: babel <input spec> <output spec> [Options]. Each spec can be a file whose extension decides the format.; Optionally the format can be specified by preceding the file by; -i<format-type> e.g. -icml, for input and -o<format-type> for output. See below for available format-types, which are the same as the ; file extensions and are case independent.; If no input or output file is given stdin or stdout are used instead. More than one input file can be specified and their names can contain; wildcard chars (* and ?).The molecules are aggregated in the output file. Conversion options; -f <#> Start import at molecule # specified; -l <#> End import at molecule # specified; -e Continue with next object after error, if possible; -z Compress the output with gzip; -k Attempt to translate keywords; -H Outputs this help text; -Hxxx (xxx is file format ID e.g. -Hcml) gives format info; -Hall Outputs details of all formats; -V Outputs version number; -L <BaseType> Lists plugin classes of this type; e.g. <fingerprints>, or <plugins> for a list of BaseTypes; -m Produces multiple output files, to allow:; Splitting: e.g. babel infile.mol new.smi -m; puts each molecule into new1.smi new2.smi etc; Batch conversion: e.g. babel *.mol -osmi -m; converts each input file to a .smi file; The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. When I try to use it for any common file types such as mol or cdx, it claims it can either not read input file or write output file. What's going on here ? Have I royally borked something somehow ? Install is via the .pkg for 2.2.3 on the main wiki page. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/955:1804,load,loaded,1804,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/955,2,['load'],"['loaded', 'loaders']"
Performance,"""-DCMAKE_BUILD_TYPE=RELEASE"" will fix it. It turns out that the g++ build; does not default to ""RELEASE"", but instead to the build that includes debug; information, hence the humungous files. I think this is a mistake and will; send a pull request. Also, the Release build should use ""-O3"" unless we; know there is a problem with this.; - Noel. On 5 October 2016 at 07:02, Noel O'Boyle baoilleach@gmail.com wrote:. > At the least, there should be an option to bundle the plugins into the; > main .so, independently of a static build.; > ; > On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:; > ; > On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <; > notifications@github.com; > ; > > wrote:; > > ; > > It's the binary obabel and other tools + python parts. I can see that all; > > format files are linked in windows to one (if I remember correctly) and; > > they seam to be highly redundant on Linux. The same (i.e small size) is; > > on; > > OSX. Just review the libraries in my conda packages here; > > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > > ; > > OSX are ~10 times smaller than Linux counterparts.; > > ; > > I think it's a linker problem which might be overcome by GCC (?).; > ; > It would be nice to fix this on Linux (although I don't know how to). I; > don't care so much about the size, but the process startup time of obabel; > can be pretty bad as it loads all those files.; > ; > Cheers,; > ; > Jeff; > ; > —; > You are receiving this because you commented.; > ; > Reply to this email directly, view it on GitHub; > https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997:1422,load,loads,1422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997,1,['load'],['loads']
Performance,"""Exploded"" optimization after 46 steps. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778327:11,optimiz,optimization,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778327,1,['optimiz'],['optimization']
Performance,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2345:30,optimiz,optimized,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345,1,['optimiz'],['optimized']
Performance,"## Environment Information; **Open Babel version:** Open Babel 3.1.1 -- Feb 7 2022 -- 06:51:49; **Operating system and version:** Ubuntu 22.04.2 LTS. ## Expected Behavior; 3D-structure generation from given SMILES string. Converting from SMILES -> OXYZ (coordinates).; By using the defaults in the `--gen3D` it should generate valid OXYZ coordinates (not broken fragments). ## Actual Behavior; Instead it generates OXYZ coordinates that when visualized correspond to a molecule broken in fragments, with no warnings. ## Steps to Reproduce. Using as example the SMILES: ""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" if I try to generate the 3D structure (OXYZ):. 1. Using the default parameters:; `obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h -O test1.xyz`; (terminal output): $ 1 molecule converted; then I visualize the structure loading the XYZ coordinates with AVOGADRO:. ![image](https://user-images.githubusercontent.com/69815654/231754101-807d8f4d-ddd7-4d72-9a31-d5d44d3ca14d.png). 2. Specifying the correct force-field to be used:; `obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff UFF -O test2.xyz`; (terminal output): $ 1 molecule converted; then I visualize the structure loading the XYZ coordinates with AVOGADRO:; ![image](https://user-images.githubusercontent.com/69815654/231755213-bad4613c-8a08-427b-87a7-469f704e5fff.png). From the openbabel `--gen3D` documentation (https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html):; ![image](https://user-images.githubusercontent.com/69815654/231755668-f732e09c-9869-43e6-a809-7c84c8f00c09.png); `--gen3D` will use MMFF94 by default which will not work since atoms like ""Se"" are not defined in MMFF94 (see https://open-babel.readthedocs.io/en/latest/Forcefields/mmff94.html#mmff94-force-field); ![image](https://user-images.githubusercontent.com/69815654/231756361-7dc07e2a-9822-4c84-bf93-5dbd7b7f7595.png)c. MMFF94 will not work because of",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585:868,load,loading,868,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585,1,['load'],['loading']
Performance,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2496:107,perform,perform,107,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496,2,['perform'],"['perform', 'performed']"
Performance,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412:217,perform,perform,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412,2,"['Cache', 'perform']","['Caches', 'perform']"
Performance,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2413:625,Cache,Caches,625,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413,5,['Cache'],['Caches']
Performance,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: centos7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON .. when I use cmake install openbabel or use yum, all of this is ok.; but when -DPYTHON_BINDINGS is ON ; there was a error in make(cmake is no error). ## Actual Behavior; when make progress 99%; there is a error; ```bash; [ 99%] Generating ../../scripts/python/openbabel/openbabel-python.cpp, ../../scripts/python/openbabel/openbabel.py; /home/ji/ha/openbabel/scripts/openbabel-python.i:80: Error: Syntax error in input(1).; make[2]: *** [../scripts/python/openbabel/openbabel-python.cpp] Error 1; make[1]: *** [scripts/CMakeFiles/bindings_python.dir/all] Error 2; make: *** [all] Error 2; ```; python.i:80:; ```bash; // Set and reset dlopenflags so that plugin loading works fine for ""import _openbabel""; %pythonbegin %{; import sys; if sys.platform.find(""linux"") != -1:; dlflags = sys.getdlopenflags(); import ctypes; sys.setdlopenflags(dlflags | ctypes.RTLD_GLOBAL); %}; %pythoncode %{; if sys.platform.find(""linux"") != -1:; sys.setdlopenflags(dlflags); %}; ```. ---; I think the openbabel did not use correct python, or the linux version is too old?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2659:928,load,loading,928,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659,1,['load'],['loading']
Performance,"(1) Don't cache inchi when generating inchifield smiles; (2) Don't use cached inchi if the user specifies one of several InChI output options; (3) Add a new test file for caching (and debugging) regressions: regressionstest.cpp; (4) Drive-by fix for typo in docstrings for 'unique' op and inchiformat (""/sp3"" -> ""/nosp3""); (5) Add test for regression to regressionstest.cpp",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/142:10,cache,cache,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/142,2,['cache'],"['cache', 'cached']"
Performance,(Crossposting is a bad idea.). The problem is that openbabel.py sets the DL loader flag. Try:; import sys; flags = sys.getdlopenflags(); import pybel; sys.setdlopenflags(flags); import scipy.linalg. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802929:76,load,loader,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802929,1,['load'],['loader']
Performance,"(From openbabel-devel). Ok, it builds, but it segfaults in the CML tests. I've extracted one of the; failing tests and ran it under gdb:. [rathann@ryvius ~/build/BUILD/openbabel-2.2.0b3-20080215-r2249/test/cmltest]$ gdb ../../tools/.libs/lt-babel ; GNU gdb Red Hat Linux (6.6-16.fc7rh); Copyright (C) 2006 Free Software Foundation, Inc.; GDB is free software, covered by the GNU General Public License, and you are; welcome to change it and/or distribute copies of it under certain conditions.; Type ""show copying"" to see the conditions.; There is absolutely no warranty for GDB. Type ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu""...; Using host libthread_db library ""/lib64/libthread_db.so.1"".; (gdb) run -isdf 3d.head.sdf -ocml 3d.head.2.cml; Starting program: /home/rathann/build/BUILD/openbabel-2.2.0b3-20080215-r2249/tools/.libs/lt-babel -isdf 3d.head.sdf -ocml 3d.head.2.cml; warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fffdbbfd000; 70 molecules converted; 785 audit log messages . Program received signal SIGSEGV, Segmentation fault.; 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; Current language: auto; currently c; (gdb) bt full; #0 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #1 0x00000030eba8fd57 in std::ostream::write () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #2 0x00002aaab3fc225f in OpenBabel::XMLConversion::WriteStream (context=<value optimized out>, ; buffer=0x7fffdbace810 ""���\227"", len=-609425392) at xml.cpp:337; ofs = (ostream *) 0x7fffdbace810. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728:931,load,loadable,931,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728,2,"['load', 'optimiz']","['loadable', 'optimized']"
Performance,"(https://github.com/openbabel/openbabel/files/9179914/error-deps.log). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; - Build maeparser and install it on ../libmaeparser-1.2.4-220427; - Build coordgenlibs and install it on ../coordgenlibs-3.0.0-220427; - Run following command to try the build process:; `; mkdir build-openbabel; cd build-openbabel; cmake \; -DCMAKE_INSTALL_PREFIX=../openbabel-3.1.1-220621 \; -DBUILD_SHARED=OFF \; -DBUILD_MIXED=ON \; -DWITH_STATIC_INCHI=ON \; -DWITH_STATIC_LIBXML=ON \; -DWITH_COORDGEN=ON \; -DENABLE_OPENMP=ON \; -Dmaeparser_DIR=../libmaeparser-1.2.4-220427 \; -Dcoordgen_DIR=../coordgenlibs-3.0.0-220427 \; ../openbabel; `; `; cmake --build . --config Release -j; `; ## How to fix; - Apply following patch. It does not tested on any other linux distribution or OS than Ubuntu 18.04.; [adjust-dependencies.patch.txt](https://github.com/openbabel/openbabel/files/9179786/adjust-dependencies.patch.txt). ## Note; - There's an another static build issue(https://github.com/openbabel/openbabel/issues/2377), but this issue does not identical to it.; - libxml2 relies on libicu for processing character set related functionality. I think it's libxml2 bug that its dependency is not explicitly set, but for workaround we can try to find and use it.; - libxml2 relies on liblzma for processing LZMA-compressed files. Yes, it has similar issues mentioned above.; - It seems that the command binaries are reference dynamic loading functions(libdl) even static build. It causes error without removing BUILD_SHARED condition like following log. And it moved to the end of libs variable, because it should be located on last position of library chain.; [error-libdl.log](https://github.com/openbabel/openbabel/files/9179932/error-libdl.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2513:2765,load,loading,2765,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2513,1,['load'],['loading']
Performance,"**Is your feature request related to a problem? Please describe.**; On occasion, I would like to see multiple formulae including assigned stereochemistry. Mainly, this addresses the labels _R_/_S_, less frequently _E_/_Z_, or _P_/_M_. **Describe the solution you'd like**; Inspired by previous posts [here](https://github.com/openbabel/openbabel/issues/2451) about stereogenic centres in general, and labeling isotopes [here](https://github.com/openbabel/openbabel/issues/2238), I would like to have the optional display of the labels similar like below. ![CIP_annotated](https://user-images.githubusercontent.com/19709084/174767539-2a10e00c-b6f7-4396-bb15-b616dda1152d.png). (image modified on basis of an example [here](https://github.com/openbabel/openbabel/issues/2308)). At present, the documentation does not state an explicit flag to enable this for either [.png](https://open-babel.readthedocs.io/en/latest/FileFormats/PNG_2D_depiction.html#write-options), or [.svg](https://open-babel.readthedocs.io/en/latest/FileFormats/SVG_2D_depiction.html). **Describe alternatives you've considered**; a) Following the examples provided by [RDKit cookbook](http://rdkit.org/docs/Cookbook.html#include-stereo-annotations) if RDKit is available. May eventually work from e.g., a Jupyter notebook to work multiple times on batches of data. b) For single structures, reading SMILES string/molecule file in question by ChemDraw for a structure-to-name conversion. Alternatively, import of the structure representation into Jmol (installation free); let the program replace implicit hydrogens by explicit ones & run a force field for an initial geometry optimization (`minimize addHydrogens;`). Stereogenic centers are subsequently assigned with the instruction `label %[chirality]`, on occasion with an adjustment of the label offset (e.g., `set labeloffset 5 10;`):. ![CIP_Jmol](https://user-images.githubusercontent.com/19709084/174769249-04ba8c47-d085-43e1-9427-5f6f1ee74f4f.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2497:1646,optimiz,optimization,1646,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497,1,['optimiz'],['optimization']
Performance,"*] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.0; Operating system and version: Ubuntu 16.04. ## Actual Behavior; I am using openbabel in my java application(app). I want to distribute my application as jar file(app.jar). My jar file library contains openbabel.jar and other jar files required for the application to run in the lib directory. . I complied java bindings for openbabel using the command ; ```; sudo cmake /home/vin/openbabel2.4 ; -DCMAKE_INSTALL_PREFIX=~/Tools ; -DCMAKE_BUILD_TYPE=DEBUG ; -DJAVA_BINDINGS=ON ; -DEIGEN3_INCLUDE_DIR=/home/vin/Eigen3 ; -DSWIG_EXECUTABLE=/usr/bin/swig ; -DRUN_SWIG=ON; sudo make; ```. The compilation went well and took the libopenbabel_java.so and libopenbabel.so from the build directory and packed it along with my application in the directory (app/rescources) and specified the path to the app/resources directory in the source code (system.load(""/home/vin/app/resources/libopenbabel_java.so"")) of my application for performing an openbabel task. When I run my application jar file (app.jar) and perform an openbabel task (generate conformers) I am getting the below error . Exception in thread ""AWT-EventQueue-0"" java.lang.UnsatisfiedLinkError: /home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: **/home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: undefined symbol: _ZTVN9OpenBabel30OBMinimizingRMSDConformerScoreE**. I am not sure that it is a bug in openbabel or am I missing something in the java bindings compilation? I have attached the CMakeCache.txt; [CMakeCache.txt](https://github.com/openbabel/openbabel/files/2192825/CMakeCache.txt). I also looked into the Java bindings trouble #1102 in the issues, it is some what close but not exactly the same. Thank you for your time. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference fr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868:1565,load,load,1565,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868,1,['load'],['load']
Performance,"+ x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:248 (macro_ensure_version). CMake Error at cmake/modules/MacroEnsureVersion.cmake:76 (MATH):; math cannot parse the expression: ""x86_646*10000 + x86_644*100 + x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:249 (macro_ensure_version). CMake Error at cmake/modules/MacroEnsureVersion.cmake:76 (MATH):; math cannot parse the expression: ""x86_646*10000 + x86_644*100 + x86_640"":; syntax error, unexpected exp_NUMBER, expecting $end (8); Call Stack (most recent call first):; cmake/modules/MacroEnsureVersion.cmake:95 (NORMALIZE_VERSION); CMakeLists.txt:250 (macro_ensure_version). -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.29.2"") ; -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.13"") ; -- Configuring incomplete, errors occurred!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:4099,Perform,Performing,4099,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,10,['Perform'],['Performing']
Performance,"- Use rapidjson instead of json-cpp.; - Better method for including the JSON library: Instead of including the full source in the Open Babel repository, CMake looks for rapidjson on the system. If it doesn't find it, it downloads the latest version on demand and uses that. This is also a possible model for how the InChI code could work.; - Better detection of supported native CPU optimizations at compile time (used by rapidjson).; - Convert the existing PubChem and ChemDoodle JSON formats to use rapidjson.; - Fix a few minor bugs and add proper tests for the existing JSON formats. Should hopefully be faster:. ```; (jsoncpp) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 2.15 1.45 1.45; 1000 loops, best of 3: 1.45 msec per loop; ```. ```; (rapidjson) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 1.55 0.818 0.818; 1000 loops, best of 3: 818 usec per loop; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1776:383,optimiz,optimizations,383,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1776,1,['optimiz'],['optimizations']
Performance,"- [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: all. ---; There was a recent interesting paper about the ""Sobering Assessment of Small-Molecule Force Field; Methods for Low Energy Conformer Predictions""(https://arxiv.org/ftp/arxiv/papers/1705/1705.04308.pdf) . So I was trying to utilize that information from the paper above and instead of using MMFF94 I optimized my MOPAC file containing 1000 structures with openmopac PM7 and basically had a mopac output file (*.out *.arc) with a 1000 optimized PM7 structures. Now in order to utilized them further in my pipeline I needed to convert them from MOPAC output format (*.out *.arc) back to SDF. With the current OpenBabel GUI which i mostly use it only converts one single file, but not multiple MOPAC optimized structures. Would it be possible to integrate such a feature or is that rather something one would do outside with a small tools (similar to SDF2SMI) or maybe there is already a tool or some python code?. Tobias",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1789:476,optimiz,optimized,476,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1789,3,['optimiz'],['optimized']
Performance,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2381:309,optimiz,optimized,309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381,2,['optimiz'],['optimized']
Performance,"- [? ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 and 2.3.2; Operating system and version:; $ uname -a; Linux semlxl10142d803-vm01 4.4.0-101-generic #124-Ubuntu SMP Fri Nov 10 18:29:59 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 16.04.3 LTS; Release: 16.04; Codename: xenial. Found differences in atom coordinates when loading CIF using version 2.3.2 and 2.4.1, see below. - Are the 2.4.1-coordinates closer to the “truth” or is it just a matter of taste?; - Is there a scientific explanation of the differences?; - Is there a way, using OpenBabel 2.4.1, to achieve the “2.3.2”-coordinates?. Please find attached CIF-files, PNG-depictions and Python script. . Run script:; $ python load_cif.py test01.cif. Best regards,; Johan Westin. $ python -V && obabel -V && python load_cif.py test01.cif $ python -V && obabel -V && python load_cif.py test01.cif; Python 2.7.14 Python 3.6.3; Open Babel 2.3.2 -- Dec 8 2017 -- 10:34:11 Open Babel 2.4.1 -- Dec 12 2017 -- 09:09:08; [ [; {""idx"": 1, ""type"": S2, ""coord"": (6.84400, 0.27097, 11.70525)}, {""idx"": 1, ""type"": S2, ""coord"": (0.00000, 0.27097, 11.70525)},; {""idx"": 2, ""type"": F, ""coord"": (5.77346, 2.22243, 4.77258)}, {""idx"": 2, ""type"": F, ""coord"": (5.77346, 2.22243, 4.77258)},; {""idx"": 3, ""type"": F, ""coord"": (6.84400, 3.69147, 3.62745)}, {""idx"": 3, ""type"": F, ""coord"": (0.00000, 3.69147, 3.62745)},; {""idx"": 4, ""type"": O2, ""coord"": (6.84400, 5.13963, 5.73536)}, {""idx"": 4, ""type"": O2, ""coord"": (0.00000, 5.13963, 5.73536)},; {""idx"": 5, ""type"": Car, ""coord"": (6.84400, 1.89682, 13.66857)}, {""idx"": 5, ""type"": Car, ""coord"": (0.00000, 1.89682, 13.66857)},; {""idx"": 6, ""type"": Car, ""coord"": (6.84400, 2.45654, 9.97756)}, {""idx"": 6, ""type"": Car, ""coord"": (0.00000, 2.45654, 9.97756)},; {""idx"": 7, ""type"": Car, ""coord"": (6.84400, 4.28894, 8.41099)}, {""idx"": 7, ""type"": Car, ""coord"": ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726:497,load,loading,497,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726,1,['load'],['loading']
Performance,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Linux Mint 19 x86_64. ## Expected Behavior; I am parsing mol2 files using Pybel. It works most of the time but I am receiving a number of warnings that suggest there is a small bug in the code. ## Actual Behavior; ==============================; *** Open Babel Warning in Translate; Cannot perform atom type translation: table cannot find requested types.; ==============================; *** Open Babel Warning in ReadMolecule; This Mol2 file is non-standard. Problem with molecule: /home/mirix/Work/common/PDBuzzy/v2018/1n7i/1n7i_ligand.pdb Cannot interpret atom types correctly, instead attempting to interpret atom type: O.co22002 as elements instead.; ==============================. When there is no space between the atom type and the residue number, Pybel is unable to recognise the atom types. Examples: O.co22002 or N.pl32002.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1924:459,perform,perform,459,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1924,1,['perform'],['perform']
Performance,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10 1803. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. --> Conversion from .mol2 file to .pdb file should produce a ""normal"" structure. If the conversion is performed on a Linux environment, the so-produced structure is perfectly fine. However, on a Windows environment, the structure is completely messed up. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior --> ; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; --> The initial .mol2 file is PLA_DP8.mol2. On a Windows and Linux environement, the following commands were performed:. > obabel -i mol2 PLA_DP8.mol2 -o pdb -O PLA_DP8.pdb. The conversion has also been performed using Open Babel GUI on Windows and the result was the same as for the command line. The ouput from the Linux conversion (OK structure) is DP8.pdb and the ouput of the Windows conversion is Messed_Up.pdb. Is there something we are doing wrong? Is it a bug with Openbabel?. Thank you!; [Bug_OpenBabel.zip](https://github.com/openbabel/openbabel/files/2615051/Bug_OpenBabel.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1911:373,perform,performed,373,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1911,3,['perform'],['performed']
Performance,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2217:460,Perform,Perform,460,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217,1,['Perform'],['Perform']
Performance,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446:626,load,loading,626,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446,1,['load'],['loading']
Performance,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: All; Operating system and version: MacOS with Anaconda (probably not limited). ## Actual Behavior; ```; % /usr/local/anaconda/bin/python3; > import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6; ```; ## Solution; Anaconda now performs static linking on python3, so there's no libpython.so or libpython.dylib. This means that _openbabel.so needs different linker flags:. On Mac:; `-bundle -undefined dynamic_lookup`. This can be retrieved using Python sysconfig:; ```; >>> import sysconfig; >>> sysconfig.get_config_var(""LDSHARED""); 'gcc -bundle -undefined dynamic_lookup -L/usr/local/anaconda/lib -arch x86_64 -L/usr/local/anaconda/lib -arch x86_64'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1802:394,perform,performs,394,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1802,1,['perform'],['performs']
Performance,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2274:166,perform,perform,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274,1,['perform'],['perform']
Performance,"- [x] I believe this to be a bug with Open Babel. ## Environment Information. `conda info`. ```; active environment : mnx; active env location : ~/.local/share/miniconda3/envs/mnx; shell level : 1; user config file : ~/.condarc; populated config files : ~/.condarc; conda version : 4.8.2; conda-build version : 3.18.11; python version : 3.7.3.final.0; virtual packages : __glibc=2.27; base environment : ~/.local/share/miniconda3 (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : ~/.local/share/miniconda3/pkgs; ~/.conda/pkgs; envs directories : ~/.local/share/miniconda3/envs; ~/.conda/envs; platform : linux-64; user-agent : conda/4.8.2 requests/2.22.0 CPython/3.7.3 Linux/5.3.0-7625-generic ubuntu/18.04 glibc/2.27; netrc file : None; offline mode : False; ```. Open Babel version 3.0.0. ## Expected Behavior. I want to parse an InChI string to a `pybel.Molecule`. I can understand that this may fail but I believe it should be handled more transparently rather than terminating my program. ## Actual Behavior. When I run below code, I get the following error. ```; terminate called after throwing an instance of 'std::logic_error' ; what(): basic_string::_M_construct null not valid; ```. ## Steps to Reproduce. ```python; from openbabel import pybel. molecule = pybel.readstring(; ""inchi"",; ""InChI=1S/C26H37N7O19P3S/c1-26(2,20(37)23(38)29-6-5-15(34)28-7-8-56-25(39)13-3-4-16(35)49-13)10-48-55(45,46)52-54(43,44)47-9-14-19(51-53(40,41)42)18(36)24(50-14)33-12-32-17-21(27)30-11-31-22(17)33/h3-4,11-12,14,18-20,24,36-37H,5-10H2,1-2H3,(H,28,34)(H,29,38)(H,43,44)(H,45,46)(H2,27,30,31)(H2,40,41,42)/t14-,18?,19?,20-,24-/m0/s1/CRV:16.5"",; ); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2128:825,cache,cache,825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2128,1,['cache'],['cache']
Performance,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04 - 4.15.0-43-generic. I previously reported a possible bug related to the aromatic ring perception algorithm (issue 1920). But, as it was not the only case I found, I decided to perform a broader evaluation of other ligands while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:358,perform,perform,358,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['perform'],['perform']
Performance,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2265:219,optimiz,optimize,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265,8,"['Optimiz', 'optimiz']","['Optimization', 'optimization', 'optimize']"
Performance,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:569,cache,caches,569,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,2,['cache'],"['cache', 'caches']"
Performance,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:3715,Perform,Performing,3715,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,6,['Perform'],['Performing']
Performance,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:5950,Perform,Performing,5950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,2,['Perform'],['Performing']
Performance,"-- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Found LibXml2: /usr/lib/libxml2.so; -- Found ZLIB: /usr/lib/libz.so; -- Found wxWidgets: TRUE; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found.; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found.; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Could NOT find Eigen2; -- checking for module 'cairo'; -- found cairo, version 1.6.4; -- Found Cairo: /usr/lib/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python2.5; CMake Error: Error in cmake code at; /home/henritzi/src/openbabel/scripts/CMakeLists.txt:285:; Parse error. Function missing ending "")"". Instead found left paren with text ""("".; -- Configuring done. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645:1879,Perform,Performing,1879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645,4,['Perform'],['Performing']
Performance,"------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; descriptor.cpp; Generating Code...; Compiling...; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; typer.cpp; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBC",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773:301,load,loader,301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773,1,['load'],['loader']
Performance,"-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build/src && /usr/bin/x86_64-pc-linux-gnu-g++ -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -isystem /usr/lib64/wx/include/gtk2-unicode-3.0 -isystem /usr/include/wx-3.0 -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2_build/include -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/data -I/var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/include -I/usr/include/eigen3 -DNDEBUG -DNDEBUG -O2 -pipe -pthread -fopenmp -fPIC -DOB_MODULE_PATH=""\""/usr/lib64/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/chargemodel.o -c /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/chargemodel.cpp; /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/alias.cpp: In static member function ‘static bool OpenBabel::AliasData::LoadFile(OpenBabel::AliasData::SmartsTable&)’:; /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/alias.cpp:273:9: error: reference to ‘shared_ptr’ is ambiguous; shared_ptr<OBSmartsPattern> psp(new OBSmartsPattern);; ^~~~~~~~~~; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/include/g++-v6/tr1/memory:50:0,; from /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/include/openbabel/shared_ptr.h:25,; from /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/include/openbabel/alias.h:19,; from /var/tmp/portage/sci-chemistry/openbabel-2.3.2-r1/work/openbabel-2.3.2/src/alias.cpp:17:; /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/include/g++-v6/tr1/shared_ptr.h:501:11: note: candidates are: template<class _Tp> class std::tr1::shared_ptr; class shared_ptr;; ^~~~~~~~~~; In file included from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/include/g++-v6/bits/shared_ptr.h:52:0,; from /usr/lib/gcc/x86_64-pc-linux-gnu/6.3.0/include/g++-v6/memory:82,;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:1664,Load,LoadFile,1664,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['Load'],['LoadFile']
Performance,".; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConvers",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:1362,Load,LoadAllPlugins,1362,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['Load'],['LoadAllPlugins']
Performance,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3081,Perform,Performing,3081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,4,['Perform'],['Performing']
Performance,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:2504,Perform,Performing,2504,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,4,['Perform'],['Performing']
Performance,".h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configurin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:1600,Perform,Performing,1600,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,4,['Perform'],['Performing']
Performance,.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2202:3341,load,loader,3341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202,4,['load'],['loader']
Performance,.o; [ 24%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen2D.o; Scanning dependencies of target plugin_fingerprints; [ 25%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger2.o; [ 25%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/fillUC.o; [ 25%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/forcefield.o; [ 25%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/finger3.o; [ 26%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.o; [ 26%] Building CXX object src/CMakeFiles/plugin_fingerprints.dir/fingerprints/fingerecfp.o; [ 26%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.o; [ 26%] Linking CXX shared module ../lib/plugin_fingerprints.so; [ 26%] Built target plugin_fingerprints; Scanning dependencies of target plugin_forcefields; [ 26%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldgaff.o; [ 26%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.o; [ 26%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.o; [ 26%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.o; [ 27%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldghemical.o; [ 28%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.o; [ 28%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/readconformers.o; [ 28%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefieldmmff94.o; [ 28%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/sort.o; [ 28%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opisomorph.o; [ 28%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/ophighlight.o; [ 28%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.o; [ 29%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/xout.o; [ 29%] Linking CXX shared module ../lib/plugin_ops.so; [ 29%] Built target plugin_ops; Scanning dependenc,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:13917,load,loader,13917,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['load'],['loader']
Performance,/amberformat.dir/amberformat.o; [ 66%] Linking CXX shared module ../../lib/amberformat.so; [ 66%] Built target amberformat; Scanning dependencies of target cccformat; [ 66%] Building CXX object src/formats/CMakeFiles/cccformat.dir/cccformat.o; [ 67%] Linking CXX shared module ../../lib/MCDLformat.so; [ 67%] Built target MCDLformat; Scanning dependencies of target bgfformat; [ 67%] Building CXX object src/formats/CMakeFiles/bgfformat.dir/bgfformat.o; [ 67%] Linking CXX shared module ../../lib/cccformat.so; [ 67%] Built target cccformat; Scanning dependencies of target gaussformat; [ 68%] Building CXX object src/formats/CMakeFiles/gaussformat.dir/gaussformat.o; [ 68%] Linking CXX shared module ../../lib/bgfformat.so; [ 68%] Built target bgfformat; Scanning dependencies of target boxformat; [ 68%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.o; [ 68%] Linking CXX shared module ../../lib/boxformat.so; [ 68%] Built target boxformat; Scanning dependencies of target cacheformat; [ 68%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.o; [ 68%] Linking CXX shared module ../../lib/gaussformat.so; [ 68%] Linking CXX shared module ../../lib/cacheformat.so; [ 68%] Built target gaussformat; [ 68%] Built target cacheformat; Scanning dependencies of target fchkformat; Scanning dependencies of target cacaoformat; [ 69%] Building CXX object src/formats/CMakeFiles/fchkformat.dir/fchkformat.o; [ 70%] Building CXX object src/formats/CMakeFiles/cacaoformat.dir/cacaoformat.o; [ 70%] Linking CXX shared module ../../lib/cacaoformat.so; [ 70%] Built target cacaoformat; Scanning dependencies of target carformat; [ 70%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.o; [ 70%] Linking CXX shared module ../../lib/fchkformat.so; [ 70%] Built target fchkformat; Scanning dependencies of target pqrformat; [ 71%] Building CXX object src/formats/CMakeFiles/pqrformat.dir/pqrformat.o; [ 72%] Linking CXX shared module ../../lib/carformat.so,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:42204,cache,cacheformat,42204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,2,['cache'],['cacheformat']
Performance,/openbabel/2.2.99/cmlreactformat.so. 2b0db4969000-2b0db4970000 r-xp 00000000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4970000-2b0db4b70000 ---p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b70000-2b0db4b71000 rw-p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b71000-2b0db4b77000 r-xp 00000000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4b77000-2b0db4d77000 ---p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d77000-2b0db4d78000 rw-p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d78000-2b0db4d7d000 r-xp 00000000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4d7d000-2b0db4f7c000 ---p 00005000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7c000-2b0db4f7d000 rw-p 00004000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7d000-2b0db4f97000 r-xp 00000000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db4f97000-2b0db5197000 ---p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5197000-2b0db5198000 rw-p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5198000-2b0db519c000 r-xp 00000000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db519c000-2b0db539b000 ---p 00004000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539b000-2b0db539c000 rw-p 00003000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539c000-2b0db53a4000 r-xp 00000000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db53a4000-2b0db55a4000 ---p 00008000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db55a4000-2b0db55a5000 rw-p 00008000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db55a5000-2b0db55ab000 r-xp 00000000 f,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:20102,cache,cacheformat,20102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['cache'],['cacheformat']
Performance,"007ffff606b194 in SwigPyObject_dealloc (v=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:1704; meth = 0x7ffff611d7ca <_wrap_delete_OBMol(PyObject*, PyObject*)>; mself = <module at remote 0x7ffff6759f38>; res = <type at remote 0x7ffff7d76220>; ty = 0x7ffff66613a0 <_swigt__p_std__tr1__shared_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759f38>; sobj = 0x7ffff6b8ade0; next = 0x0; #9 0x00007ffff7a0004f in free_keys_object (keys=keys@entry=0x675220); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:374; entries = 0x675240; i = 7; n = 8; #10 0x00007ffff7a00b28 in dict_dealloc (mp=0x7ffff6c014d0) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:3402,optimiz,optimized,3402,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"1 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `str",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262:1094,load,load,1094,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262,2,"['cache', 'load']","['cache', 'load']"
Performance,"16709; H -2.92235 5.90083 -3.68024; H -5.05075 5.94058 -1.66063; H -3.84736 3.40889 -2.69793; H -5.16670 3.55676 -1.46033; H -2.50258 2.43194 1.78898; H -3.61128 2.52186 0.40396; H -1.98490 0.28744 1.18243; H -2.61144 -0.63909 -1.15160; H -3.95281 -0.09178 -0.13927; H -3.37215 0.92427 -1.46752; H -1.18993 -3.17436 -2.52411; H -2.07994 -5.24422 -3.61949; H -1.92569 -6.21057 -2.10163; H -3.40012 -4.59021 -0.87620; H -3.60298 -3.66116 -2.42118; 1 molecule converted; ```. Well, what is the matter with this one, why the complaint? So I run. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -O test.png; 1 molecule converted; ```. ![test](https://user-images.githubusercontent.com/19709084/203514067-0eeff874-3f1b-4165-826a-84fc6feb241e.png). So I copy-paste the SMILES string to [cdkdepict](https://www.simolecule.com/cdkdepict/depict.html) for a visualization, but what should be unusual there?. ![cdkdepict](https://user-images.githubusercontent.com/19709084/203514980-b8bdfea7-48a1-4975-ac4c-1131db62a52b.png). Though the structure representations are not implausible, I process `ZINC001094026363.sdf` [from here](https://zinc15.docking.org/substances/ZINC001094026363/) (download button) (a 2D RDKit file) on on Jmol's console:. ```; $ load ""ZINC001094026363.sdf"";; $ calculate hydrogens;; $ minimize;; $ minimize;; $ write ""converged.sdf"";; ```; Apparently, `converged.sdf` still is problematic. ```shell; $ obabel converged.sdf -O converged.smi; 1 molecule converted; $ obabel convergerd.smi -h --gen3d -O convergerd3d.sdf; $ obabel converged.smi --gen3d -O converged3d.sdf; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (/home/USER/Desktop/ZINC001094026363.sdf); with Atom Ids as follows: 13; Warning: Stereochemistry is wrong, using the distance geometry method instead; ...; ```. So, it likely is time to get in touch with the database's curators about this very entry.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957:2966,load,load,2966,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1324843957,1,['load'],['load']
Performance,"27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> from openbabel import openbabel as ob; > Traceback (most recent call last):; > File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; > return importlib.import_module(mname); > File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; > return _bootstrap._gcd_import(name[level:], package, level); > File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; > File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; > File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; > ModuleNotFoundError: No module named 'openbabel._openbabel'; >; > During handling of the above exception, another exception occurred:; >; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; > from . import openbabel; > File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; > _openbabel = swig_import_helper(); > File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; > return importlib.import_module('_openbabel'); > File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; > return _bootstrap._gcd_import(name[level:], package, level); > ImportError: DLL load failed: Impossibile trovare il modulo specificato.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2122?email_source=notifications&email_token=AAALCGMWINFRNNXNNEUCKYTRAQYUJA5CNFSM4KOH5L7KYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IKE5UAA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLQFRO2FG4KQ4LJGYDRAQYUJANCNFSM4KOH5L7A>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2122#issuecomment-580760948:2573,load,load,2573,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122#issuecomment-580760948,1,['load'],['load']
Performance,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2245:3401,multi-thread,multi-threading,3401,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245,1,['multi-thread'],['multi-threading']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:6597,cache,cache,6597,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:6614,cache,cache,6614,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:4735,cache,cache,4735,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:5666,cache,cache,5666,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:7528,cache,cache,7528,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:8459,cache,cache,8459,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:4752,cache,cache,4752,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 3; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 6; initial apicid : 6; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.71; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 4; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 1; initial apicid : 1; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:5683,cache,cache,5683,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 5; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 3; initial apicid : 3; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:7545,cache,cache,7545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 6; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 5; initial apicid : 5; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:8476,cache,cache,8476,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. ---. And here's my /proc/meminfo:. ---. MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS_Unst",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:9390,cache,cache,9390,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; </pre>. And here's my /proc/meminfo:. <pre>; MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:9407,cache,cache,9407,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:3804,cache,cache,3804,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,"36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.72; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 2; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 2; cpu cores : 4; apicid : 4; initial apicid : 4; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:3821,cache,cache,3821,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"5f47 in std::tr1::_Sp_counted_base_impl<OpenBabel::OBMol*, std::tr1::_Sp_deleter<OpenBabel::OBMol>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x6b5980) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:257; No locals.; #3 0x00007ffff624c02c in std::tr1::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x6b5980); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:141; No locals.; #4 0x00007ffff6229d69 in std::tr1::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7724d8, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:341; No locals.; #5 0x00007ffff621cf44 in std::tr1::__shared_ptr<OpenBabel::OBMol, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7724d0, ; __in_chrg=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:541; No locals.; #6 0x00007ffff621cf5e in std::tr1::shared_ptr<OpenBabel::OBMol>::~shared_ptr (this=0x7724d0, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:985; No locals.; #7 0x00007ffff611d8ff in _wrap_delete_OBMol (args=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:29614; argp1 = 0x7724d0; swig_obj = {<SwigPyObject at remote 0x7ffff6b8ade0>}; resultobj = 0x0; arg1 = 0x81ec40; res1 = 0; tempshared1 = std::tr1::shared_ptr (empty) 0x0; smartarg1 = 0x7724d0; #8 0x00007ffff606b194 in SwigPyObject_dealloc (v=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:1704; meth = 0x7ffff611d7ca <_wrap_delete_OBMol(PyObject*, PyObject*)>; mself = <module at remote 0x7ffff6759f38>; res = <type at remote 0x7ffff7d76220>; ty = 0x7ffff66613a0 <_swigt__p_std__tr1__shared_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:1988,optimiz,optimized,1988,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['optimiz'],['optimized']
Performance,"7ConvertEPSiPSo+0xa9)[0x7ffff76ff5f9]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS7_SA_+0x1f71)[0x7ffff7701671]; /usr/bin/babel(main+0xacb)[0x402d9b]; /usr/lib64/libc.so.6(__libc_start_main+0xf1)[0x7ffff7a37731]; /usr/bin/babel(_start+0x29)[0x403429]. ```. In GDB:. ```; (gdb) backtrace; #0 0x00007ffff7a4b6f5 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54; #1 0x00007ffff7a4d2fa in __GI_abort () at abort.c:89; #2 0x00007ffff7a8c670 in __libc_message (do_abort=do_abort@entry=2, fmt=fmt@entry=0x7ffff7ba3060 ""*** Error in `%s': %s: 0x%s ***\n"") at ../sysdeps/posix/libc_fatal.c:175; #3 0x00007ffff7a94e0a in malloc_printerr (ar_ptr=<optimized out>, ptr=<optimized out>, str=0x7ffff7ba09a3 ""free(): invalid pointer"", action=3) at malloc.c:5004; #4 _int_free (av=<optimized out>, p=<optimized out>, have_lock=<optimized out>) at malloc.c:3865; #5 0x00007ffff7a9836c in __GI___libc_free (mem=<optimized out>) at malloc.c:2966; #6 0x00007fffe0f5ae5f in OpenBabel::NWChemOutputFormat::ReadCoordinates (this=this@entry=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, ifs=ifs@entry=0x63b450, molecule=molecule@entry=0x6dca40); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:237; #7 0x00007fffe0f5c82a in OpenBabel::NWChemOutputFormat::ReadMolecule (this=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, pOb=<optimized out>, pConv=0x7fffffffd9c0); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:1001; #8 0x00007ffff7754ae4 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd9c0, pFormat=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>); at /home/madchem/openbabel-2.3.2/openbabel/src/obmolecformat.cpp:105; #9 0x00007ffff76f9a35 in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffd9c0) at /home/madchem/openbabel-2.3.2/openbabel/src/obconversion.cpp:545; #10 0x00007ffff76ff5f9 in OpenBabel::OBCo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/347:2053,optimiz,optimized,2053,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/347,1,['optimiz'],['optimized']
Performance,"8 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) () from /usr/lib/libstdc++.so.6; #1 0x00000000004052f8 in __gnu_cxx::new_allocator<std::string>::construct (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/ext/new_allocator.h:105; #2 std::vector<std::string, std::allocator<std::string> >::_M_insert_aux (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/bits/vector.tcc:330; #3 0x00007ffff1cf7232 in std::vector<std::string, std::allocator<std::string> >::push_back (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /usr/include/c++/4.4/bits/stl_vector.h:741; #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742; #5 0x00007ffff77dddc8 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=<value optimized out>, pFormat=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obmolecformat.cpp:105; #6 0x00007ffff77828d8 in OpenBabel::OBConversion::Convert (this=0x7fffffffe290) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:515; #7 0x00007ffff7782fbd in OpenBabel::OBConversion::Convert (this=0x7fffffffe290, is=0x7fffffffd500, os=0x606a60) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:448; #8 0x00007ffff7788f56 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:1410; #9 0x00000000004043cf in main (argc=<value optimized out>, argv=0x7fffffffe5a8) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/tools/babel.cpp:347. Line 742 of gaussformat.cpp is:. 742	 betaSymmetries.push_back(symmetries[i]);. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717:1300,optimiz,optimized,1300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717,7,['optimiz'],['optimized']
Performance,":23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/largest.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:23:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:24:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: warning: ‘template<class _Arg1, class _Arg2, class _Result> struct std::binary_function’ is deprecated [-Wdeprecated-declarations]; 41 | struct OBERROR CharPtrLess : public std::binary_function<const char*,const char*, bool>; | ^~~~~~~~~~~~~~~; In file included from /usr/include/c++/12/string:48,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/loader.cpp:19:; /usr/include/c++/12/bits/stl_function.h:131:12: note: declared here; 131 | struct binary_function; | ^~~~~~~~~~~~~~~; [ 22%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/neutralize.cpp.o; In file included from /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/op.h:25,; from /home/icamps/Temp/openbabel/openbabel-3.1.1/src/ops/neutralize.cpp:19:; /home/icamps/Temp/openbabel/openbabel-3.1.1/include/openbabel/plugin.h:41:42: ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800:56105,load,loader,56105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045768800,1,['load'],['loader']
Performance,"; ../../include\openbabel/reaction.h(56) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(59) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(59) : error C2228: left of '.size' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: '_reactants' : undeclared identifier; ../../include\openbabel/reaction.h(62) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(62) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2065: '_products' : undeclared identifier; ../../include\openbabel/reaction.h(65) : error C2228: left of '.push_back' must have class/struct/union; type is ''unknown-type''; ../../include\openbabel/reaction.h(65) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: '_ts' : undeclared identifier; ../../include\openbabel/reaction.h(68) : error C2065: 'sp' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: '_agent' : undeclared identifier; ../../include\openbabel/reaction.h(71) : error C2065: 'sp' : undeclared identifier; ..\..\src\formats\chemdrawcdx.cpp(755) : warning C4065: switch statement contains 'default' but no 'case' labels; ..\..\src\formats\chemdrawcdx.cpp(1087) : warning C4065: switch statement contains 'default' but no 'case' labels; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 61 error(s), 12 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/775:10994,cache,cacheformat,10994,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/775,1,['cache'],['cacheformat']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2133:1018,load,load,1018,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133,1,['load'],['load']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] This is a feature request; - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.0; Operating system and version: WIndows 8 Pro. ## Problem; <!-- Describe the intended output or what you expected to see. -->; Hi all,; I'm currently using pybel through Anaconda ; I'm trying to generate a PDB file from a strin using make3D. After 3D structure is generated, I save it as a PDB file, but when I load it in a viewer the aromatic ring is open.; `import pybel. mol=pybel.readstring(""smi"",""C1=CC=CC=C1"") #Benzene. mol.make3D(). mol.write(""pdb"",""benzene.pdb"",True). [This is the result](http://imgur.com/DK14v5W)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1621:1033,load,load,1033,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1621,1,['load'],['load']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR envir",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357:983,Load,LoadAllPlugins,983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357,1,['Load'],['LoadAllPlugins']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Buster. ## Expected Behavior; I would want to convert the output geometry given in the NWChem output into xyz format. ## Actual Behavior; The coordinates are not the ones from the final geometry optimization but from the first given geometry in the output file and the x and y coordinates only of the first atom given are both changed to exactly 0. ## Steps to Reproduce; This happens with all tested NWChem output files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290:956,optimiz,optimization,956,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290,1,['optimiz'],['optimization']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:992,Load,LoadAllPlugins,992,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['Load'],['LoadAllPlugins']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402:835,Load,LoadFragments,835,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402,2,['Load'],['LoadFragments']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 2.4.1 -- Jan 23 2018`; Operating system and version: `Linux-4.13.0-26-generic-x86_64-with-Ubuntu-16.04-xenial`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; #### `$ obabel -L cml`; ```; XML format. This implementation uses libxml2.; Write options for CML: -x[flags] (e.g. -x1ac); 1 output CML1 (rather than CML2); a output array format for atoms and bonds; h use hydrogenCount for all hydrogens; m output metadata; x omit XML and namespace declarations; N<prefix> add namespace prefix to elements; ```; #### `$ obabel -icml cyclohexane.cml -osmiles`; ```; C1CCCCC1; ```; ## Actual Behavior. #### `$ obabel -L cml `; ```; cml is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; #### `$ obabel -icml cyclohexane.cml -osmiles`; ```; obabel: cannot read input format!; Open Babel 2.4.1 -- Jan 23 2018 -- 20:20:02; Usage:; obabel [-i<input-type>] <infilename> [-o<output-type>] -O<outfilename> [Options]; Try -H option for more information.; ```; ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1764:1466,load,loaded,1466,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1764,2,['load'],"['loaded', 'loaders']"
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: windows 11 running ubuntu in WSL running Anaconda3. ## Expected Behavior; I am running the script prepareCovalent.py to prepare a ligand for covalent docking in AutoDock Vina. I have tried with my own files and the tutorial files provided. The script imports pybel.py, when it attempts to perform _formatstodict it crashes. Instead of the expected output of a .pdb file with the ligand properly oriented in 3D space for covalent docking I get an error message. ## Actual Behavior; This is the error message I get:. (vina) gorrie06@DMGLaptop:~/docking/covalent$ python ~/docking/covalent/adcovalent/prepareCovalent.py --ligand /3upo_test/ligand.mol2 --ligindices 1,2 --receptor /3upo_test/3upo_protein.pdb --residue B:SER222 --outputfile ligcov.pdb; Traceback (most recent call last):; File ""/home/gorrie06/docking/covalent/adcovalent/prepareCovalent.py"", line 36, in <module>; import pybel; File ""/home/gorrie06/anaconda3/envs/vina/lib/python2.7/site-packages/pybel.py"", line 89, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/home/gorrie06/anaconda3/envs/vina/lib/python2.7/site-packages/pybel.py"", line 68, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; ValueError: need more than 1 value to unpack. ## Steps to Reproduce; This file contains the prepareCovalent.py script and the tutorial files for covalent docking; [adCov",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2660:911,perform,perform,911,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2660,1,['perform'],['perform']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Current master branch on GitHub; Operating system and version: Windows 10. ## Actual Behavior; When using OBBuilder, there is an error message:. ```; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ```. ## The missing file; I generated the missing file, please add it to the data folder. Both python script for generating the index file and the index file itself are attached. [ring-fragments-index.txt](https://github.com/openbabel/openbabel/files/12207440/ring-fragments-index.txt); [gen_index_py.txt](https://github.com/openbabel/openbabel/files/12207442/gen_index_py.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2613:781,Load,LoadFragments,781,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613,1,['Load'],['LoadFragments']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; For it to not crash. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel` crashes if you give it an exported cjson file from Avogadro2 or running Extensions>Open Babel>Optimize Geometry. The message is the following:; ```obabel: /usr/include/rapidjson/document.h:1053: rapidjson::GenericValue<Encoding, Allocator>& rapidjson::GenericValue<Encoding, Allocator>::operator[](const rapidjson::GenericValue<Encoding, SourceAllocator>&) [with SourceAllocator = rapidjson::MemoryPoolAllocator<>; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]: Assertion `false' failed.; [1] 26929 IOT instruction /home/laura/avo/openchemistry-build/prefix/bin/obabel -icjson -ocjson --noh```. ## Steps to Reproduce; - build https://github.com/openchemistry/openchemistry; - open Avogadro2; - create something; - press Ctrl+Alt+O. alternatively; - build https://github.com/openchemistry/openchemistry; - open Avogadro2; - create something; - save it as a cjson file like the one I attached; - run `$PREFIX/bin/obabel -icjson -ocjson --minimize --noh --log --ff UFF < e.cjson`. [e.cjson.txt](https://github.com/o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2619:1053,Optimiz,Optimize,1053,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2619,1,['Optimiz'],['Optimize']
Performance,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->; Hello!; I am trying to perform some substructure searches on molecules using openbabel 3.1.1 and I am having trouble with a particular SMARTS string:. CH-acidic_strong: ; ```; [CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])]([$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$([NX3+](=O)[O-]);!$(*[S,O,N;H1,H2]);!$([*+0][S,O;X1-])])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$([NX3+](=O)[O-]);!$(*[S,O,N;H1,H2]);!$([*+0][S,O;X1-])]; ```. The 'SMARTS_InteLigand.txt' file states:; ```; CH-acidic: [$([CX4;!$([H0]);!$(C[!#6;!$([P,S]=O);!$(N(~O)~O)])][$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$([NX3+](=O)[O-]);!$(*[S,O,N;H1,H2]);!$([*+0][S,O;X1-])]),$([CX4;!$([H0])]1[CX3]=[CX3][CX3]=[CX3]1)]; *C-H alpha to carbony, nitro or similar, C is not double-bonded, only C, H, S,P=O and nitro substituents allowed. ; *pentadiene is included. acids, their salts, prim./sec. amides, and imides are excluded. ; *hits also CH-acidic_strong. CH-acidic_strong: [CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])]([$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$([NX3+](=O)[O-]);!$(*[S,O,N;H1,H2]);!$([*+0][S,O;X1-])])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$([NX3+](=O)[O-]);!$(*[S,O,N;H1,H2]);!$([*+0][S,O;X1-])]; *same as above (without pentadiene), but carbonyl or similar on two or three sides; ```; I know, they are very long SMARTS strings, but actually, my problem with it is positioned in the first part of it. ; For 'CH-acidic' it",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607:560,perform,perform,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607,1,['perform'],['perform']
Performance,"<s>If GCC is older than 5 or clang than 3.6, short circuit evaluation does not seem to be performed, namely compilation of the following fails:; ```cpp; #if defined(__has_cpp_attribute) && __has_cpp_attribute(deprecated) >= 201309L; ```. Are such old compilers still supported?</s>. The conditionals are updated in terms of portability.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2002#issuecomment-534408311:90,perform,performed,90,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2002#issuecomment-534408311,1,['perform'],['performed']
Performance,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:219,perform,perform,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635,1,['perform'],['perform']
Performance,"> @fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version insta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:876,cache,cache,876,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,2,['cache'],['cache']
Performance,"> Given that the MinGW build still fails further along, this cannot be tested to check whether it actually works. Sorry, I didn't understand this. The change; ```; - if(LoadLibrary( lib_name.c_str() )); + if(LoadLibrary( (PTCHAR) lib_name.c_str() )); ```; did work on my machine. > Can you try the following change and see whether the build completes for you too?; > ; > ```; > --- a/CMakeLists.txt; > +++ b/CMakeLists.txt; > @@ -88,7 +88,7 @@ if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY); > CACHE STRING ""Binary build output directory""); > endif(); > if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY); > - if(UNIX); > + if(UNIX OR MINGW); > set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_BINARY_DIR}/lib${LIB_SUFFIX}""; > CACHE STRING ""Library build output directory""); > else() # This is preferable on WIndows for example - bin = lib directory.; > ```. The new `cmake` with the change from `if(UNIX)` to `if(UNIX OR MINGW)`, keeping the original `dlhandler_unix.cpp`, does not prevent the subsequent compilation error to occur. It still tries to compile `dlhandler_unix.cpp` without success.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404:169,Load,LoadLibrary,169,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312241404,4,"['CACHE', 'Load']","['CACHE', 'LoadLibrary']"
Performance,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:349,load,load,349,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694,1,['load'],['load']
Performance,"> I don't know why there's a segfault - obviously that shouldn't happen. If you use these from the command-line do they work?. Seems to work okay from the command line (2.4.1) using the following command:. ```; obabel AF.pdb -O conformers.sdf --conformer --nconf 10 --children 5 --mutability 5 --convergence 10 --score minenergy --writeconformers; ```. This works using both the minenergy and energy scores. There might be something wrong with the way I've set up the search in the Python script. Curiously the segfault only happens _after_ the search. The scoring function seems to work fine during the search (for instance, OBMinimizingEnergyConformerScore takes longer than OBEnergyConformerScore). > Hey Travis. Just to note that there is no need to write to a file first. Just use `mol = pybel.readstring(""pdb"", AF).OBMol`.; > ; > With the code as presented, you need to check the return value of ReadFile. It may have failed for example, and still be an empty molecule. Unfortunately, not all functions behave themselves when given an empty molecule. Can you check this, and see if it's okay?. Hi Noel,. Thanks for the tip! I haven't spent much time with the Pybel module because I couldn't see an easy way to run a conformational search on a Pybel mol, and reading the molecules in from PDB is analogous to what I'm doing in my own code. I'm already performing a check with my systems of interest (verifying the number of atoms in the OBMol) - I just left it out in this example for clarity.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2066#issuecomment-547063996:1357,perform,performing,1357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2066#issuecomment-547063996,1,['perform'],['performing']
Performance,"> I speculate your setup attempts to fetch openbabel from pypi.org instead of the OS' package manager. If this is the case, check if the by bypass with openbabel-wheel equally works for you. This works out of the box e.g., within a virtual environment set up in Linux Debian 13/trixie when installing openbabel via ```shell pip install -r ./requirements.txt ``` Its current update was published in October 2023. Sorry, I'm a beginner in this field and I don't understand what you mean.Could you explain it in more detail?. ```bash; pip list; Package Version; --------------- --------; colorama 0.4.6; exceptiongroup 1.2.0; iniconfig 2.0.0; openbabel-wheel 3.1.1.19; packaging 23.2; pip 23.3.1; pluggy 1.3.0; pytest 7.4.3; setuptools 68.2.2; tomli 2.0.1; wheel 0.41.2; ```; i use openbabel-wheel with new try,and delete build cache, but the error was same,. this is my code. ```bash; cmake -DWITH_MAEPARSER=OFF -DWITH_COORDGEN=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_EXECUTABLE=/home/jf/Programs/anaconda3/envs/gnina/bin/python ..; ```; thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793:825,cache,cache,825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860474793,1,['cache'],['cache']
Performance,"> I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay).; > ; > If you can't see any alternative, is it okay if I take a look?. Sure it's OK - please feel free to look. I am an old user of Openbabel, but this is my first participation in the project. I already have code that solves the issue without copying (should I post another pull request for it, or how should it be handled to show it to you? It is very minimalistic change, two lines from master branch). After a match (it seems to work in the cases that I tested), I just check whether atom idx in match is not higher than count of atoms in the starting molecule. Only H atoms from SMARTS have higher idx, so I ignore them and it seems to work. I am however unsure it will work all the time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741:134,perform,performance,134,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561279741,1,['perform'],['performance']
Performance,"> IMHO, I think it's time to drop Python2:; > https://python3statement.org. I am in favor of making python3 the default (although concurrent builds of 2 and 3 is probably the most user friendly).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558816335:130,concurren,concurrent,130,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558816335,1,['concurren'],['concurrent']
Performance,"> Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). We've tried to use `const` where possible. Since the library is built up of lots of legacy code, there's only so much you can do... > What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. Yes, exactly. On my Mac, I currently have 125, comprising 120+MB of formats. IIRC, charges, forcefields, etc. are compiled together. There's been talk about ""load-on-demand"" but it just hasn't been implemented. > Ah, ok, so it is not purely a problem with `dl_open` then?. There's no leak with `dl_open`. As mentioned above, that's a valgrind thing. Valgrind can't easily deal with `dl_open`. I'd suggest trying LeakSanitizer instead. > `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Sure. Try `OBConversion::Read()` if you like, e.g.; https://github.com/openbabel/openbabel/blob/master/tools/obenergy.cpp. It may be easier if you have questions to post to the mailing lists.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876:521,load,loaded,521,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876,2,['load'],"['load-on-demand', 'loaded']"
Performance,"> The difference between the invocations is that you're doing more ""cleanup"" in the 2nd choice (by optimizing again UFF after the gen3d step). In addition, openbabel reports if the task was achieved, and informs you if the selected force field is not suitable for the task ahead. Compare the successful interaction with UFF. ``` shell; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff UFF -O test2.xyz; 1 molecule converted; ```. with one calling MMFF94, or MMFF94s. ``` shell; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff MMFF94 -O test2.xyz; Could not setup force field.; 0 molecules converted; $ obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff MMFF94s -O test2.xyz; Could not setup force field.; 0 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1508043626:99,optimiz,optimizing,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1508043626,1,['optimiz'],['optimizing']
Performance,"@DreamMemory001 No, I can't say much about the distance geometry method OpenBabel uses. For what I want, its results fit my needs though there are other programs around (maybe [RDKit](http://rdkit.org/) is one alternative, but it depends on your project and setup). To illustrate further the suggested approach on a one-molecule batch, on occasion, instead of a SMILES to 3d mol conversion with an intermediate 2d structure *like*. ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol -h --gen3d -omol; ```. I run . ```sh; obabel -:""c1ccncc1"" --gen2d -omol | obabel -imol --minimize --noh -omol | obabel -imol -h --gen3d -omol; ```. instead. Then, the force field optimization processes the flat 2d structure in absence of hydrogen atoms; this became possible thanks to this [PR](https://github.com/openbabel/openbabel/pull/2184) by Geoffrey Hutchison. Eventually (last pipe), explicit hydrogens (-h) complete the 3D molecular structure (to contrast with implicit ones, flag -d).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905:667,optimiz,optimization,667,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1230582905,1,['optimiz'],['optimization']
Performance,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:217,perform,perform,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096,1,['perform'],['perform']
Performance,"@MJoseom Just changing the bond order (fourth column in the bond block. ```; @<TRIPOS>BOND; 1	1	2	2; 2	2	3	1; 3	3	4	1; 4	4	5	1; 5	5	6	1; ```; ) will not suffice to perform the saturation. It is, as indicated by you, a bit more complicated than the substitution of strings (e.g., by AWK) because a) some files describe the aromatic rings by alternating single and double bonds marked by `1` and `2` respectively, while b) `2` _possibly_ should be retained to describe e.g., C=O of esters and amides. Noteworthy, «just» rewrite the .mol2 as provided by you with . ```bash; obabel -imol2 test.txt -O rewrite_01.mol2; ```; yields a bond block where the amides explicitly marked _as such_ (by string `am`). On the other hand, passing the .xyz format lacking any information of bond order, OpenBabel assigns the bonds of the aromatic rings with an explicit `ar`, too:. ```bash; obabel -imol2 test.txt -oxyz | obabel -ixyz -O rewrite_02.mol2; ```; By change of the bond order e.g., of a former phenyl ring, both additional hydrogen atoms (and their coordinates) as well a new coordinates of the carbon atoms need to be updated (new bond lengths C-C). If one wouldn't need to reuse the coordinates of the atoms not affected by the saturation, the «saturation of the SMILES string» might be an alternative to handling `.mol2`. Because once I wrote such a script ([link](https://github.com/nbehrnd/datawarrior_saturate_Murcko_scaffolds), though currently constrained to at most one stereogenic center), may you indicate the program you use to perform the saturation?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071:164,perform,perform,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177513071,2,['perform'],['perform']
Performance,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:667,load,load,667,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['load'],['load']
Performance,"@RicardoMBorges Do you use ChemDraw to generate the initial `.cdxml`, .or. do you use an other program (e.g., Marvin, or JChem [for Excel]) to generate a `.cdxml` in first place? If so, which version?. If I copy-paste the .cdxml in ChemDraw's [JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) (*via* Structure -> Load CDXML), I obtain a drawing *which looks like* the structure was drawn & analyzed briefly. The JS page has no button to display the molcular sum formula, but the file obviously contains such:. ![CD_sample_page](https://user-images.githubusercontent.com/19709084/136968421-13609f9b-433f-4d2b-b9e3-97b27124cbd5.png). Subsequently, Stucture -> Get SMILES exports ```CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O```. which ; ```bash; obabel -:""CC(C)C(NC(C(C)(C)C(CCCC=C)OC(CNC1=O)=O)=O)C(OC(C(C)C)C(NC1C(C)CC)=O)=O"" -ocan -h -xh; ```; replies with . ```bash; [H]C(=C(C(C(C(C1([H])OC(=O)C([H])([H])N([H])C(=O)C([H])(N([H])C(=O)C(OC(=O)C(N(C(=O)C1(C([H])([H])[H])C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])([H])C(C([H])([H])[H])(C([H])([H])[H])[H])C(C(C([H])([H])[H])([H])[H])(C([H])([H])[H])[H])([H])[H])([H])[H])([H])[H])[H])[H]; ```. However, the conversion of your `.cdxml` into e.g., a `.png` by OpenBabel *suggests* that something at the level generating the former went wrong. The dots next to implicit carbon atoms normally are seen if the valences are not filled:. ![testat](https://user-images.githubusercontent.com/19709084/136969234-68c68243-8a3e-4b19-a85b-dbe4ce56549e.png). For me, a plausible reason why the (re)addition of hydrogens fails. PS: A convenient «trick» to exchange files like `.cdxml` in the issue report is to embed them into a `.zip` archive.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394:344,Load,Load,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941037394,1,['Load'],['Load']
Performance,"@RicardoMBorges In similar tune like @fredrikw , capitalization (or absence of such) may *implicitly* carry the number of of hydrogens present. E.g., `C1CCCCC1` to represent cyclohexane, `c1ccccc1` to represent benzene (lower case c, n, o, s represent aromatic systems). You may add the reasoning why you need explicit hydrogens in the SMILES string, or/and an example file where you think it would be useful. Because a benzene .cdxml generated from ChemDraw's [test page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) isn't necessarily rewritten by . ```bash; obabel -icdxml benzene.cdxml -osmi; ```; into `c1ccccc1` (example file attached in the .zip archive). [benzene.cdxml.zip](https://github.com/openbabel/openbabel/files/7328283/benzene.cdxml.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699:27,tune,tune,27,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-940789699,1,['tune'],['tune']
Performance,"@WardLT - not sure how you're planning on doing conformer optimization, but send me an e-mail. We've been working on an efficient Bayesian toolkit - and yes, it uses OBMol.SetTorsion().",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783407993:58,optimiz,optimization,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783407993,1,['optimiz'],['optimization']
Performance,"@baoilleach - please see example below. The only trick to let MOPAC calculate multiple molecules in a single file, is to separate multiple molecules by an empty line CR/LF. . @ghutchis - thank you, its great to read something like this, especially for people bit outside the field like me. MMFF94 is just so embedded in the minds, and DFT on 1000 molecules is still too far away, but PM7 runs literally in seconds, so really doable (besides all the conversion issues). For docking one could also use PM6-D3H4 which is a bit more accurate and maybe COSMO if needed. The general workflow I use is; 1) SMILES to 3D SDF (add H and generate MMFF94 low energy conformer); 2) 3D SDF to XYZ (XYZ needed for input in other tools or DFT calculations); 3) XYZ to MOPAC cartesian (need to add MOPAC keywords and single CR/LF separator); 4) MOPAC ARC/OUT to optimized SDF (needed for pipeline and additional handling). Now one can process 100k molecules in a single file and then parse the output like; IP, HOMO, LUMO, COSMO volume, pkA and other values. Best would be of course; to have all the calculated properties added as SDF fields but that is another story.; (One could use the https://cactus.nci.nih.gov/SDF_toolkit/ to add or remove properties). **Example MOPAC input file with three molecules:** ; ````; PM7 OPT XYZ; Methane. C 1.05860 1 -0.08080 1 -0.00520 1; H 2.15080 1 -0.08080 1 -0.00520 1; H 0.69460 1 -1.10850 1 -0.07110 1; H 0.69460 1 0.49010 1 -0.86220 1; H 0.69460 1 0.37590 1 0.91770 1. PM7 OPT XYZ; Formaldehyde. C 1.10270 1 -0.08080 1 -0.00520 1; O 2.32730 1 -0.08080 1 -0.00520 1; H 0.51500 1 -1.01080 1 -0.06480 1; H 0.51500 1 0.84910 1 0.05450 1. PM7 OPT XYZ; Water. O 1.04450 1 -0.06090 1 -0.00390 1; H 2.01240 1 -0.10720 1 -0.00690 1; H 0.76570 1 -0.98700 1 -0.06330 1; ````. The MOPAC output is a *.arc (small) and *.out (large) MOPAC output file.; When using the OpenBabel GUI only the last molecule in the *.out is converted; Attached are the example files from SMI to SDF to XYZ to ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1789#issuecomment-371225929:845,optimiz,optimized,845,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1789#issuecomment-371225929,1,['optimiz'],['optimized']
Performance,"@baoilleach, thanks for the explanation. Inserting `del inchi.data['inchi']` returns something more reasonable. I think this is not actually an issue, as long as the user is aware that they are responsible for deleting the cache (which is not the case currently). So maybe raising a warning when the user modifies a molecule with a cached InChI would be enough?. > On a separate note, can I ask why you are reading an InChI?. I maintain some wrappers for the workflow management system Galaxy which are based on OpenBabel functionality, including a 'remove counterions' tool (deployed here: https://cheminformatics.usegalaxy.eu/?tool_id=openbabel_remIons) and we received a user bug report about this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288#issuecomment-711917444:223,cache,cache,223,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288#issuecomment-711917444,2,['cache'],"['cache', 'cached']"
Performance,@e-kwsm - this seems to be an intermittent error - likely due to floating point optimization.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2229#issuecomment-629653769:80,optimiz,optimization,80,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2229#issuecomment-629653769,1,['optimiz'],['optimization']
Performance,"@fredrikw About this issue, I'm having another problem due to the unusual version (3.1.1.1).; I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package.; IMHO, bumping the version to `3.1.2` would be a good idea. Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:. ```bash; WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905:858,cache,cache,858,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1286079905,5,['cache'],"['cache', 'cache-dir', 'cached']"
Performance,"@fredrikw For quite some time, I couldn't translate the conceptual hints and tips the links in the documents you refer to into filters/scripts to work with reliably. With better insight than I currently posses, I speculate there is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:889,perform,performs,889,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['perform'],['performs']
Performance,"@ghutchis , as promised, I am attaching two RPM spec files. `openbabel.spec` is the one I am using to build my RPMs, whereas `openbabel-ci.spec` is a modified version intended for use in a CI role. The most significant difference between the two is that the latter does not designate any patches (which I haven't provided anyway), since I imagine that it would be used to test the actual contents of the repository at various points. There is more that could be done to tune and trim the -ci spec for the role I imagine for it, but I think it would be better to base further changes on what you *actually* need instead of on what I guess you might need. [openbabel.spec.txt](https://github.com/openbabel/openbabel/files/4650857/openbabel.spec.txt); [openbabel-ci.spec.txt](https://github.com/openbabel/openbabel/files/4650858/openbabel-ci.spec.txt). ("".txt"" was appended to the file names to persuade GitHub to accept them.). If you would prefer to receive one or both of these in the form of a PR, then I would be happy to oblige -- just give me the details of what you want, where.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110:470,tune,tune,470,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-630838110,1,['tune'],['tune']
Performance,"@husakm A bypass perhaps *good enough* in terms of maintenance and overall performance could consist of generating an intermediate .sdf by xyz2mol eventually processed by obabel to yield the Materials Studio file you seek. Meanwhile, someone with the necessary insight then could extend obabel's source code to provide the extended functionality you request. Addressing RDKit with Python, a MWE can be. ```python; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. raw_mol = Chem.MolFromXYZFile('KAXWOV_cation_xyz.xyz'); mol = Chem.Mol(raw_mol); rdDetermineBonds.DetermineBonds(mol,charge=-1); print(Chem.MolToMolBlock(mol)); ```. For some flexibility regarding the .xyz file to process and the (global) charge to assign, I wrote a small script around this ([xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b/blob/main/xyz2mol_b.py)) -- as just tested in a virtual environment (Python 3.11.8, RDKit 2023.09.6 fetched with pip) still functional today. Thus. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c 1 > cation.sdf; $ obabel cation.sdf -O cation.bgf; 1 molecule converted; $ cat cation.bgf ; BIOGRF 200; DESCRP ; FORCEFIELD DREIDING ; FORMAT ATOM (a6,1x,i5,1x,a5,1x,a3,1x,a1,1x,a5,3f10.5,1x,a5,i3,i2,1x,f8.5); HETATM 1 N1 RES A 444 -2.09800 4.11920 11.28120 N_R 2 0 -0.21693; HETATM 2 C2 RES A 444 -2.23690 5.32490 10.71550 C_R 3 0 0.17487; HETATM 3 C3 RES A 444 -2.80460 6.36740 11.41490 C_R 3 0 0.04130; HETATM 4 C4 RES A 444 -2.97580 7.71300 10.76640 C_3 4 0 0.07478; HETATM 5 O5 RES A 444 -2.56850 7.64730 9.44780 O_3 2 0 -0.39022; HETATM 6 C6 RES A 444 -3.22420 6.11110 12.71340 C_R 3 0 -0.04518; HETATM 7 C7 RES A 444 -3.07610 4.86090 13.27370 C_R 3 0 0.00239; HETATM 8 C8 RES A 444 -2.50840 3.86280 12.52490 C_R 3 0 0.16949; HETATM 9 H9 RES A 444 -1.69690 3.45390 10.69820 H_ 1 0 0.45224; HETATM 10 H10 RES A 444 -2.69970 8.47580 9.02660 H_HB 1 0 0.20985; HETATM 11 H11 RES A 444 -1.89590 5.48170 9.70190 H_ 1 0 0.13792; HETATM 12 H12 RES A 444 -4.01710 7.99900 10.8",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580:75,perform,performance,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2090608580,1,['perform'],['performance']
Performance,"@jennijones Perspective chemistry: what is the origin of the SMILES string? Because if read e.g., by [Marvin](https://marvinjs-demo.chemaxon.com/latest/demo.html), the hydrogen of carbon highlighted . ![marvin](https://github.com/openbabel/openbabel/assets/19709084/ef32b63c-5de3-46d6-9135-eaaa6a296ee1). and the short bridge across boron, alkyl chain, nitrogen are not very comfortable in first place. This appears to be very strained motif and in terms of energy, unusual expensive. Perspective Python script: I were more comfortable if the force field to be used appears as parameter of the geometry optimization, on the same line, e.g. ```; mol.make3D(forcefield=""uff"", steps=1000); ```. The underlying logic of your script seems to attempt an optimization with UFF if this available. To me, this were better embedded in a try/except clause, i.e. a pattern in line of. ```python; try:; mol.make3D(forcefield=""uff"", steps=1000); except Exception:; print(""launch of optimization failed""); ```. Possibly there is a better exception condition than the very general `Exception` itself (pylint will indicate it as a point to work on). But at least the script will continue to work across this point, e.g. during an iteration over a list of SMILES even if the launch of the optimization in this step failed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975:603,optimiz,optimization,603,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2687#issuecomment-2044508975,4,['optimiz'],['optimization']
Performance,"@johnmay unfortunately I do not know how SMARTS matching is implemented - need this to discuss efficiency vs SMILES matching. It is a deeper layer of OpenBabel that makes this job. I guess that some extra work is needed in your approach to cope with stereochemistry and isotopes. Here I wrote a test for alias feature, and also removed copy construction of OBMol in AliasData::AddAliases, just checking if atom exists. Appreciate team members to take a look when you have time. @baoilleach BTW just figured out that. > bool OBSmartsPattern::Match(OBMol &mol,bool single). makes a copy of OBMol to add hydrogens. This function is called for each and every SMARTS in the alias table from superatom.txt. So probably performance was not that badly hit by my original commit. If we add hydrogens once and mark molecule as hydrogenated, it might in fact have improved performance of aliasing by a factor of N where N is number of SMARTS ;)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028:713,perform,performance,713,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561696028,2,['perform'],['performance']
Performance,"@kalinni In an instance of Linux Debian 13/trixie with openbabel 3.1.1., I run the addition of hydrogens by. ```shell; $ obabel 3lcs.pdb -h -O obabel_with_hydrogens.pdb; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Based on this, perhaps some ligands, or chains are a bit deformed to ""fit"" into Open Babel's patterns to recognize them well. This deformation could be by mere distance, or/and geometry. I then run grep, but didn't find any `UNL`, nor `UNK`. ```shell; $ grep UNL ./obabel_with_hydrogens.pdb -c; 0; $ grep UNK ./obabel_with_hydrogens.pdb -c; 0; ```. An alternative approach could be to use [Jmol](http://wiki.jmol.org/index.php/Main_Page), to load the initial .pdb, and (File -> Console) to enter the following commands there (confirmed by enter):. ```; calculate hydrogens;; write ""Jmol_with_hydrogens.pdb"";; ```. for a new .pdb file. This equally didn't have a `UNK` or `UNL`. ```shell; $ grep UNK Jmol_with_hydrogens.pdb -c; 0; $ grep UNL Jmol_with_hydrogens.pdb -c; 0; ```. but a different processing program might provide a .pdb different enough to continue the work. (Contrasting to the input, lattice parameters are missing, though.). [Jmol_with_hydrogens.pdb.txt](https://github.com/openbabel/openbabel/files/14438094/Jmol_with_hydrogens.pdb.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1969501287:801,load,load,801,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1969501287,1,['load'],['load']
Performance,"@lpravda This is still the case in `3.1.1.1`. In my case, both PDB and mmcif file formats report 1170 atoms (so far so good) but after calling `addh()`, the molecule loaded from the PDB reports 2457 atoms while the molecule loaded from mmcif reports (still) 1170 atoms.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1872#issuecomment-688886366:166,load,loaded,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1872#issuecomment-688886366,2,['load'],['loaded']
Performance,"@mainguyenanhvu There is too little information shared by you, i.e. what is; the input structure you provide to OpenBabel to replicate your observation?; Is the warning ""can not correct stereochemistry"" equally issued while; converting your input SMILES into a canonical one (`-ocan`)? Did you stay; with the default force field (MMFF94), or tried an other one implemented? Are; all atoms of your input structures covered by the force field? Did you you; test `--gen3d` with optional `--fast` or `--fastest` (computationally more; affordable, because it leaves out some of the default optimization which could; be still reasonable in your workflow)?. The identification of a reasonable conformer from scratch can already be; demanding for small non-protein molecules (just because today's Nobel prizes; for chemistry). If there only is one particular structure / only a few, a; bypass can be the generation of a flat 2D sdf. ```; obabel -:""c1ccncc1"" --gen2d -h -O 2dstructure.sdf; ```. with OpenBabel which then is read -- explicitly as a 2D structure -- e.g. by; Jmol for a minimization to 3D from the program's console. ```; load ""2dstructure.sdf"" filter ""2D"";; ```. Or right away from a SMILES string itself, e.g. ```; load ""$c1ccncc1"" filter ""2D""; ```. (A call by `java -jar Jmol.jar -h` shows that Jmol can be launched from the; CLI, process data without a GUI, act according to a script to digest batches; of models, too.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223:585,optimiz,optimization,585,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280#issuecomment-2402271223,3,"['load', 'optimiz']","['load', 'optimization']"
Performance,"@nilanjana1996 By ""distorted"", do you refer to assigned stereochemistry? This is based, downloading your files and processing with openbabel 3.1.1 as packaged for Linux Debian 13/trixie, on two warnings issued:. ```bash; $ for file in emem*.pdbqt; > do; > echo ""work on $file""; > obabel ""$file"" -O ""$file"".sdf; > done; work on emem10.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem11.pdbqt; ==============================; *** Open Babel Error in TetStereoToWedgeHash; Failed to set stereochemistry as unable to find an available bond; 1 molecule converted; work on emem1.pdbqt; 1 molecule converted; work on emem2.pdbqt; 1 molecule converted; work on emem3.pdbqt; 1 molecule converted; work on emem4.pdbqt; 1 molecule converted; work on emem5.pdbqt; 1 molecule converted; work on emem6.pdbqt; 1 molecule converted; work on emem7.pdbqt; 1 molecule converted; work on emem8.pdbqt; 1 molecule converted; work on emem9.pdbqt; 1 molecule converted; ```. Else, does ""distorted"" refer to altered atomic positions/coordinates while comparing the .sdf (of the force field optimized conformer geometry) and the .pdbqt of one and the same structure? There may be some small changes, e.g. by the number of decimals to express the atomic coordinates. On the other hand, if the .pdbqt is used as a starting geometry in the docking experiment, are these differences significant? If so, can you indicate which atom(s) in which file(s) are most representative for the change you observe?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938:1203,optimiz,optimized,1203,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309707938,1,['optimiz'],['optimized']
Performance,"@nilanjana1996 The thought passed my mind to superimpose two data files about one structure in Jmol. In its own input (file -> console), I entered. ```; load files ""emem1.pdbqt"" ""em1.sdf""; select 1.1; color lightgreen; model 0; ```. Differences in atomic positions appear to be small:. ![superposition](https://github.com/user-attachments/assets/a2f1bd71-77fc-42c6-abf0-39006d22600e). ----. With `select 1.1`, the first model of the first input file is selected to eventual alter its coloring (`color cpk` would revert it to the original scheme). Subsequent `model 0` displays both models simultaneously; since there are two models in the working memory, one can toggle to one or the other by `model 1` and `model 2`, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203:153,load,load,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2309752203,1,['load'],['load']
Performance,"A bug was reported for scipy at http://projects.scipy.org/numpy/ticket/1148. """"""Openbabel Python bindings call; sys.setdlopenflags(sys.getdlopenflags() | dl.RTLD_GLOBAL). Obviously, this *will* causes problems down the stream, as symbols of subsequently loaded libraries are no longer isolated... You can also reproduce the crash without Openbabel,; python -c 'import sys, dl; sys.setdlopenflags(sys.getdlopenflags() | dl.RTLD_GLOBAL); import foo'. This behavior of Openbabel's is highly suspect IMHO. If it needs to enable this flag, it probably ought to also restore its value after loading whatever needs loading. """""". Maybe it's possible to set this flag back to the default after loading various plugins??. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/917:254,load,loaded,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/917,4,['load'],"['loaded', 'loading']"
Performance,"ARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/forma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7400,load,load,7400,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['load'],['load']
Performance,"Aaaaah my bad! It's indeed a macro, not a function... > Put all string **literals** in _T() macros. so not variables ^^'. The definition I have is similar to yours:; ```; #define __TEXT(q) L##q; #else; #define __TEXT(q) q; #endif; \\ comment; #define TEXT(q) __TEXT(q); ```. Indeed, in that same article,they say:. > `TCHAR` is #defined as either a `char` or a `wchar_t` depending on whether or not the `UNICODE` macro was defined. And, as you suggest, writing; ```; if(LoadLibrary( (PTCHAR) lib_name.c_str() )); return true;; ```; worked fine for me. However, now I have a doubt when they say:. > Never ever ever C style cast C strings from one type to another. C style casts mask very important compiler errors. Avoid C++ style casts also. Basically if you're getting type errors with your strings -- it's because you're doing something wrong. Don't try to cast around the problem. So this might not be exactly what we want... On the other hand, there is something I do not get... This `openLib()` method is implemented in the same way in both `dlhandler_win32.cpp` and `dlhandler_unix.cpp` when compiled with MinGW (in the latter, it is surrounded by `#ifdef __MINGW32__` ... `#else`). The compile error came only from `dlhandler_unix.cpp`. Is it because of some different `#include`s?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089:470,Load,LoadLibrary,470,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089,1,['Load'],['LoadLibrary']
Performance,"About 002RPD.log from andersbiceps, this one does not have the ""nosym"" keyword and includes a ""standard orientation"" block. However, it does not include the second one the code is looking for, maybe because it is a single-point calculation?. As noted in #3495545, this will trash the ifs object and the subsequent rewind (ifs.seekg(0)) will have no effect, resulting in an empty outgoing molecule. I suggest fixing that by checking for the line ""Normal termination of Gaussian"" which is usually the last line and breaking out of the while loop then (so the rewind can still take effect). About the cclib test case - this one seems to crash while pushing back orbital data, I get the segfault here:. #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742. 742	 betaSymmetries.push_back(symmetries[i]);. Noel, can you confirm that? It looks like a different bug to me. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259:761,optimiz,optimized,761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802259,3,['optimiz'],['optimized']
Performance,"Actually - maybe there's one or two more options that could be cached. Could you leave this here for the moment, and I might push another commit later this week...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349904317:63,cache,cached,63,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349904317,1,['cache'],['cached']
Performance,"Actually, it probably makes more sense to merge this, and do the optimization separately.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374846662:65,optimiz,optimization,65,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374846662,1,['optimiz'],['optimization']
Performance,"Aha. The latest revision should use the win32 loader, rather than dlhandler_unix.cpp. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795365:46,load,loader,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795365,1,['load'],['loader']
Performance,"All three geometries appear to differ slightly by comparison by a; Kabsch test, e.g. calculate_rmsd.py by Jimmy Charnley Kromann et; al.[1] Possible causes for only differences spot may be. + picking the wrong entry from the .nwo file (with multiple entries «geometry»); + indeed an unsuccessful optimization of the geometry submitted; + rounding errors within the implementation of the Kabsch test, or; + that the difference in geometry (especially as there are not this; many reference atoms in methane) by an optimization successfully; run is just little. However, C appears to move a little if; comparing in a diffview. On the other hand, the submission of NWChem's early test case of; nitrogen[2] which departs from; ```; title ""Nitrogen cc-pvdz SCF geometry optimization"" ; geometry ; n 0 0 0 ; n 0 0 1.08 ; end ; basis ; n library cc-pvdz ; end ; task scf optimize. ```; may be processed as mentioned earlier, i.e. after saving the above in; file `n2.nw` with; ```; nwchem n2.nw > n2.nwo; obabel -inwo n2.nwo -oxyz -O n2_out.xyz; ```; While this computation did not alter the interatomic distance (if; compared to the input), there is the move of the barycentre of the; molecule to (0,0,0) in the .xyz eventually written by OpenBabel:; ```; 2; n2.nwo; N 0.00000 0.00000 -0.54000; N 0.00000 0.00000 0.54000. ```; This observation contrasts with the hypothesis of an eventual report; of the input structure. (This is independent from the avenue to copy; and yank the tables from the .nwo into an .xyz file.). [1] https://github.com/charnley/rmsd; [2]; https://nwchemgit.github.io/Getting-Started.html#simple-input-file-scf-geometry-optimization",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599:296,optimiz,optimization,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599,5,['optimiz'],"['optimization', 'optimize']"
Performance,Also the problem with `RTLD_GLOBAL` is that it messes up some other Python libraries which do not anticipate `RTLD_GLOBAL`. Prime example is L-BFGS-B from scipy which segfaults when loaded after OB.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277709962:182,load,loaded,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277709962,1,['load'],['loaded']
Performance,"Another piece of the puzzle: As zou may already have noticed, the original files I reported the problem for are 'special', i.e. the compounds contained therein are actually different structures for the same sum formula. Now, just out of curiosity, I re-ran the test with two completely unrelated compounds (vanilin and morphine). And what can I say? The programs perform as they should, i.e. the results do not differ if the calculations are performed on the individual MOL files or an SD file containing both compounds. Maybe this hints you in the correct direction. Original comment by: timoreiss",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643:363,perform,perform,363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/923#issuecomment-281795643,2,['perform'],"['perform', 'performed']"
Performance,"Are you saying that you can build the entirety of Open Babel, and for example, run the test (via ""make tests"") after the LoadLibrary change? I also had to do the second step.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261:121,Load,LoadLibrary,121,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-312257261,1,['Load'],['LoadLibrary']
Performance,"As a comment, because it does not aim to solve the issue for Open Babel:. File `example_bad.cif` contains a syntax error because of the missing closing `'`. Note, from the perspective of the syntax of a `.cif` file, there is no need to enclose each of the symmetry equivalent positions by a `'`. However, if you choose to use an opening `'`, you need a closing `'`, too. You may submit any `.cif` to an checker like [checkcif](https://checkcif.iucr.org/) -- doing so for this file (here you need to choose option `Validation of CIF only (no structure factors)`) will both identify the problem as well as its location (line 36). Side notes:; - The _original_ `.cif` from the COD ([card #1011063](http://crystallography.net/cod/1011063.html)) does not use the single quotation marks and a conversion with obabel (3.1.0) works just fine. The same for its sibling entry, [COD 1011024](http://crystallography.net/cod/1011024.html) about ice III.; - One of the references of the `.cif` syntax is IUCr's dedicated [web site](https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax).; - Assuming `example_bad.cif` is the result of an (automated ?) edit of a `.cif` from a database like the [COD](http://crystallography.net/cod/index.php): the checkcif service relies in large part on [Platon](https://www.platonsoft.nl/platon/) and its [validation routines](https://www.platonsoft.nl/platon/pl000601.html). It is possible to install Platon locally, and subsequently perform the checks on a batch of `.cif` files, too.; - Consider updates. If you like to continue with Ubuntu LTS, either change from the old point release of Ubuntu 18.04.1 (Jul 2018) to the current 18.04.4 (Feb 2020), or mark [August 6th](https://wiki.ubuntu.com/FocalFossa/ReleaseSchedule) for an install of the next LTS with the point release 2020.1. The later would at least substitute Open Babel 2.3.2 (first released 2012) by release 3.0 (fall 2019).; Or, compile Open Babel from the sources.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804:1463,perform,perform,1463,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804,1,['perform'],['perform']
Performance,"As a feature of Avogadro we have added the plugin allowing for Ghemical style forcefield optimizations. The problem is that if you take one molecule and run multiple optimizations there is some sort of memory leak (at least as far as i can tell from debugging). The problem is a result of bad Angle generic data in the molecule. (Possibly getting copied wrong during the OBMol::operator= function?) The reason i suspect it's a memory leak is that during the second run i get random data from the Angle generic data. When you do a FOR_ANGLES_OF_MOL(x,y), (*x) is getting random integers on the second run. (I put in some debugging code but it's super ugly so i'm not going to attach it.). The segfault itself occurs in OBForceFieldGhemical::SetupCalculations line 546. I have been able to fix the problem by regenerating this data in the OBMol::FindAngles function at line 372 in mol.cpp. it's not an acceptable fix but it should help to point this out:. void OBMol::FindAngles(); {; //if already has data return; if(HasData(OBGenericDataType::AngleData)); DeleteData(OBGenericDataType::AngleData);; //return;. //get new data and attach it to molecule; OBAngleData *angles = new OBAngleData;; SetData(angles);; ; ...; } . Note that the ""DeleteData ..."" line is originally a //return;. I am attaching the forcefieldghemical.cpp unit test that can replicate this segfault. Reported by: @milkypostman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612:89,optimiz,optimizations,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612,2,['optimiz'],['optimizations']
Performance,"As a general note: With version 2.3.2, you are using a very old version of OpenBabel. Consider to transition the current branch 3.1.1 (e.g., [online](https://open-babel.readthedocs.io/en/latest/index.html), or [the latest version as pdf](https://readthedocs.org/projects/open-babel/downloads/pdf/latest/) (currently March 26, 2021)). Either. * compile OpenBabel from the public sources ([here](https://github.com/openbabel/openbabel/tags)); * consider an version upgrade (not only an update) of your operating system which offers a more recent OpenBabel package, or; * an installation of an other Linux side-by-side with newer OpenBabel in its repositories (e.g., [Debian](https://tracker.debian.org/pkg/openbabel), or [Ubuntu](https://packages.ubuntu.com/search?keywords=openbabel&searchon=names&suite=all&section=all)). From a practical perspective, the; ```; babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; ```; should be revised, and not only for the more modern keyword `obabel` to initiate the instructions relayed to OpenBabel. `-m` *normally* is used to indicate that there *multiple* molecules (like models) within the input file which should be split into multiple individual output files (see the examples [here](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Running a docking experiment *in silico* alters the conformation of the molecule submitted as ligand. This kind of optimization (and valuable information) however will be overwritten by the later `--gen3d` which triggers an optimization by a force field as if the molecule were isolated *in absence* of the molecules it is supposed to bind to earlier.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181:1448,optimiz,optimization,1448,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-913618181,2,['optimiz'],['optimization']
Performance,"As described over at https://github.com/openbabel/enhancement-proposals/pull/4. Briefly, the old element handling code had some performance problems. I have written a faster replacement. It has the following additional benefits:; 1. No need for a global etab or isotab and associated initialization.; 2. The elements are now available as consts (e.g. OBElements::Carbon) to replace functions such as IsCarbon().; 3. No need for text/header files in data dir. Timing comparison: get the symbol for elements 1 to 100 and convert back to atomic number (repeat x10000). 0.82s old vs 0.02s new. A more realistic conversion is to just do carbon: 0.14s old vs 0.01s new. ```; void test_OBElements(); {; clock_t start = clock();; unsigned int tot = 0;; for (unsigned int N = 0; N < 10000; ++N) {; for (unsigned int i = 1; i < 100; ++i) {; const char *elem = OBElements::GetSymbol(6);; unsigned int atomic_num = OBElements::GetAtomicNum(elem);; tot += atomic_num;; }; }; clock_t stop = clock();; double sum = (double)(stop - start) / CLOCKS_PER_SEC;; printf(""%.2f s\n"", sum);; ; OBElementTable etab;; start = clock();; tot = 0;; for (unsigned int N = 0; N < 10000; ++N) {; for (unsigned int i = 1; i < 100; ++i) {; const char *elem = etab.GetSymbol(6);; unsigned int atomic_num = etab.GetAtomicNum(elem);; tot += atomic_num;; }; }; stop = clock();; sum = (double)(stop - start) / CLOCKS_PER_SEC;; printf(""%.2f s\n"", sum);; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1601:128,perform,performance,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1601,1,['perform'],['performance']
Performance,"As mentioned by @nbehrnd we use a set of ring fragments first. I'd guess that `c1cc2c(=O)[nH]cnc2cc1F` isn't in the list, so it uses some heuristics. Not quite sure on why it generates that particular geometry, but as a workaround, the ""best"" option gives a bit more MMFF94 optimization. The `dg` option is something of an implementation of RDKit's distance geometry methods.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885836602:274,optimiz,optimization,274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885836602,1,['optimiz'],['optimization']
Performance,"As was pointed out in issue number 153 on; https://github.com/openchemistry/avogadrolibs, there; are a few issues in the space groups. There were a few; illegal '#' symbols and potential problems with Hall numbers; 506 (international number 210) and 450 (international number; 160). Unfortunately, I couldn't fix 450, but I was able to; fix 506. A test was performed: after using the transforms; in Avogadro, spglib identified the space group correctly.; For some reason, this was not the case for number 450...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367:357,perform,performed,357,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367,1,['perform'],['performed']
Performance,"At present it is impossible to change the forcefield from MMFF94, so we cannot perform obconformer on some systems, e.g., borane. In this PR I simply add forcefield as the last argument—use it if passed, otherwise defaulted to MMFF94.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604:79,perform,perform,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604,1,['perform'],['perform']
Performance,"At the least, there should be an option to bundle the plugins into the main; .so, independently of a static build. On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:. On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > ; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; or mute the thread; https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311:944,load,loads,944,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311,1,['load'],['loads']
Performance,"Atom (this=0x0, i=@0x7fffe8695720); at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; 683 __normal_iterator(const _Iterator& __i) : _M_current(__i) { } ; Missing separate debuginfos, use: debuginfo-install ImageMagick.x86_64 bzip2.x86_64 e2fsprogs.x86_64 expat.x86_64 fontconfig.x86_64 freetype.x86_64 gcc.x86_64 glibc.x86_64 lcms.x86_64 libICE.x86_64 libSM.x86_64 libX11.x86_64 libXau.x86_64 libXdmcp.x86_64 libXext.x86_64 libXt.x86_64 libjpeg.x86_64 libtiff.x86_64 libxcb.x86_64 libxml2.x86_64 netpbm.x86_64 zlib.x86_64 ; (gdb) bt ; #0 OpenBabel::OBAtom::BeginNbrAtom (this=0x0, i=@0x7fffe8695720) ; at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; #1 0x00007fcbe00aa891 in OpenBabel::OBMol::GetBond ( ; this=<value optimized out>, bgn=0x0, end=0x1eaea30) ; at /work3/igor/openbabel-2-2-x/src/mol.cpp:865 ; #2 0x00007fcbda4ac4fd in OpenBabel::OBMol2Cansmi::GetCisTransBondSymbol ( ; this=0x7fffe86962a0, bond=0x1eb21d0, node=<value optimized out>) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:3235 ; #3 0x00007fcbda4b33a6 in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1eb36e0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4188 ; #4 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85150, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; ---Type <return> to continue, or q <return> to quit--- ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:1218,optimiz,optimized,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,1,['optimiz'],['optimized']
Performance,"BTW, how exactly are you finding these problem cases? If we could monitor our performance on the dataset with time we could ensure we don't cause regressions.... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1078#issuecomment-281800064:78,perform,performance,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1078#issuecomment-281800064,1,['perform'],['performance']
Performance,"Babel considers the Oxygen attached to an H in the Carboxylic acid as sp2 while this IMO is an sp3 oxygen. . To reproduce perform:; echo 'CC(=O)O' | babel -h -ismi -omolreport. Both Oxygens are sp2. The rule that is used to do this match is:; INTHYB [o,$(O=*),$(O[#6,#7,#8]=,:*)] 2 #sp2 oxygen; explicitly the: O[#6,#7,#8]=,:* part; I presume this should become [OD1][#6,#7,#8]=,:* but I'm not sure which other changes this induces which are indeed sp2 Oxygens. The problem is OS independent. Anyway, I used OpenBabel 2.3.0 under Linux. Reported by: lorubenet",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1101:122,perform,perform,122,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1101,1,['perform'],['perform']
Performance,"Babel does not correctly recognizes S=O groups in output MOPAC 7.14 file.; Instead of producing a double bond, it creates just one single bond. Here is ; an example. I used; CS(=O)C; to produce input file to MOPAC 7.14 (Ubuntu), optimized structure with; MOPAC, and after conversion of the output file I got; C[S]([O])C. The output file from MOPAC is enclosed. . Reported by: itetko",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/920:229,optimiz,optimized,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/920,1,['optimiz'],['optimized']
Performance,"Babel does not correctly recognizes nitro groups in MOPAC 7.14 file. Instead of producing two double bonds, it creates just one double and one single bond. Here is example. I used ; CN(=O)(=O); to produce input file to MOPAC 7.14 (Ubuntu), optimized structure with MOPAC, and after conversion of the output file I got ; C[N](=O)[O]. That is incorrect. It should be, e.g C[N+]([O-])=O or CN(=O)=O. The output file from MOPAC is enclosed. . Reported by: itetko",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/913:240,optimiz,optimized,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/913,1,['optimiz'],['optimized']
Performance,"Babel does not correctly treat NC(=N) in output MOPAC 7.14 file.; It confuses assignment of single and double bonds. . Indeed, after optimization of the structure with; MOPAC I am getting [NH2]=C[NH]. The output file from MOPAC is enclosed. . Reported by: itetko",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/921:133,optimiz,optimization,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/921,1,['optimiz'],['optimization']
Performance,"Ballester and Richards, http://www.journals.royalsoc.ac.uk/index/W1J4636Q65R74258.pdf]. This should be quite straightforward to implement within Open Babel - basically, only distances between certain atoms in a molecule have to be measured and the standard statistical moments calculated. I already have a python script based on the Open Babel toolkit to calculate USR and could give support (if needed at all). ABSTRACT:. Molecular databases are routinely screened for compounds that most closely resemble a; molecule of known biological activity to provide novel drug leads. It is widely believed; that three-dimensional molecular shape is the most discriminating pattern for biological; activity as it is directly related to the steep repulsive part of the interaction potential; between the drug-like molecule and its macromolecular target. However, efficient; comparison of molecular shape is currently a challenge. Here, we show that a new; approach based on moments of distance distributions is able to recognize molecular; shape at least three orders of magnitude faster than current methodologies. Such an; ultrafast method permits the identification of similarly shaped compounds within the; largest molecular databases. In addition, the problematic requirement of aligning; molecules for comparison is circumvented, as the proposed distributions are independent; of molecular orientation. Our methodology could be also adapted to tackle similar hard; problems in other fields, such as designing content-based Internet search engines for; three-dimensional geometrical objects or performing fast similarity comparisons between; proteins. From a broader perspective, we anticipate that ultrafast pattern recognition; will soon become not only useful, but also essential to address the data explosion; currently experienced in most scientific disciplines. Reported by: adrian_schreyer. Original Ticket: ""openbabel/feature-requests/120"":https://sourceforge.net/p/openbabel/feature-requests/120",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1489:1640,perform,performing,1640,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1489,1,['perform'],['performing']
Performance,"Because MOPAC does not unambiguously announce the optimized structure, Open Babel 2.3.2 extracts the initial structure from its cartesian translation. The actual structure appears ~50 lines below a ""GEOMETRY OPTIMISED"" statement which precedes energy results. The optimized structure may be in either MOPAC cartesian or MOPAC Z-matrix format. The MOPACFormat::ReadMolecule(...) method needs a rewrite to handle this. Reported by: salvarsan. Original Ticket: [openbabel/bugs/891](https://sourceforge.net/p/openbabel/bugs/891)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1271:50,optimiz,optimized,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1271,2,['optimiz'],['optimized']
Performance,"Both OpenBabel and JDK are 64 bits. And, the 32 bit dll cannot be loaded into 64 bit java.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397340163:66,load,loaded,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397340163,1,['load'],['loaded']
Performance,"CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /home/syesylevsky/install/openbabel-build; ```. But after that build fails:. ```; [ 69%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp: In member function ‘bool OpenBabel::GAMESSUKOutputFormat::ReadInitialCartesian(OpenBabel::OBMol&, std::istream&)’:; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp:804:69: error: ‘regcomp’ was not declared in this scope; iok = regcomp(myregex, pattern.c_str(), REG_EXTENDED | REG_NOSUB)==0;; ^; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp:818:45: error: ‘regexec’ was not declared in this scope; if (regexec(myregex, buffer, 0, 0, 0)==0) {; ^; make[2]: *** [src/formats/CMakeFiles/gamessukformat.dir/gamessukformat.cpp.o] Error 1; make[1]: *** [src/formats/CMakeFiles/gamessukformat.dir/all] Error 2; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:4362,cache,cacheformat,4362,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,2,['cache'],['cacheformat']
Performance,"C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; #7 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85ca0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; ---Type <return> to continue, or q <return> to quit--- ; #8 0x00007fcbda4b3829 in OpenBabel::OBMol2Cansmi::CreateFragCansmiString ( ; this=0x7fffe86962a0, mol=@0x1e401a0, frag_atoms=@0x7fffe869e840, ; isomeric=<value optimized out>, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("") ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4353 ; #9 0x00007fcbda4b455c in OpenBabel::CreateCansmiString ( ; mol=@0x7fffe869f330, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, iso=true, pConv=0x0) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4574 ; #10 0x00007fcbda4b6403 in OpenBabel::SMIBaseFormat::WriteMolecule ( ; this=<value optimized out>, pOb=<value optimized out>, ; pConv=0x7fffe869f640) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4644 ; #11 0x00007fcbe00c275c in OpenBabel::OBConversion::Write ( ; this=0x7fffe869f640, pOb=0x7fffe869f330, pos=<value optimized out>) ; at /work3/igor/openbabel-2-2-x/src/obconversion.cpp:809 ; #12 0x00007fcbe00c4c73 in OpenBabel::OBConversion::WriteString ( ; this=0x7fffe869f640, pOb=0x7fffe869f330, trimWhitespace=true) ; at /work3/igor/openbabel-2-2-x/src/obconversion.cpp:832 . Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:4286,optimiz,optimized,4286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,3,['optimiz'],['optimized']
Performance,"Can you try the following change and see whether the build completes for you too?; ```; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -88,7 +88,7 @@ if(NOT CMAKE_RUNTIME_OUTPUT_DIRECTORY); CACHE STRING ""Binary build output directory""); endif(); if(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY); - if(UNIX); + if(UNIX OR MINGW); set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ""${CMAKE_BINARY_DIR}/lib${LIB_SUFFIX}""; CACHE STRING ""Library build output directory""); else() # This is preferable on WIndows for example - bin = lib directory.; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311908309:190,CACHE,CACHE,190,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311908309,2,['CACHE'],['CACHE']
Performance,"Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h -O test1.xyz`; (terminal output): $ 1 molecule converted; then I visualize the structure loading the XYZ coordinates with AVOGADRO:. ![image](https://user-images.githubusercontent.com/69815654/231754101-807d8f4d-ddd7-4d72-9a31-d5d44d3ca14d.png). 2. Specifying the correct force-field to be used:; `obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff UFF -O test2.xyz`; (terminal output): $ 1 molecule converted; then I visualize the structure loading the XYZ coordinates with AVOGADRO:; ![image](https://user-images.githubusercontent.com/69815654/231755213-bad4613c-8a08-427b-87a7-469f704e5fff.png). From the openbabel `--gen3D` documentation (https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html):; ![image](https://user-images.githubusercontent.com/69815654/231755668-f732e09c-9869-43e6-a809-7c84c8f00c09.png); `--gen3D` will use MMFF94 by default which will not work since atoms like ""Se"" are not defined in MMFF94 (see https://open-babel.readthedocs.io/en/latest/Forcefields/mmff94.html#mmff94-force-field); ![image](https://user-images.githubusercontent.com/69815654/231756361-7dc07e2a-9822-4c84-bf93-5dbd7b7f7595.png)c. MMFF94 will not work because of some of the atoms (Se) present in my molecule, but that in principle its ok because according to the `--gen3D` documentation (https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) by default also it uses the `--medium` which DOES forcefield optimization. ## Summary; I believe that the default configuration of the `--gen3D` command should result in it recognizing that it cant use MMFF94 forcefield on my molecule because of the ""Se"" atom and then because by default it uses `--medium` it should optimize the forcefield and use UFF instead. And if this is not the case, and it is using MMFF94 it should print out a warning or do not give any output, since any other output would be wrong.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585:2270,optimiz,optimization,2270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585,2,['optimiz'],"['optimization', 'optimize']"
Performance,"Configuration now fails. This is the error:. ```bash; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:224 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; CMake Warning (dev) at /usr/share/cmake/Modules/FindOpenMP.cmake:179 (if):; if given arguments:. ""TRUE"". An argument named ""TRUE"" appears in a conditional statement. Policy; CMP0012 is not set: if() recognizes numbers and boolean constants. Run; ""cmake --help-policy CMP0012"" for policy details. Use the cmake_policy; command to set the policy and suppress this warning.; Call Stack (most recent call first):; /usr/share/cmake/Modules/FindOpenMP.cmake:266 (_OPENMP_GET_SPEC_DATE); CMakeLists.txt:397 (find_package); This warning is for project developers. Use -Wno-dev to suppress it. ```. this is with 2.4.1. I tried applying that patch but it makes no difference to this issue. Oh no I was wrong it does build after.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329:57,Perform,Performing,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566#issuecomment-301288329,4,['Perform'],['Performing']
Performance,"Conversion error for PDBQT output ??. Conversion of files containing ligand SMILES structures --> .mol --> .mol2 --> .pdbqt using Open Babel 2.3.0 or iBabel 3.0(beta) results in PDBQT formatted files that cannot be read by various Vina GUI programs for high throughput screening (various parsing errors). The problem appears to lie in the final PDBQT conversion since mol2 files can be used as inputs in ADT, PyRx or Raccoon to generate the appropriate PDBQT formatting. A comparison of the two types of files shows that:. Babel 2.3.0 produces PDBQT output files which replace lines marked as REMARK with USER (for ligand names etc), ATOM with HETATM and end with TER. Replacing USER with REMARKS and removing TER allows files to be correctly read. Is this updated file syntax being adopted as the standard PDBQT format or is it a platform dependent version produced by InhibOx ?. Reported by: fgrun",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1088:258,throughput,throughput,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1088,1,['throughput'],['throughput']
Performance,"Crashes verified for following environments:; OpenBabel Source:; 2.3.1 source; 2.3.2 source; Latest from Github (Feb 24th); Host OS: MAC OS X 10.9.5; Java: 1.7.0_40, 1.8.0_66 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:1081,load,loaded,1081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,1,['load'],['loaded']
Performance,"Currently, ""conformers"" in OB can be: a) list of real conformers; b) list of geometry optimization steps; c) if relaxed scan is performed, sequential compozition of lists of all geometry optimization steps. However, it would be useful to distinguish a) and b) (e.g., in latter case conversion to Hartree units are more desirable in external application, in former - not). Case ""c"" also needs to be distinguished - minimums of every optimization cycle are ""real"" conformers in a) sense, and lists of every optimization need to be separated to simplify life of users. Reported by: @annulen. Original Ticket: [openbabel/feature-requests/153](https://sourceforge.net/p/openbabel/feature-requests/153)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1522:86,optimiz,optimization,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1522,5,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"Currently, the Makefiles on UNIX do not set the environment variable ; BABEL_LIBDIR -- this means that the programs are useless until ""make ; install"" is performed. The Makefile scripts should have an ""export BABEL_LIBDIR"" command to ; point to the build directory, so that after a successful ""make"" command, ; the programs correctly use the new file format modules. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/511:154,perform,performed,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/511,1,['perform'],['performed']
Performance,DLL load failed: %1 is not a valid Win32 application,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2129:4,load,load,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2129,1,['load'],['load']
Performance,"Dear Open Babel authors!. ~>babel bsse.log bsse.xyz. While converting Gaussian log file into XYZ format, babel extracts the first geometry. However geometry optimization was requested in Gaussian job so I expected to see the last geometry in XYZ file. I noticed the wrong behavior appears only if counterpoise=2 option in Gaussian job is activated. . Marat Talipov; TalipovM@gmail.com. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1105:157,optimiz,optimization,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1105,1,['optimiz'],['optimization']
Performance,"Dear Open Babel team!; I am working on a project storing molecular structures in a database along with different types of fingerprints (MACCS, FP2, ECFP4 and ECFP6). We aim to select subsets of chemical classes and to project chemical substances together with activity data into a 2D projection of the the chemical space. All chemical information is processed using Open Babel and our pipeline shows very nice results.; However, recently I noticed that fingerprints for appropiatly 1% of 50Mio Compounds differ between old processing stored in the database and the most recent computation of the fingerprint using the current release 3.1.1 of Open Babel. I need to add that fingerprints were computet since 2019, spanning several years and different releases Open Babel 2.4.0, 3.0.0, 3.1.1, and different computers.; My questions are:; A) Do I need to expect fingerprints of one chemical structure to change between releases of Open Babel?; B) Are fingerprints sensitive wheter or not --gen2D or --gen3D is applied to the OBMOL structure?; C) As the chemical structures are derived from many different sources in several file formats (mol, sdf, smiles, inchi, ...) does the InChI code differ between structures purely loaded from the source and a structure where --gen2D or --gen3D was applied? What would you recommend the harmonise structures from differernt sources?. Thank you very much for your time and effort!; Looking forward for a reply and any link of litearture is highly appreciated, best regards,; Jan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2581:1218,load,loaded,1218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2581,1,['load'],['loaded']
Performance,"Dear OpenBabel developers!. I am tracing leaks in my application with valgrind and I think, one report looks like a memory leak in OpenBabel. My investigations:; In obconversion.cpp:329 when pdef->MakeInstance(vec) is called, it returns a new instance of OpenBabel::OBDefine which is never freed. valgrind trace:; ==30507== at 0x48243C5: operator new(unsigned int) (vg_replace_malloc.c:214); ==30507== by 0x49FA633: OpenBabel::OBDefine::MakeInstance(std::vector<std::string, std::allocator<std::string> > const&) (in /usr/lib/libopenbabel.so.3.0.3); ==30507== by 0x495A526: OpenBabel::OBConversion::LoadFormatFiles() (in /usr/lib/libopenbabel.so.3.0.3); ==30507== by 0x495A88F: OpenBabel::OBConversion::OBConversion(std::istream*, std::ostream*) (in /usr/lib/libopenbabel.so.3.0.3). Additional info: Debian [squeeze], libopenbabel3-2.2.3-1+b1. Reported by: dma_k",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/997:599,Load,LoadFormatFiles,599,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/997,1,['Load'],['LoadFormatFiles']
Performance,"Dear OpenBabel team,. there is a new version of the YASARA YOb-format, to support it, the file; src/formats/yasaraformat.cpp; must be replaced with this one:; http://download.yasara.org/service/yasaraformat.cpp. I keep fingers crossed that it compiles also on the more exotic architectures supported by OpenBabel, otherwise just send the error messages to elmar (at) yasara.org, and I'll tune it. Best regards,; Elmar",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2399:388,tune,tune,388,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399,1,['tune'],['tune']
Performance,"Dear all,; I seek support for an issue where I try to programmaticaly load an fingerprint which is generated in the OpenBabel GUI and saved to a text file. The fingerprint looks like that:; ```; > 1535 bits set ; f78f653f f788fbd1 f788fbd1 f788fbd1 f483f4e7 ef8b7e2f ; e9e5be3f e9e5be3f e9e5be3f e2d45009 dfe49bdf dfe49bdf ; d9934563 d6e3f7a2 d6e0861f d6e0861f c7a9894e c691f1d5 ; c5a51b2f c38b3152 c38b3152 c18d73f0 ba1039b8 ba1039b8 ; b6c804e7 b1ce8ba1 acaf0910 a795d505 9e35e385 9933b3d4 ; 9630d053 8ded7546 7a817362 76258d45 72c49066 6ff1d590 ; 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 ; 6cdf4289 6cdf4289 6ab48711 69a2560a 69a2560a 69a2560a ; 69a2560a 5faf488d 5faf488d 5faf488d 572f25d6 565a47ac ; 530075b3 4e8b69b6 4a7b5d42 4a7b5d42 4a7b5d42 4a7b5d42 ; 468e2b3d 45b91d6a 45b91d6a 45b91d6a 45b91d6a 44a4d88c ; 439d6fa4 4236ab98 41f91858 3e57602f 3cd9ba8b 3cd9ba8b ; 3cd9ba8b 3cd9ba8b 3cd9ba8b 3b1ca892 3b1ca892 385eeb12 ; 372c3bca 3579bb6d 3579bb6d 2cf5676b 21451a2d 20afc63a ; 20afc63a 1f92b832 1d8532eb 1c66c562 1170108b 1170108b ; 1170108b 1170108b 1170108b 1170108b 1170108b 015cf378 ; ```; I try to read this fingerprint from the textfile using OBDotNet Version=0.5.0.0 in C#.; I have read the posting from [Andrew Dalke](http://www.dalkescientific.com/writings/diary/archive/2008/06/27/generating_fingerprints_with_openbabel.html); and I lerned that I need to pay attention to BigEndian and LowEndian conversions. Essentially, I read each block as a hexadecimal formatted Unsigned integer, do a BigEndian to LowEndian conversion and add the result to a list of `unsigned Integers`. After that loop I reverse the `list<uint>` to generate the `OpenBabel.VectorUInt`. However, while some positions of the generated fingerprint are correct, many positions (without any pattern I can recognize) do not match to a `OpenBabel.VectorUInt` which is directly generated from the identical structure using the OpenBabel.Net library. What am I doing wrong? Can somebody share some code on ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023:70,load,load,70,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023,1,['load'],['load']
Performance,"Dear sir:. I am an undergraduate student from Dalian University of Technology,China.Our team is working on a program ,we appriciate applying with MMFF94 force field in order to optimize the conformation of; molecule.But unhappy , we are obsessed on the Stretch Bend term,we can't make this term achieve to convergence all the time by Steepest-Descending; Algorithm .we reference to the derivative expression of openbable 2.2.0,but we were defeated again and again,so we appeal for your aid .We appreciate your suggestion on this derivative or any other guidance on solving this energy term.We're looking forward to your reply.; Thanks very much!; Best wishes!; . Sincerely,; Fang Bai. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/828:177,optimiz,optimize,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/828,1,['optimiz'],['optimize']
Performance,"Default the OPTIMIZE_NATIVE option to OFF, and update the documentation; to more accurately reflect the optimization for the machines CPU; architecture. This isn't related to cross-compiling, so replaced; references to it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280:104,optimiz,optimization,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280,1,['optimiz'],['optimization']
Performance,Differences in atom coordinates loading CIF using version 2.3.2 and 2.4.1,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726:32,load,loading,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726,1,['load'],['loading']
Performance,"Does it still occur with the dev version?. On Thu, 24 Jan 2019 at 01:53, Ben Bucior <notifications@github.com> wrote:. > I encounter similar issues with N-heterocycles in my own work, so it would; > be awesome if we could resolve this.; >; > One thing I've noticed in #1360; > <https://github.com/openbabel/openbabel/issues/1360> and this example is; > that you get the 2.3.2 result if you comment out the line [#7D2R][#6D3^2][#7D2]; > 0 1 2 1 2 1 in data/bondtyp.txt. I haven't been able to get down to the; > root cause yet, but my suspicion is some sort of race condition where it's; > typing two double bonds next to each other. (Different input files can give; > different SMILES); >; > @baoilleach <https://github.com/baoilleach> Any ideas? @ehfassio; > <https://github.com/ehfassio> has some nice, detailed analysis in #1925; > <https://github.com/openbabel/openbabel/issues/1925> as well; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1920#issuecomment-457036564>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGTddbZjN4Hu5rht5EWEdF2IiyN9Tks5vGRIugaJpZM4Z_3o7>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457276700:560,race condition,race condition,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457276700,1,['race condition'],['race condition']
Performance,Dynamic loading of file Import/Export,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1372:8,load,loading,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372,1,['load'],['loading']
Performance,Dynamic loading of individual format modules,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434:8,load,loading,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434,1,['load'],['loading']
Performance,Error loading libopenbabel.so.5,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2503:6,load,loading,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503,1,['load'],['loading']
Performance,"Everything has compiled without an error, babel.exe can be run, however; it doesn't seem to find any formats available:. The following file formats are recognized:; formats is not a recognized plugin type. Those with instances of sub-types loaded are:; descriptors; fingerprints; forcefields; loaders; ops. See further specific info and options using -H<format-type>, e.g. -Hcml. When I try a specific format:; /opt/bin/babel.exe -Hsmi; Format type: smi was not recognized. I looked throughout /opt directory (which I set as prefix when running configure) I cannot see any of the format files. The size of libopenbabel-3.dll is less than half of what it was when compiled statically with all the formats in it using --disable-dynamic-modules. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795376:240,load,loaded,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795376,2,['load'],"['loaded', 'loaders']"
Performance,"Example usage; ```; find_package( OpenBabel3 REQUIRED ); include_directories( ${OpenBabel3_INCLUDE_DIRS}); add_executable(myapp ${SOURCES}); target_link_libraries(myapp ${OpenBabel3_LIBRARIES}); ```. If I was less intimidated by cmake, I would also attempt to implement concurrent building of python2 and python3 bindings...; And if I had more time I'd fix the maeparser build issue that has crept into master.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558809977:270,concurren,concurrent,270,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558809977,1,['concurren'],['concurrent']
Performance,"FWIIW, I am using this `.valgrind_suppressions` file to hide the memory leaks. ```; {; <openbabel dynamic loading of plugins>; Memcheck:Leak; match-leak-kinds: reachable; ...; fun:_dl_open; ...; }; {; <openbabel dynamic loading of plugins>; Memcheck:Leak; match-leak-kinds: reachable; ...; fun:_dl_init; ...; }; {; <openbabel read cif molecule>; Memcheck:Leak; match-leak-kinds: definite; ...; fun:*OpenBabel*OBMol*ConnectTheDots*; fun:*OpenBabel*CIFFormat*ReadMolecule*OBBase*Conversion*; ...; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-1385970171:106,load,loading,106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-1385970171,2,['load'],['loading']
Performance,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:52,optimiz,optimization,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038,1,['optimiz'],['optimization']
Performance,File format modules should be installed into a directory for a specific version. The dynamic loader also needs to keep track of versions. Reported by: @ghutchis,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/734:93,load,loader,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/734,1,['load'],['loader']
Performance,Fix a performance problem with parsing PDB files that have overlapping,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/106:6,perform,performance,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/106,1,['perform'],['performance']
Performance,"Fix suggested in issue #1591. lib_name.c_str() alwarys returns a const char*. (C string); The definition of LoadLibrary() changes depending on whether the macro UNICODE is defined or not (see 'winbase.h'). In the former case, the LoadLibrary() is actually replaced by LoadLibraryW() which accepts LPCWSTR {aka const wchar_t*} type, and the compilation fails due to mismatching data type and non-implicit conversion. In the latter, LoadLibraryA() is called. That version works with char*. The best solution seems to be the one detailed in the following article:; http://www.cplusplus.com/forum/articles/16820/; the WinAPI provides the macros TEXT(), _T() and T() which do the same thing: convert char* to LPCWSTR and vice versa depending on the definition (or non-definition) of the UNICODE macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594:108,Load,LoadLibrary,108,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594,4,['Load'],"['LoadLibrary', 'LoadLibraryA', 'LoadLibraryW']"
Performance,Fixes to ConnectTheDots and plugin loading,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/239:35,load,loading,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/239,1,['load'],['loading']
Performance,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/214:356,Optimiz,Optimization,356,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214,1,['Optimiz'],['Optimization']
Performance,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/213:374,Optimiz,Optimization,374,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213,1,['Optimiz'],['Optimization']
Performance,"For 6af03f145631d1b1661ef52651996cb842d2b2e4, an input is not always normalizable and exception is thrown (#2088). For 80468c421d43b376f0424d564925eee2d74c44bc, the default release type is [`Release`](https://github.com/openbabel/openbabel/blob/c25172429fe8f0e074efae77380b5ba76b08f1a6/CMakeLists.txt#L438-L440) and `NDEBUG` is defined (e.g. [L444](https://github.com/openbabel/openbabel/blob/c25172429fe8f0e074efae77380b5ba76b08f1a6/CMakeLists.txt#L444)), therefore performance is not harmed.; For `vector3::operator[]`, probably `switch` with `default` would be better.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557851420:467,perform,performance,467,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557851420,1,['perform'],['performance']
Performance,"For some reason ""make uninstall"" target is missing in openbabel 2.3.0; build]# make uninstall; make: *** No rule to make target `uninstall'. Stop. Expected behaviour: perform uninstallation as in 2.2.3. Reported by: igor_filippov",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1061:167,perform,perform,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1061,1,['perform'],['perform']
Performance,"For what applications are these numerical fluctuations of chemical; relevance for you?. Since I do not see OpenBabel as a replacement for a program dedicated; to computation as in quantum chemistry in scale like GAMESS, MOPAC,; etc. I'm fine with these variations. It is possible to request; geometries about e.g., pyridine. obabel -:""c1ccncc1"" -h --gen3d -oxyz. and if run multiple times, the absolute coordinates of hydrogens,; carbons and pyridine may vary as well. I know the --gen3d keyword is; a short hand form for five levels to offer a guess; it is possible to; venture out the energetic landscape by the systematic generation (and; storage of) conformers eventually exported either in OpenBabel (by a; different instruction) or/and one of the programs dedicated to this. For me, for the (re)generation of a structure from a string notation, ; or appending implicit hydrogens (SMILES, .cml), OpenBabel performs; the job good enough if. + it retains the configuration encoded earlier, i.e., does not; unexpectedly swap between (E) and (Z), or (R) and (S); + offers a chemically reasonable spatial arrangement of the atoms,; i.e., intramolecular distances, intramolecular angles are similar; to those experimentally determined and tabulated in references like; e.g., the IUCr's International Tables of Crystallography (Volume C,; chapter 9 about those typically seen for organic compounds). So far, earlier conversions of mine met these two conditions,; allowing to continue the work elsewhere. For reasons of symmetry (C infinity in Schoenflies notation), I think; the selection of acetylene is picks a very special situation. It is; sufficient to align the principal axis of the molecule with either x; .or. y .or. z axis of the underlying Cartesian coordinate system to; describe the molecule along this axis (in 1D) only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890:911,perform,performs,911,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950307890,1,['perform'],['performs']
Performance,Force Field Optimizations lead to NaN,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/609:12,Optimiz,Optimizations,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609,1,['Optimiz'],['Optimizations']
Performance,Force Field optimization fails with large planar structures,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/682:12,optimiz,optimization,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682,1,['optimiz'],['optimization']
Performance,"From Chong Hak Chae <chchae@krict.re.kr> on openbabel-dev:. I am developing modeling program using OpenBabel 2.2.1. After loading a molecule,. the FOR_ANGLE_OF_MOL() and FOR_TORSIONS_OF_MOL() works fine. But after deleting some atoms, (outside of ITERATORS). the FOR_ANGLE_OF_MOL() and FOR_TORSIONS_OF_MOL() prints irrelevant index number and goes crash. (Please note the following code.). How can I resolve this problem?. Thank you in advance. . . ;------------------------------------------------------------. #include <openbabel/babelconfig.h>. #include <openbabel/base.h>. #include <openbabel/mol.h>. #include <openbabel/obconversion.h>. #include <openbabel/forcefield.h>. #ifndef _MSC_VER. #include <unistd.h>. #endif. . using namespace std;. using namespace OpenBabel;. . int main( void ). {. std::string smiles( ""N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C=O)CC(=O)O)CC(C)C)CCSC)CS)CC(=O)N)CCCNC(=[NH2])N "" );. stringstream ss( smiles );. OBConversion conv( &ss );. OBMol mol;. conv.SetInFormat( ""smi"" );. conv.Read( &mol );. . OBMol *mole = &mol;. for( int iter=0; iter<mole->NumAtoms()/5; iter++ ) {. int natom = mole->NumAtoms();. int k = rand() % (natom - 1 ) + 1;. mole->DeleteAtom( mole->GetAtom( k ) );. natom = mole->NumAtoms();. . FOR_ANGLES_OF_MOL( angle, mole ) {. int ia = (*angle)[1];. int ib = (*angle)[0];. int ic = (*angle)[2];. if( ! ( -1 < ia && ia < natom && -1 < ib && ib < natom && -1 < ic && ic < natom ) ) {. printf( ""--->ang %4d : %4d, %4d : %4d %4d %4d\n"", iter, natom, k, ia, ib, ic );. }. }. . FOR_TORSIONS_OF_MOL( tor, mole ) {. int ia = (*tor)[0];. int ib = (*tor)[1];. int ic = (*tor)[2];. int id = (*tor)[3];. if( ! ( -1 < ia && ia < natom && -1 < ib && ib < natom && -1 < ic && ic < natom && -1 < id && id < natom ) ) {. printf( ""--->tor %4d : %4d, %4d : %4d %4d %4d %4d\n"", iter, natom, k, ia, ib, ic, id );. }. }. }. }. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/903:122,load,loading,122,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/903,1,['load'],['loading']
Performance,"From an ORCA geometry optimization the first (initial) geometry is extracted, not the final geometry. The corresponding energy given is for the final geometry.; Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; See attached: ORCA output file and extracted geometry in .xyz format. Reported by: yodah134. Original Ticket: [openbabel/bugs/982](https://sourceforge.net/p/openbabel/bugs/982)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361:22,optimiz,optimization,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361,1,['optimiz'],['optimization']
Performance,"Gaussian, NWchem, among others, can run countless number of jobs in one run:; optimization followed by frequency calculation followed by single point; followed by... I bet right now only first (or the last) job; coordinates can be manipulated by OpenBabel. Would be useful to have a drop down box; (or better yet some sort of job layout summary), where one could pick a job; from a multistep job and manipulate this particular job coordinates. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/141"":https://sourceforge.net/p/openbabel/feature-requests/141",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1510:78,optimiz,optimization,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1510,1,['optimiz'],['optimization']
Performance,"Guyss i tried to follow this on my linux system : . https://github.com/seanharr11/phytebyte. i'm actually blocked on the 4th step! after pip install openbabel, this is outpout: . pip install openbabel; Defaulting to user installation because normal site-packages is not writeable; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; error: subprocess-exited-with-error. × python setup.py bdist_wheel did not run successfully.; │ exit code: 1; ╰─> [15 lines of output]; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/include/python3.10', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/include/python3.10 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]. note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; error: subprocess-exited-with-error. × Running setup.py install for openbabel did not run successfully.; │ exit code: 1; ╰─> [16 lines of output]; running install; /usr/lib/python3/dist-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2627:309,cache,cached,309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2627,1,['cache'],['cached']
Performance,"Have you been doing any performance testing ([g]perf, profiling, sampling, etc.). It would be interesting to see where the hot-spots are in the unit tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516:24,perform,performance,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346703516,1,['perform'],['performance']
Performance,"Hello guys !!!! i'm trying to use the following script : . #!/bin/bash; #; #SBATCH --job-name=index_human; #SBATCH --partition=all; #SBATCH --ntasks=1; #SBATCH --cpus-per-task=10; #SBATCH --mail-user=ivanamango@gmail.com; #SBATCH --cpu-bind=rank; #SBATCH --mail-type=ALL; #SBATCH --hint=compute_bound. module load STAR/2.6.0c. srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$. when i run it this is the error : ; Dec 13 08:56:22 ..... started STAR run; Dec 13 08:56:22 ... starting to generate Genome files; Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time...; Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk...; slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed; srun: Exceeded job memory limit; slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 ***; srun: Job step aborted: Waiting up to 32 seconds for job step to finish.; srun: error: falkor7: task 0: Killed. How can i resolve it ? . Thanks to everyone !!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657:309,load,load,309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657,1,['load'],['load']
Performance,"Hello guys !!!! i'm trying to use the following script :. #!/bin/bash. #SBATCH --job-name=index_human; #SBATCH --partition=all; #SBATCH --ntasks=1; #SBATCH --cpus-per-task=10; #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com); #SBATCH --cpu-bind=rank; #SBATCH --mail-type=ALL; #SBATCH --hint=compute_bound. module load STAR/2.6.0c. srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$. when i run it this is the error :; Dec 13 08:56:22 ..... started STAR run; Dec 13 08:56:22 ... starting to generate Genome files; Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time...; Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk...; slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed; srun: Exceeded job memory limit; slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 ***; srun: Job step aborted: Waiting up to 32 seconds for job step to finish.; srun: error: falkor7: task 0: Killed. How can i resolve it ?. Thanks to everyone !!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2658:336,load,load,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2658,1,['load'],['load']
Performance,"Hello!; I have performed a conversion of a CIF file (http://www.crystallography.net/cif/1/01/05/1010587.cif) to MOPAC input, but it seems that I get an output that contains only part of the information of the crystal. I tried modifying the input/output parameters, but it does not seem to get it right.; Has anyone encountered the same issue or found a way to get a more precise output?. Reported by: filipposd. Original Ticket: [openbabel/bugs/932](https://sourceforge.net/p/openbabel/bugs/932)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1312:15,perform,performed,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1312,1,['perform'],['performed']
Performance,"Hello,. Can you please specify which BSD(full text), mentioned in https://github.com/openbabel/openbabel/blob/openbabel-3-0-0/cmake/modules/OptimizeNative.cmake and ; https://github.com/openbabel/openbabel/blob/openbabel-3-0-0/cmake/modules/FindRapidJSON.cmake ?. There is no LICENSE file regarding the BSD that applies there. Thank you.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2425:140,Optimiz,OptimizeNative,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425,1,['Optimiz'],['OptimizeNative']
Performance,"Hello,; A) Yes, you should expect that fingerprints MAY change. While the OpenBabel code is rather stable, there might always be a bug fixed or a change made that affects some part of the underlying molecule data structure and hence the fingerprint. In general, it is always best to be consistent to one version of the chemoinformatics software.; B) They should not be sensitive to the --genxD options.; C) I don't really follow the change to InChI here, but the InChI generation should not be sensitive to how the molecule is loaded (unless it comes from an underspecified format such as pdb where guessing of the bond system might lead to different molecules percieved). Normalizing through InChI might be a good option but there are a lot of things to consider before deciding on a normalization scheme.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2581#issuecomment-1493956271:527,load,loaded,527,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2581#issuecomment-1493956271,1,['load'],['loaded']
Performance,"Here's some code to perform a weighted rotor search. It segfaulted on the first SMILES string I tried. ////////////////////////////////////////////////. int main(int argc,char *argv[]); {; OBForceField* pFF = OBForceField::FindForceField(""MMFF94"");; if (!pFF); {; cout << ""Bail out! Can't find forcefield!"" << endl;; system(""pause"");; return -1;; }; OBOp* pOp = OBOp::FindType(""Gen3D"");; if (!pOp); {; cout << ""Bail out! Can't find Gen3D!"" << endl;; system(""pause"");; return -1;; }. string SmilesString=""C2CN(CCN1C(=O)N(CC)N=N1)CCC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:20,perform,perform,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,1,['perform'],['perform']
Performance,Hi . using the 3D generation from SMI to SDF fails because ; fragments.txt missing in OB 2.2.0 is missing in the WIN distribution. Can be found in the 2.1.1 or somewhere else. Error is:. *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt. Even then the whole process doesn't seem to work. Cheers; Tobias. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792:233,Load,LoadFragments,233,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792,1,['Load'],['LoadFragments']
Performance,"Hi @fredrikw , thanks for the hint regarding `otool -l`. Interestingly, I wasn't able to find any `LC_RPATH` commands in the dylib images, even if `otool -L` shows that libs are linked with `@rpath` definition. In my case this affects libcairo, which is linked as `@rpath/./libcairo.2.dylib`. Of course, without an `@rpath` defined the lib can't be found and hence not loaded (leading to loss of functionality, for which I actually wanted to create another issue). Does this qualify as a bug in the build/linking process?. I guess a user wanting to compile openbabel with python bindings from source on OSX, using non-system python (like anaconda), now only has the option to manually fix library paths using `otool -L`. I wonder whether it's possible to do this during the build process. For example, if e.g. `-DPYTHON_LIBRARY` or `-DCAIRO_LIBRARY` are set, the linker could be instructed to use the provided path name instead of the install_name to link the library (maybe after checking if the install_name is valid). Alternatively, one could post-process the various libraries using `install_name_tool` to fix the path of dynamically linked objects. Clearly, the first option is more elegant.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037:369,load,loaded,369,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037,1,['load'],['loaded']
Performance,"Hi @fredrikw . It seems the issue has been resolved. This time, I performed energy minimization on the combined SDF file and then split it into separate SDF files in next step. . Subsequently, I used the ""--gen3D"" flag while converting the individual SDF files to PDBQT, which successfully generated the 3D structures. Therefore, I believe the problem is now solved, and I'm closing the issue. Thank you for your assistance.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322:66,perform,performed,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2720#issuecomment-2312326322,1,['perform'],['performed']
Performance,"Hi Dr. Noel,; I use the latest version of Mac (10.12.6) and python 3.6. I tried the following two methods to install openbabel-2.4.1: ; 1. pip install openbabel ; 2. python setup.py install; Both shows the following errors:; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install. I have done: brew install swig, but the errors still exist.; Could you please let me know how to solve this? . Thank you.; Paul. The detailed errors from pip install openbabel is:; Paulin@Paulins-MBP:~$ pip install openbabel; Collecting openbabel; Using cached openbabel-2.4.1.tar.gz; Building wheels for collected packages: openbabel; Running setup.py bdist_wheel for openbabel ... error; Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;__file__='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" bdist_wheel -d /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/tmpwh85q9mepip-wheel- --python-tag cp36:; running bdist_wheel; running build; running build_ext; Open Babel location automatically determined by pkg-config:; - include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; - library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/Users/Paulin/miniconda3/include/python3.6m -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:225: Error: Unable to find 'openbabel/babelconfig.h'; openbabel-python.i:227: Error: Unable to find 'openba",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620:736,cache,cached,736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620,1,['cache'],['cached']
Performance,"Hi Elmar, and thanks. Could you take a look at the patches people have done; to the previous version and incorporate them if necessary? They are fairly; small. https://github.com/openbabel/openbabel/commits/master/src/formats/yasaraformat.cpp. On Wed, 21 Jul 2021 at 13:28, elmar-k ***@***.***> wrote:. > Dear OpenBabel team,; >; > there is a new version of the YASARA YOb-format, to support it, the file; > src/formats/yasaraformat.cpp; > must be replaced with this one:; > http://download.yasara.org/service/yasaraformat.cpp; >; > I keep fingers crossed that it compiles also on the more exotic; > architectures supported by OpenBabel, otherwise just send the error; > messages to elmar (at) yasara.org, and I'll tune it.; >; > Best regards,; > Elmar; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2399>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMIE2E3HEBN7ESKDILTY24OHANCNFSM5AX3N6PQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725:715,tune,tune,715,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-884296725,1,['tune'],['tune']
Performance,"Hi Open Babel!. I get a wrong charge on a Lysine side chain when reading a file from xyz. An example is here: https://dl.dropboxusercontent.com/u/17435887/027ALA_opt.xyz. For instance when converting the following way:. babel -ixyz ALA_opt.xyz -ocom ALA_out.com. babel will assign a total charge of 0 and a multiplicity of 1. This is not correct, since a correct charge and multiplicity are 1 and 1, respectively. The structure is is the result of a PM6 optimization so bond lengths and angles shouldn't be way off. The output from obprop (see below) has a warning concerning ""Accepted unusual valence(s): N(4)"" which may be a clue towards the error maybe? Four bonds to a nitrogen atom is not /that/ unusual. :). I've tried this on the following babel --version:; Open Babel 2.3.0 -- Dec 17 2011 -- 16:15:08; Open Babel 2.3.2 -- Dec 13 2012 -- 18:44:34; Open Babel 2.3.90 -- Dec 1 2013 -- 15:56:22. name backbones/027ALA_opt.log; formula C14H28N5O4; mol_weight 330.403; exact_mass 330.214; canonical_SMILES [NH3]CCCC[C@@H](C(=O)N[C@H](C(=O)NCC(=O)NC)C)NC(=O)C	backbones/027ALA_opt.log. ==============================; *** Open Babel Warning in InChI code; backbones/027ALA_opt.log :Accepted unusual valence(s): N(4); InChI InChI=1S/C14H28N5O4/c1-9(13(22)17-8-12(21)16-3)18-14(23)11(19-10(2)20)6-4-5-7-15/h9,11H,4-8H2,1-3,15H3,(H,16,21)(H,17,22)(H,18,23)(H,19,20)/t9-,11-/m0/s1. num_atoms 51; num_bonds 50; num_residues 0; sequence -; num_rings 0; logP 0.4651; PSA 119.64; MR 85.0889; $$$$. Reported by: andersx. Original Ticket: [openbabel/bugs/906](https://sourceforge.net/p/openbabel/bugs/906)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1286:454,optimiz,optimization,454,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1286,1,['optimiz'],['optimization']
Performance,"Hi all,; I have an application that runs on python 3.11 and it requires the conversion of a pdb file to a smiles code. OpenBabel has this feature but I cannot install it on python 3.11. Currently, I have installed OpenBabel on python 3.7 and I am trying to migrate the functions for reading PDB files and outputing smiles code to python 3.11. However, I am having difficulties with this approach because I am not able to identify what are the minimum files needed for this task.; So far, I've tried moving the following files: __init__, _openbabel.pyd, openbabel.py, pybel.py to my python 3.11 env in anaconda (Destination folder was: ./Lib/site-packages/openbabel). ; However, I am having the following error when importing openbabel:; `from . import _openbabel`; `ImportError: DLL load failed while importing _openbabel: The specified module could not be found`; I am not sure what other files to include. My goal is to clean up the .py files so as to include only the read pdb files and output smiles code functionalities.; Does anyone have any tips/suggestions on how I could approach this?; Also, I would like to keep downgrading the python version of my application as a last resort if nothing else works.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2672:783,load,load,783,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2672,1,['load'],['load']
Performance,"Hi everyone, . I have used OpenBabel for 2 yeas and I found it as a very usefull tool in my research. Unfortunatelly I faced the following problem: When I wanted to convert pdb file to sdf format the software is converting it but I got the message: Obgui Error File couldn't be loaded. As a result I obtained wrong converted file. Anyone have any ideas what may caused the problem?. Reported by: radoslaw28. Original Ticket: [openbabel/bugs/917](https://sourceforge.net/p/openbabel/bugs/917)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1297:278,load,loaded,278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1297,1,['load'],['loaded']
Performance,"Hi there,. I am very new to all of this, and am looking for help with the install. I followed the instructions on the page below:. http://openbabel.org/wiki/Install_(source_code). specifically the section on Installing globally with root access. I also installed a GNU compiler according to these instructions: https://wiki.helsinki.fi/display/HUGG/GNU+compiler+install+on+Mac+OS+X and cmake prior to running these commands. I used the following commands:. tar zxvf openbabel-2.4.1.tar.gz; mv openbabel-2.4.1 ob-src; mkdir ob-build; cd ob-build; cmake ../ob-src 2>&1 | tee cmake.out; sudo make install. Everything seemed to install, but I am looking to run the optimize plugin in pymol, and I got an error there: ""Optimize plug-in needs openbabel to be installed in your system, please follow the instructions at; http://openbabel.org/wiki/Get_Open_Babel”. I realized I still did not have it completely installed, so I tried the following command:; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib; which “ran” with no errors. I now have several files and folders in the following directory:; /usr/local/lib; They are:; pkgconfig (FOLDER). libinchi.dylib. libinchi.0.4.1.dylib. libinchi.0.dylib. openbabel (FOLDER). libopenbabel.dylib. libopenbabel.5.0.0.dylib. libopenbabel.5.dylib. cmake (FOLDER). I believe open babel is still not completely installed because I did not compile the language bindings at the time of install. I now have installed python (2.7.10), but am looking for how I can finish this install. As I said above, I’m looking to use the optimize plugin in pymol. I’m working on a Mac (running MacOS Mojave version 10.14). Would very much appreciate any help. Thanks very much!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1897:661,optimiz,optimize,661,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1897,3,"['Optimiz', 'optimiz']","['Optimize', 'optimize']"
Performance,"Hi there,. I've noticed some recent problems with spacegroup # 230 in OpenBabel. . For a while, I haven't been able to use the 'set spacegroup' feature of Avogadro because it will crash with the following message:; Cannot find an OpenBabel equivalent to Spglib's Hall symbol ""-I 4bd 2c 3"". If I look inside the spacegroups.txt file in openbabel/data, I see that this is a symbol for spacegroup number 230, and for some reason it isn't loading properly. I also noticed that if I do something as simple as OpenBabel::SpaceGroup::GetSpaceGroup(spg)->GetHMName(), it will crash if spg is 230 (but it will work fine if spg is any other number 1 to 229). I'll try to look into the issue, but if any of you know how to fix it, that'd be great!. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/242:435,load,loading,435,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/242,1,['load'],['loading']
Performance,"Hi! When I ues openbabel 2.4.1 and python2.7(32) in my win10. I install the python API followed the ; org. But, when I import openbabel, it notes: ImportError: DLL load failed:...。I have tried other versions e.g. 2.3.1. But there is a same problem, when I import openbabel. I search the season on the internet, but no result. So, I ask for you help!; ; ![image](https://user-images.githubusercontent.com/35757143/61582233-af6be180-ab5a-11e9-920c-fe36c78836bc.png); ![image](https://user-images.githubusercontent.com/35757143/61582247-d4f8eb00-ab5a-11e9-9475-f3a04027d037.png). ![image](https://user-images.githubusercontent.com/35757143/61582250-e4783400-ab5a-11e9-88d3-0159f20b56bf.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2006:164,load,load,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2006,1,['load'],['load']
Performance,"Hi!. I just installed the latest version (3.1.1) but when I launch it, this error is raised:. `obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory`. the file is located in /usr/local/lib/ but the software does not load it. Thanks in advance for the help",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2503:115,load,loading,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2503,2,['load'],"['load', 'loading']"
Performance,"Hi, same error here. How do I fix it?. `obgen MRTX1719_2D.sdf -ff UFF > MRTX1719_3D.sdf ; ==============================; *** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in SetTypes; Cannot open UFF.prm; obgen: could not setup force field.; `. Since I compile packages for GNU/Linux distribution Rosa Linux, where I find the file diff to apply?. ![OpenBabelError](https://github.com/user-attachments/assets/94fbe4f6-8c48-40c2-a201-bb48d8b5b8b7)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728:146,Load,LoadFragments,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2613#issuecomment-2343946728,1,['Load'],['LoadFragments']
Performance,"Hi, thank you very much for your help. I am just starting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:627,load,load,627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,2,"['load', 'perform']","['load', 'performed']"
Performance,"Hi,. Have you installed OpenBabel? Can you run it from the command line?. Kind regards,; Fredrik. Med vänliga hälsningar,; Fredrik. On 24 aug. 2017 05:41 +0200, Paulin <notifications@github.com>, wrote:; > Hi Dr. Noel,; > I use the latest version of Mac (10.12.6) and python 3.6. I tried the following two methods to install openbabel-2.4.1:; >; > 1. pip install openbabel; > 2. python setup.py install; > Both shows the following errors:; > Error: SWIG failed. Is Open Babel installed?; > You may need to manually specify the location of Open Babel include and library directories. For example:; > python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; > python setup.py install; >; > I have done: brew install swig, but the errors still exist.; > Could you please let me know how to solve this?; > Thank you.; > Paul; > The detailed errors from pip install openbabel is:; > Paulin@Paulins-MBP:~$ pip install openbabel; > Collecting openbabel; > Using cached openbabel-2.4.1.tar.gz; > Building wheels for collected packages: openbabel; > Running setup.py bdist_wheel for openbabel ... error; > Complete output from command /Users/Paulin/miniconda3/bin/python -u -c ""import setuptools, tokenize;file='/private/var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/pip-build-v0rof5j4/openbabel/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, file, 'exec'))"" bdist_wheel -d /var/folders/6l/bwvmq2t17sl44hn70n2przcr0000gn/T/tmpwh85q9mepip-wheel- --python-tag cp36:; > running bdist_wheel; > running build; > running build_ext; > Open Babel location automatically determined by pkg-config:; >; > • include_dirs: ['/Users/Paulin/miniconda3/include/python3.6m', '/usr/local/include/openbabel-2.0']; > • library_dirs: ['/Users/Paulin/miniconda3/lib', '/usr/local/lib']; > building '_openbabel' extension; > swigging openbabel-python.i to openbabel-python_wrap.cpp; > swig -python -c++ -small -O -templatereduce -naturalvar ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048:977,cache,cached,977,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1620#issuecomment-324592048,1,['cache'],['cached']
Performance,"Hi,. This is the perfect solution! Yes, please send the patch. Is there a planned date for release of 3.0?. Thanks a lot!. Regards,; Johan Westin. From: Geoff Hutchison [mailto:notifications@github.com]; Sent: den 17 april 2018 23:01; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Westin, Johan <Johan.Westin@astrazeneca.com>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] Differences in atom coordinates loading CIF using version 2.3.2 and 2.4.1 (#1726). I can confirm that it's the wrapping call. I'm going to revert that behavior by adding a flag to wrap if requested - but the default will be to use the unwrapped coordinates. Do you want a copy of the patch? It'll go into development (3.0) but not 2.4.x. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/1726#issuecomment-382144569>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAyD7nZJZdbf5-Tpv4ozlngznLao757nks5tplgpgaJpZM4RAQGy>. ________________________________. Confidentiality Notice: This message is private and may contain confidential and proprietary information. If you have received this message in error, please notify us and remove it from your system and note that you must not copy, distribute or take any action in reliance on it. Any unauthorized use or disclosure of the contents of this message is not permitted and may be unlawful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659:444,load,loading,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659,1,['load'],['loading']
Performance,"Hi,. When I load with the OpenBabel library the attached ; molecule (.cml) file, it sometimes says that the ; bonds have order 18 or 28. The problem doesn't happen everytime (perhaps 50% of ; times). When it happens, it is followed several ; seconds later by a segfault, though I don't know if ; it happens in our own program -Kalzium) or in the OB ; libraries themselves. With other (simpler) .cml files, the problem doesn't ; happen at all. As you can see in the attached .cml file, the bonds ; in that molecule only have order 1 or 2. Perhaps we're stupid and the probem lies in the way ; we use OB to load the molecule file?. Here are relevant parts of the Kalzium code:. code for loading the .cml file:. ---------. OpenBabel::OBMol* OpenBabel2Wrapper::readMolecule( ; const QString& filename ); {; 	OpenBabel::OBConversion Conv;; 	OpenBabel::OBFormat *inFormat = NULL;. 	//the OB2 Molecule; 	OpenBabel::OBMol *mol = new OpenBabel::OBMol;; 	std::ifstream inFileStream( ; filename.toLatin1() );; 	if ( !inFileStream ) {; 		QMessageBox::warning( 0, ; i18n( ""Problem while opening the file"" ),; 				i18n( ""Cannot open ; the specified file."" ) );; 		return 0;; 	}. 	//find out which format the file has...; 	inFormat = Conv.FormatFromExt( ; filename.toLatin1() );; 	Conv.SetInAndOutFormats( inFormat,inFormat );; 	Conv.Read( mol, &inFileStream );. 	kDebug() << QString::fromLatin1( ; mol->GetFormula().c_str() ) << "" (Weight: "" << ; mol->GetMolWt() << "", Title: ""<< mol->GetTitle() ; << "")"" << endl;. 	return mol;; }. --------. Code for determining the order of bonds:. --------. 	int order;; 	if( bond->IsSingle() ) order = 1;; 	else if( bond->IsDouble() ) order = 2;; 	else if( bond->IsTriple() ) order = 3;; 	else; 	{; 		order = bond->GetBondOrder();; 		if( order > 12 ) // probably a bogus ; molecule file!; 			// according to the ; element.txt file in OB,; 			// no element can have more ; than 12 bonds; 		{; 			order = 1;; 			kDebug()<<""Umm, some bond ; pretends to have ""; 				""order ""<<bond->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/561:12,load,load,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561,3,['load'],"['load', 'loading']"
Performance,"Hi--. I'm trying to build openbabel-1.100.2 on Darwin OS X Tiger, downloaded from sourceforge and then another attempt at using DarwinPorts with the same result. I configure fine and build up until this point:. g++ -dynamiclib -single_module -flat_namespace -undefined suppress -o .libs/libopenbabel.0.0.0.dylib .libs/alchemy.o .libs/amber.o .libs/atom.o .libs/balst.o .libs/base.o .libs/bgf.o .libs/binary.o .libs/bitvec.o .libs/bond.o .libs/box.o .libs/c3d.o .libs/cacao.o .libs/cache.o .libs/car.o .libs/ccc.o .libs/chains.o .libs/chdrw.o .libs/chemtool.o .libs/chiral.o .libs/cml.o .libs/crk.o .libs/csr.o .libs/cssr.o .libs/data.o .libs/dmol.o .libs/feat.o .libs/fh.o .libs/fileformat.o .libs/gamess.o .libs/gaussian.o .libs/generic.o .libs/ghemical.o .libs/grid.o .libs/gromos96.o .libs/hin.o .libs/jaguar.o .libs/matrix.o .libs/mdl.o .libs/mm3.o .libs/mmod.o .libs/mol.o .libs/mol2.o .libs/molchrg.o .libs/molvector.o .libs/mopac.o .libs/mpqc.o .libs/nwchem.o .libs/oberror.o .libs/obutil.o .libs/parsmart.o .libs/parsmi.o .libs/patty.o .libs/pdb.o .libs/phmodel.o .libs/povray.o .libs/qchem.o .libs/rand.o .libs/report.o .libs/residue.o .libs/ring.o .libs/rotor.o .libs/shelx.o .libs/smi.o .libs/tinker.o .libs/tokenst.o .libs/typer.o .libs/unichem.o .libs/viewmol.o .libs/xed.o .libs/xyz.o .libs/zindo.o .libs/pqs.o -all_load math/.libs/libmath.a -lm -install_name /opt/local/lib/libopenbabel.0.dylib -compatibility_version 1 -current_version 1.0; ld: warning -undefined suppress disables -prebind; ld: warning multiple definitions of symbol ___eprintf; /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/libgcc.a(_eprintf.o) private external definition of ___eprintf in section (__TEXT,__text); /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/libstdc++.dylib(single module) definition of ___eprintf; ld: multiple definitions of symbol ___divdi3; /usr/lib/gcc/powerpc-apple-darwin8/4.0.0/libgcc.a(_divdi3.o) private external definition of ___divdi3 in section (__TEXT,__text); /usr/lib/gcc/powerpc-apple-darwi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482:481,cache,cache,481,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482,1,['cache'],['cache']
Performance,Hi; I am loading gcc version 7.2.0 but still with CMake Openbabel selects gcc version 4.7.2 (Debian 4.7.2-5). Can that be the cause of error and I need to ensure gcc 7.2.0 is being taken for compilation?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848:9,load,loading,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1671003848,1,['load'],['loading']
Performance,"Hm, now the configure fails with the following message:. checking whether the g++-sjlj linker (c:/mingw/mingw32/bin/ld.exe) supports shared libraries... yes; checking dynamic linker characteristics... Win32 ld.exe; checking how to hardcode library paths into programs... immediate; ./configure: line 17409: syntax error near unexpected token `""(c'; ./configure: line 17409: ` $as_echo_n ""(cached) "" >&6'. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795367:389,cache,cached,389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/901#issuecomment-281795367,1,['cache'],['cached']
Performance,"I already tried subsequent reads. Like:; 	String fileName = ""mol.xyz"";; 	conversion.ReadFile(mol1, fileName);; 	conversion.ReadFile(mol2, fileName);; where mol1 and mol2 are OBMol objects. After performing this code they both contain the same molecule even though the file contains two totally different ones. I tried the same with the ReadString() method with the same result. And the method Read() is unfortunately unusable as it takes a SWIGTYPE_p_std__istream as a parameter (or is there some way to map this SWIGTYPE to java InputStream?).; I tried all this with version 2.3.0. Original comment by: joannakocot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1079#issuecomment-281800077:195,perform,performing,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1079#issuecomment-281800077,1,['perform'],['performing']
Performance,"I am getting below error while installing openbabel using pip. please help. C:\Users\X265065>pip install openbabel. WARNING: Skipping C:\Users\X265065\AppData\Roaming\Python\Python311\site-packages\pillow-10.2.0.dist-info due to invalid metadata entry 'name'; WARNING: Skipping C:\Users\X265065\AppData\Roaming\Python\Python311\site-packages\pillow-10.2.0.dist-info due to invalid metadata entry 'name'; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; error: subprocess-exited-with-error. × python setup.py bdist_wheel did not run successfully.; │ exit code: 1; ╰─> [17 lines of output]; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\Python311\\include', 'C:\\Program Files\\Python311\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\Python311\\libs', 'C:\\Program Files\\Python311', 'C:\\Program Files\\Python311\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\Python311\include"" ""-IC:\Program Files\Python311\Include"" -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i; openbabel\openbabel-python.i(246) : Error: Unable to find 'openbabel\babelconfig.h'; C:\Program Files\Python311\include\openbabel\typer.h(66) : Error: CPP #error ""OB_EXTERN"". Use the -cpperraswarn option to continue swig processing. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2686:432,cache,cached,432,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2686,1,['cache'],['cached']
Performance,I am loading two modules : cmake/3.19.7 and gcc/7.2.0,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1664319416:5,load,loading,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1664319416,1,['load'],['loading']
Performance,"I am unable to install Openbabel's Python module. I believe that Openbabel needs to build the wheel for Python 3.9 and 3.10 with their latest version for pypi. ## Environment Information; Open Babel version: Latest (3.1.1.1); Operating system and version: x64-bit Windows 10. ## Expected Behavior; I want to install Openbabel from a `requirements.txt` file, so I ran `pip install openbabel`. ## Actual Behavior; ```; >pip install openbabel; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because it does not have a 'pyproject.toml' and the 'wheel' package is not installed. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/8559; Running setup.py install for openbabel ... error; error: subprocess-exited-with-error. × Running setup.py install for openbabel did not run successfully.; │ exit code: 1; ╰─> [16 lines of output]; running install; C:\[Path]\Python\Python310\lib\site-packages\setuptools\command\install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; warnings.warn(; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\[Path]\\Python\\Python310\\include', 'C:\\[Path]\\Python\\Python310\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\[Path]\\Python\\Python310\\libs', 'C:\\[Path]\\Python\\Python310', 'C:\\[Path]\\Python\\Python310\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\[Path]\Python\Python310\include -IC:\[Path]\Python\Python310\Inclu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2571:469,cache,cached,469,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571,1,['cache'],['cached']
Performance,"I am using OpenBabel 2.4.1. I am using the Java wrapper to transform SMILES to MOL. The following code crashes the JVM, without an Error. `public class OBTest {. public static void main(String[] args) {; System.loadLibrary(""openbabel_java"");. OBConversion conversion = new OBConversion();; OBOp gen = OBOp.FindType(""gen3d"");; OBMol mol = new OBMol();; ; conversion.SetInFormat(""smi"");; conversion.ReadString(mol, ""CC"");; ; gen.Do(mol);. conversion.SetOutFormat(""mol"");; System.out.println(conversion.WriteString(mol));; }; }`. The problematic line is. `gen.Do(mol);`. If it is removed, or if `gen2d` is used in. `OBOp gen = OBOp.FindType(""gen2d"");`. the code works correctly. I have repeated the same steps on the GUI and the command line, and it works perfectly.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854:211,load,loadLibrary,211,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854,1,['load'],['loadLibrary']
Performance,"I am using the Perl bindings with version 3.1.1 and only see crashes with gen3d. But, when I do the FF optimization that gen3D does (according to the source code), I do not have problems. To me it seems to be a problem with the stereochemistry checks. Since I start with connectivity only, stereochemistry does not matter. ; I am on Debian Linux, latest version, openbabel installed from source as there are no up-to-date packages.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2108#issuecomment-638535425:103,optimiz,optimization,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2108#issuecomment-638535425,1,['optimiz'],['optimization']
Performance,"I am using xcode 3.1. Looks like it may be problem with babelconfig.h. There is no mac version of babelconfig.h file provided in the package; what i did was copied babelconfig.h file from windows vc++ directory and uncommented vc++ include, may be i have messed up in this process. In down loads there is no source code download for mac OS and only have dmg. If I have I can build it for iPhone. . I have tried to compile code in mac os 10.5 and got same error as compiling using iphone os 2.2. /Developer/SDKs/MacOSX10.5.sdk/usr/include/c++/4.0.0/i686-apple-darwin9/bits/c++locale.h:72: error: 'snprintf' is not a member of 'std'. Because you have successfully compiled and created dmg, looks like I am missing some configuration settings. I will greatly appreciate it If you can please look into this issue.; Thanks. Ravi Singareddy; http://www.ooftish.com . Original comment by: singareddy",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372:290,load,loads,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794372,1,['load'],['loads']
Performance,"I believe it's needed so that instantiating OBConversion() will work (which loads the plugins). Again, I believe that resetting the flags will not affect anything. If you can test and let me know for sure, then I can look into moving the code inside OBConversion's __init__ itself. At the moment, the code is at the start of openbabel.py. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931:76,load,loads,76,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1222#issuecomment-281802931,1,['load'],['loads']
Performance,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:316,load,load,316,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976,4,"['Load', 'load', 'optimiz']","['Load', 'load', 'loadmodels', 'optimize']"
Performance,"I currently use mol2 files for pickling in [my project](https://github.com/oddt/oddt/blob/master/oddt/toolkits/ob.py#L480). It work fairly correct, and quite fast. Although it's not the ideal solution. The problem with code in mychem, which i have just noticed is that it doesn't store 3D information at all, which means that it would need lots of improvement. . Back to mol2-pickling, or in fact any other format. I can port the code to pybel so it can pickle it out of the box, but:; - that's Python only solution (I don't need C serialization); - is mol2 really the one to store molecules (atom typing as usual); i've benchamrked it vs sdf and mol2 was way faster;. It's easy and straightforward, and most probably we'd end up creating another file format. I didn't see it that way, but from this perspective it seams so. You might be right that the bottleneck is the kekulization and other checks.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847:853,bottleneck,bottleneck,853,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847,1,['bottleneck'],['bottleneck']
Performance,"I don't have strong feelings about this, I just think it would be good to break as little existing code as possible and `from openbabel import openbabel` also just looks a little bit weird. But if we do go that route, here's a cool trick to keep `import openbabel` working also, but emit a warning:. #### openbabel/\_\_init\_\_.py. ```; import sys; import warnings; from . import openbabel. _thismodule = sys.modules[__name__]. class ObProxy(object):; def __getattr__(self, name):; if hasattr(_thismodule, name):; return getattr(_thismodule, name); elif hasattr(openbabel, name):; warnings.warn('""import openbabel"" is deprecated, instead use ""from openbabel import openbabel""'); return getattr(openbabel, name); else:; raise AttributeError. sys.modules[__name__] = ObProxy(); ```. It's a bit of a hack, but [""occasionally used and recommended"" according to BDFL](https://mail.python.org/pipermail/python-ideas/2012-May/014969.html). (Alas, in Python 3.7 this is much easier, as you can just define `__getattr__` on a module to customise the behaviour and skip the whole proxy class). There may also be a way of doing this by adding a custom finder/loader to `sys.meta_path` as described in [PEP302](https://www.python.org/dev/peps/pep-0302/) and [PEP451](https://www.python.org/dev/peps/pep-0451/) (this is how [`six.moves`](https://pythonhosted.org/six/#module-six.moves) works) but that looks really overly complex to me and in the end might be equally hack-ish...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-470085051:1148,load,loader,1148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-470085051,1,['load'],['loader']
Performance,"I don't seem to be able to reproduce on my machine running Windows 10 and installing openbabel fresh (`conda install openbabel -c conda-forge`) in a conda environment running Python 3.10.; Could you try to create a new conda environment to test? (And double check that you are running the correct python...). It's a different error message than when `rigid-fragments.txt` is missing (and in that case, it seems like there is a fall-back mechanism that provides a structure).; ```; >obabel -:""BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1"" -ismi -omol --gen3d; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt. OpenBabel08102211013D. 35 36 0 0 1 0 0 0 0 0999 V2000; 15.2854 -6.1963 0.6627 Br 0 0 0 0 0 0 0 0 0 0 0 0; 13.6538 -5.1799 0.3704 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.2738 -4.5221 1.6597 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.1549 -3.1889 1.7844 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.8632 -2.4283 3.0137 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.0643 -2.9261 4.3048 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.9515 -2.0818 5.4201 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6588 -0.7266 5.2613 C 0 0 0 0 0 0 0 0 0 0 0 0; 12.6605 0.0345 6.3986 O 0 0 0 0 0 0 0 0 0 0 0 0; 13.1570 1.3845 6.2683 C 0 0 2 0 0 0 0 0 0 0 0 0; 14.2087 1.6314 7.3590 C 0 0 0 0 0 0 0 0 0 0 0 0; 13.5728 1.5865 8.7459 C 0 0 0 0 0 0 0 0 0 0 0 0; ...; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147:625,Load,LoadFragments,625,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1210382147,1,['Load'],['LoadFragments']
Performance,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2024:249,load,load,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024,1,['load'],['load']
Performance,"I e-mailed the original poster of https://sourceforge.net/p/openbabel/mailman/message/34502202/ to follow-up, and present my hypothesis after researching the HRESULT error code that appeared in the attached log. openbabel_csharp.dll may fail to load in this manner if other DLLs it depends upon (notably, the Microsoft VC++ Run-Time library DLL corresponding to the Visual Studio used to build OB) are not present on the IIS server. The DLLs must match version / target architecture (32 or 64bit) / build configuration (debug or release). I'm unaware of the specifics of the original poster's machine configurations, but recommended carefully verifying that all depedent DLLs exist and match between the two machines. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872:245,load,load,245,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347#issuecomment-281804872,1,['load'],['load']
Performance,"I encounter similar issues with N-heterocycles in my own work, so it would be awesome if we could resolve this. One thing I've noticed in #1360 and this example is that you get the 2.3.2 result if you comment out the line `[#7D2R][#6D3^2][#7D2] 0 1 2 1 2 1` in data/bondtyp.txt. I haven't been able to get down to the root cause yet, but my suspicion is some sort of race condition where it's typing two double bonds next to each other. (Different input files can give different SMILES). @baoilleach Any ideas? @ehfassio has some nice, detailed analysis in #1925 as well",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457036564:367,race condition,race condition,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1920#issuecomment-457036564,1,['race condition'],['race condition']
Performance,"I had libxml2 compiled from source with configure flags; --without-threads --disable-shared. While it compiled fine the resulting library didn't link with OB.; After your advice I tried compiling libxml2 from source as provided at MinGW, unfortunately the script they have did not run for me.; So now I installed libxml2 binary library (-dev and -dll packages) from; http://sourceforge.net/projects/mingw/files/MSYS/libxml2/; as well as libiconv (dll only) and zlib (dll only). This allows for openbabel to compile and tests to run, but it's certainly not a static library which was the goal from the beginning as it requires 3 additional DLLs to load. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713:647,load,load,647,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1037#issuecomment-281797713,1,['load'],['load']
Performance,"I have a program which generates python scripts that use open babel to read CIF files, perform energy calculations on them, and then output a new CIF file. It works almost always, but seems to fail on reading a few CIF files that are seemingly properly formatted. I have included a problem CIF file, the python script used to read and operate on it, and a log file of the error that is generated when this python script is run. Using Open Babel version 2.2.3, running on Ubuntu Linux. Reported by: stewenner",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122:87,perform,perform,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122,1,['perform'],['perform']
Performance,"I have a sdf file containing 31000 ligands from a database called CMNPD; ![Screenshot 2024-08-22 115041](https://github.com/user-attachments/assets/c5b43fb4-2d99-4b06-8a20-13e798209b1a); . I want to perform energy minimization of the ligands before proceeding for virtual screening.; I am using Open babel on linux terminal to do so. The command I used is, ; obminimize -ff MMFF94 -sd CMNPD-export.sdf > target.sdf. Which ran successfully a while, but exited once an error was encountered, . ""**S E T T I N G U P C A L C U L A T I O N S. SETTING UP BOND CALCULATIONS...; COULD NOT FIND PARAMETERS FOR BOND 1-4 (IDX)...; obminimize: could not setup force field**."". Can you please guide me how to solve the issue? Or what could've gone wrong?; Is there any way to skip the problematic molecules for which force field cannot be generated?; Also, how can I determine up to which molecule the command ran successfully?. Thanks in advance.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719:199,perform,perform,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719,1,['perform'],['perform']
Performance,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:771,perform,performance,771,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930,1,['perform'],['performance']
Performance,"I have been trying the cmake build of openbabel. After 'make install' I get the following errors when running babel. All listed files do exist in the specified directory. ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/chemdrawcdxformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/chemdrawctformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/chemkinformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/molreportformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/rsmiformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/rxnformat.so did not load properly. This error does not occur when using autotools, i.e. running configure then make. I am using Mac OS X Leopard. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756:227,Load,LoadFormatFiles,227,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756,12,"['Load', 'load']","['LoadFormatFiles', 'load']"
Performance,"I have found out a case when OpenBabel crashes with a segmentation fault. After playing a bit, I have found the simplest case to break it is something like the following SMILES string:. F13.1. To reproduce the error, do the following:. $ echo 'F13.1' > test.smi; $ babel -i smi test.smi -o mol test.mol; Segmentation fault. In Python:; $ python; Python 3.4.1 (default, May 23 2014, 17:48:28) [GCC] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; import pybel; pybel.readstring('smi', 'F13.1'); Segmentation fault; $. I have run babel with GDB, here is the backtrace:. 1 0x00007fffef348cdb in OpenBabel::OBSmilesParser::ParseSmiles (this=this@entry=0x7fffffff41b0, mol=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:431; 2 0x00007fffef349427 in OpenBabel::OBSmilesParser::SmiToMol (this=this@entry=0x7fffffff41b0, mol=..., s=...) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:398; 3 0x00007fffef349c63 in OpenBabel::SMIBaseFormat::ReadMolecule (this=<optimized out>, pOb=<optimized out>, pConv=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/formats/smilesformat.cpp:343; 4 0x00007ffff77934e2 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffdf60, pFormat=0x7fffef55fb50 <OpenBabel::theSMIFormat>) at ../temp/openbabel-2.3.2/src/obmolecformat.cpp:105; 5 0x00007ffff7738e8c in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60) at ../temp/openbabel-2.3.2/src/obconversion.cpp:519; 6 0x00007ffff773b33d in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffdf60, is=0x7fffffffd3e0, os=os@entry=0x7fffffffcfe0) at ../temp/openbabel-2.3.2/src/obconversion.cpp:450; 7 0x00007ffff773d6cf in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffdf60, FileList=..., OutputFileName=..., OutputFileList=...) at ../temp/openbabel-2.3.2/src/obconversion.cpp:1417; 8 0x0000000000402eba in main (argc=7, argv=0x7fffffffe318) at ../temp/openbabel-2.3.2/tools/babel.cpp:347. The following line gives an err",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1316:1130,optimiz,optimized,1130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1316,2,['optimiz'],['optimized']
Performance,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:545,cache,cache,545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572,2,['cache'],['cache']
Performance,"I have the same problems. I have installed OpenBabel into `C:\Program Files\OpenBabel-3.1.1`. And the location is in PATH environment. ```shell; (common) C:\Users\Liu.D.H>pip install -U openbabel; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Collecting openbabel; Using cached https://pypi.tuna.tsinghua.edu.cn/packages/9d/3f/f08f5d1422d74ed0e1e612870b343bfcc26313bdf9efec9165c3ea4b3ae2/openbabel-3.1.1.1.tar.gz (82 kB); Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Command errored out with exit status 1:; command: 'C:\Users\Liu.D.H\anaconda3\envs\common\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' bdist_wheel -d 'C:\Users\Liu.D.H\AppData\Local\Temp\pip-wheel-k092nuj6'; cwd: C:\Users\Liu.D.H\AppData\Local\Temp\pip-install-ngq7bdyo\openbabel\; Complete output (15 lines):; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\libs', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\Users\Liu.D.H\anaconda3\envs\common\include -IC:\Users\Liu.D.H\anaconda3\envs\common\include -I/usr/local/include/openbabel3 -o ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949:287,cache,cached,287,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949,1,['cache'],['cached']
Performance,I have tried to perform the command ; babel -ac 1bxr.pdb 1bxr.pdb to generate CONECT records in the pdb. ; But every time I have a segmentation fault. Tried on several machines with Debian Linux and OpenBabel 2.3.1 - 2.3.90; The pdb file is obtained from rcsb.org without any modification. Reported by: annndrey,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1163:16,perform,perform,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1163,1,['perform'],['perform']
Performance,"I just notice the same road block: . $ obsym bz.xyz ; Point Group: Segmentation fault. in Linux Debian bullseye / sid running apt-based openbabel 3.1.0 (Jan 6, 2021). The following is not a solution which modifies openbabel (possibly related to [this](https://github.com/openbabel/openbabel/issues/2282)). But, if there is no need for batch wise processing model data, [Jmol](http://jmol.sourceforge.net/) equally may provide at least parts of this information, too. Load the model (from the program's own CLI, this is e.g. `load 'benzene.pdb';`). Then, if you may afford this, deselect the hydrogens (`select !_H;`) from the scrutiny, followed by `draw pointgroup;`: this will yield both the attributed point group D6h printed in the CLI and the simultaneous display of the molecule including the identified symmetry elements. ![benzene_loop](https://user-images.githubusercontent.com/19709084/108079768-13bc9300-7067-11eb-9af8-f346df6cb3ad.gif). A longer way ([reference](https://chemapps.stolaf.edu/jmol/docs/)) may be to call `calculate pointgroup;` because this allows you to list the symmetry elements (`show pointgroups;`) and to pick e.g., by `draw pointgroup C3;` only the C3 axis for additional display.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2286#issuecomment-779906609:467,Load,Load,467,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286#issuecomment-779906609,2,"['Load', 'load']","['Load', 'load']"
Performance,"I misunderstood the meaning of `SetChiralityPerceived()`. I intended to set chirality based on the current 3D structure instead of cached one, but it was opposite. I replaced it to `StereoFrom3D()`, but the test still fails. Maybe SMILES generation is not dependent on these settings?. In addition to distance geometry related test failures, there are many tests failing. I'm not sure rebase was successful. Closing this pull request and branching from the current master may make problem easier. https://github.com/openbabel/openbabel/blob/2f51910df2aebbfd1258a2c1100d50a3e1ec7d9e/src/distgeom.cpp#L915",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978:131,cache,cached,131,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-555329978,1,['cache'],['cached']
Performance,I posted two error and sorry that might have caused confusion. libstc++ error is gone when I load gcc module and only `thread_local does not name not a type` error is still showing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202:93,load,load,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670966202,1,['load'],['load']
Performance,"I read your lines in the tune of «nice that Jmol is able to; contribute to a solution, but it does so only via a GUI». If this interpretation were correct, my reply to this is /no/. With; e.g, flags `-ions`, especially the GUI-less JmolData.jar (equally; distributed in the Jmol archive) may run from the CLI in large; batches from the CLI. All you need is to identify the commands necessary and write a script; .spt (there is an interactive Jmol script documentation; here, you; only need to gravitate around the keywords `load` for file input and; `write` for the subsequent export. The script editor [Jmol.jar GUI,; File -> Script Editor] eases to compose them and probe their action,; too.). Later use the script from the CLI in the pattern of . java -jar Jmol.jar -ions water_script.spt. where `water_script.spt` may contain for-loops, if-clauses, arrays,; etc. Just look for e.g., «JmolData.jar apparently doesn't report; InChI back to CLI» in the Jmol user list archive back in February; 2022 when I faced an automation problem Robert Hanson knew how to; address the Jmol way. This command may be called from bash, Python,; AWK, etc. Root entry: https://sourceforge.net/p/jmol/mailman/message/37610564/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839:25,tune,tune,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458#issuecomment-1088274839,2,"['load', 'tune']","['load', 'tune']"
Performance,"I reproduced this on my mac (OpenBabel 2.4.1, OSX 10.12.1). It crashes when I try to convert Acetonitrile.nwo to *.xyz on the first try. Here's the crash report:. ```; Crashed Thread: 0 Dispatch queue: com.apple.main-thread. Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: EXC_I386_GPFLT; Exception Note: EXC_CORPSE_NOTIFY. Termination Signal: Segmentation fault: 11; Termination Reason: Namespace SIGNAL, Code 0xb; Terminating Process: exc handler [0]. Application Specific Information:; Performing @selector(controlAction:) from sender wxNSButton 0x7fc171b049e0. Thread 0 Crashed:: Dispatch queue: com.apple.main-thread; 0 libopenbabel.5.dylib 	0x000000010367922e OpenBabel::OBMol::AddBond(int, int, int, int, int) + 120; 1 libopenbabel.5.dylib 	0x000000010367fc40 OpenBabel::OBMol::ConnectTheDots() + 1296; 2 nwchemformat.so 	0x00000001088da9b5 OpenBabel::NWChemOutputFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) + 1023; 3 libopenbabel.5.dylib 	0x00000001036c616d OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) + 1669; 4 libopenbabel.5.dylib 	0x00000001036880cc OpenBabel::OBConversion::Convert() + 316; 5 libopenbabel.5.dylib 	0x0000000103687cc4 OpenBabel::OBConversion::Convert(std::__1::basic_istream<char, std::__1::char_traits<char> >*, std::__1::basic_ostream<char, std::__1::char_traits<char> >*) + 218; 6 libopenbabel.5.dylib 	0x000000010368b0fd OpenBabel::OBConversion::FullConvert(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) + 305",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742:195,queue,queue,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742,3,"['Perform', 'queue']","['Performing', 'queue']"
Performance,"I see the same behavior when writing to different files on the same file system:; ```sh; $ \; > echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -O t1.mol2 -h --gen3d --conformer --nconf 100 --score energy -ismi & \; > echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -O t2.mol2 -h --gen3d --conformer --nconf 100 --score energy -ismi &; [1] 2434610; [2] 2434612; Initial conformer does not pass filter!; Initial conformer does not pass filter!; rivendell merzky ~ [master *] $ Initial conformer count: 0; 100000 attempts, 0 duplicates, 100000 failed filter. =====> Starting conformers search with a Genetic Algorithm <=====; Perform elitist generation replacement with mutation only; Mutation probability: 0.2; Will stop after 5 generations without improvement. Generation #1 0; Generation #2 0; Generation #3 0; Generation #4 0; Generation #5 0; Generation #6 0; GetConformers:; Initial conformer count: 0; 100000 attempts, 0 duplicates, 100000 failed filter. =====> Starting conformers search with a Genetic Algorithm <=====; Perform elitist generation replacement with mutation only; Mutation probability: 0.2; Will stop after 5 generations without improvement. Generation #1 0; Generation #2 0; Generation #3 0; Generation #4 0; Generation #5 0; Generation #6 0; GetConformers:. $ sleep 10; $ ps; $ ps; PID TTY TIME CMD; 2433843 pts/0 00:00:00 bash; 2434610 pts/0 00:00:18 obabel; 2434612 pts/0 00:00:18 obabel; 2434795 pts/0 00:00:00 ps. $ top -n 1 | grep obabel; 2434612 merzky 20 0 127440 28808 16216 R 435,3 0,1 7:17.42 obabel ; 2434610 merzky 20 0 127432 28624 16032 R 370,6 0,1 7:18.93 obabel; ```. Are you able to reproduce that problem?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663413290:616,Perform,Perform,616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663413290,2,['Perform'],['Perform']
Performance,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279:748,optimiz,optimizations,748,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279,2,['optimiz'],"['optimization', 'optimizations']"
Performance,"I suspect there is some difference between the Windows and UNIX / Mac build environments. Right now, the rxnformat and cmlreactformat will not load properly -- they appear to be linked incorrectly. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/631:143,load,load,143,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/631,1,['load'],['load']
Performance,"I think I found the problem. I installed two version of Openbabel in my computer. I had change the value of $BABEL_DATADIR to new version, but I forgot to change the value in $Path. The OBDotNet.dll was trying to load the openbabel_csharp.dll from the 2.4.1 directory which still calls the method using the old name. The problem was solved by changing the openbabel related value in $Path. Thanks for the help !!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-547015082:213,load,load,213,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-547015082,1,['load'],['load']
Performance,"I think it should be possible to run ldd in Linux to get the dynamic libraries used for a .so so you could run `ldd _openbabel.so` and see what it's linked against and compare to your python binary.; Looking back in the thread I would also get back to Noel's comment on pybel vs. openbabel loading. If you can import openbabel but not pybel, try to instantiate an obconversion object and then load some formats to see if that is what is actually causing the segfault. In that case, all this linkage work probably won't help...; My final pease of advise for earlier posts would be that if `otool -L` shows entries with `@rpath/...` it can be an idea to check what `otool -l` shows as explained in http://stackoverflow.com/a/12522096/328879",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159555065:290,load,loading,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159555065,2,['load'],"['load', 'loading']"
Performance,"I think there is a general problem in dealing with stereochemistry with SMILES strings, and that this bug is tied to [ 1742876 ] and [ 1792878 ], and possibly to a bunch of closed bugs. We are looking to use OpenBabel to generate database primary keys. We are parsing a vendor-supplied database, which includes both molfile and SMILES descriptors for compounds. For chiral compounds, OpenBabel appears to perform well when converting the vendor-supplied molfile data to either InChI or canonical SMILES. OpenBabel seems (* caveat below *) to have a very high failure rate when it uses the vendor-supplied SMILES string, though. I tested 53 small (SMILES string <= 20 characters) chiral molecules, and about half (26 - included as attachment) appear to disrupt the stereochemistry when inputed as SMILES. The disruption was visible either when converting to InChI (10 cases), to canonical SMILES (8 cases) or both (8 cases):. Failed both InChI and Canonical SMILES:; C[C@@H]1Cc2ccccc2CN1; C[C@H]1Cc2ccccc2CN1; FC[C@H]1Cc2ccccc2CN1; N[C@@H]1CCSC1=O; N[C@H]1CCSC1=O; OC(=O)C[C@@H]1CCNC1; OC(=O)C[C@H]1CCNC1; OC[C@H]1Cc2ccccc2CN1. Failed InChI:; C\C=N/OC[C@H]1CCCN1C; CN(C)CC#C[C@H]1CCCN1; CN1CCC[C@H]1c2cccnc2; CP(O)(=O)C[C@H](O)CN; FC[C@@H]1CCCN1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:405,perform,perform,405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['perform'],['perform']
Performance,I think this is an installation bug. Can you use the pybel localopt() method to do force field optimizations? I'm seeing a pattern that suggests the data files aren't found correctly on Windows.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1643#issuecomment-354306973:95,optimiz,optimizations,95,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1643#issuecomment-354306973,1,['optimiz'],['optimizations']
Performance,"I think you outline a need for a fast search ""server"" tool. Basically, you'd load the index and then be able to send searches to it. There's probably some minimal syntax with a ""reload"" to reload the index and ""terminate"" to quit the process. It can be much simpler than obabel because it's single-purpose.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469:77,load,load,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469,1,['load'],['load']
Performance,"I tried both `break mcdlutil.cpp:2575` and `break src/mcdlutil.cpp:2575`, but every time I get; ```; No source file named mcdlutil.cpp.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (mcdlutil.cpp:2575) pending.; ```; And then doing `run` just proceeds until the end of the program, and I get the same output as without the breakpoint. I guess I will need to look through some tutorial on gdb usage.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942333698:186,load,load,186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942333698,1,['load'],['load']
Performance,"I understood that the point of serialization in MyChem is to speed up; reading or writing, e.g. by avoiding perception. I think that adding this; to the core API would be interesting. But using pickling or serialisation; using an existing format doesn't help with this. On 7 March 2016 at 14:01, Maciej Wójcikowski notifications@github.com; wrote:. > I currently use mol2 files for pickling in my project; > https://github.com/oddt/oddt/blob/master/oddt/toolkits/ob.py#L480. It; > work fairly correct, and quite fast. Although it's not the ideal solution.; > The problem with code in mychem, which i have just noticed is that it; > doesn't store 3D information at all, which means that it would need lots of; > improvement.; > ; > Back to mol2-pickling, or in fact any other format. I can port the code to; > pybel so it can pickle it out of the box, but:; > - that's Python only solution (I don't need C serialization); > - is mol2 really the one to store molecules (atom typing as usual);; > i've benchamrked it vs sdf and mol2 was way faster;; > ; > It's easy and straightforward, and most probably we'd end up creating; > another file format. I didn't see it that way, but from this perspective it; > seams so. You might be right that the bottleneck is the kekulization and; > other checks.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985:1243,bottleneck,bottleneck,1243,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985,1,['bottleneck'],['bottleneck']
Performance,"I use **python** binding, executing the following code:. 	::::python; 	mol = openbabel.OBMol(); 	conversion = openbabel.OBConversion(); 	conversion.SetInFormat('sdf'); 	conversion.ReadFile(mol, 'at-406-s2754.SDF'); 	# <http://file.selleck.cn/downloads/product-sdf/at-406-s2754.SDF>; 	mol.AddHydrogens(); 	stereofacade = openbabel.OBStereoFacade(mol); 	for atom in openbabel.OBMolAtomIter(mol):; 		atomid = atom.GetId() #	unsigned long atomId (0-based); 		if not stereofacade.HasTetrahedralStereo(atomid):; 			continue; 		tetrahedralstereo = stereofacade.GetTetrahedralStereo(atomid); 		config = tetrahedralstereo.GetConfig() ; 		print '!!Config:', atomid, config.view, config.winding, \; 			config.center, config.refs, config.from_or_towards, \; 			config.specified. The output:. >; !!Config: 16 1 1 16 (14L, 17L, 20L) 4294967294 True; !!Config: 19 1 1 19 (21L, 20L, 18L) 4294967294 True; !!Config: 25 1 1 25 (27L, 26L, 24L) 4294967294 True; !!Config: 29 1 1 29 (38L, 28L, 37L) 4294967294 True. I think the value `4294967294` for `config.from_or_towards` is something like `-1` or `NaN` translated from **C++**. However, from `atom.GetId()` I know that all atoms, including the new added **H**, have a id, from `1` to `83`. The value `4294967294` may disturb comparison of `config` objects (not shown). And further, if I save the `mol` with **H** and load the saved file, `config.from_or_towards` is nolonger `4294967294` but a meaningful integer. I think that is a bug, steming from the lazy updating of `OBStereoFacade`, which should update automatically when running `AddHydrogens`. Reported by: biohuang. Original Ticket: [openbabel/bugs/910](https://sourceforge.net/p/openbabel/bugs/910)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1290:1351,load,load,1351,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290,1,['load'],['load']
Performance,"I use the java binding from openbabel 2.4.1. The OBMol.DeleteHydrogens(OBAtom atom) acted well the first time but if I do it the second time, It did really remove the hydrogends bonded to atom. Following is the code: ; ```java; import org.openbabel.*;. public class Main {. public static void main(String[] args) {; // Initialise; System.loadLibrary(""openbabel_java"");. // Read molecule from SMILES string; OBConversion conv = new OBConversion();; OBMol mol = new OBMol();; conv.SetInFormat(""smi"");; conv.ReadString(mol, ""CCCCCC"");; mol.AddHydrogens();; System.out.println(mol.NumAtoms()); // output: 20. OBAtom atom = mol.GetAtom(1);; System.out.println(atom.GetType()); // output: C3; mol.DeleteHydrogens(atom);; System.out.println(mol.NumAtoms()); // output: 17, it's right. atom = mol.GetAtom(1);; System.out.println(atom.GetType()); // output: C3; mol.DeleteHydrogens(atom);; System.out.println(mol.NumAtoms()); // output: 17, it should be 15. mol.DeleteHydrogens(); // this one works;; System.out.println(mol.NumAtoms()); // output: 6, It works as it should be.; }; }; ```; Thanks.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/363:338,load,loadLibrary,338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/363,1,['load'],['loadLibrary']
Performance,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:270,load,loading,270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,1,['load'],['loading']
Performance,"I was pulling my hair out over this failure, which occurred only with the Clang build (on Linux)...but it's right. It's not loading the plugins that requires this to be set, but ""import _openbabel"" (or it's equivalent) in the openbabel.py. That pulls in the .so file. Still don't understand the underlying reason why, but at least I know where the fix goes now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991:124,load,loading,124,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775#issuecomment-364693991,1,['load'],['loading']
Performance,"I was testing Open Babel 2.3.0 for its ability to use it in a script to test for unique compounds when I encountered a problem concerning the processing of aromaticity when reading smiles input with some specific aromatic rings. Step 1: convert this protonated molecule to canonical smiles:; $ echo ""C1=CC=CC=C1N1[N-]C(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([n-]1)c1ccccc1. Step 2: read the canonical smiles and convert it to canonical smiles :; $ echo ""O=c1ccc(=O)n([n-]1)c1ccccc1"" | babel -ismi -ocan; O=C1CCC(=O)[N-]N1c1ccccc1	. One would expect that the result of step 2 would generate the same canonical smiles again, but as the example shows this is not happening. . If I perform the same procedure but with neutral form the procedure is OK.; $ echo ""C1=CC=CC=C1N1NC(=O)C=CC1(=O)"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. $ echo ""O=c1ccc(=O)n([nH]1)c1ccccc1"" | babel -ismi -ocan; O=c1ccc(=O)n([nH]1)c1ccccc1	. Gert Thijs; gert.thijs@silicos.com. Reported by: @gertthijs",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042:687,perform,perform,687,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042,1,['perform'],['perform']
Performance,"I will move the square root tomorrow. I considered leaving it out from the beginning, but I guessed that there are seldom molecules with no bonds and more than a few atoms in them so that the loop won't be called that much... Do you think that the distance calculations should be changed and cached as well? (Instead of calling `atom->GetX() - atom2->GetX()` twice) I'm not enough of a C++-programmer to tell what level of optimization is best. Regarding #1317, I think that the actual error mentioned there (; ```; *** Open Babel Error in SVGFormat; Molecule needs 2D coordinates to display in SVGformat; ```; ) has been fixed for a while (at least I don't see it when I run the example code on a version from before my changes) but with this change you will also get a good looking image instead of ; ![test_1317](https://cloud.githubusercontent.com/assets/86855/26757270/50fd24fe-48b7-11e7-8fa5-92c6b5d119ab.png); :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306003536:292,cache,cached,292,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306003536,2,"['cache', 'optimiz']","['cached', 'optimization']"
Performance,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1542,Optimiz,OptimizeNative,1542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389,1,['Optimiz'],['OptimizeNative']
Performance,"I'll have to look into the problem in more detail to see whether there is an alternative, but copying and addng hydrogens will be a performance hit. I've seen this elsewhere - we use this approach to handle matching against SMARTS with explicit hydrogens (I think I might even be the author of this) - these patterns are an order of magnitude slower to match (according to a SMILES benchmark from @johnmay). If you can't see any alternative, is it okay if I take a look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339:132,perform,performance,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-561188339,1,['perform'],['performance']
Performance,"I'm definitely game to add something like this, but it'd be great if it:; a) used the existing input formats (e.g., as an output option); b) built on top of the limited read-keywords/model implemented in Gaussian and GAMESS output formats. Please feel free to e-mail the list and I'd be happy to give pointers. I think a lot of people would like this, particularly the support for constrained optimizations.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/169#issuecomment-98802213:393,optimiz,optimizations,393,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/169#issuecomment-98802213,1,['optimiz'],['optimizations']
Performance,"I'm fine to merge this, but the AppVeyor (Visual C++) build must be fixed:. ```; C:\openbabel\src\ops\conformer.cpp(98): error C2440: 'initializing' : cannot convert from 'std::basic_istream<char,std::char_traits<char>>' to 'bool' [C:\openbabel\build\src\plugin_ops.vcxproj]; No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called; C:\openbabel\src\ops\conformer.cpp(125) : see reference to function template instantiation 'bool OpenBabel::getValue<int>(const std::string &,T &)' being compiled; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/343#issuecomment-264619441:331,perform,perform,331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/343#issuecomment-264619441,1,['perform'],['perform']
Performance,"I'm getting a segmentation fault when loading a GAMESS output file with vibrational frequencies (mol1test_freq.log, attached). Output from a mere optimization run reads in fine (except for that it complains not being able to assign all charges) (mol1opt.log, attached). . System: OSX 10.9 Mavericks, openbabel compiled from github commit 5f0837 Sat Mar 15 15:59:37 2014. Attached is the gamess output file. . This is the code I'm using to read it in (python):; ```~~~; >>> import pybel; >>> mols = pybel.readfile(format='gamess', filename='mol1test_freq.log'); >>> m = mols.next(); Segmentation fault: 11; ```~~~. Reported by: mschmuker. Original Ticket: [openbabel/bugs/918](https://sourceforge.net/p/openbabel/bugs/918)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298:38,load,loading,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298,2,"['load', 'optimiz']","['loading', 'optimization']"
Performance,"I'm going to close this. We're not going to remove native optimizations, but they're not the default - for this reason.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625398690:58,optimiz,optimizations,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625398690,1,['optimiz'],['optimizations']
Performance,"I'm guessing this is a smaller example and you're using `obabel` in a pipe to some other process. I'm also guessing the following works:; `echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -O t1.mol2 -h --gen3d --conformer --nconf 100 --score energy -ismi`. I guess my question is whether there's a subtle race condition with `stdout` -- if you write to files rather than redirect with `>` do you see the same hang?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663286521:300,race condition,race condition,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262#issuecomment-663286521,1,['race condition'],['race condition']
Performance,"I'm having a bit of trouble, the current suggested comments don't offer me a solution. The only one I haven't tried is Conda because I don't want to have to install another Python package manager. . * I have python installed and on PATH (3.11.0); * I have pip installed and did an upgrade to be sure; * I have SWIG installed and on path; * I have OpenBabel installed and on path. When running `pip install openbabel` it attempts to compile openbabel and fails to find the header files, then asks if maybe I haven't installed these files:. ```; pip install -U openbabel; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Preparing metadata (setup.py) ... done; Installing collected packages: openbabel; DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because it does not have a 'pyproject.toml' and the 'wheel' package is not installed. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/8559; Running setup.py install for openbabel ... error; error: subprocess-exited-with-error. × Running setup.py install for openbabel did not run successfully.; │ exit code: 1; ╰─> [67 lines of output]; running install; C:\Users\bryab\AppData\Local\Programs\Python\Python311\Lib\site-packages\setuptools\command\install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; warnings.warn(; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311\\include', 'C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311\\libs', 'C:\\Users\\bryab\\AppData\\Local\\Programs\\Python\\Python311', 'C:\\Users\\bryab\\AppData\\Local\\",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197:598,cache,cached,598,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197,1,['cache'],['cached']
Performance,"I'm using SVN openbabel through git avogadro. If SO3 (with a double S=O bond for each of the oxygens) is optimized, none of the available forcefields result in a planar shape, though ghemical gets very close, with an O=S=O angle of 118°. In particular, UFF results in a tetrahedral shape, even though SO3 is mentioned in UFF.prm. This leads me to suspect that this is in fact a bug in the UFF implementation, but I am not sure. In any case, it would be good to have at least one forcefield handling this case correctly. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/974:105,optimiz,optimized,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/974,1,['optimiz'],['optimized']
Performance,"I've been doing some performance testing of OpenBabel on large datasets ; (2-4 million compounds) and whilst I had no problems it probably is ; hitting the current limits. It is also apparent that the current and future ; generation of machines a multi-core architecture will become more ; common place. To take advantage of this we really need multi-threading. ; Not a trivial request I know but could give significant performance gains. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/105"":https://sourceforge.net/p/openbabel/feature-requests/105",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1474:21,perform,performance,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1474,3,"['multi-thread', 'perform']","['multi-threading', 'performance']"
Performance,"I've been testing this version for loading CIF files and converting them to PDB, seems to work well.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481:35,load,loading,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-299960481,1,['load'],['loading']
Performance,"I've just installed the mac binary version 2.1.1, and so far all attempts to run the program generate a set of LoadFormatFiles errors. I've tried several files, going from cml to pdb or pdb to cml, and I've tried both direct command-line invocation and running via iBabel. This might be an installer problem, a system config problem, or simple user error. os version: osX 10.4.11; python version: 2.3.5; babel version: 2.1.1 via mac binary installer pkg. typical error message (this one from iBabel, but command-line is the same). computer:~ me$ /usr/local/bin/babel -icml '/Users/me/Documents/web_downloads/1UD0.pdb' -ocml '/Users/me/Desktop/outputfile.cml' ; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cdxmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/cmlreactlformat.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/pubchem.so did not load properly; ==============================; *** Open Babel Error in LoadFormatFiles; /usr/local/lib/openbabel/xmlformat.so did not load properly; babel: cannot read input format!. Am attaching a typical pdb file that fails to convert. Reported by: eingersoll",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744:111,Load,LoadFormatFiles,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744,11,"['Load', 'load']","['LoadFormatFiles', 'load']"
Performance,"I've taken a chance on this one, rather than writing up the Enhancement Proposal. Here goes... Atom class data is currently stored as an OBAtomClassData object on an OBMol. This PR moves it to being stored on an OBAtom directly. The overall rationale for this change is not so much the conceptual issue of atom data being stored on the molecule object - sure, this is true, but it's something I could live with. The problem is that the data is currently stored using atom indices, and these require bookkeeping/updating when the molecule is modified. All of this bookkeeping goes away if the information is stored directly on an atom. This is a performance issue for a molecule with multiple atom classes - just consider that a call to DeleteAtom() ~~for an atom with an atom class~~ means that all of the existing atom classes may need to be adjusted. Note that this doesn't yet address #1731, but I will do this next.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1741:645,perform,performance,645,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1741,1,['perform'],['performance']
Performance,"Ian Scott, iscott@frontier.com, Windows 7, 64-bit. When converting files from smiles, mol, mol2 ,sdf into pdbqt with the generate 3D coordinates active the molecules do not form correctly. Rings are broken and strange bonds form (as viewed in PyRx or Autodock). This problem can be avoided by performing the 3D conversion as an independent step with a different file output file type (e.g. sdf to sdf) and then converting to pdbqt without selecting the generate 3D coordinates option. Therefore, the problem is most likely in the pdbqt 3D coordinate generator. A example problem smiles string: COc1cc(cc(c1OC)OC)C(C(=O)N1CCCCC1C(=O)OC(CCCc1ccccc1)CCCc1cccnc1)(F)F	. Reported by: ianlscott1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1130:293,perform,performing,293,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1130,1,['perform'],['performing']
Performance,"If I load a PDB molecule and afterwards load an XTC trajectory for that molecule (which seems to be the way to load a trajectory in Open Babel), then at some point the JVM crashes due to a crash in native code. I found out the reason is that the OBMol.finalize() method (which is called by the garbage collector when there is no more references to an object) includes a call to OBMol.delete() which is responsible for calling into the native code that then crashes. I have included the crash information in ""crash.txt"" and I will attach an example molecule and trajectory later (I do not see the possibility for multiple attachments). The code below is the reduced test case:. OBConversion conversion = new OBConversion();; conversion.SetInFormat(""pdb"");. OBMol molecule = new OBMol();; conversion.ReadFile(molecule, ""/path/to/AcAANMe.pdb"");. conversion.SetInFormat(""xtc"");; // Crash if next line is uncommented:; //conversion.ReadFile(molecule, ""/path/to/trajectory.xtc"");. molecule.delete();. Reported by: mkjensen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1125:5,load,load,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1125,3,['load'],['load']
Performance,"If you get the full output with `valgrind --leak-check=full --show-leak-kinds=all ./a.out`, the memory leak can be traced to `dlopen()`. ```; ==16456== 43,464 bytes in 148 blocks are still reachable in loss record 17 of 18; ==16456== at 0x483DD99: calloc (vg_replace_malloc.c:762); ==16456== by 0x40133CA: _dl_check_map_versions (dl-version.c:274); ==16456== by 0x401623C: dl_open_worker (dl-open.c:577); ==16456== by 0x4F338B7: _dl_catch_exception (dl-error-skeleton.c:208); ==16456== by 0x4015749: _dl_open (dl-open.c:837); ==16456== by 0x4FC334B: dlopen_doit (dlopen.c:66); ==16456== by 0x4F338B7: _dl_catch_exception (dl-error-skeleton.c:208); ==16456== by 0x4F33982: _dl_catch_error (dl-error-skeleton.c:227); ==16456== by 0x4FC3B58: _dlerror_run (dlerror.c:170); ==16456== by 0x4FC33D9: dlopen@@GLIBC_2.2.5 (dlopen.c:87); ==16456== by 0x4A31CDB: DLHandler::openLib(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (in /usr/local/lib/libopenbabel.so.7.0.0); ==16456== by 0x49D5F4F: OpenBabel::OBPlugin::LoadAllPlugins() (in /usr/local/lib/libopenbabel.so.7.0.0); ```. It seems as if there are long-standing bugs with using `valgrind` and `dlopen` together. https://stackoverflow.com/questions/1542457/memory-leak-reported-by-valgrind-in-dlopen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847975441:1047,Load,LoadAllPlugins,1047,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847975441,1,['Load'],['LoadAllPlugins']
Performance,"Impliciting/expliciting hydrogens should not change the structure but DeleteHydrogens currently removes hydrogens with a specified isotope - it should not. Unrelated to this, but there's a performance issue with DeleteHydrogens. It should not delegate to DeleteHydrogen but do not whatever needs doing itself.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/178:189,perform,performance,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/178,1,['perform'],['performance']
Performance,Improve performance of SMILES parser,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1589:8,perform,performance,8,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1589,1,['perform'],['performance']
Performance,Improve performance of element handling,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1601:8,perform,performance,8,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1601,1,['perform'],['performance']
Performance,"In #1979 I partly replaced `babel` with `obabel` in man files, but there is still `babel.1`, which [is loaded by `obabel.1`](https://github.com/openbabel/openbabel/blob/48387991b746a312dab55cd2ce34c1469ad8351c/doc/obabel.1#L1).; Similarly there is no `doc/obabel.html` but `doc/babel.html`, to which other files (e.g. `obchiral.html`) link.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1976#issuecomment-487071282:103,load,loaded,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1976#issuecomment-487071282,1,['load'],['loaded']
Performance,"In #2044 I performed [`clang-tidy --fix --checks=-*,modernize-use-nullptr`](https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2208#issuecomment-625606991:11,perform,performed,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2208#issuecomment-625606991,1,['perform'],['performed']
Performance,"In Python 2.7 there is a bug when unicode_leterals are loaded. ```; from __future__ import unicode_leterals; import pybel; m = pybel.readstring('smi', 'c1ccccc1'); ```. ```; TypeError Traceback (most recent call last); <ipython-input-3-c6b6881f6c6d> in <module>(); ----> 1 m = pybel.readstring('smi', 'c1ccccc1'). /home/maciek/miniconda/lib/python2.7/site-packages/pybel.pyc in readstring(format, string, opt); 195 obconversion = ob.OBConversion(); 196 ; --> 197 formatok = obconversion.SetInFormat(format); 198 if not formatok:; 199 raise ValueError(""%s is not a recognised Open Babel format"" % format). TypeError: in method 'OBConversion_SetInFormat', argument 2 of type 'char const *'; ```. Posible [solution](http://swig-user.narkive.com/pTuPgRC9/typemap-of-python-unicode-to-c-std-string-in-utf-8-encoding) (?):",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/325:55,load,loaded,55,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/325,1,['load'],['loaded']
Performance,"In the SMILES writer, the profiler showed IsOption() as talking up a percent or two. I've cached a few of the options in the functions highlighted by the profiler. Is it possible to persist some variables between repeated calls to the writer (or would this cause some threading issues) as this would be a potential improvement?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718:90,cache,cached,90,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718,1,['cache'],['cached']
Performance,"In the current implementation, when a rigid fragment is included in other fragments, it caused strange bonds. This pull request avoids this problem. The performance improved slightly judging by the Platinum dataset evaluation.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2049:153,perform,performance,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2049,1,['perform'],['performance']
Performance,"In this update:. - Swapped the default ""master"" versions with the last released versions of maeparser and coordgen.; - Made the version strings cached, so that the versions can be overriden from the `cmake` compile line (`-DMAEPARSER_VERSION=...`).; - GitHub does one kind of dumb thing with the releases: while non-release tags like ""master"" are unpacked into directories like ""[project]-[tag]"" (e.g. ""maeparser-master""), the release tags are named like ""v[x].[y].[z]"", but when they are unpacked, the directories are called ""project-[x].[y].[z]"" (dropping the ""v""), so we need to account for that when in the path to the sources.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552490233:144,cache,cached,144,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552490233,1,['cache'],['cached']
Performance,Interesting; if I write. `OBMol molA;`; `OBMol molB;`. no additional memory is leaked:. `==22754== definitely lost: 85424 bytes in 1998 blocks`. However if I write. `OBMol molA;`; `OBMol molB = molA;`. I get that there is more memory leaked:. `==23673== definitely lost: 89768 bytes in 2004 blocks`. So there does seem to be a memory leak that can increase when assignment is performed. This seems to occur with each assignment call; if I write. `OBMol molA;`; `OBMol molB = molA;`; `molB = molA;`. I get additional leaked memory:. `==24594== definitely lost: 90008 bytes in 2008 blocks`,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1583#issuecomment-305363297:376,perform,performed,376,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1583#issuecomment-305363297,1,['perform'],['performed']
Performance,Is there any way to get the optimized cartesian coordinates instead of the initial?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361#issuecomment-453299550:28,optimiz,optimized,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361#issuecomment-453299550,1,['optimiz'],['optimized']
Performance,"It does not use MMFF94 because of the selenium and silicon. The difference between the invocations is that you're doing more ""cleanup"" in the 2nd choice (by optimizing again UFF after the gen3d step). Since you're saving to XYZ format, Avogadro has to re-perceive the bonds .. and in this case, since there isn't a ring fragment with the selenium, it's pretty weird. `obabel -:'C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1' -O gen3d.sdf --gen3d`. <img width=""465"" alt=""Screenshot 2023-04-13 at 10 18 35 AM"" src=""https://user-images.githubusercontent.com/41128/231788665-44c192c8-40be-4b87-bfcb-abee45f0017a.png"">. If instead, I add ""best"" to the `--gen3d` it's much cleaner:. `obabel -:'C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1' -O best.sdf --gen3d best`. <img width=""525"" alt=""Screenshot 2023-04-13 at 10 18 53 AM"" src=""https://user-images.githubusercontent.com/41128/231788909-2052a4b5-6abf-45ea-b66e-3bfba45aa773.png"">. In principal, the `gen3d` would be better if there were some selenium fragments or fallback to the thiophenes, but for your purposes, it's probably easier to just supply `--gen3d best` which will also do some conformer searching.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507062362:157,optimiz,optimizing,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1507062362,1,['optimiz'],['optimizing']
Performance,"It would be nice to dynamically load import/export; classes. This probably requires them to be compiled; into separate shared-libraries. But this would lower; the overhead for applications on top of Open Babel. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/3"":https://sourceforge.net/p/openbabel/feature-requests/3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1372:32,load,load,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372,1,['load'],['load']
Performance,"It would be nice to have an iterator class to perform depth-first ; searches of bonds/atoms in an OBMol. At the same time, maybe a breadth-first search class too!. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/56"":https://sourceforge.net/p/openbabel/feature-requests/56",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1425:46,perform,perform,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1425,1,['perform'],['perform']
Performance,"It's looking as if Open Babel is taking the second to last step from Gaussian geometry optimization output. For instance, a CCSD(T)/QZVP optimization on the Li_2^+ ion gives a final bond length of 3.133200 Å when you look at the log file, but extracting the geometry from the log file with OpenBabel 2.3.2 I get 3.13236 Å. Log file attached. Reported by: jussilehtola. Original Ticket: [openbabel/bugs/908](https://sourceforge.net/p/openbabel/bugs/908)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1288:87,optimiz,optimization,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288,2,['optimiz'],['optimization']
Performance,"Just FYI, I was asking Roger about this. According to http://libcxx.llvm.org/, libc++ applies the ""short string"" optimization, which involves placing the string itself into the vector (if it's smaller than a pointer to a string) rather than just a pointer to the string. On resizing, this will cause the c_str() to be moved. I asked him how we could have detected this and he thought that running it through valgrind should have flagged this up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448:113,optimiz,optimization,113,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448,1,['optimiz'],['optimization']
Performance,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:54,perform,perform,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919,2,"['optimiz', 'perform']","['optimization', 'perform']"
Performance,"Just like you can re-use an OBMol, it would be nice to be able to reuse a std::vector as there might be some performance benefit both from avoiding creating the variable again in Python, and from avoiding some mallocs on the C++ side. With this in mind, I've commented out the SWIG directive to ignore the .clear() method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:109,perform,performance,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,1,['perform'],['performance']
Performance,LICENSE for OptimizeNative.cmake and FindRapidJSON.cmake,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2425:12,Optimiz,OptimizeNative,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425,1,['Optimiz'],['OptimizeNative']
Performance,"Large numbers of optimization steps with OBForceField lead to NaN for coordinates. For example, by 138 CG steps (out of 250) on the attached file, the steps essentially reach convergence, and then everything goes to NaN (coordinates and energies). The optimization routines should have cutoffs for accuracy in gradient or energy (e.g., below e-8 in either, no step is taken and the routine exits early). Ideally these accuracy criteria could be user parameters to allow ""rough optimization"" as well. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/609:17,optimiz,optimization,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609,3,['optimiz'],['optimization']
Performance,"Let me explain (but not excuse) what's happening here. We have some code to short circuit InChI to InChIKey conversion. Basically on reading an InChI (and only an InChI), the InChI is stored as an attribute of the molecule. Any subsequent requests for the InChI just use this stored value rather than recalculating it. Without this short circuit, the conversion would be done by reading an InChI into an OBMol, converting the OBMol into an InChI and then subsequently into an InChIKey. The problem is that this might give a different result (as reading an InChI doesn't always sufficiently preserve the original structure). Modifying the molecule in-between clearly invalidates the InChI, but we don't have a mechanism internally to intercept modifications, so this is left to the user. If you ""print(inchi.data)"" you will see the offending data item. Deleting this (""del inchi.data['inchi']"") removes the cached value. In general I don't like automagic stuff like this, as it breaks code in complicated and unexpected ways. We could give up on accurate InChI->InChIKey conversion, or only cache the value if the user specifies an option. On a separate note, can I ask why you are reading an InChI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403:906,cache,cached,906,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403,2,['cache'],"['cache', 'cached']"
Performance,LoadFormatFiles error for *format.so in OSX binary 2.1.1,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744:0,Load,LoadFormatFiles,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744,1,['Load'],['LoadFormatFiles']
Performance,Loadable fingerprint modules,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1458:0,Load,Loadable,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1458,1,['Load'],['Loadable']
Performance,"Loading a CML file and then attempting to save it as anything else, or the reverse operation (mol -> cml) results in python dying without any error. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688:0,Load,Loading,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688,1,['Load'],['Loading']
Performance,"Loading a pubchem XML document with an XML extension will give a segfault. I am using ""Open Babel 2.3.2"" from [this debian package](http://packages.debian.org/jessie/openbabel). Steps to reproduce:; 1. run `obprop CID_2519.xml`. It segfaults with a null pointer dereference. The attached file `CID_2519.xml` comes from the [pubchem page for caffeine](https://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=2519&loc=ec_rcs#) by downloading the ""2D XML: Save"" option. If you rename the file to "".pc"" as openbabel expects, then the file will be parsed correctly and there will be no segfault. This issue is moderately inconvenient, because it means that avogadro cannot directly open the .xml files downloaded from pubchem. Stack Trace:. # 0 OpenBabel::XMLFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) at 0x7fffd09bbf3a in /usr/lib/openbabel/2.3.2/xmlformat.so; # 1 OpenBabel::OBConversion::Read(OpenBabel::OBBase*, std::istream*) at 0x7ffff7727f6a in /usr/lib/libopenbabel.so.4.0.2; # 2 None at 0x7ffff5cc3303 in /usr/lib/libavogadro.so.1.0.3; # 3 None at 0x7ffff61f42ef in /usr/lib/x86_64-linux-gnu/libQtCore.so.4.8.6; # 4 start_thread at 0x7ffff48ebe0e in /lib/x86_64-linux-gnu/libpthread-2.17.so; # 5 clone at 0x7ffff7b180fd in /lib/x86_64-linux-gnu/libc-2.17.so (BL). Reported by: wirtha. Original Ticket: [openbabel/bugs/909](https://sourceforge.net/p/openbabel/bugs/909)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1289:0,Load,Loading,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289,1,['Load'],['Loading']
Performance,"Loading the attached file generated with aoforce2g98; http://www.turbomole-gmbh.com/manuals/version_6_4/Documentation_html/node9.html; produces good results with obabel 2.3.0 under OS X (molecule is benzonitrile):. % obabel -V; Open Babel 2.3.0 -- Oct 26 2010 -- 13:39:03; % obabel -o smi tmp/benzonitrile.g98; c1(ccccc1)C#N	tmp/benzonitrile.g98; 1 molecule converted. but crashes openbabel with 2.3.1 on Windows XP, and segfaults Linux (up-to-date Debian Wheezy—openbabel-2.3.1-dfsg-4). This may be related to bug #860. Reported by: mathias_laurin. Original Ticket: [openbabel/bugs/861](https://sourceforge.net/p/openbabel/bugs/861)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1241:0,Load,Loading,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1241,1,['Load'],['Loading']
Performance,"Logged In: NO . ##########################################################; ******** Error resolved **********************************; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former or temp directories; under win (using the FileMon) http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425:1119,Load,LoadFragments,1119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425,1,['Load'],['LoadFragments']
Performance,"Logged In: NO . ##########################################################; ******** Error resolved if fragment.txt is found *********; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former; or temp directories; under win (using the FileMon); http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in; the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually; it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433:1126,Load,LoadFragments,1126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433,1,['Load'],['LoadFragments']
Performance,"Logged In: NO . Hello, I'm working on a tcl script which will translate le Log file to xyz file. Another path is an option in Gaussian : Punch=(coord) will copy in a text files optimized coordinates in atomic units, which is easier to translate in .xyz file than a log file.; I will inform you... thanks. Enguerran Vanquelef. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647:177,optimiz,optimized,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780647,1,['optimiz'],['optimized']
Performance,"Logged In: NO . Hi,; maybe this is due the error reported before (fragment.txt missing). ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Tobias. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428:167,Load,LoadFragments,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793428,1,['Load'],['LoadFragments']
Performance,"Logged In: NO . in gnumeric/goffice, there is one xml file for each plugin.; The framework loads these on startup and then loads the; plugins when one of the services it offers is requested.; Of course, it is also possible to generate a single xml file; from some special comment present in the source file for the; plugin. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180:91,load,loads,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810180,2,['load'],['loads']
Performance,Logged In: YES ; user_id=1189615. In v2.0 the reading and writing is interleaved. There is a queue ; of 2 so that an output format can know if it is outputting the ; last object. The ostream should be flushed even if there is an ; exception (but possibly it could be one object short(?)). If the ; fault is minor enough to just produce a molecule with no ; atoms or if the format has a SkipObjects() function the faulty ; molecule is not output but the input file should continue to be ; read. But I'll take this all back if you have a file which fails... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073:93,queue,queue,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810073,1,['queue'],['queue']
Performance,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:125,load,loading,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,2,['load'],['loading']
Performance,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:44,load,loaded,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703,1,['load'],['loaded']
Performance,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:847,optimiz,optimizations,847,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477,1,['optimiz'],['optimizations']
Performance,"Logged In: YES ; user_id=1557018; Originator: NO. > I'm referring to matrix.cpp,. Oh right, OK. Yes, I agree this could benefit from e.g. multithreading. Just one remark: how sparse are the matrices that you want to run those algorithms on? If they are e.g. adjacency matrices of graphs, then they are probably very sparse, in which case the main optimization to make is to use a sparse matrices library. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740:347,optimiz,optimization,347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=1682851; Originator: NO. Both sd and cg correctly minimize 9.gpr here... 9.pdb: ; some bonds are missing when loading this in avogadro, are you using the current SVN version for all files (bond.cpp, ...)?; missing bonds doesn't explain the large bond lengths though. Could you provide some additional information so I can try to reproduce this. (obminimize, sd/cg, ...). Tim. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328:135,load,loading,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:519,queue,queue,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,2,"['optimiz', 'queue']","['optimization', 'queue']"
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. Error	1	fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory	c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel\reaction.h	26	OBMoreFormats; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory	BSCMAKE	OBMoreFormats. Results:; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; chemdrawct.cpp; chemtoolformat.cpp; cifformat.cpp; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\map(78) : see reference to class template instantiation 'std::_Tree<_Traits>' being compiled; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; ..\..\src\formats\cifformat.cpp(176) : see reference to class template instantiation 'std::map<_Kty,_Ty>' being compiled; with; [; _Kty=std::set",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:657,cache,cacheformat,657,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['cache'],['cacheformat']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. problems loading the file,; this one should be good. File Added: OBMoreFormats revision 2588 include files.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162:60,load,loading,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; compiling OpenBabelOBF.sln now works:. Results:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ----",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:416,load,loader,416,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['load'],['loader']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. so this time I made sure it was release mode for all projects; (see attached screen from configuration manager). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:744,load,loader,744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['load'],['loader']
Performance,"Logged In: YES ; user_id=1918617; Originator: YES. updated all svn files revision 2600, log file OpenBabelOBF revision 2600-1.txt attached. ..\Debug/OBDLLD.dll : fatal error LNK1120: 3 unresolved externals. lots of:. obiter.h(330) : warning C4800:... ..\Debug/OBDESCD.obf : fatal error LNK1120: 3 unresolved externals. ..\Debug/OBFPRTD.obf : fatal error LNK1120: 3 unresolved externals. this one still exists:. cifformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/obiter.h(330) : warning C4800: 'unsigned int' : forcing value to bool 'true' or 'false' (performance warning); C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with... File Added: OpenBabelOBF revision 2600-1.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172:563,perform,performance,563,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:194,optimiz,optimization,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:584,perform,performed,584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258,1,['perform'],['performed']
Performance,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:229,optimiz,optimization,229,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420. Fixed. Root cause was that attempting to add alpha-peptide bonds was connecting long-range bonds. This should help performance as well. A new check also looks for long bonds causing very small angles, e.g. across a small ring. (As was the case in the indigo molecule that precipitated the bug report.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567:147,perform,performance,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:200,optimiz,optimization,200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:125,load,loading,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=21420. This *should* work -- the build environment is set correctly. But for some reason, the format code isn't loaded correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551:137,load,loaded,137,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551,1,['load'],['loaded']
Performance,"Logged In: YES ; user_id=21420. This is basically resolved under the new conversion framework. The ; UNIX build does not currently handle dynamic loading, but it will not be ; too much more work. Marked ""pending"" since this will be resolved soon.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324:146,load,loading,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324,1,['load'],['loading']
Performance,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:168,perform,perform,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458,1,['perform'],['perform']
Performance,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of bug #1663779. I can confirm that it does eventually complete. But yes, the performance when translating XYZ (or other types without bonds) and doing bond order perception can be very slow. (By the way, you can use -as to only get single bonds. This will be much faster and still give you some bonding information. In this particular case, it's mostly a diamondoid carbon cluster, so there aren't any C-C multiple bonds.). I'm marking this ""pending"" further comments, but since it's a duplicate, I'd prefer to see comments on bug #1663779 instead. This is not likely to be fixed in time for 2.1 -- the code needs some improvement in handling such huge ring systems in carbon lattices. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380:146,perform,performance,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:338,perform,perform,338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223,1,['perform'],['perform']
Performance,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:164,load,load,164,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162,2,"['load', 'perform']","['load', 'performed']"
Performance,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:763,optimiz,optimization,763,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738,1,['optimiz'],['optimization']
Performance,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:92,perform,performance,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181,1,['perform'],['performance']
Performance,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:262,optimiz,optimizer,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539,1,['optimiz'],['optimizer']
Performance,"Logged In: YES ; user_id=573515; Originator: NO. Here are the numbers from readelf (.toc1 size, all numbers in hexadecimal, the maximum is 0x10000=65536 bytes = 0x2000=8192 entries per compilation unit):; * Python:; obcore: 8a68; obconversion: 2be8; obtemplate: 2ad0; (This is only a total of 0xe120? I also applied your SWIG flag optimizations for Python, so maybe that's where the bytes were saved? In any case, we're far away from the maximum now for each of those.); * Perl: eb50; (This one is getting dangerously close to the maximum, though this is with the old SWIG flags from beta 5.); * Ruby: c170. We aren't currently building the Java and C# bindings, so I don't have numbers for those. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574:331,optimiz,optimizations,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574,1,['optimiz'],['optimizations']
Performance,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:85,load,loaded,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176,2,['load'],"['loaded', 'loads']"
Performance,"Logged In: YES ; user_id=850620; Originator: YES. Interestingly, if I change ""sub dl_load_flags { 0x01 }"" to ""0x00"" in the Makefile, and run the same perl script, it doesn't abort but gives some warnings:; oboyle@calvin:~/not-backed-up/openbabel-trunk/scripts/perl/examples$ perl tmp.p; l; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/pubchem.so did not load properly. ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/xmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cdxmlformat.so did not load prop; erly. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262:346,Load,LoadFormatFiles,346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262,8,"['Load', 'load']","['LoadFormatFiles', 'load']"
Performance,"Looks like the site is down. ```; $ curl -I https://openbabel.org/; HTTP/2 301; date: Tue, 14 Nov 2023 18:28:31 GMT; content-type: text/html; charset=iso-8859-1; location: https://openbabel.org/; cf-cache-status: DYNAMIC; report-to: {""endpoints"":[{""url"":""https:\/\/a.nel.cloudflare.com\/report\/v3?s=TtKlUnuc3JZJsYYOMvJEcf1DWufYhmpmymnqy%2FRXgHDc%2F38bUdGSbrGFI0%2Fj4encF3V8fXRFJ9Qf8yliKGmUFL6B4f%2FBsDJDvsPy0jRPaBILFUFsqHUM2VU52sAo2tyq""}],""group"":""cf-nel"",""max_age"":604800}; nel: {""success_fraction"":0,""report_to"":""cf-nel"",""max_age"":604800}; server: cloudflare; cf-ray: 8261509089990c82-EWR; alt-svc: h3="":443""; ma=86400; ```. ![image](https://github.com/openbabel/openbabel/assets/1580956/b1dd3c40-8c77-4a8e-ac51-393f1cf881bb). relates to https://github.com/Homebrew/homebrew-core/pull/154211",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2643:199,cache,cache-status,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643,1,['cache'],['cache-status']
Performance,MOPAC2SDF multiple MOPAC optimized structures to SDF,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1789:25,optimiz,optimized,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1789,1,['optimiz'],['optimized']
Performance,Make sure to add conformers *after* performing bond perception.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1549:36,perform,performing,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1549,1,['perform'],['performing']
Performance,Memory leak in OBConversion::LoadFormatFiles() (v2.2.3),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/997:29,Load,LoadFormatFiles,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/997,1,['Load'],['LoadFormatFiles']
Performance,Molecular energy and geometry optimization,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2265:30,optimiz,optimization,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265,1,['optimiz'],['optimization']
Performance,"Moved the loading of 3d js rendering into `_repr_javascript_`, so it doesn't slow down or error on `import pybel`. Also implemented Noel's previous suggestion to just use URLs. I think it's a better way to go, especially while this feature is in its experimental phase (people may want to play with other molecule renderers and such).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/55:10,load,loading,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/55,1,['load'],['loading']
Performance,Multi-threading,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1474:0,Multi-thread,Multi-threading,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1474,1,['Multi-thread'],['Multi-threading']
Performance,"My Open Babel 2.3.2 (installed under Windows 7) does not recognize the '-L confab' call, recommended in the [documentation](http://open-babel.readthedocs.org/en/latest/3DStructureGen/multipleconformers.html):; ; ```; >obabel -L confab; confab is not a recognized plugin type. Those with instances of sub-types loaded are:; charges; descriptors; fingerprints; forcefields; formats; loaders; ops; ```; . Reported by: zfekete2. Original Ticket: [openbabel/bugs/969](https://sourceforge.net/p/openbabel/bugs/969)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1348:310,load,loaded,310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1348,2,['load'],"['loaded', 'loaders']"
Performance,"Nope, in fact I can even do. ```; System.loadLibrary(""openbabel_java"");. OBConversion conversion = new OBConversion();; OBOp gen3d = OBOp.FindType(""gen3d"");; OBMol mol = new OBMol();. System.out.println(gen3d.WorksWith(mol));; ; conversion.SetInFormat(""smi"");; conversion.ReadString(mol, ""CC"");. gen3d.Do(mol);. conversion.SetOutFormat(""mol"");; System.out.println(conversion.WriteString(mol));; ```. (notice the extra call to println) and the output is. `true`. and intermediately in the error stream. `Java Result: -1073740791`. so it's crashing the JVM pretty good. Something's going pretty wrong with the JNI interface because I would expect some JVM error, if not an Exception, to be thrown.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397266263:41,load,loadLibrary,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397266263,1,['load'],['loadLibrary']
Performance,OBDotNet : The type initializer for 'OpenBabel.openbabel_csharpPINVOKE' threw an exception. Unable to load DLL 'openbabel_csharp',MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1347:102,load,load,102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1347,1,['load'],['load']
Performance,Obgui Error File couldn't be loaded,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1297:29,load,loaded,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1297,1,['load'],['loaded']
Performance,"On CentOS 5.5 Linux I can successfully build OpenBabel 2.3.0, including the Python bindings. I subsequently want to install to a staging area, so I then perform, for example,. make install DESTDIR=/tmp/openbabel. That correctly installs the OpenBabel binaries, libraries, etc. under /tmp/openbabel, BUT it attempts to install the Python extension directly onto the system (in my case, into /usr/lib64/python2.4/site-packages). It should instead install the Python extension to (in this example) /tmp/openbabel/usr/lib64/python2.4/site-packages. Reported by: johnbollinger",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1075:153,perform,perform,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1075,1,['perform'],['perform']
Performance,"On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387:754,load,loads,754,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,1,['load'],['loads']
Performance,"On futher contemplation, it appears that openbabel at first thinks the adjacent ring to the triazole is also aromatic, which I don't believe is true. This occurs when loading the SDF. . ```; >>> sulfur, = [a for a in M1.atoms if a.atomicnum==16]; >>> print sulfur.OBAtom.IsAromatic(); True; ```. You'll notice the output smiles incorrectly shows lower-case aromatic notation on the thiazole ring.; ```; >>> M1.write('smi'); Clc1c(c2n3c(=O)/c(=C/c4ccc(N(CC)CC)cc4)/sc3nn2)cccc1 2185720; ```. Original comment by: matt-matlock",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1358#issuecomment-281805009:167,load,loading,167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1358#issuecomment-281805009,1,['load'],['loading']
Performance,"One slowdown in the current 2.0 code is the delay to load all file format ; modules. A possible solution is to allow fine-grained loading of modules. For ; example, some modules are required by all code, and some code (like the ; help/usage commands) need to load all modules. But a simple conversion:. babel -ixyz 'foo.xyz' -opdb 'foo.pdb'. This could only load a few modules (i.e., any required modules, ; xyzformat, and pdbformat). I suspect that as the number of formats increases over time, this will be a ; useful performance boost to load formats only as required. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/65"":https://sourceforge.net/p/openbabel/feature-requests/65",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434:53,load,load,53,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434,6,"['load', 'perform']","['load', 'loading', 'performance']"
Performance,"One very useful feature for the various QM input formats would be to ; specify ""keywords"" or program options to the input file. For example, ; specifying that this input is for a geometry optimization or frequency ; calculation, etc. The advantage is that users could create input files in one batch with a ; given set of program options. I suggest that options could either come from a command-line flag (e.g, -; xk ""keywords"") or optionally from a command-line flag that reads in a ; separate file. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/68"":https://sourceforge.net/p/openbabel/feature-requests/68",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437:188,optimiz,optimization,188,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437,1,['optimiz'],['optimization']
Performance,"OpenBabel uses a number of global objects for performing various kinds of perception and these objects maintain state (mostly in the form of smarts patterns). This introduces race conditions in a multithreaded program that can result in segmentation faults. For example, if two instances of bond perception are called at the same time, one might zero out the match list in the smarts pattern while the other is reading it. . I have spent many hours trying to work around this probably by guarding calls with locks or parallelizing with processes instead of threads, but since perception routines are called as needed, it can be quite difficult to get right and it really shouldn't be necessary. Today I realized that making these global variables thread local should solve all these problems (and stop pharmit from crashing). **This means that openbabel needs to be compiled with -std=cx11.** This patch should gracefully degrade into the old buggy behaviour if this isn't an option. Note I may not have caught all the global objects that need this fix, but I think I at least got the ones with smarts patterns. Global declarations have been consolidated into mol.h and prefixed with a new macro THREAD_LOCAL.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295:46,perform,performing,46,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295,2,"['perform', 'race condition']","['performing', 'race conditions']"
Performance,"PHP bindings work. I'll think about adding testing procedure, although it will be a bit complicated. Since PHP5.3+ it doesn't allow loading of dynamic extensions, and location of php.ini differs from distro to distro.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618:132,load,loading,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618,1,['load'],['loading']
Performance,"Part of charge development for carbohydrate molecular dynamics simulations requires an ensemble charge set. This charge set is built from PDB files which were extracted at regular intervals from a preliminary MD simulation using initial charges from a single QM optimized structure. These PDB files are consistently built however, bond lengths and angles vary because they're oscillating around a equilibrium at 300 K. The atomic order in the babel z-matrix is consistent between each converted structure but the bond, angle and torsion definitions vary depending on how far one atom is from another. If possible, it would be beneficial to create a z-matrix from either a template setup where bonds, angles and torsions are defined consistently or to force multiple inputs of the same molecular structure to be built consistently. I have already tried varying the bond and angle limits for the atoms and this doesn't correct the issue. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/135"":https://sourceforge.net/p/openbabel/feature-requests/135",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1504:262,optimiz,optimized,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1504,1,['optimiz'],['optimized']
Performance,Q-Chem optimizations,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/401:7,optimiz,optimizations,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/401,1,['optimiz'],['optimizations']
Performance,"Reading Q-Chem optimizations, the final &quot;read from; z-matrix&quot; phase generates incorrect geometries. If this; is commented out, the geometry is correct, but; otherwise often leads to very strange &quot;molecules.&quot;; Examples will be posted shortly. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/401:15,optimiz,optimizations,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/401,1,['optimiz'],['optimizations']
Performance,Rebuild OBMM tool for interactive MM optimization,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1873:37,optimiz,optimization,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1873,1,['optimiz'],['optimization']
Performance,"Respectfully, I don't understand how it's a bug in **our** code if it passes in some CPUs, or without `-march=native`. To me, that sounds like a weird GCC optimizer flag.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-612054377:155,optimiz,optimizer,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-612054377,1,['optimiz'],['optimizer']
Performance,"Right now, floating point matrix code is handled by internal code and code ported from Eigen. When libblas and ATLAS are detected, the code should use this instead. This offers two advantages:; * BLAS and ATLAS are thoroughly tested and debugged.; * BLAS and ATLAS are highly tuned, vectorized, and multithreaded on many platforms, improving performance. Granted, performance is only a small component of Open Babel, but this wouldn't hurt. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/116"":https://sourceforge.net/p/openbabel/feature-requests/116",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485:276,tune,tuned,276,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485,3,"['perform', 'tune']","['performance', 'tuned']"
Performance,"Running . ```shell; obabel ATP.cdx -O convert.cdxml; ```. with obabel 3.1.1 and subsequent copy-paste into [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) via Structure -> Load .cdxml *somewhat* improves the situation: phosphates are now negatively charged. Good. Except that the absolute values are not reasonable:. ![ChemDraw_samplepage](https://user-images.githubusercontent.com/60490931/190347730-cdcc62d4-93d5-4438-a65a-9a5a15bff01a.png). What version of ChemDraw do you use (release, Win or MacOS) to generate the .cdx? Or, do you use an other program which exports in this format (e.g., [chemdoodle](https://www.chemdoodle.com/), or [Marvin Sketcher](https://marvinjs-demo.chemaxon.com/latest/examples/demo.html) to mention just two. Note the red rectangles (furanose cycle) indicate a potential problem how the stereochemistry was defined; in ChemDraw, there are wedges (varying width), and bold single bonds (constant width) as separate buttons to click. (For better portability across OSes and different programs, I prefer .cdxml over Chemdraw's binary .cdx format; the file size is a bit bigger but often this is no issue.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814:214,Load,Load,214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1247732814,1,['Load'],['Load']
Performance,Second to last step taken from geometry optimization output,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1288:40,optimiz,optimization,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1288,1,['optimiz'],['optimization']
Performance,Segmentation fault loading pubchem xml with .xml extension,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1289:19,load,loading,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289,1,['load'],['loading']
Performance,"Should have fixed this a long time ago. The DL flags kludge was needed for some platforms or else the plugins didn't load. I can't say whether it's still needed but at least now the code resets the flag value after forcing the plugins to load with OBPlugin::LoadAllPlugins(). I believe this fixes #917, #1222, and #1702. I can't reproduce the original problems though.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1775:117,load,load,117,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1775,3,"['Load', 'load']","['LoadAllPlugins', 'load']"
Performance,"Since several other feature requests suggest conformer evaluation, coordinate generation, etc. it makes sense to have a framework for molecular mechanics evaluations. For example, loadable force field modules (like file formats and fingerprints). These can include MM2, MM3, MMFF94, OPLS-AA and optionally the libghemical force fields (Tripos-like, and UFF-like). This might also allow bridging between the OBResidue support and force fields like AMBER, CHARM, and GROMACS in the future as well. Initial drafts for the force field evaluation is in the current Subversion trunk for 2.1 (e.g., revision 1682 and later) and will be revised heavily before release. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/108"":https://sourceforge.net/p/openbabel/feature-requests/108",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477:180,load,loadable,180,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477,1,['load'],['loadable']
Performance,"Since the Fingerprint framework is flexible and expandable, it would be ; nice to dynamically load/unload fingerprints much like OBFormat. For ; example, a program which does not use fingerprints at all would not need ; fingerprints in libopenbabel but could load as needed. As this would affect the availability of API functions in the library, this is ; best targeted at 3.0. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/89"":https://sourceforge.net/p/openbabel/feature-requests/89",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1458:94,load,load,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1458,2,['load'],['load']
Performance,Sorry for not providing this information initially. - Anaconda information (Python):; ```Current conda install:. platform : linux-64; conda version : 4.3.30; conda is private : False; conda-env version : 4.3.30; conda-build version : 2.1.13; python version : 3.5.4.final.0; requests version : 2.18.4; root environment : /home/henrique/anaconda3 (writable); default environment : /home/henrique/anaconda3; envs directories : /home/henrique/anaconda3/envs; /home/henrique/.conda/envs; package cache : /home/henrique/anaconda3/pkgs; /home/henrique/.conda/pkgs; channel URLs : https://repo.continuum.io/pkgs/main/linux-64; https://repo.continuum.io/pkgs/main/noarch; https://repo.continuum.io/pkgs/free/linux-64; https://repo.continuum.io/pkgs/free/noarch; https://repo.continuum.io/pkgs/r/linux-64; https://repo.continuum.io/pkgs/r/noarch; https://repo.continuum.io/pkgs/pro/linux-64; https://repo.continuum.io/pkgs/pro/noarch; config file : None; netrc file : None; offline mode : False; user-agent : conda/4.3.30 requests/2.18.4 CPython/3.5.4 Linux/3.19.0-32-generic debian/jessie/sid glibc/2.19 ; UID:GID : 1000:1000; ```. - Operating System: Linux Mint 17.3 Cinnamon Edition 64bits - Kernel 3.19.0-32-generic. - Versions:; The versions that *don't* work together (all using the above Anaconda Python):; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.1 py35hbf1f462_0; ```; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.0 py35hbf1f462_0; ```; The versions that *work* together:; ```; openbabel 2.4.1 <pip>; scikit-learn 0.18.2 np113py35_0; ```; ```; openbabel 2.4.1 py35_3 openbabel; scikit-learn 0.19.1 py35hbf1f462_0; ```. All the dependencies for the Python libraries were automatically satisfied by conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756:491,cache,cache,491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756,1,['cache'],['cache']
Performance,Sorry for the delay - this one got buried over the summer.; Is the environment variable BABEL_DATADIR set? It seems like the install can't find the files for force field optimization. If you use .localopt() does the geometry change?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729:170,optimiz,optimization,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1621#issuecomment-354306729,1,['optimiz'],['optimization']
Performance,"Sounds like you might be right.; On 14 Mar 2016 2:44 p.m., ""Marcus D. Hanwell"" notifications@github.com; wrote:. > I spent quite a bit of time debugging obabel on the Mac, and was seeing; > issues with an illegal instruction pretty early on as obabel started up.; > This was a pretty difficult one to debug as everything worked fine on the; > build machine, but I got a very generic error 14 on my laptop when trying; > to use the packaged obabel, in the end I found the answer through searching; > on Google and seeing a similar issue for Docker.; > ; > CMake and the upstream compilers don't enable this by default as the; > binaries can be quite specific for the GPU you are building on. In this; > case it was a pretty new Mac Pro, and trying to run them on an older; > Macbook Pro laptop. The comments seem incorrect too, as they have little to; > do with cross compiling and more to do with optimizations for the specific; > CPU on the build machine.; > ; > I think adding a section on optimization, and advising to turn this on; > there would be great (with a big warning about the binaries being quite CPU; > dependent at that stage) would be great, but please consider turning this; > off by default to avoid having others spend time debugging strange run time; > errors.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/279.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512:897,optimiz,optimizations,897,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512,2,['optimiz'],"['optimization', 'optimizations']"
Performance,"Static builds of the OB 2.0 snapshots or the new-framework CVS ; branch fail on UNIX. The build does not produce *.so files for the ; formats, so the dynamic loader cannot find any formats. The build Makefiles need to fall back to static loading when the ; configure scripts fail to set shared library support. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458:158,load,loader,158,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458,2,['load'],"['loader', 'loading']"
Performance,Static members of OBConversion never call LoadFormatFiles(),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500:42,Load,LoadFormatFiles,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500,1,['Load'],['LoadFormatFiles']
Performance,Still buggy in openbabel 3.1.1 with ORCA 5.0.1 output files (tested under Windows 10). Trying to force continuation after errors or specifying the number of structures (= number of optimization steps in the output) have no effects.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144:181,optimiz,optimization,181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144,1,['optimiz'],['optimization']
Performance,"Strange. Could this be platform-dependent somehow? My setup is Windows 10 / Python 3.6.5 (64-bit) / pip 10.0.1, and I have seen this on two other Windows machines as well. Installing uses the following wheel:. ```; C:\>pip install openbabel; Collecting openbabel; Using cached https://files.pythonhosted.org/packages/b1/be/7d35e887a7b6c79aa6e658cddcf32430cea202bfe7301deff7addfee05e1/openbabel-2.4.1-cp36-cp36m-win_amd64.whl; Installing collected packages: openbabel; Successfully installed openbabel; ```; ; And subsequently pip freeze says. `openbabel-python==2.4.1`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1843#issuecomment-394240631:270,cache,cached,270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1843#issuecomment-394240631,1,['cache'],['cached']
Performance,"Sure! . JDK: 1.8.0_73 (JRE from JDK); OS: Windows 10. I do not directly need SWIG - I am using the OpenBabel binaries for windows, version 2.4.1. I load both the native library and the jar from that same OpenBabel installation, of course. I am developing inside Netbeans, but just in case I compiled/run the code directly with the java tools directly from the prompt, and it fails anyway.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397301882:148,load,load,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397301882,1,['load'],['load']
Performance,"Thank you @fredrikw, @nbehrnd for the suggestions. Performing an energy minimization on the generated 3d coordinates solved the issue by creating updated coordinates.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239:51,Perform,Performing,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2391#issuecomment-871115239,1,['Perform'],['Performing']
Performance,"Thank you SF, it cropped most of my description after complaining the attached file was too large :(. Here goes:. Reading ; http://cclib.svn.sourceforge.net/viewvc/cclib/trunk/data/Gaussian/basicGaussian03/dvb_un_sp.out?revision=640. with gaussformat results in a segfault:. #0 0x00007ffff6fcadd8 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) () from /usr/lib/libstdc++.so.6; #1 0x00000000004052f8 in __gnu_cxx::new_allocator<std::string>::construct (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/ext/new_allocator.h:105; #2 std::vector<std::string, std::allocator<std::string> >::_M_insert_aux (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/bits/vector.tcc:330; #3 0x00007ffff1cf7232 in std::vector<std::string, std::allocator<std::string> >::push_back (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /usr/include/c++/4.4/bits/stl_vector.h:741; #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742; #5 0x00007ffff77dddc8 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=<value optimized out>, pFormat=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obmolecformat.cpp:105; #6 0x00007ffff77828d8 in OpenBabel::OBConversion::Convert (this=0x7fffffffe290) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:515; #7 0x00007ffff7782fbd in OpenBabel::OBConversion::Convert (this=0x7fffffffe290, is=0x7fffffffd500, os=0x606a60) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:448; #8 0x00007ffff7788f56 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717:877,optimiz,optimized,877,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717,3,['optimiz'],['optimized']
Performance,"Thank you for adding label to cache. In the end of the letter you can see how this ""special"" file looks like. And the case is really common in solid state physics/chemistry. As you can see Ga and Si atoms occupied the same position. As for octree, my filling, that it can be waste of your time and it can make openbabel code heavy (one more dependence). The algorithm you implemented gives you the same performance O(N*logN). N you have when goes through all the atoms and logN - when insert item into std::set. The weak point is hash. To create it and after to compare. The best thing, IMHO, is to make the class in paragraph 1) which will be very fast (3 double comparison and one string). If you have few minutes of your time, please check the performance of looping though all atoms with hash created one and twice (add fake hash creating). For me it will be really interesting because I'm working know quite similar task. . #------------------------------------------------------------------------------; #$Date: 2013-05-05 14:21:46 +0000 (Sun, 05 May 2013) $; #$Revision: 85285 $; #$URL: file:///home/coder/svn-repositories/cod/cif/9/01/27/9012795.cif $; #------------------------------------------------------------------------------; #. # This file is available in the Crystallography Open Database (COD),. # http://www.crystallography.net/. The original data for this entry. # were provided the American Mineralogist Crystal Structure Database,. # http://rruff.geo.arizona.edu/AMS/amcsd.php. #. # The file may be used within the scientific community so long as. # proper attribution is given to the journal article from which the. # data were obtained. #; data_9012795; loop_; _publ_author_name; 'Belokoneva, E. L.'; 'Stefanovich, S. Y.'; 'Pisarevskii, Y. V.'; 'Mosunov, A. V.'; _publ_section_title; ;Refined structures of La3Ga5SiO14 and Pb3Ga2Ge4O14 and the crystal-chemical; regularities in the structure and properties of compounds of the langasite; family; ;; _journal_name_full 'Russian",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647:30,cache,cache,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:461,Multi-thread,Multi-threaded,461,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309,2,"['Multi-thread', 'concurren']","['Multi-threaded', 'concurrency']"
Performance,"Thank you, Chris! I have written up php scripts (as I'm just playing around with an idea currently, just quick and dirty) that circumnavigate this problem, but of course they come at a performance penalty. I'll be looking forward to your amendment of this behaviour.; Thanks again!. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/969#issuecomment-281796391:185,perform,performance,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/969#issuecomment-281796391,1,['perform'],['performance']
Performance,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:169,Perform,Performance,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778,1,['Perform'],['Performance']
Performance,"Thanks for comment! Actually part of problems are described [different ECFP2 values for the same molecule](https://github.com/openbabel/openbabel/issues/1557#issue-218369553) here. Thats the actual reason why I could not recreate a fingerprint.; I also tested different BigEndian to LowEndian conversions. For whom it may interest, I came to to this code:. `; private void LoadFingerprint(); {; Func<uint, uint> Big2Little = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; Array.Reverse(bytes, 0, bytes.Length);; return BitConverter.ToUInt32(bytes, 0);; };; Func<uint, uint> Big2Little2 = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; return (uint)((bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3]);; };; Func<uint, uint> Big2Little3 = (uint x) =>; {; return (x & 0x000000FF) << 24 |; (x & 0x0000FF00) << 8 |; (x & 0x00FF0000) >> 8 |; (x & 0xFF000000) >> 24;; };. bool isLittleEndian = BitConverter.IsLittleEndian;; const string formatter = ""{0,10}\t{1,10}\t{2,10}\t{3,10}\t{4,10}\t{5,10}""; ;; Debug.WriteLine(formatter, ""i"", ""file"", ""cmp"", ""B2L cmp"", ""parsed"", ""B2L parsed"");; Debug.WriteLine(formatter, Enumerable.Range(1, 6).Select(x => ""--------"").ToArray());. //Debug.WriteLine(""{0:X8}"", big2litte1);. string KeggSmiles = ""[C@H]1(n2c3c(nc2)c(ncn3)N)[C@@H]([C@@H]([C@H](O1)COP(=O)(OP(=O)(OC[C@H]1O[C@H]([C@@H]([C@@H]1O)O)N1C=C(CC=C1)C(=O)N)O)O)O)OP(=O)(O)O"";; string KeggECFP2 = @""f5137cdc f5137cdc f08b4928 e9e5be3f e9e5be3f e9e5be3f ; e99821a1 dfe49bdf dfe49bdf d6e0861f d6e0861f cef9a4bc ; cb69fe08 c885380c c6d3b3eb c38b3152 c38b3152 c36fb784 ; be842c9d bdb9a034 bd1c43c3 ac8924de ab904d16 aa139040 ; a795d505 9ce64676 96ad281d 7ef444f9 7ef444f9 7ef444f9 ; 7ef444f9 7be0ee02 79e96c34 782c4b73 6cdf4289 6cdf4289 ; 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 ; 69a2560a 69a2560a 69a2560a 69a2560a 636f8f6a 5faf488d ; 5faf488d 5faf488d 5d2209c6 5a9bc9d5 5888721b 5645f44d ; 54125a1f 53362b63 5299f401 4e8b69b6 4c4118f4 4b1ef6fb ; 4a7b5d42 4a7b5d42 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:373,Load,LoadFingerprint,373,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['Load'],['LoadFingerprint']
Performance,"Thanks for looking into this Tim. My own feeling is that there are two separate issues here:. 1. Can an atom with a hydrogen and a lone pair be stereogenic? This is related to stereocenter perception. Let me ping @johnmay on this. I'm pretty sure there are cases of this related to S (maybe not N), but I think John can clear this up.; 2. Should RemoveHydrogens() suppress hydrogens involved in cis/trans stereo? I think the answer to this is no. One of the invariants of the toolkit should be that suppressing and expanding hydrogens should not change any information. Note that (1) and (2) are separate issues. I've changed the SMILES reader so that stereo perception is optional (""-aS""). By default, stereo is just read directly from the SMILES (same behaviour as OEChem and CDK, at least). This improves performance when reading SMILES, and preserves stereo present in the input even where our stereoperception would remove it:; ```; $ obabel -:""C[C@](C)(C)C"" -osmi; C[C@](C)(C)C	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396:808,perform,performance,808,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396,1,['perform'],['performance']
Performance,"Thanks for the hint to use `echo` to pipe a SMILES string to OpenBabel. So far, I used a syntax like. `obabel -:""c1ccccc1"" --gen3d -oxyz`. to obtain the backbone of benzene. _For OpenBabel_, the input. `obabel -:'c1ccccc1' --gen3d -oxyz`. -- the SMILES string enclosed by single quotes instead -- yields a result equivalent to the other (just checked again, OpenBabel 3.1.0 running in Linux Debian 11/bullseye, testing) as long as there is no space between the colon and the leading single / double quote. The absolute (x,y,z) coordinates about the same atom may differ from each other for either one of the two approaches. But, this equally is the case running either one of the two commands again, and again, too. I attribute these small variations to the MMFF optimization OpenBabel uses to offer rapidly a geometry «good enough» to continue work elsewhere. This being said, I see the number of protons differ from how `-p <integer_value>` is used. In contrast to my anticipation, this number however varies, depending if `--gen3d` is used, or not. Your suggest to pipe the intermediate SMILES string adjusted for the pH value explicitly set _then used_ for `--gen3d` is the better, because safer approach. With the same setup, results indeed differ as shown below:. + formic acid in acid, as expected 2 protons:; > $ obabel -:'C(=O)O' -p 1 -oxyz; > 5; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, as expected only one proton:; > $ obabel -:'C(=O)O' -p 14 -oxyz; > 4; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, unexpectedly writing two protons:; > $ obabel -:'C(=O)O' -p 14 --gen3d -oxyz; > 5; > ; > C 1.10369 -0.02330 -0.04653; > O 0.44240 0.56154 -0.88483; > O 2.44963 -0.04201 -0.01971; > H 0.68143 -0.60513 0.78745; > H 2.79396 -0.56462 0.72",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435:763,optimiz,optimization,763,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435,1,['optimiz'],['optimization']
Performance,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:1257,optimiz,optimization,1257,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306,3,"['optimiz', 'tune']","['optimization', 'tune']"
Performance,"Thanks! So, I guess OB loads libraries or plugins on the fly. 0) Out curiosity, do you know that library is loaded in the process? is it some internal library to OB?. 1) does it make sense to load libraries on the fly and each time a Read operation is performed? . 2) I deduce that this is done in every instance of `OBConversion`, so it is better to recycle them?. I wonder these because it may not be unheard of that a program opens a few hundred thousand files (or streams), that could amount to several gigabytes of leaked memory.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271:23,load,loads,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-847983271,4,"['load', 'perform']","['load', 'loaded', 'loads', 'performed']"
Performance,Thanks! This most recent commit should have fixed the build error. Shall I close this now or after you performed the merge?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/343#issuecomment-265154505:103,perform,performed,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/343#issuecomment-265154505,1,['perform'],['performed']
Performance,"Thanks, @ghutchis !. I am looking to use openbabel to manipulate the torsion angles as part of a conformer optimization program. . My original thought was to manipulate the internal coordinates directly but, after looking at `OBMol.SetTorsion`, the routes you suggest would probably work better. It both provides a Python-friendly interface and avoids other issues around dealing with the internal coordinates directly (e.g., making sure to rotate neighboring atoms correctly).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056:107,optimiz,optimization,107,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056,1,['optimiz'],['optimization']
Performance,"That would be a problem alright. Ignore my prevoius comment so. Ultimately the issue is that on some platforms, the DL loader fails to load the plugins without this kludge. This is also the case for other bindings and I think the correct solution is to move towards statically including the plugins in the main .so, so to avoid this issue completely.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952:119,load,loader,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952,2,['load'],"['load', 'loader']"
Performance,"That's great - thanks for checking. The OBConformerSearch stuff is all available now (just checked with the OB231 release on Windows). The README is completely out of date. I'll probably just delete it and update the main docs, as we can only maintain one set of docs. Regarding the LD_LIBRARY_PATH, other options are available: http://www.chilkatsoft.com/java-loadLibrary-MacOSX.asp. I haven't tested these though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548:361,load,loadLibrary-MacOSX,361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548,1,['load'],['loadLibrary-MacOSX']
Performance,"That's right. But it's only needed for plug-in load, and can be turned off afterwards. Maybe the bindings should instantiate an OBConversion object to force plugin loading, and then turn it off.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834:47,load,load,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277712834,2,['load'],"['load', 'loading']"
Performance,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:1066,load,load,1066,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,2,"['cache', 'load']","['cache', 'load']"
Performance,"The Stacktrace I obtain in gdb is . run -i smi ../problem.smi -o inchi -; Starting program: ./openbabel-2.3.0/build/bin/babel -i smi ../problem.smi -o inchi -; ==============================; *** Open Babel Error in SetConfig; OBCisTransStereo::SetConfig : found 5 reference ids, should be 4. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::InChIFormat::WriteMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at ./openbabel-2.3.0/src/formats/inchiformat.cpp:415; 415	 unsigned long start = refs[0];; (gdb) where; #0 OpenBabel::InChIFormat::WriteMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at ./openbabel-2.3.0/src/formats/inchiformat.cpp:415; #1 0x00007ffff77cb0c6 in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl (pConv=0x7fffffffe100, pFormat=0x7fffeeebf4a0); at ./openbabel-2.3.0/src/obmolecformat.cpp:181; #2 0x00007ffff77723a6 in OpenBabel::OBConversion::Convert (this=0x7fffffffe100); at ./openbabel-2.3.0/src/obconversion.cpp:545; #3 0x00007ffff7772b29 in OpenBabel::OBConversion::Convert (this=0x7fffffffe100, is=0x7fffffffd910, os=0x6074c0); at ./openbabel-2.3.0/src/obconversion.cpp:418; #4 0x00007ffff7778a94 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, ; OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at ./openbabel-2.3.0/src/obconversion.cpp:1378; #5 0x00000000004042af in main (argc=<value optimized out>, argv=0x7fffffffe418); at ./openbabel-2.3.0/tools/babel.cpp:347. Yours,; Steffen. Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1057#issuecomment-281797921:398,optimiz,optimized,398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1057#issuecomment-281797921,11,['optimiz'],['optimized']
Performance,"The Windows equivalent returns 0 for error/no files, this variant should; do the same. This member is used to load all plugins, and can result in; an infinite loop when -1 is returned.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/273:110,load,load,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/273,1,['load'],['load']
Performance,"The apparently latest API's documentation [on-line](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/CppAPI.html) of OpenBabel (OpenBabel's main index [here](https://open-babel.readthedocs.io/en/latest/index.html)) equally does so, as well as the hyperlinks in chapter 11.1 of the then generated .pdf ahead of the description relevant to e.g., C++ and Python. It is worth noting chapter 11.8 «Updating to Open Babel 3.0 from 2.x» starts by. > «Open Babel 3.0 breaks the API in a number of cases, and introduces some new behavior behind-the-scenes. These; changes were necessary to fix some long standing issues impacting chemical accuracy as well as performance.; Here we describe the main changes, and how to change existing code to adapt.». At present, the .pdf was created on June 14, 2020, possibly to reflect about OpenBabel 3.0.1.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389:659,perform,performance,659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2327#issuecomment-788827389,1,['perform'],['performance']
Performance,"The attached nanotube PDB file ""hangs"" conversion. With only 316 atoms, it should be a relatively easy conversion. However, FindSSSR() kills performance. In this case, it's called from OBMol::PerceiveBondOrders(). For one, I'm not sure that PerceiveBondOrders() needs to call FindSSSR. For another, I suspect slightly better performance can be found from the method. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/603:141,perform,performance,141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603,2,['perform'],['performance']
Performance,"The change I referred to was in the columns after the label about arginine/alanine and prior to the atom's coordinates:. ![change](https://user-images.githubusercontent.com/19709084/170869519-af9e2f37-1db0-42e4-a23c-05579a25f1b9.png). Re the `.pdb` file, the most relevant entry to your story I was able to identify dates back 2013 when (apparently) the PDB equally provided access to (maybe a subset of) the data as `.sdf` (which do contain bond order). To quote the [post](https://www.mail-archive.com/openbabel-discuss@lists.sourceforge.net/msg02983.html):. > If your ligand really came from the PDB, you can download the ligand; in SD format. (Just scroll down to ""Ligand"" and click the download; link.) SD files will have the bonding info and should solve your; problem. _Perhaps_ the edit you intend to perform works better out in [RDKit](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=pdb#d-functionality-in-the-rdkit). With a throw-away script like. ```python; #!/bin/usr/env python3. import os. import rdkit; from rdkit import Chem. mol1 = Chem.MolFromPDBFile(""4gq6.pdb""); sdf_content = str(Chem.MolToMolBlock(mol1)). try:; with open(""report.sdf"", mode=""w"",encoding=""utf-8"") as newfile:; newfile.write(sdf_content); except OSError:; print(""Error to deposit the permanent record.""); ```; this warning is not reported, _possibly_ RDKit uses a different approach on [kekulization](https://rdkit.readthedocs.io/en/latest/Cookbook.html?highlight=kekulization#using-a-different-aromaticity-model).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101:809,perform,perform,809,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1140448101,1,['perform'],['perform']
Performance,"The changes to FastSearchFormat I've just made in r3474 in the trunk code go some way to making it do what ruchemist is expecting. . Because an ordinary SMARTS match is one of the stages in FastSearch, it can never do more than an ordinary SMARTS query. It is less versatile because the string (the -s parameter) has currently to be SMILES. The changes allow it to have two additional SMARTS-like features. Atoms written in the form [#6] match both aromatic and non-aromatic atoms, whereas c and C each match only one of these. But the default fingerprint (FP2) indexes using bond orders, so for a bond that can be single or aromatic it necessary to specify it as ~ . In the example 2, the query; Nc1nc(C)c(C)n1 will match only 3 molecules in the dataset, because it specifes non-aromatic N and C.; [#7]c1nc([#6])c(C)n1 matches 4 molecules, but to get all six matches use; [#7]~c1nc([#6])c(C)n1 where the bond that may or may not be part of an aromatic ring has been specified as such. This only works from the -s parameter, and not with a molecule from a file (-S option). The ~ bond is implemented by doing two fastsearches and combining the results. If there were two ~ in a query it would be 4, and with 3 ~ it would be 8. It therefore takes time and produces a lot of duplicate matches which have to be removed, so performance with large datasets will be affected. Nevertheless, this is a workable solution for some cases, but it needs some careful thought in writing the query string. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795560:1320,perform,performance,1320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795560,1,['perform'],['performance']
Performance,"The current FP3 and FP4 fingerprints reparse the SMARTS patterns for every fingerprint instead of keeping the patterns around for future use. This would probably improve the overall performance of FP generation. The relevant code is in fingerprints/finger3.cpp:PatternFP.GetFingerprint. Reported by: dalke. Original Ticket: ""openbabel/feature-requests/132"":https://sourceforge.net/p/openbabel/feature-requests/132",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1501:182,perform,performance,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1501,1,['perform'],['performance']
Performance,"The current SVG code performs a 2D layout of a structure to produce a chemical diagram. For some compounds, a better representation would be a ball-and-stick projection of the 3D coordinates, e.g.:; http://plindenbaum.blogspot.com/2009/06/fun-with-svg-ncbipubchemxslt-svg.html. ![](http://40.media.tumblr.com/NngfN9gsDobdle0pIyy8oIw3o1_400.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/193:21,perform,performs,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/193,1,['perform'],['performs']
Performance,"The current SVN trunk fails ""make check"" on Cygwin for; some but not all tests:. src/babel -H; ... many formats. make check results: ; [Sorry, can't copy/paste to this window]; aromatic.... ok; ... [everything ok]; smarts .... dubious; Test returned status 0 (wstat 134, 0x86); unitcell .... dubious; Test returned status 0 (wstat 134, 0x86); after all the subtests completed successfully; cml ... skipped - CML format not loaded; test-set ... skipped - roundtrip test set not found. Checking both smarts and unitcell, these dump core. I'm; now recompiling with CXXFLAGS=""-g"" to see if I can get; a backtrace. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/544:423,load,loaded,423,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544,1,['load'],['loaded']
Performance,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524:487,perform,perform,487,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524,1,['perform'],['perform']
Performance,"The development/Git master version of the library has diverged significantly from the SWIG bindings packaged with the 2.4.1 version on PyPI. This means a development version of the library can't be used trivially with virtualenvs, for example:; ```; $ pip install openbabel; Collecting openbabel; Using cached https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz; Building wheels for collected packages: openbabel; Running setup.py bdist_wheel for openbabel ... error; Complete output from command /home/eric/data/virtualenvs/cclib_berquist/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-install-3un05okd/openbabel/setup.py';f=getattr(tokeniz; e, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" bdist_wheel -d /tmp/pip-wheel-6z874m0l --python-tag cp37:; running bdist_wheel; running build; running build_ext; Open Babel location automatically determined by pkg-config:; - include_dirs: ['/usr/include/python3.7m', '/usr/include/openbabel-2.0']; - library_dirs: ['/usr/lib', '/usr/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/include/python3.7m -I/usr/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i; openbabel-python.i:292: Error: Unable to find 'openbabel/atomclass.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install. ----------------------------------------; Failed building wheel for openbabel; Running setup.py clean for openbabel; Failed to build openbabel; Installing collected packages: openbabel; Running setup.py install for openbabel ... error; Complete output from command /home/eric/dat",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1916:303,cache,cached,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1916,1,['cache'],['cached']
Performance,"The following can only cover some parts. Inferring from Linux Debian, Linux CentOS provides *some basic* support of Python; mainly to support the operating system itself. And if you perform a proper update of the operating system, then equally these supporting libraries are going to be updated. Now to your project. There is a set of modules deemed essential to Python; they constitute the Python standard library *every* Python installation includes, for instance `os`, `sys`, `argparse`. See for instance [here](https://docs.python.org/3/library/index.html) and [here](https://docs.python.org/3/tutorial/stdlib.html). Additional functionality can be imported by additional libraries. One way to manage these *new dependencies* is by a `requirements.txt` file to list these modules -- preferably with indication of their (minimal) version known to work. For example. ```; CairoSVG>=2.7.1; openbabel-wheel>=3.1.1.16; rdkit>=2023.3.2; Requests>=2.31.0; ```. To keep the Python libraries which support your operating system in good shape, it is considered good practice to keep them separate (not accidentally modified) from packages used to develop and experiment with new packages. This is the background of using *virtual environments* which you. - first create, i.e. set up of a minimal clean Python environment; - second activate, i.e. to start using them; - third complement by additional Python packages (if needed) to provide additional functionality. *Here* the special file `requirements.txt` helps you because . ```shell; pip install -r ./requirements.txt; ```. is going to resolve the dependencies for you automatically. In case *virtual environments* is a concept new to you, Python documents it [here](https://docs.python.org/3/library/venv.html). Real Python offers a free [primer](https://realpython.com/python-virtual-environments-a-primer/) less technical if you prefer so. In each case: note that the commands in Windows, Linux, MacOS to toggle on/off the virtual environment differ ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034:182,perform,perform,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2659#issuecomment-1860654034,1,['perform'],['perform']
Performance,"The issue seems to be an invalid fragment in the `data/rigid-fragments.txt` file. The structure in this bug report contains the fragment `OC1COCC1`. The fragment coordinates for this are all zero:; ```; OC1COCC1; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; ```; When the OBBuilder class tries to connect such fragments the coordinates become NaN. This happens because the code tries to find a directional vector for the bond connecting this fragment to other parts. In this process the vector (0, 0, 0) is normalized which results in (NaN, NaN, NaN). Updating the `data/rigid-fragments.txt` file should fix this. In total, there are 12 fragments such fragments in the file:; ```; CC1=CC2=N3C1=Cc1cc(c4n1*13N3=C(C=c5n1c(=C2)cc5C)C(=CC3=C4)C)C; CC1=CC2=Cc3n4*56N2=C1C=c1cc(c(=CC2=N6C(=Cc4cc3C)C=C2C)n51)C; C1=CC2=N3C1=Cc1ccc4n1*13N3=C(C=CC3=C4)C=c3n1c(=C2)cc3; C=C1CCCC2(C1CCC2)C; OC1CC(=CC(C1)(C)C)C; OC1C(O)COCC1O; O=C1NC2C(N1)CSC2; OC1COCC1O; O=C1ccC(=O)N1; OC1COCC1; C1=CC=C[NH2]=C1; [O-]*(=O)(=O)[O-]; ```. Detecting this in `OBBuilder::LoadFragments()` and throwing an error would also make it easier to debug this in the future. Agree?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646:1122,Load,LoadFragments,1122,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646,1,['Load'],['LoadFragments']
Performance,"The line for phosphorus present some problems.; - First, covalent radius is much too short (0.75Ĺ; instead of 1.10), - Second, maximum bond number is set; to 5. I trie do load an xyz file containg data for the; hexachlorophosphate anion and only five bonds were; added. This problem is of course exceptional (only; hexafluoro- and hexachlorophosphate are concerned). Reported by: jbrefort",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/421:171,load,load,171,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421,1,['load'],['load']
Performance,"The method marks ring bonds as potential rotors and supplies some; initial constraints on rings of size 4-8. Performance can be greatly; enhanced by checking rotors for physically realistic conformations; (i.e., sum of the dihedrals in ring = 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/132:109,Perform,Performance,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/132,1,['Perform'],['Performance']
Performance,"The perception/assignment of bond orders for the xzy2mol conversion likely is based on geometry and distances (see, e.g. southern pyrrole in comparison with the three other ones in your illustration). Possibly other routines do so, too. The one e.g., by the Jensen group, [xyz2mol](https://github.com/jensengroup/xyz2mol), which by 2018 was written for «molecules containing the following elements: H, B, C-F, Si-Cl, Br, and I.» ([blog post](https://proteinsandwavefunctions.blogspot.com/2018/01/xyz2mol-converting-xyz-file-to-rdkit.html)). Jensen provided additional insight about its function in his talk at RDKit UGM 2020 (3:21 mm:ss onward, [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo)). You may edit the connection table in the .mol file manually (below the atomic coordinates); here, atoms are listed (integers by appearance in the model, count starts with 1) as well as the assigned bond order. For a molecule (still) this small, you may consider a visual edit, e.g., in [Jmol](http://jmol.sourceforge.net/)'s model kit as well, and save the newly written model in a separate file. See the animation below for how an edit may proceed:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/141300231-ab2b2f6a-151e-49f8-a154-eee25faaba61.gif). (By the way, hydrogen atoms are missing in the model.) . [data.zip](https://github.com/openbabel/openbabel/files/7520504/data.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541:1173,optimiz,optimize,1173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427#issuecomment-966278541,1,['optimiz'],['optimize']
Performance,"The response from the SWIG community is. > [PHP] #1982 #1457 https://sourceforge.net/p/swig/bugs/1339/; > SWIG now only use PHP's C API to implement its wrappers, and no; > longer generates PHP code to define classes. The wrappers should; > be almost entirely compatible with those generated before, but; > faster and without some previously hard-to-fix bugs.; > ; > The main notable difference is SWIG no longer generates a .php; > wrapper at all by default (only if %pragma(php) code=... or; > %pragma(php) include=... are specified in the interface file).; > This also means you need to load the module via extension=...; > in php.ini, rather than letting the dl() in the generated; > .php wrapper load it (but dl() has only worked for command-line; > PHP for some years now). @mwojcikowski Any thoughts on how we generate a .php wrapper now in PHP 8.x",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893:590,load,load,590,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469#issuecomment-1122523893,2,['load'],['load']
Performance,The version installed by **Debian** should be **2.3.2**. `apt-cache show libopenbabel4` shows:. Package: libopenbabel4; Source: openbabel (2.3.2+dfsg-1); Version: 2.3.2+dfsg-1+b1; Installed-Size: 11264; Maintainer: Debichem Team <debichem-devel@lists.alioth.debian.org>; Architecture: amd64. Original comment by: biohuang,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1290#issuecomment-281804042:62,cache,cache,62,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1290#issuecomment-281804042,1,['cache'],['cache']
Performance,"There aren't two function calls and I think you underestimate what an optimizing compiler is capable of, especially considering these are short functions defined in the header file and will be automatically inlined. I really don't think there is any efficiency issue unless your compiler sucks. There are issues in using the enum, but it gives the option of type checking element types. However, I agree that atomic numbers need to continue to be represented as ints so users can create non-physical atoms, so there will be a disconnect somewhere. I believe this enables more readable, less bug-prone code, but the effect is slight so I won't advocate for it any more.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357684889:70,optimiz,optimizing,70,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-357684889,1,['optimiz'],['optimizing']
Performance,"There is a general problem with substructure matching with azoles (pyrazoles, triazoles, tetrazoles, etc.) bearing a hydrogen on one of nitrogens, ie. 1,2,3-triazole (picture attached). When MOL is converted into smiles then you get c1cnn[nH]1. When you search this pattern against indexed smiles then you won`t obtain any structures bearing a substituent on the nitrogen. A workaround is to search for c1cnnn1 but this require intentional string substitution in smiles from [nH] to n by the script that performs the search. . Reported by: witekmo. Original Ticket: [openbabel/bugs/855](https://sourceforge.net/p/openbabel/bugs/855)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1235:504,perform,performs,504,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1235,1,['perform'],['performs']
Performance,"These are the MMFF94 atom types. The definitions can be found on the; internet (http://www.psc.edu/general/software/packages/charmm/tutorial/mackerell/mmffsymb.par); or in the original MMFF94 paper part I. Another quick way to get these types and an associated charge is to run. $obenergy -ff MMFF94 mymol.mol2. This will print out all the atom types and charges for your molecule. Note: in version 2.2.0, the probe atom is placed at position (0.0,; 0.0, 0.0) before calculating the grid size. This results in very large; grids (and bad performance) when your molecule is off-center. You can; either center the molecule first, or use svn trunk where this ""bug""; has been fixed. The trunk version also prints out the progress which; can be useful for large molecules. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/824#issuecomment-281793945:537,perform,performance,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/824#issuecomment-281793945,1,['perform'],['performance']
Performance,"This can actually be closed -- we'll be using Eigen2, which is also now highly tuned and vectorized... :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810741:79,tune,tuned,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810741,1,['tune'],['tuned']
Performance,"This fixes a segfault when trying to use a fastsearch index; babel mymols.fs -ifs -sN#Cc1ccccc1C#N results.smi; would segfault since the fastsearch plugin assumed that the -s argument was set and was indexing into an empty vector. If it encounters this situation it will now generate a message instead. More importantly, the reason the argument was missing is because plugin parameter options were getting registered _after_ the parameters were parsed in babel.cpp. Specifically, in DoOption in babel.cpp `nParams` for -s was zero since its number of arguments hadn't been registered yet. This is due to the commit 3cb13fb2155740ad632c0cd49fcbf9686c78f2ee. This made plugin loading something that happens greedily when the first plugin is retrieved, whereas before it happened in the OBConversion constructor. The provided fix makes LoadAllPlugins a public function and calls it explicitly in babel.cpp before parsing commandline arguments.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/234:674,load,loading,674,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/234,2,"['Load', 'load']","['LoadAllPlugins', 'loading']"
Performance,"This is a first pass at folding EQeq (a speed-optimized crystal-focused charge estimator described [here](http://pubs.acs.org/doi/abs/10.1021/jz3008485)) into openbabel. This currently runs and appears to produce the same results as the original EQeq, but has not yet been rigorously tested. One note is that the EQeq algorithm requires higher-order ionization energy data and metal ion charges, both of which I couldn't find in `OBElementTable`. Currently, this implementation reads a separate data file for this. There are also some parameters that are hardcoded, but, in practice, people don't seem to ever change these - this could be fixed if needed. Current test script is through Python:. ``` python; import pybel; import EQeq; import sys. with open(sys.argv[-1]) as in_file:; m = in_file.read(). # Test EQeq's openbabel implementation; mol = pybel.readstring(""cif"", m); eqeq = pybel.ob.OBChargeModel_FindType(""eqeq""); eqeq.ComputeCharges(mol.OBMol); charges = [a.partialcharge for a in mol]. # EQeq's standard Python bindings; out = EQeq.run(m, output_type=""list""). # Compare (this assumes atoms don't get shuffled in openbabel); print charges; print out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/54:46,optimiz,optimized,46,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/54,1,['optimiz'],['optimized']
Performance,"This is a request for clarification for Open Babel-produced SMILES. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian unstable. ## Question; What is the convention for tetrahedral chirality center enumeration in SMILES when one of tetrahedral vertex is a lone pair? This does not seem to be covered neither by OpenSMILES nor SMILES+ (I have opened clarification requests https://github.com/timvdm/OpenSMILES/issues/9 and https://github.com/IUPAC/IUPAC_SMILES_plus/issues/26). Is the lone pair considered first when enumerating tetrahedron vertices in (counter)clockwise order? What the order would be if another vertex is an implicit hydrogen?. ## Steps to reproduce; I have downloaded CIF for [COD entry 2013863](https://www.crystallography.net/cod/2013863.html) of r180807. The structure contains S atom with a lone pair, and when performing conversion to SMILES, Open Babel derives a tetrahedral chirality marker for this S:; ```bash; $ obabel -icif 2013863.cif -osmi; [S@]12CCN(CCN(C(=O)C1)CC2)C(=O)CBr.[Br]	2013863; 1 molecule converted; ```; In SMILES only three vertices of a tetrahedron are explicitly provided, fourth of them being the lone pair (I assume).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451:875,perform,performing,875,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451,1,['perform'],['performing']
Performance,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010:829,perform,perform,829,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010,1,['perform'],['perform']
Performance,This is for OpenBabel 2.0.0:; Static functions OBConversion::GetNextFormat and; OBConversion::FindFormat need the following 2 lines; currently only present in the constructor of OBConversion:. if (FormatFilesLoaded == 0); FormatFilesLoaded = LoadFormatFiles(); . Otherwise these functions silently fail when no; OBConversion object was instantiated before. Reported by: bswerts,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500:242,Load,LoadFormatFiles,242,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500,1,['Load'],['LoadFormatFiles']
Performance,"This is now fixed in svn. However, you are still not able to optimize your molecule because there are three deuterium atoms present. AFAIK you can safly remove the M ISO line in the file without affecting the results. (atom mass is not used in parameterization/optimization). Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954:61,optimiz,optimize,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/825#issuecomment-281793954,2,['optimiz'],"['optimization', 'optimize']"
Performance,This may or may not be related to bug 1665519 but i am filing a separate report. Adding hydrogens to a two atom molecule does not correctly add the hydrogens. For instance take the following Ghemical (GPR) file using obmm. This does _not_ happen when you work with two bonded atoms. --- Input. !Header gpr 111; !Info 1 allmm 80; !Atoms 2; 0 6 0 0; 1 6 0 0; !Bonds 0; !Coord; 0 -0.142777726054192 +0.239866569638252 +0; 1 +0.310303598642349 -0.156103640794754 +0; !PartialCharges; 0 +0; 1 +0; !GAMESS; !End. --- Output; dcurtis@baracus ~/development/openbabel/tools $ obmm. openbabel; M O L E C U L A R M E C H A N I C S; program; v 0.1. command > load untitled01.gpr. A T O M T Y P E S. IDX TYPE CHARGE; 1 0600 0; 2 0600 0; molecule succesfully loaded.; 2 atoms; 0 bonds; command > addH; 0 hydrogens added.; command > . Reported by: @milkypostman,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610:647,load,load,647,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610,2,['load'],"['load', 'loaded']"
Performance,"This should be possible and I will have a look at this. A quick look at the code shows that both the algorithm (use orbits of the permutation group) and performance can be improved (e.g. using a small vector optimization for inner loops, avoid dynamic allocated memory in general).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120:153,perform,performance,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,This should fix #2021. Problem was that alias expansion was performed while looping over the atoms.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2035:60,perform,performed,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2035,1,['perform'],['performed']
Performance,"To emphasize, you've indicated that tests pass without `-march=native` and also pass on other chipsets. That seems like a weird optimizer / compiler bug, not a fault in Open Babel. AFAIK, there's no chipset-dependent code in our codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317:128,optimiz,optimizer,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317,1,['optimiz'],['optimizer']
Performance,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:239,concurren,concurrent,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['concurren'],['concurrent']
Performance,Translation vector line should be skipped while reading the optimized structure from a mopac output file.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/72:60,optimiz,optimized,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/72,1,['optimiz'],['optimized']
Performance,UFF optimization gives H-O-H angle ~90 degrees,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/848:4,optimiz,optimization,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/848,1,['optimiz'],['optimization']
Performance,"Ubuntu 16.04. ## Actual Behavior; I am using openbabel in my java application(app). I want to distribute my application as jar file(app.jar). My jar file library contains openbabel.jar and other jar files required for the application to run in the lib directory. . I complied java bindings for openbabel using the command ; ```; sudo cmake /home/vin/openbabel2.4 ; -DCMAKE_INSTALL_PREFIX=~/Tools ; -DCMAKE_BUILD_TYPE=DEBUG ; -DJAVA_BINDINGS=ON ; -DEIGEN3_INCLUDE_DIR=/home/vin/Eigen3 ; -DSWIG_EXECUTABLE=/usr/bin/swig ; -DRUN_SWIG=ON; sudo make; ```. The compilation went well and took the libopenbabel_java.so and libopenbabel.so from the build directory and packed it along with my application in the directory (app/rescources) and specified the path to the app/resources directory in the source code (system.load(""/home/vin/app/resources/libopenbabel_java.so"")) of my application for performing an openbabel task. When I run my application jar file (app.jar) and perform an openbabel task (generate conformers) I am getting the below error . Exception in thread ""AWT-EventQueue-0"" java.lang.UnsatisfiedLinkError: /home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: **/home/praktikant/OPAS_ALPHA_1.0/resources/libopenbabel_java.so: undefined symbol: _ZTVN9OpenBabel30OBMinimizingRMSDConformerScoreE**. I am not sure that it is a bug in openbabel or am I missing something in the java bindings compilation? I have attached the CMakeCache.txt; [CMakeCache.txt](https://github.com/openbabel/openbabel/files/2192825/CMakeCache.txt). I also looked into the Java bindings trouble #1102 in the issues, it is some what close but not exactly the same. Thank you for your time. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868:1720,perform,perform,1720,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868,1,['perform'],['perform']
Performance,"Using the current 2.2.x branch, UFF optimization gives a ~90 degree bond angle to water. Similar bond angles are also observed for H-S-H. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/848:36,optimiz,optimization,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/848,1,['optimiz'],['optimization']
Performance,"Using trunk from today, libinchi.so* is being installed to $PREFIX/bin, not libs/openbabel/(version). Leads to lots of:. *** Open Babel Error in openLib; /usr/local/lib/openbabel/2.2.99/chem3dformat.so did not load properly.; Error: libinchi.so.0: cannot open shared object file: No such file or directory. etc. Moving to /usr/local/lib/openbabel/2.2.99 fixes it. Reported by: @dlonie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/871:210,load,load,210,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/871,1,['load'],['load']
Performance,"Well I can import babel in python now, but for some reason it's not finding the force fields which are in BABEL_DATADIR. I have checked with echo ""%BABEL_DATADIR%. It points to ""C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data"" and all the FF files and what not are in there, but when I run stuff like:. ```py; from openbabel import pybel. # assuming a list of SMILES; smiles_list = [ '[Zn--]([NH3+])([NH3+])([NH3+])N1C=C(Cl)N=C1' ]. for smiles in smiles_list:. mol = pybel.readstring(""smi"", smiles). # make it 3D; mol.make3D(); print(mol.OBMol); ```; I get the following error:. ```; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; <openbabel.openbabel.OBMol; proxy of <Swig Object of type 'OpenBabel::OBMol *' at 0x000002936C70E2E0> >; ```; I have checked and double checked: ring-fragments-index.txt and mmff94.ff and all the others are in the babel dir. Is there a way to print out where the script *expects* these files to be at? because it seems that it is looking somewhere else than the BABEL_DATADIR I have in my environment variables. This is probably self-inflicted, since I have tried to install babel over and over again (different versions etc.) sometimes in Program Files and sometimes in Program Files (x86). So maybe the BABEL_DIR is set for the 32bit version instead of the 64bit version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586:666,Load,LoadFragments,666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792484586,1,['Load'],['LoadFragments']
Performance,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:170,load,loading,170,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,2,"['cache', 'load']","['cache', 'loading']"
Performance,"What do you want to do *after* the sort? Try this:. - option A) is an edit in place, in the file. You need a good text editor. In Emacs, jump the block of interest (`C-s`, followed by the criterion e.g. `BOND ANGLES`), mark the block by `M-h` and run `M-x sort-lines`. After that, you however have to put back `BOND ANGLES` to lead this block because an explicit empty space (here leading a column) has a higher priority in this sort, than `B` of string `BOND ANGLES`.; ; If you prefer vim, jump to the block by `/BOND ANGLES/`. Advance one additional line (`j`) to the first line of the array. Enter the visual mode (`v`), mark all to the end of this block (`}`) and run the command `:sort`. In case you didn't advance the single line before entering the visual mode and marked the whole paragraph (including the line `BOND ANGLES`), you now have to copy and yank this line up to the beginning of this block -- similar to Emacs.; There equally is `gvim` (vim with some GUI added); here you can mark the region of interest with your mouse before running the command `:sort`. - option B), your interest is only this very block in an eventually separate file. After manual extraction of the region of interest, perform a natural sort. In Linux, you can run `sort -n input.txt` with a result you can redirect into a new file. (The natural sort puts the string `BOND ANGLES` ahead of the array.). In Linux, csplit allows you to skip the manual search and copy prior to the sort, too. A minimal working example is. ```shell; csplit CCB-CH2CN_1.txt '/^BOND ANGLES$/' -s '/^$/' -f out; ```. to indicate the file to process, the pattern at the start of the paragraph of interest separated from the next one by an empty line (hence `-s '/^$/'`). And to store the output into files `out`. It then is file `out01` which is about the block `BOND ANGLES` you can submit to the sort.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814353703:1209,perform,perform,1209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814353703,1,['perform'],['perform']
Performance,"When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as below:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. What is the problem? Could somebody help me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2401:182,Load,LoadFragments,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2401,1,['Load'],['LoadFragments']
Performance,"When converting SMILES-strings to other formats, I often receive the error ""*** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt"". The file ""ring-fragments-index.txt"" seems to be missing in the data-folder. According to a search on GitHub, this file is called by ""src/builder.cpp"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2267:100,Load,LoadFragments,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2267,1,['Load'],['LoadFragments']
Performance,"When converting to mol2 format residue name is appended with ""1"" each time conversion is performed. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: latest git; Operating system and version: Linux Mint. ## Expected Behavior; Residue name should be written as is. ## Actual Behavior; Residue name is appended with ""1"". On each subsequent conversion new ""1"" is added. ## Steps to Reproduce; Residue name in original file 1.mol2 is ""LIG"". babel -imol2 1.mol2 -omol2 2.mol2 # LIG1 in output; babel -imol2 2.mol2 -omol2 3.mol2 # LIG11 in output; babel -imol2 3.mol2 -omol2 4.mol2 # LIG111 in output. [mol.zip](https://github.com/openbabel/openbabel/files/1911912/mol.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1819:89,perform,performed,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1819,1,['perform'],['performed']
Performance,"When doing a force field minimization of a molecule with Open Babel 2.4.1 the optimization continues till the completion of number of steps specified. A convergence criteria given is ignored.; Reason is that the OBForceField functions e.g. ConjugateGradientsTakeNSteps, SteepestDescentTakeNSteps, SteepestDescent etc. all do not return FALSE (or return) if convergence criterion has been reached.; The parameter econv seems to be ignored in all functions. Tested with Openbabel 2.4.1 (64bit) and Win10 pro 64 bit.; This bug was not present in Open Babel 2.3.2. see also:; https://sourceforge.net/p/openbabel/mailman/message/35400728/. Reported by: yodah134. Original Ticket: [openbabel/bugs/987](https://sourceforge.net/p/openbabel/bugs/987)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1366:78,optimiz,optimization,78,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1366,1,['optimiz'],['optimization']
Performance,"When formats/cacheformat.cpp is included in a build of the library, it RegisterFormat s mime-type 'chemical/x-alchemy' (line 29) which overrides the file formats/alchemyformat.cpp . The result is that valid .alc alchemy files cannot be converted. Reported by: kshepherd1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/689:13,cache,cacheformat,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/689,1,['cache'],['cacheformat']
Performance,"When from the same program (GChemPaint)I open; successively two cml files using openbabel (either last; version or cvs version), the program crashes. The first; file is correctly loaded.; gdb gives this backtrace:. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 8932)]; 0x00000000 in ?? (); Current language: auto; currently c; (gdb) bt; #0 0x00000000 in ?? (); #1 0x080cb83e in; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0x84d1908, bond=@0xbfffe280) at mol.h:443; #2 0x0810ecf1 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x081085aa in OpenBabel::endElement(std::string,; std::string, std::string); (localName=Internal: global symbol `_ZNSs4nposE'; found in ../../../../libstdc++-v3/src/string-inst.cc; psymtab but not in symtab.; _ZNSs4nposE may be an inlined function, or may be a; template function; (if a template, try specifying an instantiation:; _ZNSs4nposE&lt;type&gt;).; ) at cml.cpp:1175; #4 0x08108127 in OpenBabel::endElement(std::string); (name=Cannot access memory; at address 0x8; ) at cml.cpp:1156; #5 0x081036ec in OpenBabel::tag(std::string) (s=; {static npos = 4294967295, _M_dataplus =; {&lt;allocator&lt;char&gt;&gt; = {&lt;No data; fields&gt;}, _M_p = 0x84d85ec &quot;&lt;/bond&gt;&quot;}, static; _S_empty_rep_storage = {0, 0, 0, 0}}) at; /usr/include/c++/3.2.2/bits/basic_string.h:883; #6 0x081027ac in OpenBabel::ReadXML(std::istream&amp;); (ifs=@0xbfffe560); at cml.cpp:626; #7 0x08114309 in OpenBabel::ReadCML(std::istream&amp;,; OpenBabel::OBMol&amp;, char const*) (ifs=@0x84d1908,; mol=@0x84d1908,; title=0x84c6770; &quot;/home/Jean/projects/GChemPaint/1.cml&quot;) at cml.cpp:2894; #8 0x080e7d23 in; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;,; OpenBabel::OBMol&amp;, char const*) (ifs=@0x84db7e4,; mol=@0xbfffea30,; title=0x84c2f90 &quot;&amp;#565;D\b&quot;) at fileformat.cpp:43. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420:179,load,loaded,179,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420,1,['load'],['loaded']
Performance,"When performing conformer searches on large molecules, it might be beneficial to a) fix certain rotors so that they are not changed and b) make the steric overlap filter less stringent. I made both changes available to the command-line interface. I also noticed that the help message said a switch were called ""--converge"" but the code actually expects ""--convergence"". It also sometimes happens that none of the initial conformers pass the filter and the programme would then run indefinitely. Those bugs are also fixed.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/343:5,perform,performing,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/343,1,['perform'],['performing']
Performance,"When you do a FullConvert() the flag for the last ; molecule in a file is set automatically to add the ; $$$$ correctly in sdf files. If you use the OBConversion::Read() function, modify ; the molecule in some way and then output it with ; OBConversion::Write() the IsLast() will never return ; false. This results in a sdf file with no $$$$ between ; any of the molecules which caues problems for some ; parsers. There is currently no function SetLast(), ; which would allow m_IsLast to be set. Currently ; m_IsLast==true at all times except during ; OBConversion::Convert().; This would be usefull for tools which want to use the ; Openbabel API to read and write molecules, but perform ; some changes to them. Something like:. void OBConversion::SetLast(bool value){; m_IsLast=value;; }. would be usefull!. Reported by: nickengland",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560:681,perform,perform,681,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560,1,['perform'],['perform']
Performance,"While OpenBabel has some limited support for point and space ; group symmetry information, it does not (yet) support perception of ; symmetry information. GPL'ed code (in C) has been donated which can perceive point-group ; symmetry, and similar code is available for space group symmetry ; as well. Such support would be extremely useful, particularly if it supports a ; ""symmetry optimization"" to push a structure into a particular ; symmetric geometry or to reduce it to symmetry-unique coordinates ; (e.g., for GAMESS format). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/39"":https://sourceforge.net/p/openbabel/feature-requests/39",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1409:382,optimiz,optimization,382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1409,1,['optimiz'],['optimization']
Performance,"With Open Babel as currently provided in Linux Debian 10 (release 3.1.0), I copy-pasted you test data into `IN.smi` and run the instruction you mention, i.e., `obabel -i smi IN.smi -o sdf -O OUT.sdf -e --gen3D --fastest`. Contrary to your report, I did not observe any error report at all. I then read the `.sdf` in an old instance of Jmol (14.6.4_2016.11.05), the viewer recognized the presence of four models. It was possible to display them one by one (on Jmol's console, this requires an input in pattern of `load ""OUT.sdf"" 1`) and the geometries do not look terribly skewed either. Equally, there was no problem to import the `.sdf`import into [DataWarrior](http://openmolecules.org/datawarrior/index.html) (version 5.2.1, 2020) to write a `.dwar` file either. It looks like the problem does not occur (any more) in a (more) recent version of Open Babel. [3D_generation.zip](https://github.com/openbabel/openbabel/files/5673497/3D_generation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924:513,load,load,513,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924,1,['load'],['load']
Performance,"With libc++, using OBDefine to load descriptors from plugindefines.txt would result in some plugin IDs and descriptions becoming garbage. This was because plugins use const char\* pointers for their ID and description, which point towards strings stored in a vector by OBDefine. The problem was that as new strings were read from plugindefines.txt and added to the vector, reallocations can occur to expand the vector capacity, invalidating any existing const char\* created from the previously added strings using c_str(). This commit fixes this bug by reading in all descriptors from plugindefines.txt before creating the plugin instances. This ensures no changes are made to the string vector once a plugin instance has been created.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/62:31,load,load,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62,1,['load'],['load']
Performance,"With openbabel 3.1.0 as provided in Linux Debian 11 / bullseye (branch testing) and your .pdb I performed the default protonation, i.e. `obabel -ipdb ligand_1.pdb -h -opdb add_h.pdb`. The newly written .pdb lists all atoms including the label `4CO`, too. Contrasting to the original file submitted, the new .pdb has an additional trailing column about the atom type. For most of the protonation suggested, chemically speaking (number of protons added, spatial arrangement vs. C, N, O), the results look plausible. The protonation of the phosphates _may_ be different. In the export of the protonated structure as .svg, the P=O in the terminal monophosphate is represented differently, than the P=O in the diphosphates. Possibly this is influenced on the P-O bond lengths determined. For a test, I reduced the information available in the .pdb about the protonated ligand to a SMILES string and let the structure recreate; the then displayed structure recreated from the SMILES does look plausible. Maybe this result already is good enough for your work. Maybe further evidence about the protonation at the terminal phosphate is important for you -- I don't know? Attached below, a .zip archive about the processing of the data so far. [ligand_1_revision.zip](https://github.com/openbabel/openbabel/files/6055089/ligand_1_revision.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422:96,perform,performed,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422,1,['perform'],['performed']
Performance,"Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);. > does it make sense to load libraries on the fly and each time a Read operation is performed?. No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. - Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't *required* to be in loops. A variable inside the loop is created / destroyed every iteration.; - The docs note that `ReadFile` retains the stream object, which is a small leak. If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300. There are plenty of examples in the `tools` directory...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607:206,load,load,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848068607,3,"['load', 'optimiz', 'perform']","['load', 'optimization', 'performed']"
Performance,"Yes, I am getting the error even though I have loaded gcc module. Any help would be really appreciated. 'Thread_local' related problem I looked through all possible resources but could not find any solution in regards to this openbabel install.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490:47,load,loaded,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2615#issuecomment-1670909490,1,['load'],['loaded']
Performance,"Yes, I haven't done much cleaning up or optimizing, because it's still working only ~75% of the time. Not bad, but not good either.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354879765:40,optimiz,optimizing,40,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1738#issuecomment-354879765,1,['optimiz'],['optimizing']
Performance,"Yes, as of commit a345105b28173eb7da14ecd1e5beebe94140c6d7 this bug also occurs with the git master. I confirmed the crash under strace to make sure it was loading the latest built-from-source shared libraries rather than the version packaged by Ubuntu. I built this software under Ubuntu 14.04 64 bit. This is how I built it:. ```; sudo apt-get install swig. mkdir -p /opt/science/openbabel/src; cd /opt/science/openbabel/src; wget http://bitbucket.org/eigen/eigen/get/3.2.4.tar.bz2; tar xjvf 3.2.4.tar.bz2; git clone https://github.com/openbabel/openbabel.git; cd openbabel; mkdir build; cd build. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=/opt/science/openbabel -DEIGEN3_INCLUDE_DIR=/opt/science/openbabel/src/eigen-eigen-10219c95fe65; make -j 4; make test; make install; ```. All tests passed when I ran make test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284:156,load,loading,156,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284,1,['load'],['loading']
Performance,"Yes, same error... `UNICODE` must be defined somewhere else by default. I just don't know where.; Command:; `C:\OpenBabel\build>mingw32-make -j4`; Display:; ```; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.obj; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp: In static member function 'static bool DLHandler::openLib(const string&)':; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp:155:36: error: cannot convert 'const char*' to 'LPCWSTR {aka const wchar_t*}' for argument '1' to 'HINSTANCE__* LoadLibraryW(LPCWSTR)'; if(LoadLibrary(lib_name.c_str())); ^; src\CMakeFiles\openbabel.dir\build.make:1312: recipe for target 'src/CMakeFiles/openbabel.dir/dlhandler_unix.obj' failed; mingw32-make[2]: *** [src/CMakeFiles/openbabel.dir/dlhandler_unix.obj] Error 1; mingw32-make[2]: *** Waiting for unfinished jobs....; CMakeFiles\Makefile2:1078: recipe for target 'src/CMakeFiles/openbabel.dir/all' failed; mingw32-make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; Makefile:139: recipe for target 'all' failed; mingw32-make: *** [all] Error 2; ```; Same thing if I retry without `-j4`. By googling a bit around, I found a few discussions regarding the (apparently recurrent) issue:; - https://stackoverflow.com/questions/1791578/how-do-i-convert-a-char-string-to-a-wchar-t-string; - https://stackoverflow.com/questions/14370982/converting-const-char-to-lpctstr-for-createdirectory; - and some similar others... By looking at the declaration in `winbase.h`:; ```; #ifdef UNICODE; : : :; #define LoadLibrary LoadLibraryW; : : :; #else; : : :; #define LoadLibrary LoadLibraryA; ```; and the source code in `dlhandler_unix.cpp`:; ```; #ifdef __MINGW32__; bool DLHandler :: openLib(const string& lib_name); {; if(LoadLibrary(lib_name.c_str())); return true;. unsigned long err = GetLastError();; return false;; }; #else; ...; ```; an idea could be whether to explicitely call `LoadLibraryA` or convert `lib_name.c_str()` to a `LPCWSTR` aka `const wchar_t*`. I tried the",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206:531,Load,LoadLibraryW,531,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206,2,['Load'],"['LoadLibrary', 'LoadLibraryW']"
Performance,"Yes, sorry for the short commit infos!; Now after an optimization run every geometry step will be read into the displacement structure to be able to visualize the optimisation steps and the energy changes in future.; Small bugfix to read the IR-spectra correct from orca outputfiles that have a wrong syntax structure when some numbers are to high.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/306#issuecomment-223514487:53,optimiz,optimization,53,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/306#issuecomment-223514487,1,['optimiz'],['optimization']
Performance,"Yes. It looks like the problem is on Matplotlib, I just changed; ""from PIL import Image"" to ""import Image"" in matplotlib/backend_bases.py; following the recommendation from this blog post:; http://jaredforsyth.com/blog/2010/apr/28/accessinit-hash-collision-3-both-1-and-1/#the-solution; and I can load pybel and matplotlib together now. It also looks like Matplotlib loads PIL ""the wrong way"" in other modules, should I report it to them?. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148:297,load,load,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238#issuecomment-281803148,2,['load'],"['load', 'loads']"
Performance,"You could set the environment in python, but you would have to make sure this is done before loadallplugins is called and you might poison all future plugin load attempts. It would have to be a standalone test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681:93,load,loadallplugins,93,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681,2,['load'],"['load', 'loadallplugins']"
Performance,"You could try something like helgrind:; http://valgrind.org/docs/manual/hg-manual.html; You'd need to write a multi-threaded program that exercised all the relevant code though. Really, any global state that isn't read-only is highly suspect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-206462495:110,multi-thread,multi-threaded,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-206462495,1,['multi-thread'],['multi-threaded']
Performance,You may want to perform `inkscape 1.svg --export-eps=1.eps`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2251#issuecomment-646415344:16,perform,perform,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2251#issuecomment-646415344,1,['perform'],['perform']
Performance,"You need to check the return value of the earlier API calls. My guess is; that some are false. On Wed, 13 Jun 2018, 15:36 niohiki, <notifications@github.com> wrote:. > I am using OpenBabel 2.4.1. I am using the Java wrapper to transform; > SMILES to MOL. The following code crashes the JVM, without an Error.; >; > `public class OBTest {; >; > public static void main(String[] args) {; > System.loadLibrary(""openbabel_java"");; >; > OBConversion conversion = new OBConversion();; > OBOp gen = OBOp.FindType(""gen3d"");; > OBMol mol = new OBMol();; >; > conversion.SetInFormat(""smi"");; > conversion.ReadString(mol, ""CC"");; >; > gen.Do(mol);; >; > conversion.SetOutFormat(""mol"");; > System.out.println(conversion.WriteString(mol));; > }; >; > }`; >; > The problematic line is; >; > gen.Do(mol);; >; > If it is removed, or if gen2d is used in; >; > OBOp gen = OBOp.FindType(""gen2d"");; >; > the code works correctly. I have repeated the same steps on the GUI and; > the command line, and it works perfectly.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1854>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGVA4199oscKlwNKtdoLXgRPOwboTks5t8SNzgaJpZM4UmU48>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397069178:395,load,loadLibrary,395,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1854#issuecomment-397069178,1,['load'],['loadLibrary']
Performance,You're either not linking to the right `libopenbabel` from your compile. What does `otool -L /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so` report?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2413#issuecomment-923155520:119,Cache,Caches,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-923155520,1,['Cache'],['Caches']
Performance,"Your illustration above shows a completely different molecule (e.g., a bromine atom, thiazole ring). Aside from this, and I admit, likely to be too slow for the conversion of batches of SMILES into `.sdf` (or other formats), I found [Jmol](http://jmol.sourceforge.net/) may be of help for such a conversion, provided the computer may reach to a server at [cactus.nci.nih.gov](https://cactus.nci.nih.gov/):. + launch the program; + similar to reading from a file, issue a command in pattern of `load smiles ""c1ccccn1"";` in Jmol's console; + wait a sec (depends a bit on the internet connection); + as usual, the tentative 3D structure may be stored permanently, e.g., by `write ""pyridine.sdf"";` / minimized by the MMFF forcefield implementation in Jmol's toolkit. Actually, the example below suggests, this already is possible for quite some time:. ![Jmol](https://user-images.githubusercontent.com/19709084/115271360-c7580700-a12c-11eb-8330-6392855cfd34.png). (Lack of dedicated volunteers with good knowledge of Java, JavaScript, and Linux contributes to the cause why Linux Debian 11 / bullseye still keeps this old, but known-to-work version in its repositories. The conversion shown still is possible, e.g. with the less old Jmol 14.31.32 released February 2021.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332#issuecomment-822618254:494,load,load,494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332#issuecomment-822618254,1,['load'],['load']
Performance,"Your request to openbabel `--gen3d` launches a minimization to identify one optimum (it need not be the the global one). Some cases are more difficult than others; check if the sketcher used offers a native 3D export. Your submitted case is a difficult one, because . ![case2](https://user-images.githubusercontent.com/19709084/173321323-02474993-8bd2-4ef2-85ba-967e7977bc3b.png). is provided as 2D structure by the .mol file with all z-coordinates equal to zero (the third column in the snippet below):. ```; [...]; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -2.0000 0.0000 S 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; [...]; ```; The addition of explicit hydrogens around the cycles will add complication; prior to an optimization, some of them would be too close to their opposite ones. This is a more difficult starting condition. Thus, no wonder that all five levels of `--gen3d` (except the distance geometry method, not tested here) struggle. In a bash script,. ```bash; #!/usr/bin/bash. for file in *.mol; do; for i in 1 2 3 4 5; do; echo work on file ""$file"" level ""$i""; new_filename=""$i""_""$file"".xyz. obabel ""$file"" -h --gen3d ""$i"" -oxyz -O ""$new_filename""; done; done; ```; As an example, running `obabel case2.mol --gen3d -O case2_3d.mol` suggests unlikely catenanes . ![cases2_3d](https://user-images.githubusercontent.com/19709084/173328419-ce836929-81f6-49d4-a367-7ef40c618b8a.png). ---. As a bypass to the problem, you might consider [Jmol](http://jmol.sourceforge.net/). Launch the program from the CLI by `jmol case2.mol &`, or start the program by click and load the structure (File -> Open). . The program has its own command line interface (File -> Console), start this as second step. For addition of (idealized) hydrogens and subsequent optimization of the structure by the MMFF force f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280:912,optimiz,optimization,912,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2494#issuecomment-1153718280,1,['optimiz'],['optimization']
Performance,"Your sample file is not valid. The _atom_site_label field must be unique. I see 6 times the ""Li"" label while we should have ""Li1"" to ""Li6"" (or so, they just need to be different). The same for C, H, and O. I agree that babl should not crash, but don't expect that this file will be loaded without errors. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800789:282,load,loaded,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800789,1,['load'],['loaded']
Performance,[ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/__/ops/unique.cpp.o; [ 62%] Linking CXX shared module ../../lib/outformat.so; [ 62%] Built target outformat; Scanning dependencies of target boxformat; [ 62%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.cpp.o; Scanning dependencies of target gamessukformat; [ 63%] Building CXX object src/formats/CMakeFiles/gamessukformat.dir/gamessukformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/boxformat.so; [ 64%] Built target boxformat; Scanning dependencies of target cacheformat; [ 64%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/inchiformat.so; [ 64%] Built target inchiformat; Scanning dependencies of target carformat; [ 65%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.cpp.o; [ 65%] Linking CXX shared module ../../lib/cacheformat.so; [ 65%] Built target cacheformat; Scanning dependencies of target chem3dformat; [ 65%] Building CXX object src/formats/CMakeFiles/chem3dformat.dir/chem3dformat.cpp.o; [ 66%] Linking CXX shared module ../../lib/MCDLformat.so; [ 66%] Linking CXX shared module ../../lib/carformat.so; [ 66%] Built target MCDLformat; [ 66%] Built target carformat; Scanning dependencies of target chemtoolformat; Scanning dependencies of target fhformat; [ 66%] Building CXX object src/formats/CMakeFiles/chemtoolformat.dir/chemtoolformat.cpp.o; [ 66%] Building CXX object src/formats/CMakeFiles/fhformat.dir/fhformat.cpp.o; [ 67%] Linking CXX shared module ../../lib/chem3dformat.so; [ 67%] Built target chem3dformat; Scanning dependencies of target xtcformat; [ 67%] Building CXX object src/formats/CMakeFiles/xtcformat.dir/xtcformat.cpp.o; [ 68%] Linking CXX shared module ../../lib/fhformat.so; [ 68%] Built target fhformat; Scanning dependencies of target painterformat; [ 68%] Linking CXX shared module ../../lib/chemtoolformat.so; [ 68%] Building CXX object src/formats/CMakeFiles/pa,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:40838,cache,cacheformat,40838,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['cache'],['cacheformat']
Performance,[ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/getinchi.cpp.o; [ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/__/ops/unique.cpp.o; [ 62%] Linking CXX shared module ../../lib/outformat.so; [ 62%] Built target outformat; Scanning dependencies of target boxformat; [ 62%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.cpp.o; Scanning dependencies of target gamessukformat; [ 63%] Building CXX object src/formats/CMakeFiles/gamessukformat.dir/gamessukformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/boxformat.so; [ 64%] Built target boxformat; Scanning dependencies of target cacheformat; [ 64%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/inchiformat.so; [ 64%] Built target inchiformat; Scanning dependencies of target carformat; [ 65%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.cpp.o; [ 65%] Linking CXX shared module ../../lib/cacheformat.so; [ 65%] Built target cacheformat; Scanning dependencies of target chem3dformat; [ 65%] Building CXX object src/formats/CMakeFiles/chem3dformat.dir/chem3dformat.cpp.o; [ 66%] Linking CXX shared module ../../lib/MCDLformat.so; [ 66%] Linking CXX shared module ../../lib/carformat.so; [ 66%] Built target MCDLformat; [ 66%] Built target carformat; Scanning dependencies of target chemtoolformat; Scanning dependencies of target fhformat; [ 66%] Building CXX object src/formats/CMakeFiles/chemtoolformat.dir/chemtoolformat.cpp.o; [ 66%] Building CXX object src/formats/CMakeFiles/fhformat.dir/fhformat.cpp.o; [ 67%] Linking CXX shared module ../../lib/chem3dformat.so; [ 67%] Built target chem3dformat; Scanning dependencies of target xtcformat; [ 67%] Building CXX object src/formats/CMakeFiles/xtcformat.dir/xtcformat.cpp.o; [ 68%] Linking CXX shared module ../../lib/fhformat.so; [ 68%] Built target fhformat; Scanning dependencies of target painterformat; [ 68%] Linking CXX shared module ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:40802,cache,cacheformat,40802,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['cache'],['cacheformat']
Performance,[ImgBot] Optimize images,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2345:9,Optimiz,Optimize,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345,1,['Optimiz'],['Optimize']
Performance,"__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; interp = 0x6045e0; modules = {'encodings.utf_8': <module at remote 0x7ffff6c45e18>, '_thread': <module at remote 0x7ffff6c3ce18>, '_codecs': <module at remote 0x; 7ffff6c58878>, 'DLFCN': <module at remote 0x7ffff6797680>, '__main__': <module at remote 0x7ffff6beb128>, 'mpl_toolkits': <module at remote 0x7ffff68b; 2b48>, 'sre_compile': <module at remote 0x7ffff68f1050>, 'builtins': <module at remote 0x7ffff7fe4440>, 'zipimport': <module at remote 0x7ffff6c42680>; , 'sys': <module at remote 0x7ffff7ff2d88>, 'locale': <module at remote 0x7ffff68b23f8>, 'os.path': <module at remote 0x7ffff6c1aea8>, 'genericpath': ; <module at remote 0x7ffff6c227e8>, '_frozen_importlib': <module at remote 0x7ffff6c71290>, '_collections': <module at remote 0x7ffff6bd77a0>, 'codecs'; : <module at remote 0x7ffff6c4b200>, 'marshal': <module at remote 0x7ffff6c2d440>, 'posixpath': <module at remote 0x7ffff6c1aea8>, 'stat': <module at ; remote 0x7ffff6c1a4d0>, 'import",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:5175,optimiz,optimized,5175,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"`1e1q_protein.mol2` is downloaded from http://bioinfo-pharma.u-strasbg.fr/scPDB/EXPORTENTRY=PROT=1e1q_4. With Open Babel 2.4.1 provided by [Debian's apt](https://packages.debian.org/buster/openbabel), performing `obabel 1e1q_protein.mol2 -oxyz` raises SEGV.; With Open Babel 3 built from f84536d804b4e2b530daf8831f264ea72a5cedf0, the command prints; ```; ==============================; *** Open Babel Warning in ReadMolecule; Failed to kekulize aromatic bonds in MOL2 file (title is 1e1q_ADP_4_protein); ```; to stderr but is successful. So is `openbabel.pybel`. Perhaps this has been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2014#issuecomment-548755505:201,perform,performing,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014#issuecomment-548755505,1,['perform'],['performing']
Performance,```; 178/227 Test #178: test_charge_mmff94_1 .............***Failed 0.46 sec; # Testing MMFF94 Charge Model...; Bail out! Cannot load charge model!. Start 179: test_charge_gasteiger_1; 179/227 Test #179: test_charge_gasteiger_1 ..........***Failed 0.45 sec; # Testing GASTEIGER Charge Model...; Bail out! Cannot load charge model!; ```. ## Environment Information; Open Babel version: 3-1-1-178-g2b211d6ac; Operating system and version: FreeBSD 13.2,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2604:129,load,load,129,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2604,2,['load'],['load']
Performance,`switch` is used; I hope performance is not worsen.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557852712:25,perform,performance,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2091#issuecomment-557852712,1,['perform'],['performance']
Performance,abel/2.2.99/cmlreactformat.so. 2b0db4768000-2b0db4968000 ---p 00013000 fd:00 30968934 /path/to/local/lib/openbabel/2.2.99/cmlreactformat.so. 2b0db4968000-2b0db4969000 rw-p 00013000 fd:00 30968934 /path/to/local/lib/openbabel/2.2.99/cmlreactformat.so. 2b0db4969000-2b0db4970000 r-xp 00000000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4970000-2b0db4b70000 ---p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b70000-2b0db4b71000 rw-p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b71000-2b0db4b77000 r-xp 00000000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4b77000-2b0db4d77000 ---p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d77000-2b0db4d78000 rw-p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d78000-2b0db4d7d000 r-xp 00000000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4d7d000-2b0db4f7c000 ---p 00005000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7c000-2b0db4f7d000 rw-p 00004000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7d000-2b0db4f97000 r-xp 00000000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db4f97000-2b0db5197000 ---p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5197000-2b0db5198000 rw-p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5198000-2b0db519c000 r-xp 00000000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db519c000-2b0db539b000 ---p 00004000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539b000-2b0db539c000 rw-p 00003000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539c000-2b0db53a4000 r-xp 00000000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db53a4000-2b0db55a4000 ---p 000080,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:19888,cache,cacheformat,19888,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['cache'],['cacheformat']
Performance,"abel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(46) : warning C4503: 'std::_Tree<_Traits>::_Buynode' : . decorated name length exceeded, name was truncated; with; [; . _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; chemtoolformat.cpp; Generating Code...; Compiling...; chemdrawct.cpp; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped =========",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:10723,cache,cacheformat,10723,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['cache'],['cacheformat']
Performance,"arting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to conve",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1011,load,loaded,1011,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['load'],['loaded']
Performance,"ava-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf717a50]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d1c3]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d2b0]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf732aa5]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf7654f1]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf765427]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf76546b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9thr24.so [0x2aaaaae4efd6]; /lib64/libpthread.so.0 [0x3f70006617]; /lib64/libc.so.6(clone+0x6d) [0x3f6f8d3c2d]; ---------------------------------------; JVMDUMP006I Processing dump event ""gpf"", detail """" - please wait.; JVMDUMP010I System dump written to /localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp; JVMDUMP032I JVM requested Snap dump using '/localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc' in response to an event; JVMDUMP010I Snap dump written to /localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc; JVMDUMP032I JVM requested Java dump using '/localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt' in response to an event; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0002.dmp' in response to an event; JVMDUMP010I Java dump written to /localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt; JVMDUMP013I Processed dump event ""abort"", detail """". The following smiles are instances where concurrent execution causes the issue:. [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: O1CCOCC1 From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: OS(=O)O From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: C([C@@H](N)CCCCN)(=O)O From smi to inchi. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:5885,concurren,concurrent,5885,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['concurren'],['concurrent']
Performance,"available.; #1 0x00007ffff62ab9aa in std::tr1::_Sp_deleter<OpenBabel::OBMol>::operator() (this=0x6b5998, __p=0x81ec40); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:285; No locals.; #2 0x00007ffff62a5f47 in std::tr1::_Sp_counted_base_impl<OpenBabel::OBMol*, std::tr1::_Sp_deleter<OpenBabel::OBMol>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x6b5980) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:257; No locals.; #3 0x00007ffff624c02c in std::tr1::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x6b5980); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:141; No locals.; #4 0x00007ffff6229d69 in std::tr1::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7724d8, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:341; No locals.; #5 0x00007ffff621cf44 in std::tr1::__shared_ptr<OpenBabel::OBMol, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7724d0, ; __in_chrg=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:541; No locals.; #6 0x00007ffff621cf5e in std::tr1::shared_ptr<OpenBabel::OBMol>::~shared_ptr (this=0x7724d0, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:985; No locals.; #7 0x00007ffff611d8ff in _wrap_delete_OBMol (args=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:29614; argp1 = 0x7724d0; swig_obj = {<SwigPyObject at remote 0x7ffff6b8ade0>}; resultobj = 0x0; arg1 = 0x81ec40; res1 = 0; tempshared1 = std::tr1::shared_ptr (empty) 0x0; smartarg1 = 0x7724d0; #8 0x00007ffff606b194 in SwigPyObject_dealloc (v=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:1704; meth = 0x7ffff611d7ca <_wrap_delete_OBMol(PyObject*, PyObject*)>; mself = <module at rem",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:1777,optimiz,optimized,1777,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['optimiz'],['optimized']
Performance,"be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:5854,load,load,5854,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['load'],['load']
Performance,better fp generation performance,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1501:21,perform,performance,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1501,1,['perform'],['performance']
Performance,"binchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed inte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:12013,load,load,12013,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['load'],['load']
Performance,"bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Windows 11. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm just trying to convert a SMILES string to an .xyz file using the --gen3d to get an approximate low energy conformation. I expect to get an xyz file with 3d coordinates. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> It generates the xyz file, but I do not get 3D coordinates ( in that the z column is all 0s) showing that no optimization is happening. I get the following output:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. ## Steps to Reproduce; I am using the command 'obabel -:""CCCC"" -O 1.xyz --gen3D -xb -h' in the command line.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. I saw a different thread about someone who added BABEL_DATADIR as an environment variable and fixing a similar problem, but that didn't work for me.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676:1348,Load,LoadFragments,1348,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676,1,['Load'],['LoadFragments']
Performance,"c conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:1709,load,load,1709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['load'],['load']
Performance,clang-9 compilation errors: function definition does not declare parameters ; use of undeclared identifier 'm_loader'; did you mean 'loader'?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2202:133,load,loader,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202,1,['load'],['loader']
Performance,"clang-9 found this issue:. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-1/src/fingerprints/finger3.cpp:258:34: warning: unsequenced modification and access to 'div' [-Wunsequenced]; ngrp = (num + div -1)/div--; //rounds up; ~~~ ^; 1 warning generated.; ```. The first use of ""div"" is ambiguous according to the C++ standard: it would use either ""div"" or ""div-1"", depending on the optimization level or code surroundings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2215:398,optimiz,optimization,398,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2215,1,['optimiz'],['optimization']
Performance,concurrent runs of obabel hang,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2262:0,concurren,concurrent,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262,1,['concurren'],['concurrent']
Performance,"credits"" or ""license"" for more information.; >>> import openbabel as ob; >>> t = ob.OBMol(); >>> t += ob.OBMol(); >>> t += ob.OBMol(); Segmentation fault; ```. This is backtrace:. ```; #0 0x00000000006b5350 in ?? (); No symbol table info available.; #1 0x00007ffff62ab9aa in std::tr1::_Sp_deleter<OpenBabel::OBMol>::operator() (this=0x6b5998, __p=0x81ec40); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:285; No locals.; #2 0x00007ffff62a5f47 in std::tr1::_Sp_counted_base_impl<OpenBabel::OBMol*, std::tr1::_Sp_deleter<OpenBabel::OBMol>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x6b5980) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:257; No locals.; #3 0x00007ffff624c02c in std::tr1::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x6b5980); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:141; No locals.; #4 0x00007ffff6229d69 in std::tr1::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x7724d8, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:341; No locals.; #5 0x00007ffff621cf44 in std::tr1::__shared_ptr<OpenBabel::OBMol, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x7724d0, ; __in_chrg=<optimized out>) at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:541; No locals.; #6 0x00007ffff621cf5e in std::tr1::shared_ptr<OpenBabel::OBMol>::~shared_ptr (this=0x7724d0, __in_chrg=<optimized out>); at /usr/lib/gcc/x86_64-pc-linux-gnu/4.8.2/include/g++-v4/tr1/shared_ptr.h:985; No locals.; #7 0x00007ffff611d8ff in _wrap_delete_OBMol (args=<SwigPyObject at remote 0x7ffff6b8ade0>); at /home/reinis/Hack/OpenBabel/openbabel-github/scripts/python/openbabel-python.cpp:29614; argp1 = 0x7724d0; swig_obj = {<SwigPyObject at remote 0x7ffff6b8ade0>}; resultobj = 0x0; arg1 = 0x81ec40; res1 = 0; tempshared1 = std::tr1::shared_ptr (empty) 0x0; smartarg1 = 0x7724d0; #8 0x00007ffff606b194 in SwigPyO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:1531,optimiz,optimized,1531,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,1,['optimiz'],['optimized']
Performance,"dency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy requirements according to pip (3.1.1.1). The attempt pip makes to install 3.1.1.1 fails.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1271,cache,cached,1271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['cache'],['cached']
Performance,"dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; interp = 0x6045e0; modules = {'encodings.utf_8': <module at remote 0x7ffff6c45e18>, '_thread': <module at remote 0x7ffff6c3ce18>, '_codecs': <module at remote 0x; 7ffff6c58878>, 'DLFCN': <module at remote 0x7ffff6797680>, '__main__': <module at remote 0x7ffff6beb128>, 'mpl_toolkits': <module at remote 0x7ffff68b; 2b48",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:4548,optimiz,optimized,4548,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,"due to a segmentation fault. We have verified the contents of the OBMol object prior to converting to SMI as valid, except we know that the coordinates of the new molecule are invalid (hence, we are attempting to scrub the coordinates by writing to a local buffer in SMI and subsequently reading the SMI format into an OBMol object). Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1056 /root/openbabel-2.3.2/src/atom.cpp: No such file or directory.; (gdb) where; 0 OpenBabel::OBAtom::BeginBond (this=this@entry=0x0, i=...) at /root/openbabel-2.3.2/src/atom.cpp:1056; 1 0x00007ffff7a1753b in OpenBabel::OBAtom::GetHvyValence (this=0x0) at /root/openbabel-2.3.2/src/atom.cpp:535; 2 0x00007ffff7b5edec in OpenBabel::TetrahedralFrom3D (mol=mol@entry=0x7106f0, stereoUnits=...,; addToMol=addToMol@entry=true) at /root/openbabel-2.3.2/src/stereo/perception.cpp:2107; 3 0x00007ffff7b66a10 in OpenBabel::StereoFrom3D (mol=0x7106f0, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:2073; 4 0x00007ffff7b66dc9 in OpenBabel::PerceiveStereo (mol=<optimized out>, force=<optimized out>); at /root/openbabel-2.3.2/src/stereo/perception.cpp:73; 5 0x00007ffff2f0cc4b in OpenBabel::MDLFormat::WriteMolecule (this=0x7ffff3117760, pOb=<optimized out>,; pConv=0x7fffffffe300) at /root/openbabel-2.3.2/src/formats/mdlformat.cpp:743; 6 0x00007ffff7ad6514 in OpenBabel::OBConversion::Write (this=0x7fffffffe300, pOb=0x7106f0, pos=<optimized out>); at /root/openbabel-2.3.2/src/obconversion.cpp:889; 7 0x000000000041ef79 in OBWriter::ScrubAndExportSMI (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:73; 8 0x000000000041f33b in OBWriter::write (this=0x7fffffffe8d0, molecules=...) at OBWriter.cpp:121; 9 0x00000000004160a2 in main (argc=3, argv=0x7fffffffec38) at Main.cpp:251. Reported by: wlafield. Original Ticket: [openbabel/bugs/944](https://sourceforge.net/p/openbabel/bugs/944)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1324:1353,optimiz,optimized,1353,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1324,5,['optimiz'],['optimized']
Performance,"dule at remote 0x7ffff68f1050>, 'builtins': <module at remote 0x7ffff7fe4440>, 'zipimport': <module at remote 0x7ffff6c42680>; , 'sys': <module at remote 0x7ffff7ff2d88>, 'locale': <module at remote 0x7ffff68b23f8>, 'os.path': <module at remote 0x7ffff6c1aea8>, 'genericpath': ; <module at remote 0x7ffff6c227e8>, '_frozen_importlib': <module at remote 0x7ffff6c71290>, '_collections': <module at remote 0x7ffff6bd77a0>, 'codecs'; : <module at remote 0x7ffff6c4b200>, 'marshal': <module at remote 0x7ffff6c2d440>, 'posixpath': <module at remote 0x7ffff6c1aea8>, 'stat': <module at ; remote 0x7ffff6c1a4d0>, 'importlib._bootstrap': <module at remote 0x7ffff6c71290>, 'token': <module at remote 0x7ffff66ddf80>, 'importlib.mach...(trun; cated); #16 0x00007ffff7a9305d in Py_Finalize () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/pythonrun.c:534; interp = 0x6045e0; tstate = 0x6b5350; #17 0x00007ffff7aa80e3 in Py_Main (argc=argc@entry=3, argv=argv@entry=0x603010); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Modules/main.c:773; c = <optimized out>; sts = 0; command = 0x6043f0 L""\x653ed0""; filename = 0x0; module = 0x0; fp = 0x7ffff77484e0 <_IO_2_1_stdin_>; p = <optimized out>; skipfirstline = <optimized out>; stdin_is_interactive = 1; help = <optimized out>; version = <optimized out>; saw_unbuffered_flag = <optimized out>; cf = {cf_flags = 0}; target_script_name = <optimized out>; #18 0x0000000000400e00 in main (argc=3, argv=<optimized out>) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Modules/python.c:81; argv_copy = 0x603010; argv_copy2 = 0x603040; i = <optimized out>; res = <optimized out>; oldloc = 0x603070 ""lv_LV.UTF-8""; process_name = 0x0; ```. SWIG generated wrapper code is really hard to follow, but it fails in openbabel-python.cpp:_wrap_delete_OBMol() calling delete smartarg1. The issue is that it doesn't fail there every time so it might be some bad interaction between shared_ptr and SWIG and Python. Any ideas?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:6687,optimiz,optimized,6687,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,10,['optimiz'],['optimized']
Performance,"e (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54; #1 0x00007ffff7a4d2fa in __GI_abort () at abort.c:89; #2 0x00007ffff7a8c670 in __libc_message (do_abort=do_abort@entry=2, fmt=fmt@entry=0x7ffff7ba3060 ""*** Error in `%s': %s: 0x%s ***\n"") at ../sysdeps/posix/libc_fatal.c:175; #3 0x00007ffff7a94e0a in malloc_printerr (ar_ptr=<optimized out>, ptr=<optimized out>, str=0x7ffff7ba09a3 ""free(): invalid pointer"", action=3) at malloc.c:5004; #4 _int_free (av=<optimized out>, p=<optimized out>, have_lock=<optimized out>) at malloc.c:3865; #5 0x00007ffff7a9836c in __GI___libc_free (mem=<optimized out>) at malloc.c:2966; #6 0x00007fffe0f5ae5f in OpenBabel::NWChemOutputFormat::ReadCoordinates (this=this@entry=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, ifs=ifs@entry=0x63b450, molecule=molecule@entry=0x6dca40); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:237; #7 0x00007fffe0f5c82a in OpenBabel::NWChemOutputFormat::ReadMolecule (this=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, pOb=<optimized out>, pConv=0x7fffffffd9c0); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:1001; #8 0x00007ffff7754ae4 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd9c0, pFormat=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>); at /home/madchem/openbabel-2.3.2/openbabel/src/obmolecformat.cpp:105; #9 0x00007ffff76f9a35 in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffd9c0) at /home/madchem/openbabel-2.3.2/openbabel/src/obconversion.cpp:545; #10 0x00007ffff76ff5f9 in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffd9c0, is=is@entry=0x7fffffffd440, os=os@entry=0x0) at /home/madchem/openbabel-2.3.2/openbabel/src/obconversion.cpp:481; #11 0x00007ffff7701671 in OpenBabel::OBConversion::FullConvert (this=this@entry=0x7fffffffd9c0, FileList=std::vector of length 1, capacity 1 = {...}, OutputFileName="""", ; OutputFileList=std::vector of length 0, capacity 0) at /home/madchem/openbabel-2.3.2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/347:2494,optimiz,optimized,2494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/347,1,['optimiz'],['optimized']
Performance,"e Newman projection / steering wheel like approach to assign *R* or *S* configuration within the CIP system (e.g. [here](https://www.organicchemistrytutor.com/topic/cip-rules-and-r-s-stereodescriptors/), the illustration indicates oxygen of the ether, carbon atom of the chiral centre and the two adjacent quaternary carbon atoms below the carbon atom of the methyl group. The trained eye (training by building *physical* molecular models ([example](https://hgs.maruzen.info/products/1002alpha-organic-chemistry-introductory-set)), or/and with visualizing programs (e.g. [Avogadro](https://two.avogadro.cc/)) recalls that a conformation close to a tetrahedral geometry *similar* (not identical) to the one of [methane](https://en.wikipedia.org/wiki/Methane) is more likely, i.e. oxygen of ether and the two quaternary carbons next to the centre are in one level, while the carbon at the chiral centre is in one slightly above; however these four not as much close as the apex to the observer, the carbon of the methyl group:. ![highlight_plane_in_common](https://github.com/openbabel/openbabel/assets/60490931/f72cf4bd-e7e8-4c3e-80fb-bd187034ea29). ChemDraw (sample page [here](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#)) equally reads the SMILES string `Clc1ccc(cc1)[C@](OCC[C@@H]2N(C)CCC2)(c3ccccc3)C` (structure -> load smiles) to depict the molecular structure as. ![chemdraw_js](https://github.com/openbabel/openbabel/assets/60490931/540c81b6-40c5-4e84-b8be-8105a1f646da). The presence of a bold wedge (or the dash) does not always require simultaneous presence of the other (carbon on stereogenic centre alpha to nitrogen). Without doubt, however, it can assist the reader (example by [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html)):. ![cdkdepict](https://github.com/openbabel/openbabel/assets/60490931/5b3ee60d-fca8-432b-bafe-d47bbe332d93). Side note: You might consider an upgrade of the operating system (Debian 12/bookworm) and openbabel (version 3.1.1).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436:1418,load,load,1418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2631#issuecomment-1737981436,1,['load'],['load']
Performance,"e problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely better. Until then, the hash approach proves the point and required only small changes to the source. Thanks for looking into this and giving advice! I'll add a commit for the atom-label hash tonight, and hopefully get an octree running by the end of the week. Cheers,; Pat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:1421,optimiz,optimized,1421,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"eadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xd44)[0x7ffff7754ae4]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x1d5)[0x7ffff76f9a35]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0xa9)[0x7ffff76ff5f9]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS7_SA_+0x1f71)[0x7ffff7701671]; /usr/bin/babel(main+0xacb)[0x402d9b]; /usr/lib64/libc.so.6(__libc_start_main+0xf1)[0x7ffff7a37731]; /usr/bin/babel(_start+0x29)[0x403429]. ```. In GDB:. ```; (gdb) backtrace; #0 0x00007ffff7a4b6f5 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54; #1 0x00007ffff7a4d2fa in __GI_abort () at abort.c:89; #2 0x00007ffff7a8c670 in __libc_message (do_abort=do_abort@entry=2, fmt=fmt@entry=0x7ffff7ba3060 ""*** Error in `%s': %s: 0x%s ***\n"") at ../sysdeps/posix/libc_fatal.c:175; #3 0x00007ffff7a94e0a in malloc_printerr (ar_ptr=<optimized out>, ptr=<optimized out>, str=0x7ffff7ba09a3 ""free(): invalid pointer"", action=3) at malloc.c:5004; #4 _int_free (av=<optimized out>, p=<optimized out>, have_lock=<optimized out>) at malloc.c:3865; #5 0x00007ffff7a9836c in __GI___libc_free (mem=<optimized out>) at malloc.c:2966; #6 0x00007fffe0f5ae5f in OpenBabel::NWChemOutputFormat::ReadCoordinates (this=this@entry=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, ifs=ifs@entry=0x63b450, molecule=molecule@entry=0x6dca40); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:237; #7 0x00007fffe0f5c82a in OpenBabel::NWChemOutputFormat::ReadMolecule (this=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, pOb=<optimized out>, pConv=0x7fffffffd9c0); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:1001; #8 0x00007ffff7754ae4 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd9c0, pFormat=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>); at /home/madchem/openbabel-2.3.2/openbabel/src/obmol",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/347:1796,optimiz,optimized,1796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/347,2,['optimiz'],['optimized']
Performance,"ed Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ImportError: DLL load failed: The specified module could not be found.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2270:2141,load,load,2141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270,1,['load'],['load']
Performance,"el-FP2/1\n#software=OpenBabel/2.4.90\n ...`; >>> conv.WriteFile(mol, ""example.fps""); True; >>> print(open(""example.fps"").read()[:80]); #FPS1; #num_bits=1021; #type=OpenBabel-FP2/1; #software=OpenBabel/2.4.90; #source=; #; ```. ## Actual Behavior. The above code on the current Open Babel HEAD (and with 2.4.1) causes segmentation faults:. ## Steps to Reproduce. ### Example 1 (actual); ```; >>> import pybel; >>> pybel.readstring(""smi"", ""C"").write(""fps""); Segmentation fault; ```. ### Example 2 (actual); ```; >>> import openbabel as ob; >>> conv = ob.OBConversion(); >>> conv.SetInAndOutFormats(""smi"", ""fps""); True; >>> mol = ob.OBMol(); >>> conv.ReadString(mol, ""C""); True; >>> conv.WriteString(mol); Segmentation fault; ```; (Replace the WriteString() with the WriteFile() and there is still a segmentation fault.). The problem seems to be that WriteString() and WriteFile() on a newly constructed OBConversion() leave the Index at the initial value of 0. Some of the formats use GetOutputIndex() and, if it is 1, perform an initialization. For the FPS format, the initialization loads the correct fingerprint type. If it is uninitialized then it will deference an unassigned variable, causing the segfault. I have patched WriteString() and WriteFile(). I will submit a pull request shortly to demonstrate one possible solution. ## Related symptoms. ### issue #1783. Note that this is likely related to issue #1783 . With an un-patched system:; ```; >>> import pybel; >>> pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt""); '>\n'; ```. with my patch in place:; ```; >>> import pybel; >>> print(pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt"")); > 6 bits set; 00000000 00000000 00000000 00000200 00000000 00000000; 00000000 00000000 00000000 00000840 00000000 00008000; 00000000 00000000 00000000 00000000 00000000 00000000; 00000000 00000000 00000000 08000000 00000000 00000000; 00000000 00000000 00000000 00000000 00000000 00020000; 00000000 00000000; ```. The proposed solution in that issue was to",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1922:1831,perform,perform,1831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1922,1,['perform'],['perform']
Performance,enbabel/2.2.99/cmlreactformat.so. 2b0db4968000-2b0db4969000 rw-p 00013000 fd:00 30968934 /path/to/local/lib/openbabel/2.2.99/cmlreactformat.so. 2b0db4969000-2b0db4970000 r-xp 00000000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4970000-2b0db4b70000 ---p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b70000-2b0db4b71000 rw-p 00007000 fd:00 30968924 /path/to/local/lib/openbabel/2.2.99/yasaraformat.so. 2b0db4b71000-2b0db4b77000 r-xp 00000000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4b77000-2b0db4d77000 ---p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d77000-2b0db4d78000 rw-p 00006000 fd:00 30968903 /path/to/local/lib/openbabel/2.2.99/freefracformat.so. 2b0db4d78000-2b0db4d7d000 r-xp 00000000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4d7d000-2b0db4f7c000 ---p 00005000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7c000-2b0db4f7d000 rw-p 00004000 fd:00 30968889 /path/to/local/lib/openbabel/2.2.99/cacheformat.so. 2b0db4f7d000-2b0db4f97000 r-xp 00000000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db4f97000-2b0db5197000 ---p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5197000-2b0db5198000 rw-p 0001a000 fd:00 30968845 /path/to/local/lib/openbabel/2.2.99/mdlformat.so. 2b0db5198000-2b0db519c000 r-xp 00000000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db519c000-2b0db539b000 ---p 00004000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539b000-2b0db539c000 rw-p 00003000 fd:00 30968857 /path/to/local/lib/openbabel/2.2.99/textformat.so. 2b0db539c000-2b0db53a4000 r-xp 00000000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db53a4000-2b0db55a4000 ---p 00008000 fd:00 30968850 /path/to/local/lib/openbabel/2.2.99/MNAformat.so. 2b0db55a4000-2b0db55a5000 rw-p 00008000,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:19995,cache,cacheformat,19995,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['cache'],['cacheformat']
Performance,enhancements to obrms to support optimization of pose alignment,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961:33,optimiz,optimization,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961,1,['optimiz'],['optimization']
Performance,"er above?* (Please see edit). Regarding the version being old, I understand, will try to compile from the latest, this is the version that Ubuntu has in its repositories by the way. **EDIT:**. I think I see what the problem is here, that was not the best part of the graph to demonstrate the ""problem"" with. Granted, some bonds are described ""asymmetrically"" (so, the information exists only in one way but not the other, as implied by `OBBond`). But in addition to this, the molecule appears to be fragmented because it is indeed missing some bonds. Here is a better part of that map I am showing earlier:. <img src=""https://user-images.githubusercontent.com/1336337/78693890-c3778f00-78f3-11ea-958f-b22d060f1f2d.png"" width=""512""/>. Notice 82:(H->Nam->C3->C2->O), 83:(H->Nam->C3->C2->O), **84:(H->Nam->C3->C3->C3->...)**. That has been skipped indeed but that is not the whole picture because it has ""fragments"", which are all put on the side (because they are interpreted as subgraphs) and they look like this:. <img src=""https://user-images.githubusercontent.com/1336337/78694834-274e8780-78f5-11ea-81e5-270f3ccb412d.png"" width=""350""/>. All of these are fragments that **""match""** the location of my odd results. The reason there are so many hydrogens here is because I have first called `.addh()`. That function, finds a nitrogen that does not appear to be bonded with anything (the N3 of residue 85) and adds 3 hydrogens around it. It is easy to overcome the assymetric reporting of bonds as I now first build a Networkx graph that has `OBAtom` at its nodes and `OBBond` at its edges and then perform search on **that** graph. I am not sure how easy it would be to overcome this lack of bonds though. . All I can think of at the moment is check if NCCO are grouped under a residue but the residue's subgraph is disconnected. If it is disconnected, then......it would take some guessing as to where these bonds must be added. Unless there is a systematic way to infer which bonds are missing (?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498:3111,perform,perform,3111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498,1,['perform'],['perform']
Performance,"for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.6.1"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.16.0; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python (found version ""2.7.16"") ; -- Found SWIG: /usr/bin/swig (found version ""3.0.12"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""3.0.12"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so (fou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:2724,Perform,Performing,2724,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,6,['Perform'],['Performing']
Performance,formats/cacheformat.cpp hides chemical/x-alchemy,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/689:8,cache,cacheformat,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/689,1,['cache'],['cacheformat']
Performance,"formats/smilesformat.cpp:4197 ; #6 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1eb3730, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; #7 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85ca0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4197 ; ---Type <return> to continue, or q <return> to quit--- ; #8 0x00007fcbda4b3829 in OpenBabel::OBMol2Cansmi::CreateFragCansmiString ( ; this=0x7fffe86962a0, mol=@0x1e401a0, frag_atoms=@0x7fffe869e840, ; isomeric=<value optimized out>, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("") ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4353 ; #9 0x00007fcbda4b455c in OpenBabel::CreateCansmiString ( ; mol=@0x7fffe869f330, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, iso=true, pConv=0x0) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4574 ; #10 0x00007fcbda4b6403 in OpenBabel::SMIBaseFormat::WriteMolecule ( ; this=<value optimized out>, pOb=<value optimized out>, ; pConv=0x7fffe869f640) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4644 ; #11 0x00007fcbe00c275c in OpenBabel::OBConversion::Write ( ; this=0x7fffe869f640, pOb=0x7fffe869f330, pos=<value optimized out>) ; at /work3/igor/openbabel-2-2-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:3667,optimiz,optimized,3667,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,1,['optimiz'],['optimized']
Performance,"g for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::tr1::shared_ptr in tr1/memory; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.27.1"") ; -- Checking for module 'cairo'; -- No package 'cairo' found; -- Could NOT find Cairo (missing: CAIRO_LIBRARIES CAIRO_INCLUDE_DIRS) ; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /apps/python/intelpython2018.3/intelpython3/bin/python (found version ""3.6.3"") ; -- Configuring done; -- Generating done; -- Build files have been written to: /home/syesylevsky/install/openbabel-build; ```. But after that build fails:. ```; [ 69%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; /home/syesylevsky/install/openbabel/src/formats/gamessukformat.cpp: In member function ‘bool OpenBabel::GAM",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:3301,Perform,Performing,3301,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,6,['Perform'],['Performing']
Performance,geometry optimization coords,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1513:9,optimiz,optimization,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1513,1,['optimiz'],['optimization']
Performance,"ghtly build - and still trying to look at some runtime problems - it crashes and corrupts the stack.; ------------; # gdb /usr/local/bin/babel; GNU gdb (GDB) 7.0.1; Copyright (C) 2009 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""alphaev68-dec-osf5.1a"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /usr/local/bin/babel...done.; (gdb) run -imol2 MOL-1.mol2 -opdb gaba038.pdb ; Starting program: /usr/local/bin/babel -imol2 MOL-1.mol2 -opdb gaba038.pdb. Program received signal SIGSEGV, Segmentation fault.; 0x000003ff80019e7c in ?? () from /sbin/loader; (gdb) bt; #0 0x000003ff80019e7c in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e7c; This warning occurs if you are debugging a function without any symbols; (for example, in a stripped executable). In that case, you may wish to; increase the size of the search with the `set heuristic-fence-post' command. Otherwise, you told GDB there was a function where there isn't one, or; (more likely) you have encountered a bug in GDB.; #1 0x000003ff80019e38 in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e38; Backtrace stopped: previous frame identical to this frame (corrupt stack?); (gdb) . ---------------. The last babel on this machine was built on Nov 11 2005 with a libopenbabel.so.0.0.0 (current ggives is 3.0.3). I am building the latest version because the old one has stopped working (hasn't been used for a while) due to libstdc++ incompatibility related to pthread (the last one was possibliy built with a gcc 3.x; obviously libstdc++ has changed since). Origi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281:908,load,loader,908,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281,2,['load'],['loader']
Performance,"github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: Open Babel 3.1.1; Operating system and version: Windows 11. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I'm just trying to convert a SMILES string to an .xyz file using the --gen3d to get an approximate low energy conformation. I expect to get an xyz file with 3d coordinates. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> It generates the xyz file, but I do not get 3D coordinates ( in that the z column is all 0s) showing that no optimization is happening. I get the following output:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldMMFF94::ParseParamFile; Cannot open parameter file; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::ParseParamFile; Cannot open UFF.prm; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. ## Steps to Reproduce; I am using the command 'obabel -:""CCCC"" -O 1.xyz --gen3D -xb -h' in the command line.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676:1214,optimiz,optimization,1214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676,1,['optimiz'],['optimization']
Performance,hem.so; 7f3924903000-7f3924913000 r-xp 00000000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577b000-7f3925789000 r-xp 00000000 08:01 920646 /usr/lib/o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957:13995,cache,cacheformat,13995,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957,2,['cache'],['cacheformat']
Performance,"http://gcc.gnu.org/wiki/Visibility. * It very substantially improves load times of your DSO (Dynamic Shared ; Object).; ... now loads in eight seconds rather than over six minutes!; * It lets the optimiser produce better code.; * It reduces the size of your DSO by 5-20%.; ... Therefore if you cut out the 60-80% of unnecessary symbols, your DSO ; can be megabytes smaller!. Enough said. This should be enabled if GCC version >= 4.0. Much of the work is ; probably already handled because of Chris Morley's Windows DLL work. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/83"":https://sourceforge.net/p/openbabel/feature-requests/83",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452:69,load,load,69,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452,2,['load'],"['load', 'loads']"
Performance,"ia 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ImportError: DLL load failed: Impossibile trovare il modulo specificato.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2122:2027,load,load,2027,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122,1,['load'],['load']
Performance,"ild>mingw32-make -j4`; Display:; ```; [ 19%] Building CXX object src/CMakeFiles/openbabel.dir/dlhandler_unix.obj; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp: In static member function 'static bool DLHandler::openLib(const string&)':; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp:155:36: error: cannot convert 'const char*' to 'LPCWSTR {aka const wchar_t*}' for argument '1' to 'HINSTANCE__* LoadLibraryW(LPCWSTR)'; if(LoadLibrary(lib_name.c_str())); ^; src\CMakeFiles\openbabel.dir\build.make:1312: recipe for target 'src/CMakeFiles/openbabel.dir/dlhandler_unix.obj' failed; mingw32-make[2]: *** [src/CMakeFiles/openbabel.dir/dlhandler_unix.obj] Error 1; mingw32-make[2]: *** Waiting for unfinished jobs....; CMakeFiles\Makefile2:1078: recipe for target 'src/CMakeFiles/openbabel.dir/all' failed; mingw32-make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; Makefile:139: recipe for target 'all' failed; mingw32-make: *** [all] Error 2; ```; Same thing if I retry without `-j4`. By googling a bit around, I found a few discussions regarding the (apparently recurrent) issue:; - https://stackoverflow.com/questions/1791578/how-do-i-convert-a-char-string-to-a-wchar-t-string; - https://stackoverflow.com/questions/14370982/converting-const-char-to-lpctstr-for-createdirectory; - and some similar others... By looking at the declaration in `winbase.h`:; ```; #ifdef UNICODE; : : :; #define LoadLibrary LoadLibraryW; : : :; #else; : : :; #define LoadLibrary LoadLibraryA; ```; and the source code in `dlhandler_unix.cpp`:; ```; #ifdef __MINGW32__; bool DLHandler :: openLib(const string& lib_name); {; if(LoadLibrary(lib_name.c_str())); return true;. unsigned long err = GetLastError();; return false;; }; #else; ...; ```; an idea could be whether to explicitely call `LoadLibraryA` or convert `lib_name.c_str()` to a `LPCWSTR` aka `const wchar_t*`. I tried the first option and the compilation succeeded. Now, I can't be sure this won't give problems in the future (I guess not...?).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206:1531,Load,LoadLibrary,1531,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591#issuecomment-310182206,6,['Load'],"['LoadLibrary', 'LoadLibraryA', 'LoadLibraryW']"
Performance,"ile was too large :(. Here goes:. Reading ; http://cclib.svn.sourceforge.net/viewvc/cclib/trunk/data/Gaussian/basicGaussian03/dvb_un_sp.out?revision=640. with gaussformat results in a segfault:. #0 0x00007ffff6fcadd8 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&) () from /usr/lib/libstdc++.so.6; #1 0x00000000004052f8 in __gnu_cxx::new_allocator<std::string>::construct (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/ext/new_allocator.h:105; #2 std::vector<std::string, std::allocator<std::string> >::_M_insert_aux (this=0x7fffffffbf80, __position=..., __x=...) at /usr/include/c++/4.4/bits/vector.tcc:330; #3 0x00007ffff1cf7232 in std::vector<std::string, std::allocator<std::string> >::push_back (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /usr/include/c++/4.4/bits/stl_vector.h:741; #4 OpenBabel::GaussianOutputFormat::ReadMolecule (this=<value optimized out>, pOb=<value optimized out>, pConv=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/formats/gaussformat.cpp:742; #5 0x00007ffff77dddc8 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=<value optimized out>, pFormat=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obmolecformat.cpp:105; #6 0x00007ffff77828d8 in OpenBabel::OBConversion::Convert (this=0x7fffffffe290) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:515; #7 0x00007ffff7782fbd in OpenBabel::OBConversion::Convert (this=0x7fffffffe290, is=0x7fffffffd500, os=0x606a60) at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:448; #8 0x00007ffff7788f56 in OpenBabel::OBConversion::FullConvert (this=<value optimized out>, FileList=<value optimized out>, OutputFileName=<value optimized out>, OutputFileList=<value optimized out>); at /build/openbabel-UwmzPj/openbabel-2.3.1+dfsg/src/obconversion.cpp:1410; #9 0x00000000004043cf in main (argc=<value ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717:1059,optimiz,optimized,1059,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1208#issuecomment-281802717,3,['optimiz'],['optimized']
Performance,iles/pubchem.dir/xml/pubchem.cpp.o; [ 27%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/forcefield.cpp.o; [ 28%] Building CXX object src/formats/CMakeFiles/pubchem.dir/xml/xml.cpp.o; [ 28%] Linking CXX shared module ../../lib/pubchem.so; [ 28%] Built target pubchem; Scanning dependencies of target cdxmlformat; [ 28%] Building CXX object src/formats/CMakeFiles/cdxmlformat.dir/xml/cdxmlformat.cpp.o; [ 28%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/gen3d.cpp.o; [ 29%] Building CXX object src/CMakeFiles/plugin_charges.dir/charges/qeq.cpp.o; [ 29%] Building CXX object src/formats/CMakeFiles/cdxmlformat.dir/xml/xml.cpp.o; [ 29%] Linking CXX shared module ../../lib/cdxmlformat.so; [ 29%] Built target cdxmlformat; Scanning dependencies of target png2format; [ 29%] Building CXX object src/formats/CMakeFiles/png2format.dir/png2format.cpp.o; [ 29%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/largest.cpp.o; [ 30%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/loader.cpp.o; [ 30%] Building CXX object src/formats/CMakeFiles/png2format.dir/__/depict/cairopainter.cpp.o; [ 30%] Building CXX object src/CMakeFiles/plugin_forcefields.dir/forcefields/forcefielduff.cpp.o; [ 30%] Linking CXX shared module ../../lib/png2format.so; [ 30%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/opsplit.cpp.o; [ 30%] Built target png2format; Scanning dependencies of target rinchiformat; [ 31%] Building CXX object src/formats/CMakeFiles/rinchiformat.dir/rinchiformat.cpp.o; [ 31%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/optransform.cpp.o; [ 31%] Linking CXX shared module ../../lib/rinchiformat.so; [ 31%] Built target rinchiformat; [ 31%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/partialcharges.cpp.o; Scanning dependencies of target chemkinformat; [ 31%] Building CXX object src/formats/CMakeFiles/chemkinformat.dir/chemkinformat.cpp.o; [ 31%] Building CXX object src/CMakeFiles/plugin_ops.dir/ops/readconformers.cpp.o; [ 31%] Linking CXX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:19296,load,loader,19296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['load'],['loader']
Performance,"int; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0""); -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28""); -- Checking for module 'cairo'; -- Found cairo, version 1.14.10; -- Found Cairo: /usr/lib64/libcairo.so; -- Cairo found. PNG output will be supported.; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Found PythonInterp: /usr/bin/python (found version ""3.6.2""); -- Configuring done; -- Generating done; -- Build files have been written to: /home/building/science/openbabel-2.4.1/build. If it's relevant, there is no ""FindWxWidgets.cmake"" in the modules directory:. > ls openbabel-2.4.1/cmake/modules/; FindCairo.cmake FindEigen3.cmake MacroEnsureVersion.cmake; FindEigen2.cmake FindInchi.cmake UsePythonTest.cmake",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1780:1820,Perform,Performing,1820,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1780,6,['Perform'],['Performing']
Performance,"is one. played with the include directive; in reaction.h but it is like; shooting in the dark - no difference. ideas to try?. results:; ------ Skipped Build: Project: OBGUI, Configuration: Debug Win32 ------; Project not selected to build for this solution configuration ; ------ Skipped Build: Project: OBJava, Configuration: Debug Win32 ------; Project not selected to build for this solution configuration ; ------ Skipped Build: Project: OBCSharp, Configuration: Debug Win32 ------; Project not selected to build for this solution configuration ; ------ Skipped Build: Project: OBPythonOBF, Configuration: Release Win32 ------; Project not selected to build for this solution configuration ; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(27) : error C2386: 'tr1' : a symbol with this name already exists in the current scope; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2039: 'shared_ptr' : is not a member of 'std::tr1'; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2065: 'shared_ptr' : undeclared identifier; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2275: 'OpenBabel::OBMol' : illegal use of this type as an expression; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/mol.h(104) : see declaration of 'OpenBabel::OBMol'; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2059: syntax error : '>'; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(44) : error C2238: unexpected token(s) preceding ';'; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(45) : error C2039: 'sha",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778:1182,cache,cacheformat,1182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778,1,['cache'],['cacheformat']
Performance,"is working. 4 years and counting. How the hell is this still not fixed? Why do I have to install conda just so I can use one single library? Why are the docs not updated to warn prospective users of this at all? . This is getting ridiculous so let's try this one last time:. I have installed openbabel using the 32bit binary from [here](https://github.com/openbabel/openbabel/releases) on Windows 11. I have it in `C:\Program Files (x86)\OpenBabel-3.1.1`. I have ensured that this dir is in my system path and user path variable:. User PATH: C:\Program Files (x86)\OpenBabel-3.1.1; System PATH: C:\Program Files (x86)\OpenBabel-3.1.1; BABEL_DATADIR: C:\Users\chris\AppData\Roaming\OpenBabel-3.1.1\data. Now I try to install the python key bindungs using PyPI as instructed [here](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html) using `pip install -U openbabel`. That returns the following error traceback:; ```; C:\Users\chris>pip install -U openbabel; Defaulting to user installation because normal site-packages is not writeable; Collecting openbabel; Using cached openbabel-3.1.1.1.tar.gz (82 kB); Installing build dependencies ... done; Getting requirements to build wheel ... done; Preparing metadata (pyproject.toml) ... done; Building wheels for collected packages: openbabel; Building wheel for openbabel (pyproject.toml) ... error; error: subprocess-exited-with-error. × Building wheel for openbabel (pyproject.toml) did not run successfully.; │ exit code: 1; ╰─> [15 lines of output]; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\Python310\\include', 'C:\\Program Files\\Python310\\Include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\Python310\\libs', 'C:\\Program Files\\Python310', 'C:\\Program Files\\Python310\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openba",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554:1141,cache,cached,1141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1790906554,1,['cache'],['cached']
Performance,"it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't dir",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1176,optimiz,optimization,1176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['optimiz'],['optimization']
Performance,"itten however is varying within each of submission. In the present case, for instance, there is `run1.mop`, `run3.mop` (one digit), `run36.mop` (two digits), `run123.mop` (three digits), etc. named in sequence of the entry in the original (container) file processed. **Describe the solution you'd like**. I would like to see a name pattern which accounts for the number of records and -- where necessary -- pads the number assigned with leading zeroes. In the present case, this would name the same files as above `run001.mop`, `run003.mop`, `run036.mop`, `run123.mop` with three digits each. Second, it can be informative to just know the number of records the container file contains. As an illustration of the first point, MOPAC issues a brief note to the CLI about a computation completed, for instance. ```shell; MOPAC Job: ""run239.mop"" ended normally on Oct 27, 2023, at 13:14.; ```. With the pattern scheme newly suggested, the submission of a batch of computations to MOPAC by. ```shell; find *.mop | parallel -j 4 mopac {}; ```. then would provide an easier to read (low level) monitor about the advance of the local computations in queue. Though *completion* of the individual computation (by MOPAC) naturally will interfere a little bit and is outside of obabel's control, it is the pick of next job from the deck in question which follows a numeric sort. **Describe alternatives you've considered**. So far, I renamed the files in file manager [vifm](https://vifm.info/). In the folder of question, the explicit commands are `:sort` and `e` for a sort of the files by file extension, their selection (by `V`), and rename e.g. by `:s/run/run00/` to rename files in range `run1.mop` up and including `run9.mop` as `run001.mop` ... `run009.mop`. For the total record count, in Linux I either use a `wc -l data.smi` to count the number of lines in a list of SMILES. Or, count keywords each record in the container file contains exactly once, e.g. `grep ""V3000"" ./Evolutionary_Library.sdf -c`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2639:1644,queue,queue,1644,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2639,1,['queue'],['queue']
Performance,"l include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. ```. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Run the 'pip instll openbabel' command on a machine running MacOS 12.6.1. ## Other Python packages installed:; ((sciflow) ) n00002621@chalk3 sciflow % pip list; Package Version; ------------------------- ---------; asgiref 3.5.2; attrs 21.4.0; bcrypt 4.0.1; cachetools 5.2.0; certifi 2022.12.7; cffi 1.15.1; charset-normalizer 2.1.1; chembl-webresource-client 0.10.8; cryptography 38.0.4; defusedxml 0.7.1; Deprecated 1.2.13; Django 4.1.4; django-admin-logs 1.0.2; django-allauth 0.51.0; django-cors-headers 3.13.0; django-crispy-forms 1.14.0; django_debug_toolbar 3.8.1; djangorestframework 3.14.0; easydict 1.10; exceptiongroup 1.0.4; frozendict 2.3.4; idna 3.4; iniconfig 1.1.1; itsdangerous 2.1.2; jgo 1.0.5; JPype1 1.4.1; lxml 4.9.1; mypy-extensions 0.4.3; mysqlclient 2.1.1; numpy 1.23.5; oauthlib 3.2.2; packaging 22.0; pandas 1.5.2; paramiko 2.12.0; Pillow 9.3.0; pip 22.3; pluggy 1.0.0; psutil 5.9.4; pycparser 2.21; PyGithub 1.57; PyJWT 2.6.0; PyLD 2.0.3; PyNaCl 1.5.0; pyparsing 3.0.9; pytest 7.2.0; python-dateutil 2.8.2; python3-openid 3.2.0; pytz 2022.6; PyYAML 6.0; qwikidata 0.4.2; rdkit-pypi 2022.9.2; requests 2.28.1; requests-cache 0.7.5; requests-oauthlib 1.3.1; scipy 1.9.3; scyjava 1.8.1; setuptools 65.6.3; six 1.16.0; sqlparse 0.4.3; tomli 2.0.1; url-normalize 1.4.3; urllib3 1.26.13; wheel 0.38.1; wrapt 1.14.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2554:5939,cache,cache,5939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2554,1,['cache'],['cache']
Performance,"l installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. ```. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Run the 'pip instll openbabel' command on a machine running MacOS 12.6.1. ## Other Python packages installed:; ((sciflow) ) n00002621@chalk3 sciflow % pip list; Package Version; ------------------------- ---------; asgiref 3.5.2; attrs 21.4.0; bcrypt 4.0.1; cachetools 5.2.0; certifi 2022.12.7; cffi 1.15.1; charset-normalizer 2.1.1; chembl-webresource-client 0.10.8; cryptography 38.0.4; defusedxml 0.7.1; Deprecated 1.2.13; Django 4.1.4; django-admin-logs 1.0.2; django-allauth 0.51.0; django-cors-headers 3.13.0; django-crispy-forms 1.14.0; django_debug_toolbar 3.8.1; djangorestframework 3.14.0; easydict 1.10; exceptiongroup 1.0.4; frozendict 2.3.4; idna 3.4; iniconfig 1.1.1; itsdangerous 2.1.2; jgo 1.0.5; JPype1 1.4.1; lxml 4.9.1; mypy-extensions 0.4.3; mysqlclient 2.1.1; numpy 1.23.5; oauthlib 3.2.2; packaging 22.0; pandas 1.5.2; paramiko 2.12.0; Pillow 9.3.0; pip 22.3; pluggy 1.0.0; psutil 5.9.4; pycparser 2.21; PyGithub 1.57; PyJWT 2.6.0; PyLD 2.0.3; PyNaCl 1.5.0; pyparsing 3.0.9; pytest 7.2.0; python-dateutil 2.8.2; python3-openid 3.2.0; pytz 2022.6; PyYAML 6.0; qwikidata 0.4.2; rdkit-pypi 2022.9.2; requests 2.28.1; requests-cache 0.7.5; requests-oauthlib 1.3.1; scipy 1.9.3; scyjava 1.8.1; setuptools 65.6.3; six 1.16.0; sqlparse 0.4.3; tomli",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2554:5052,cache,cachetools,5052,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2554,1,['cache'],['cachetools']
Performance,"le>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either uplo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2078:2550,Load,LoadAllPlugins,2550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078,1,['Load'],['LoadAllPlugins']
Performance,"libXML and zlib should be optional. -- Could NOT find LibXml2 (missing: LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR); -- Could NOT find ZLIB (missing: ZLIB_LIBRARY ZLIB_INCLUDE_DIR); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; LIBXML2_LIBRARIES (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src; ZLIB_LIBRARY (ADVANCED); linked by target ""openbabel"" in directory /home/user/tools/openbabel/trunk/src. -- Configuring incomplete, errors occurred!. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/961:236,Perform,Performing,236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/961,2,['Perform'],['Performing']
Performance,"ll trying to look at some runtime problems - it crashes and corrupts the stack.; ------------; # gdb /usr/local/bin/babel; GNU gdb (GDB) 7.0.1; Copyright (C) 2009 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""alphaev68-dec-osf5.1a"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Reading symbols from /usr/local/bin/babel...done.; (gdb) run -imol2 MOL-1.mol2 -opdb gaba038.pdb ; Starting program: /usr/local/bin/babel -imol2 MOL-1.mol2 -opdb gaba038.pdb. Program received signal SIGSEGV, Segmentation fault.; 0x000003ff80019e7c in ?? () from /sbin/loader; (gdb) bt; #0 0x000003ff80019e7c in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e7c; This warning occurs if you are debugging a function without any symbols; (for example, in a stripped executable). In that case, you may wish to; increase the size of the search with the `set heuristic-fence-post' command. Otherwise, you told GDB there was a function where there isn't one, or; (more likely) you have encountered a bug in GDB.; #1 0x000003ff80019e38 in ?? () from /sbin/loader; warning: Hit heuristic-fence-post without finding enclosing function for address 0x3ff80019e38; Backtrace stopped: previous frame identical to this frame (corrupt stack?); (gdb) . ---------------. The last babel on this machine was built on Nov 11 2005 with a libopenbabel.so.0.0.0 (current ggives is 3.0.3). I am building the latest version because the old one has stopped working (hasn't been used for a while) due to libstdc++ incompatibility related to pthread (the last one was possibliy built with a gcc 3.x; obviously libstdc++ has changed since). Original comment by: htl10",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281:1458,load,loader,1458,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796281,1,['load'],['loader']
Performance,load fingerprint via OBDotNet,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023:0,load,load,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023,1,['load'],['load']
Performance,"m received signal SIGINT, Interrupt.; 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; 82	../sysdeps/unix/syscall-template.S: No such file or directory.; 	in ../sysdeps/unix/syscall-template.S; (gdb) bt; #0 0x00007ffff7b324a0 in __read_nocancel () at ../sysdeps/unix/syscall-template.S:82; #1 0x00007ffff7acd348 in _IO_new_file_underflow (fp=0x7ffff7dd76a0) at fileops.c:606; #2 0x00007ffff7aceeee in _IO_default_uflow (fp=0x0) at genops.c:440; #3 0x00007ffff7ac5c7b in _IO_getc (fp=0x7ffff7dd76a0) at getc.c:41; #4 0x00007ffff6cecadd in __gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::uflow() () from /usr/lib/libstdc++.so.6; #5 0x00007ffff6cd2d90 in std::istream::get() () from /usr/lib/libstdc++.so.6; #6 0x00007ffff769ec89 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::check_header (this=0x674cc0); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:819; #7 0x00007ffff769d8f8 in basic_zip_istream (this=0x674cc0, istream=..., window_size=-15, read_buffer_size=4096, ; input_buffer_size=4096, __in_chrg=<value optimized out>, __vtt_parm=<value optimized out>); at /home/cjh/local/src/openbabel/src/zipstreamimpl.h:744; #8 0x00007ffff7696ef4 in OpenBabel::OBConversion::Convert (this=0x7fffffffd570, is=0x0, os=0x7fffffffd1d0); at /home/cjh/local/src/openbabel/src/obconversion.cpp:421; #9 0x00007ffff769b16f in OpenBabel::OBConversion::FullConvert (this=0x7fffffffd570, FileList=..., OutputFileName=..., ; OutputFileList=...) at /home/cjh/local/src/openbabel/src/obconversion.cpp:1410; #10 0x000000000040573e in main (argc=4, argv=0x7fffffffd8c8) at /home/cjh/local/src/openbabel/tools/babel.cpp:347. From the trace it seems that something is going on with the zlib interface, but clearing the ZLIB related variables in cmake and setting -D DISABLE_WRITE_COMPRESSION in CPPFLAGS did not appear to solve the problem. This problem occurs as of r4519 on ubuntu-10.04 x86_64, compiled with Debug settings. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119:1539,optimiz,optimized,1539,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119,2,['optimiz'],['optimized']
Performance,mopacformat: Skip Tv line in optimized structure,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/72:29,optimiz,optimized,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/72,1,['optimiz'],['optimized']
Performance,"n7ConvertEv+0x1d5)[0x7ffff76f9a35]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0xa9)[0x7ffff76ff5f9]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS7_SA_+0x1f71)[0x7ffff7701671]; /usr/bin/babel(main+0xacb)[0x402d9b]; /usr/lib64/libc.so.6(__libc_start_main+0xf1)[0x7ffff7a37731]; /usr/bin/babel(_start+0x29)[0x403429]. ```. In GDB:. ```; (gdb) backtrace; #0 0x00007ffff7a4b6f5 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54; #1 0x00007ffff7a4d2fa in __GI_abort () at abort.c:89; #2 0x00007ffff7a8c670 in __libc_message (do_abort=do_abort@entry=2, fmt=fmt@entry=0x7ffff7ba3060 ""*** Error in `%s': %s: 0x%s ***\n"") at ../sysdeps/posix/libc_fatal.c:175; #3 0x00007ffff7a94e0a in malloc_printerr (ar_ptr=<optimized out>, ptr=<optimized out>, str=0x7ffff7ba09a3 ""free(): invalid pointer"", action=3) at malloc.c:5004; #4 _int_free (av=<optimized out>, p=<optimized out>, have_lock=<optimized out>) at malloc.c:3865; #5 0x00007ffff7a9836c in __GI___libc_free (mem=<optimized out>) at malloc.c:2966; #6 0x00007fffe0f5ae5f in OpenBabel::NWChemOutputFormat::ReadCoordinates (this=this@entry=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, ifs=ifs@entry=0x63b450, molecule=molecule@entry=0x6dca40); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:237; #7 0x00007fffe0f5c82a in OpenBabel::NWChemOutputFormat::ReadMolecule (this=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, pOb=<optimized out>, pConv=0x7fffffffd9c0); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:1001; #8 0x00007ffff7754ae4 in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffd9c0, pFormat=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>); at /home/madchem/openbabel-2.3.2/openbabel/src/obmolecformat.cpp:105; #9 0x00007ffff76f9a35 in OpenBabel::OBConversion::Convert (this=this@entry=0x7fffffffd9c0) at /home/madchem/ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/347:1925,optimiz,optimized,1925,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/347,3,['optimiz'],['optimized']
Performance,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2268:1350,load,load,1350,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268,2,['load'],['load']
Performance,"ndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtim",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:7144,load,load,7144,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['load'],['load']
Performance,"ndows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the repository was retired (perhaps the public [mailing list](https://sourceforge.net/p/jmol/mailman/jmol-users/) contains some info, or request help with a mail to <jmol-users@lists.sourceforge.net>). Interestingly, [blender](https://www.blender.org/) became useful for 3D printing of molecules, too, but I can't say if it is efficient for batch conversions. See for instance [atomic blender](https://docs.blender.org/manual/en/latest/addons/import_export/mesh_atomic.html)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:2046,load,load,2046,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['load'],['load']
Performance,"ne; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Found PkgConfig: /usr/local/bin/pkg-config (found version ""0.27.1""); -- checking for module 'cairo'; -- package 'cairo' not found; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- GUI will not be built; -- Found PythonInterp: /Library/Frameworks/Python.framework/Versions/2.7/bin/python (found version ""2.7.4""); -- Found PythonLibs: /usr/lib/libpython2.7.dylib (found version ""2.7.4""); -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /Volumes/Macintosh HD2/Software/libraries/obabel/ob-build. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:2181,Perform,Performing,2181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,2,['Perform'],['Performing']
Performance,"ned in the top right / top left ""biographic box"" (depending; if your script runs from left to right, or right to left). + With this dictionary in hand, check if your input SMILES structures; may be fully described by this reference. A potential pitfall is; how these amino acids are described in terms of a charge; (protonated / neuter amino group) in your reference SMILES about; individual amino acids / in the SMILES string. + Identify if / how OpenBabel / rdkit may linearly ""digest"" the; SMILES string, similar to reading the primary protein structure; about the consecution of amino acids only, and iteratively state; the single letter (FASTA) code. (A dictionary-based string; substitution would be more efficient and easier to maintain than; 20+ subsequent if-clauses.) This is based for on RDKit's; capability to identify structure pattern; Jan Jensen's beginner's; tutorial [1] showcases this for using Python in Jupyter notebook; about individual amino acids. I speculate OpenBabel is not competitive to folding algorithms; specifically designed to work on large proteins because the underlying; implementation of MMFF is a force field for / about small molecules; with a few degrees of freedom only. With what I retain from chem /; bio at grammar school, I equally assume one approach a protein folding; algorithm possibly probes is to start folding the protein right from; the moment when two amino acids form a dipeptide. To await the long; sequence to be synthesized completely and then to form the; secondary / tertiary / quaternary structure would be computationally; much more demanding (optimizing all degrees of freedom at once);; equally, proteins curl up right after leaving the ribosome / entering; the cytoplasm for a better state (energy wise). Stackexchange «matter modelling»,[2] while still in beta phase,; already allows to label questions with the tag «protein-folding», too. [1] https://www.youtube.com/watch?v=ERvUf_lNopo; [2] https://mattermodeling.stackexchange.com/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-823837877:2121,optimiz,optimizing,2121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-823837877,1,['optimiz'],['optimizing']
Performance,"not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2202:3558,load,loader,3558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202,3,['load'],['loader']
Performance,"o be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1). ## Steps to Reproduce; <!--; from openbabel import pybel; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357:1917,Load,LoadAllPlugins,1917,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357,1,['Load'],['LoadAllPlugins']
Performance,"obminimize ""explodes"" optimization step",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619:22,optimiz,optimization,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619,1,['optimiz'],['optimization']
Performance,odule ../../lib/balstformat.so; [ 61%] Linking CXX shared module ../../lib/acrformat.so; [ 61%] Built target balstformat; Scanning dependencies of target outformat; [ 61%] Building CXX object src/formats/CMakeFiles/outformat.dir/outformat.cpp.o; [ 61%] Built target acrformat; [ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/getinchi.cpp.o; [ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/__/ops/unique.cpp.o; [ 62%] Linking CXX shared module ../../lib/outformat.so; [ 62%] Built target outformat; Scanning dependencies of target boxformat; [ 62%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.cpp.o; Scanning dependencies of target gamessukformat; [ 63%] Building CXX object src/formats/CMakeFiles/gamessukformat.dir/gamessukformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/boxformat.so; [ 64%] Built target boxformat; Scanning dependencies of target cacheformat; [ 64%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/inchiformat.so; [ 64%] Built target inchiformat; Scanning dependencies of target carformat; [ 65%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.cpp.o; [ 65%] Linking CXX shared module ../../lib/cacheformat.so; [ 65%] Built target cacheformat; Scanning dependencies of target chem3dformat; [ 65%] Building CXX object src/formats/CMakeFiles/chem3dformat.dir/chem3dformat.cpp.o; [ 66%] Linking CXX shared module ../../lib/MCDLformat.so; [ 66%] Linking CXX shared module ../../lib/carformat.so; [ 66%] Built target MCDLformat; [ 66%] Built target carformat; Scanning dependencies of target chemtoolformat; Scanning dependencies of target fhformat; [ 66%] Building CXX object src/formats/CMakeFiles/chemtoolformat.dir/chemtoolformat.cpp.o; [ 66%] Building CXX object src/formats/CMakeFiles/fhformat.dir/fhformat.cpp.o; [ 67%] Linking CXX shared module ../../lib/chem3dformat.so; [ 67%] Built target chem3dformat; Scanning dep,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:40524,cache,cacheformat,40524,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,1,['cache'],['cacheformat']
Performance,"oject: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 0 error(s), 8 warning(s); ========== Build: 1 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. Can the warnings be safely ignored?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:1499,perform,performance,1499,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['perform'],['performance']
Performance,"om) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/jmol/mailman/message/37610840/)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1550,load,load,1550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['load'],['load']
Performance,"openbabel provides working functionality to perform substructure searches using SMARTS. This works well on SMILES files. . openbabel xxx.smi -ocan -s a1aaaa1. This SMARTS query retrieves all molecular structures with aromatic 5-membered ring systems from xxx.smi. Further, openbabel provides working functionality to generate fingerprint indexes to speed up substructure searching by candidate preselection. . openbabel xxx.smi -ofs . This generates the index file xxx.fs. Now, the index file can be used to search quickly:. openbabel xxx.fs -ocan -s C1CCCC1. This SMARTS query retrieves all molecular structures containing a cyclopentane moiety correctly. Apparently, this works. But C1CCCC1 does not only denote a valid SMARTS but also a valid SMILES! . Using a SMARTS that does NOT denote a valid SMILES like the first example (""a"" stands for any aromatic atom of N,C,O,S,Se) does not work and produces an error-message:. openbabel xxx.fs -ocan -s a1aaaa1. gives:. ==============================; *** Open Babel Error in ObtainTarget; Filename of pattern molecule in -S option must have an extension; 0 molecules converted; 1 errors 4 audit log messages . src/formats/fastsearchformat.cpp is suspect to me.; The message is produced in line 488 but a few lines before:. txt=p;; stringstream smarts(txt, stringstream::in);		; OBConversion Convsm(&smarts);; if(!Convsm.SetInFormat(""smi"")) return false;; Convsm.Read(&patternMol);. patternMol.Empty() is true for real SMARTS and false for SMILES. Reported by: vitalingo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819:44,perform,perform,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819,1,['perform'],['perform']
Performance,"ordinates).; By using the defaults in the `--gen3D` it should generate valid OXYZ coordinates (not broken fragments). ## Actual Behavior; Instead it generates OXYZ coordinates that when visualized correspond to a molecule broken in fragments, with no warnings. ## Steps to Reproduce. Using as example the SMILES: ""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" if I try to generate the 3D structure (OXYZ):. 1. Using the default parameters:; `obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h -O test1.xyz`; (terminal output): $ 1 molecule converted; then I visualize the structure loading the XYZ coordinates with AVOGADRO:. ![image](https://user-images.githubusercontent.com/69815654/231754101-807d8f4d-ddd7-4d72-9a31-d5d44d3ca14d.png). 2. Specifying the correct force-field to be used:; `obabel -:""C1=Cc2csc(C3=c4[se]c5c(ccc6ncccc65)c4=CC3)c2[SiH2]1"" --gen3D -h --minimize --ff UFF -O test2.xyz`; (terminal output): $ 1 molecule converted; then I visualize the structure loading the XYZ coordinates with AVOGADRO:; ![image](https://user-images.githubusercontent.com/69815654/231755213-bad4613c-8a08-427b-87a7-469f704e5fff.png). From the openbabel `--gen3D` documentation (https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html):; ![image](https://user-images.githubusercontent.com/69815654/231755668-f732e09c-9869-43e6-a809-7c84c8f00c09.png); `--gen3D` will use MMFF94 by default which will not work since atoms like ""Se"" are not defined in MMFF94 (see https://open-babel.readthedocs.io/en/latest/Forcefields/mmff94.html#mmff94-force-field); ![image](https://user-images.githubusercontent.com/69815654/231756361-7dc07e2a-9822-4c84-bf93-5dbd7b7f7595.png)c. MMFF94 will not work because of some of the atoms (Se) present in my molecule, but that in principle its ok because according to the `--gen3D` documentation (https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) by default also it uses the `--medium` which DOE",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585:1260,load,loading,1260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585,1,['load'],['loading']
Performance,"orm of C6H6. The result will be a neuter, uncharged molecule. I speculate this is behind the switch `Add hydrogens (make explicit)` if engaging the GUI of OpenBabel. The toggle `-p` adds protons to a structure deemed suitable for a certain pH value. Note: If not specified further, by an explicit number, `p` corresponds to a pH of 7.4 ([reference](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=protonate), search section «If you want to add hydrogens appropriate for pH7.4 when doing the conversion the command would be:»). Assuming the basicity of the cyclic amine in your ligand to be somewhere in the range between triethylamine and morpholine, I would be fine if `-p` protonates the amine to yield an ammonium. However, check your input structure about the terminal sulfonic acid. It can't be a group attached to an alkyl chain _and simultaneously_ thrice protonated. What is the origin of your .pdb? With all three S-O distances equal to 1.47 Angstrom, the picture is _more likely_ you started with a deprotonated molecule in first place, than R-SO3H which formally distinguishes between two instances of S=O [shorter bond length between S and O), and one of S-O-H [longer bond length between S and O]. (Compare with the example about p-TsOH, attached below.). Addition: OpenBabel is _one_ popular engine to perform protonations. You may benchmark it in comparison with others in terms of accuracy and rate of processing, e.g. [Dimorphite](https://durrantlab.pitt.edu/dimorphite-dl/), equally from Pitsburgh, which may be used to screen multiple sites potentially subject to protonation in an adjustable range of pH value. If one submits the (still questionable) SMILES string about the above ligand as `OCCN1CCN(CCS(O)(O)O)CC1`, dimorphite-dl suggests the three species ; `OCCN1CC[NH+](CCS(O)(O)O)CC1`	; `OCC[NH+]1CC[NH+](CCS(O)(O)O)CC1`; `OCC[NH+]1CCN(CCS(O)(O)O)CC1`. [test_pTsOH.zip](https://github.com/openbabel/openbabel/files/6074985/test_pTsOH.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896:1654,perform,perform,1654,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896,1,['perform'],['perform']
Performance,"os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string comparisons and 2. most of them short-circuit after the first few bytes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:1161,perform,performs,1161,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,1,['perform'],['performs']
Performance,"other problem due to the unusual version (3.1.1.1). I want to use openbabel as a dependency of a Python package, and even though I install it using `conda`, it tries to upgrade the package when I install my package. IMHO, bumping the version to `3.1.2` would be a good idea.; > ; > Also, maybe `/usr/include/openbabel3` should be set as default in `setup.py`? The newer versions of Ubuntu (22.04, for example) and Arch/Manjaro, all of which compromise a fair amount of Linux users, use this path. If I use `--global-option` to use `-L` and `-I` I can install but I get the warnings:; > ; > ```shell; > WARNING: Implying --no-binary=:all: due to the presence of --build-option / --global-option / --install-option. Consider using --config-settings for more flexibility.; > DEPRECATION: --no-binary currently disables reading from the cache of locally built wheels. In the future --no-binary will not influence the wheel cache. pip 23.1 will enforce this behaviour change. A possible replacement is to use the --no-cache-dir option. You can use the flag --use-feature=no-binary-enable-wheel-cache to test the upcoming behaviour. Discussion can be found at https://github.com/pypa/pip/issues/11453; > Collecting openbabel; > Using cached openbabel-3.1.1.1.tar.gz (82 kB); > Preparing metadata (setup.py) ... done; > Installing collected packages: openbabel; > DEPRECATION: openbabel is being installed using the legacy 'setup.py install' method, because the '--no-binary' option was enabled for it and this currently disables local wheel building for projects that don't have a 'pyproject.toml' file. pip 23.1 will enforce this behaviour change. A possible replacement is to enable the '--use-pep517' option. Discussion can be found at https://github.com/pypa/pip/issues/11451; > ```. This is my experience as well. Openbabel is a dependency of my project. Conda installing all dependencies works until the final ""pip install [my_package]"", as the version installed via conda (3.1.1) does not satisfy re",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265:1056,cache,cache-dir,1056,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1292632265,1,['cache'],['cache-dir']
Performance,"portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': None,; 'ob': <module at remote 0x7ffff68d7908>}; #15 0x00007ffff7a88abd in PyImport_Cleanup () at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Python/import.c:347; pos = 140737351971893; ndone = <optimized out>; key = 0x0; value = <module at remote 0x7ffff6beb128>; dict = <optimized out>; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:4090,optimiz,optimized,4090,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,pubchem.so; 7f3924902000-7f3924903000 rw-p 00012000 08:01 920635 /usr/lib/openbabel/2.1/pubchem.so; 7f3924903000-7f3924913000 r-xp 00000000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957:13903,cache,cacheformat,13903,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957,2,['cache'],['cacheformat']
Performance,"pylab and openbabel can both imported in shell.; however,when I loaded pylab on server side, an error: ; libopenbabel.o.3 cannot open shared file. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/827:64,load,loaded,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/827,1,['load'],['loaded']
Performance,"r/all] Error 2; make: **\* [all] Error 2. ---. Very strange that it's building elsewhere, it doesn't seem like the kind of bug that would be system dependent. I'm not sure if it will help, but I'll give some system information:. ---. $ uname --operating-system --kernel-release --kernel-name; Linux 3.2.0-98-generic GNU/Linux; $ uname --kernel-version; #138-Ubuntu SMP Mon Jan 11 12:33:01 UTC 2016; $ uname --machine --processor --hardware-platform; x86_64 x86_64 x86_64. ---. Here's my /proc/cpuinfo:. ---. processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:2873,cache,cache,2873,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['cache'],['cache']
Performance,rc/formats/CMakeFiles/cccformat.dir/cccformat.o; [ 67%] Linking CXX shared module ../../lib/MCDLformat.so; [ 67%] Built target MCDLformat; Scanning dependencies of target bgfformat; [ 67%] Building CXX object src/formats/CMakeFiles/bgfformat.dir/bgfformat.o; [ 67%] Linking CXX shared module ../../lib/cccformat.so; [ 67%] Built target cccformat; Scanning dependencies of target gaussformat; [ 68%] Building CXX object src/formats/CMakeFiles/gaussformat.dir/gaussformat.o; [ 68%] Linking CXX shared module ../../lib/bgfformat.so; [ 68%] Built target bgfformat; Scanning dependencies of target boxformat; [ 68%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.o; [ 68%] Linking CXX shared module ../../lib/boxformat.so; [ 68%] Built target boxformat; Scanning dependencies of target cacheformat; [ 68%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.o; [ 68%] Linking CXX shared module ../../lib/gaussformat.so; [ 68%] Linking CXX shared module ../../lib/cacheformat.so; [ 68%] Built target gaussformat; [ 68%] Built target cacheformat; Scanning dependencies of target fchkformat; Scanning dependencies of target cacaoformat; [ 69%] Building CXX object src/formats/CMakeFiles/fchkformat.dir/fchkformat.o; [ 70%] Building CXX object src/formats/CMakeFiles/cacaoformat.dir/cacaoformat.o; [ 70%] Linking CXX shared module ../../lib/cacaoformat.so; [ 70%] Built target cacaoformat; Scanning dependencies of target carformat; [ 70%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.o; [ 70%] Linking CXX shared module ../../lib/fchkformat.so; [ 70%] Built target fchkformat; Scanning dependencies of target pqrformat; [ 71%] Building CXX object src/formats/CMakeFiles/pqrformat.dir/pqrformat.o; [ 72%] Linking CXX shared module ../../lib/carformat.so; [ 72%] Built target carformat; Scanning dependencies of target chem3dformat; [ 72%] Building CXX object src/formats/CMakeFiles/chem3dformat.dir/chem3dformat.o; [ 72%] Linking CXX shared module .,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:42400,cache,cacheformat,42400,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['cache'],['cacheformat']
Performance,read additional geometry optimization data,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/306:25,optimiz,optimization,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/306,1,['optimiz'],['optimization']
Performance,"recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel equally offers an interface to these two formats. https://www.inchi-trust.org/downloads/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:1936,perform,perform,1936,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['perform'],['perform']
Performance,"red_ptrT_OpenBabel__OBMol_t>; data = 0x779830; destroy = <built-in method delete_OBMol of module object at remote 0x7ffff6759f38>; sobj = 0x7ffff6b8ade0; next = 0x0; #9 0x00007ffff7a0004f in free_keys_object (keys=keys@entry=0x675220); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:374; entries = 0x675240; i = 7; n = 8; #10 0x00007ffff7a00b28 in dict_dealloc (mp=0x7ffff6c014d0) at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1392; _tstate = 0x604680; values = 0x0; keys = 0x675220; i = <optimized out>; n = <optimized out>; #11 0x00007ffff7a19310 in subtype_dealloc (self=<OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/typeobject.c:1024; dict = <optimized out>; dictptr = 0x7ffff6c07760; _tstate = 0x604680; type = <optimized out>; base = 0x7ffff7d76220 <PyBaseObject_Type>; basedealloc = 0x7ffff7a18a70 <object_dealloc>; tstate = 0x604680; #12 0x00007ffff7a0184b in insertdict (mp=mp@entry=0x7ffff6c277a0, key='t', hash=-7895860575028071718, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:824; old_value = <optimized out>; value_addr = 0x821cf0; ep = 0x821ce0; #13 0x00007ffff7a0371a in PyDict_SetItem (; op=op@entry={'__package__': None, '__loader__': None, '__doc__': None, '__name__': None, '__builtins__': <module at remote 0x7ffff7fe4440>, 't': N; one, 'ob': <module at remote 0x7ffff68d7908>}, key=<optimized out>, value=value@entry=None); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/dictobject.c:1208; mp = 0x7ffff6c277a0; hash = <optimized out>; #14 0x00007ffff7a0b3fc in _PyModule_Clear (m=<optimized out>); at /var/tmp/portage/dev-lang/python-3.3.2-r2/work/Python-3.3.2/Objects/moduleobject.c:322; pos = 11; key = 't'; value = <OBMol(this=<SwigPyObject at remote 0x7ffff6b8ade0>) at remote 0x7ffff6c07750>; d = {'__pac",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592:3666,optimiz,optimized,3666,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/21#issuecomment-29000592,2,['optimiz'],['optimized']
Performance,rformat.so; [ 66%] Built target amberformat; Scanning dependencies of target cccformat; [ 66%] Building CXX object src/formats/CMakeFiles/cccformat.dir/cccformat.o; [ 67%] Linking CXX shared module ../../lib/MCDLformat.so; [ 67%] Built target MCDLformat; Scanning dependencies of target bgfformat; [ 67%] Building CXX object src/formats/CMakeFiles/bgfformat.dir/bgfformat.o; [ 67%] Linking CXX shared module ../../lib/cccformat.so; [ 67%] Built target cccformat; Scanning dependencies of target gaussformat; [ 68%] Building CXX object src/formats/CMakeFiles/gaussformat.dir/gaussformat.o; [ 68%] Linking CXX shared module ../../lib/bgfformat.so; [ 68%] Built target bgfformat; Scanning dependencies of target boxformat; [ 68%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.o; [ 68%] Linking CXX shared module ../../lib/boxformat.so; [ 68%] Built target boxformat; Scanning dependencies of target cacheformat; [ 68%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.o; [ 68%] Linking CXX shared module ../../lib/gaussformat.so; [ 68%] Linking CXX shared module ../../lib/cacheformat.so; [ 68%] Built target gaussformat; [ 68%] Built target cacheformat; Scanning dependencies of target fchkformat; Scanning dependencies of target cacaoformat; [ 69%] Building CXX object src/formats/CMakeFiles/fchkformat.dir/fchkformat.o; [ 70%] Building CXX object src/formats/CMakeFiles/cacaoformat.dir/cacaoformat.o; [ 70%] Linking CXX shared module ../../lib/cacaoformat.so; [ 70%] Built target cacaoformat; Scanning dependencies of target carformat; [ 70%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.o; [ 70%] Linking CXX shared module ../../lib/fchkformat.so; [ 70%] Built target fchkformat; Scanning dependencies of target pqrformat; [ 71%] Building CXX object src/formats/CMakeFiles/pqrformat.dir/pqrformat.o; [ 72%] Linking CXX shared module ../../lib/carformat.so; [ 72%] Built target carformat; Scanning dependencies of target chem3dformat; ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838:42283,cache,cacheformat,42283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838,1,['cache'],['cacheformat']
Performance,rmats/CMakeFiles/balstformat.dir/balstformat.cpp.o; [ 60%] Linking CXX shared module ../../lib/balstformat.so; [ 61%] Linking CXX shared module ../../lib/acrformat.so; [ 61%] Built target balstformat; Scanning dependencies of target outformat; [ 61%] Building CXX object src/formats/CMakeFiles/outformat.dir/outformat.cpp.o; [ 61%] Built target acrformat; [ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/getinchi.cpp.o; [ 61%] Building CXX object src/formats/CMakeFiles/inchiformat.dir/__/ops/unique.cpp.o; [ 62%] Linking CXX shared module ../../lib/outformat.so; [ 62%] Built target outformat; Scanning dependencies of target boxformat; [ 62%] Building CXX object src/formats/CMakeFiles/boxformat.dir/boxformat.cpp.o; Scanning dependencies of target gamessukformat; [ 63%] Building CXX object src/formats/CMakeFiles/gamessukformat.dir/gamessukformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/boxformat.so; [ 64%] Built target boxformat; Scanning dependencies of target cacheformat; [ 64%] Building CXX object src/formats/CMakeFiles/cacheformat.dir/cacheformat.cpp.o; [ 64%] Linking CXX shared module ../../lib/inchiformat.so; [ 64%] Built target inchiformat; Scanning dependencies of target carformat; [ 65%] Building CXX object src/formats/CMakeFiles/carformat.dir/carformat.cpp.o; [ 65%] Linking CXX shared module ../../lib/cacheformat.so; [ 65%] Built target cacheformat; Scanning dependencies of target chem3dformat; [ 65%] Building CXX object src/formats/CMakeFiles/chem3dformat.dir/chem3dformat.cpp.o; [ 66%] Linking CXX shared module ../../lib/MCDLformat.so; [ 66%] Linking CXX shared module ../../lib/carformat.so; [ 66%] Built target MCDLformat; [ 66%] Built target carformat; Scanning dependencies of target chemtoolformat; Scanning dependencies of target fhformat; [ 66%] Building CXX object src/formats/CMakeFiles/chemtoolformat.dir/chemtoolformat.cpp.o; [ 66%] Building CXX object src/formats/CMakeFiles/fhformat.dir/fhformat.cpp.o; [ 67%] Linking CXX shared m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:40445,cache,cacheformat,40445,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,2,['cache'],['cacheformat']
Performance,"ror 2; make: *** [all] Error 2; </pre>. Very strange that it's building elsewhere, it doesn't seem like the kind of bug that would be system dependent. I'm not sure if it will help, but I'll give some system information:. <pre>; $ uname --operating-system --kernel-release --kernel-name; Linux 3.2.0-98-generic GNU/Linux; $ uname --kernel-version; #138-Ubuntu SMP Mon Jan 11 12:33:01 UTC 2016; $ uname --machine --processor --hardware-platform; x86_64 x86_64 x86_64; </pre>. Here's my /proc/cpuinfo:. <pre>; processor : 0; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 0; cpu cores : 4; apicid : 0; initial apicid : 0; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.78; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:; processor : 1; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 1; cpu cores : 4; apicid : 2; initial apicid : 2; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148:2890,cache,cache,2890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/270#issuecomment-191567148,1,['cache'],['cache']
Performance,"s are contained within that; install. I used conda-forge to install openbabel v3.1.0 and subsequently; pybel. The error output I sent was from Windows v2004 and I sent that one; because MACOS just said ""segmentation fault"". I figured the Windows output; was a little more useful. Both were generated from the same script. Both; scripts included:; from openbabel import openbabel; from openbabel import pybel; However, there is information I didn't include. These errors come about; after compiling with pyinstaller but the program works before compiling. I; didn't include this information originally because I can reproduce the; errors with the interpreter and simple code. Best,; Mike. On Thu, Apr 15, 2021 at 9:29 PM schluta ***@***.***> wrote:. > I'm guessing that being on mac you installed with homebrew. If that is not; > the case ignore the rest of this.; >; > If so you need to make sure your anaconda python knows about the package.; > You can make your python aware of the other package with something like; > below. You should amend the path below for where homebrew installs packages; > for you. Note that where the packages get symlinked to is fine, like below; > for me.; >; > I want to stress that it is not really recommended to use packages across; > separate python installs. At the very least you should make sure that the; > versions of python are the same.; >; > import syssys.path.append('/usr/local/lib/python3.9/site-packages')from openbabel import openbabelfrom openbabel import pybel; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2357#issuecomment-820843139>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AOVMFGOKTVPSMSDX5MCKQSDTI6HILANCNFSM43AM3UFA>; > .; >. -- ; ______________________________; Dr. Michael McCarthy; Biomedical Scientist,; Henry M. Jackson Foundation at; 711th Human Performance Wing,; RHBBA, Bioanalytics",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882:2081,Perform,Performance,2081,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882,1,['Perform'],['Performance']
Performance,"s""); True; >>> print(open(""example.fps"").read()[:80]); #FPS1; #num_bits=1021; #type=OpenBabel-FP2/1; #software=OpenBabel/2.4.90; #source=; #; ```. ## Actual Behavior. The above code on the current Open Babel HEAD (and with 2.4.1) causes segmentation faults:. ## Steps to Reproduce. ### Example 1 (actual); ```; >>> import pybel; >>> pybel.readstring(""smi"", ""C"").write(""fps""); Segmentation fault; ```. ### Example 2 (actual); ```; >>> import openbabel as ob; >>> conv = ob.OBConversion(); >>> conv.SetInAndOutFormats(""smi"", ""fps""); True; >>> mol = ob.OBMol(); >>> conv.ReadString(mol, ""C""); True; >>> conv.WriteString(mol); Segmentation fault; ```; (Replace the WriteString() with the WriteFile() and there is still a segmentation fault.). The problem seems to be that WriteString() and WriteFile() on a newly constructed OBConversion() leave the Index at the initial value of 0. Some of the formats use GetOutputIndex() and, if it is 1, perform an initialization. For the FPS format, the initialization loads the correct fingerprint type. If it is uninitialized then it will deference an unassigned variable, causing the segfault. I have patched WriteString() and WriteFile(). I will submit a pull request shortly to demonstrate one possible solution. ## Related symptoms. ### issue #1783. Note that this is likely related to issue #1783 . With an un-patched system:; ```; >>> import pybel; >>> pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt""); '>\n'; ```. with my patch in place:; ```; >>> import pybel; >>> print(pybel.readstring(""smi"", ""c1ccccc1"").write(""fpt"")); > 6 bits set; 00000000 00000000 00000000 00000200 00000000 00000000; 00000000 00000000 00000000 00000840 00000000 00008000; 00000000 00000000 00000000 00000000 00000000 00000000; 00000000 00000000 00000000 08000000 00000000 00000000; 00000000 00000000 00000000 00000000 00000000 00020000; 00000000 00000000; ```. The proposed solution in that issue was to enable the 'h' option, which worked because the relevant code sets hexoutput us",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1922:1897,load,loads,1897,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1922,1,['load'],['loads']
Performance,"ss sizes : 36 bits physical, 48 bits virtual; power management:. processor : 7; vendor_id : GenuineIntel; cpu family : 6; model : 42; model name : Intel(R) Xeon(R) CPU E31245 @ 3.30GHz; stepping : 7; microcode : 0x23; cpu MHz : 1600.000; cache size : 8192 KB; physical id : 0; siblings : 8; core id : 3; cpu cores : 4; apicid : 7; initial apicid : 7; fpu : yes; fpu_exception : yes; cpuid level : 13; wp : yes; flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid; bogomips : 6584.73; clflush size : 64; cache_alignment : 64; address sizes : 36 bits physical, 48 bits virtual; power management:. ---. And here's my /proc/meminfo:. ---. MemTotal: 8133496 kB; MemFree: 1332556 kB; Buffers: 198472 kB; Cached: 1463144 kB; SwapCached: 0 kB; Active: 5582092 kB; Inactive: 656896 kB; Active(anon): 4597284 kB; Inactive(anon): 36136 kB; Active(file): 984808 kB; Inactive(file): 620760 kB; Unevictable: 0 kB; Mlocked: 0 kB; SwapTotal: 0 kB; SwapFree: 0 kB; Dirty: 1768 kB; Writeback: 0 kB; AnonPages: 4577472 kB; Mapped: 308328 kB; Shmem: 56048 kB; Slab: 219956 kB; SReclaimable: 151892 kB; SUnreclaim: 68064 kB; KernelStack: 7808 kB; PageTables: 63780 kB; NFS_Unstable: 0 kB; Bounce: 0 kB; WritebackTmp: 0 kB; CommitLimit: 4066748 kB; Committed_AS: 9573052 kB; VmallocTotal: 34359738367 kB; VmallocUsed: 134508 kB; VmallocChunk: 34359595004 kB; HardwareCorrupted: 0 kB; AnonHugePages: 0 kB; HugePages_Total: 0; HugePages_Free: 0; HugePages_Rsvd: 0; HugePages_Surp: 0; Hugepagesize: 2048 kB; DirectMap4k: 7632896 kB; DirectMap2M: 714752 kB. ---. Let me know if any other sort of information might be helpful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678:10251,Cache,Cached,10251,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/253#issuecomment-191565678,1,['Cache'],['Cached']
Performance,"stall, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBabel build. I have verified each JVM does work with other JNI libraries I have written. I tried using the standard JVM flags: -verbose:jni and the Oracle specific JVM flags: -Xcheck:jni and -Xint (ie. don't use HotSpot) but got same results and didn't see any obvious issues logged before the crash. The attached pidXXX.log has details about the crash. I have done a full JVM core dump for these crashes but analysis so far has not helped since the JVM is dying early in the native lib loading. Reported by: terry-vincente. Original Ticket: [openbabel/bugs/973](https://sourceforge.net/p/openbabel/bugs/973)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:2738,load,loading,2738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,1,['load'],['loading']
Performance,"sts.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2-4-1; Operating system and version: Windows 10, 64 bit (v.1703, build OS 15063.413); Compiler : MinGW32, v.4.9.3-1. ## Expected Behavior; Successful build of the Open Babel library. ## Actual Behavior; * cmake:; `C:\OpenBabel\build>cmake ..\openbabel-2-4-1 -G""MinGW Makefiles"" -DEIGEN2_INCLUDE_DIR=C:\Eigen-3.2.9 -DBUILD_GUI=OFF`; --> Operation succeeded (did not find Eigen though...). * mingw32-make:; `C:\OpenBabel\build>mingw32-make UNICODE=0 BUILD=release SHARED=1 MONOLITHIC=1`; --> Compilation error:. ```; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp: In static member function 'static bool DLHandler::openLib(const string&)':; C:\OpenBabel\openbabel-2-4-1\src\dlhandler_unix.cpp:156:36: error: cannot convert 'const char*' to 'LPCWSTR {aka const wchar_t*}' for argument '1' to 'HINSTANCE__* LoadLibraryW(LPCWSTR)'; if(LoadLibrary(lib_name.c_str())); ^; src\CMakeFiles\openbabel.dir\build.make:1387: recipe for target 'src/CMakeFiles/openbabel.dir/dlhandler_unix.obj' failed; mingw32-make[2]: *** [src/CMakeFiles/openbabel.dir/dlhandler_unix.obj] Error 1; CMakeFiles\Makefile2:1078: recipe for target 'src/CMakeFiles/openbabel.dir/all' failed; mingw32-make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; Makefile:139: recipe for target 'all' failed; mingw32-make: *** [all] Error 2; ```. IMHO, the error is caused by LoadLibrary() which is replaced by LoadLibraryW() when UNICODE is defined, whatever its value (see 'winbase.h', lines 2232, 2375 and 2582). Its argument, in 'dlhandler_unix.cpp' is not implicitely converted, hence the error.; Suggested fix: replace LoadLibrary() by LoadLibraryA().",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591:1525,Load,LoadLibraryW,1525,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591,6,['Load'],"['LoadLibrary', 'LoadLibraryA', 'LoadLibraryW']"
Performance,t.so cmlformat.so gausszmatformat.so nulformat.so rinchiformat.so; acesformat.so cmlreactformat.so ghemicalformat.so nwchemformat.so rsmiformat.so; acrformat.so cofformat.so groformat.so opendxformat.so rxnformat.so; adfformat.so confabreport.so gromos96format.so orcaformat.so shelxformat.so; alchemyformat.so copyformat.so gulpformat.so outformat.so siestaformat.so; amberformat.so crkformat.so hinformat.so painterformat.so smilesformat.so; aoforceformat.so crystal09format.so inchiformat.so pcmodelformat.so smileyformat.so; APIInterface.so CSRformat.so jaguarformat.so pdbformat.so stlformat.so; asciiformat.so cssrformat.so lmpdatformat.so pdbqtformat.so svgformat.so; balstformat.so daltonformat.so lpmdformat.so plugin_charges.so textformat.so; bgfformat.so dlpolyformat.so maeformat.so plugin_descriptors.so thermoformat.so; boxformat.so dmolformat.so MCDLformat.so plugin_fingerprints.so tinkerformat.so; cacaoformat.so exyzformat.so mdffformat.so plugin_forcefields.so titleformat.so; cacheformat.so fastaformat.so mdlformat.so plugin_ops.so turbomoleformat.so; carformat.so fastsearchformat.so mmcifformat.so png2format.so unichemformat.so; castepformat.so fchkformat.so mmodformat.so pngformat.so vaspformat.so; cccformat.so featformat.so MNAformat.so pointcloudformat.so viewmolformat.so; cdxmlformat.so fhformat.so mol2format.so posformat.so wlnformat.so; chem3dformat.so fhiaimsformat.so moldenformat.so povrayformat.so xedformat.so; chemdoodlejsonformat.so fingerprintformat.so molproformat.so pqrformat.so xmlformat.so; chemdrawcdx.so fpsformat.so molreport.so PQSformat.so xsfformat.so; chemdrawct.so freefracformat.so mopacformat.so pubchemjsonformat.so xyzformat.so; chemicaljsonformat.so gamessformat.so mpdformat.so pubchem.so yasaraformat.so; chemkinformat.so gamessukformat.so mpqcformat.so pwscfformat.so zindoformat.so; chemtoolformat.so gausscubeformat.so msiformat.so qchemformat.so; cifformat.so gaussformat.so msmsformat.so reportformat.so; werner@X10DAi:~$ ls /usr/loc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947637905:1133,cache,cacheformat,1133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947637905,1,['cache'],['cacheformat']
Performance,t.so; 7f3924913000-7f3924b13000 ---p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b13000-7f3924b14000 rw-p 00010000 08:01 920648 /usr/lib/openbabel/2.1/xmlformat.so; 7f3924b14000-7f3924b24000 r-xp 00000000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924b24000-7f3924d24000 ---p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d24000-7f3924d25000 rw-p 00010000 08:01 920634 /usr/lib/openbabel/2.1/PQSformat.so; 7f3924d25000-7f3924d42000 r-xp 00000000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924d42000-7f3924f42000 ---p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f42000-7f3924f43000 rw-p 0001d000 08:01 920640 /usr/lib/openbabel/2.1/smilesformat.so; 7f3924f43000-7f3924f51000 r-xp 00000000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3924f51000-7f3925150000 ---p 0000e000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925150000-7f3925151000 rw-p 0000d000 08:01 920592 /usr/lib/openbabel/2.1/cacheformat.so; 7f3925151000-7f392515f000 r-xp 00000000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392515f000-7f392535e000 ---p 0000e000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535e000-7f392535f000 rw-p 0000d000 08:01 920607 /usr/lib/openbabel/2.1/cssrformat.so; 7f392535f000-7f392536d000 r-xp 00000000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392536d000-7f392556c000 ---p 0000e000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556c000-7f392556d000 rw-p 0000d000 08:01 920651 /usr/lib/openbabel/2.1/zindoformat.so; 7f392556d000-7f392557b000 r-xp 00000000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392557b000-7f392577a000 ---p 0000e000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577a000-7f392577b000 rw-p 0000d000 08:01 920600 /usr/lib/openbabel/2.1/chemtoolformat.so; 7f392577b000-7f3925789000 r-xp 00000000 08:01 920646 /usr/lib/openbabel/2.1/viewmolformat.so; 7f3925789000-7f3925988000 ---p 0000e000 08:01 920646 /usr/lib,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957:14087,cache,cacheformat,14087,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957,2,['cache'],['cacheformat']
Performance,"tformat.cpp	2023-06-18 17:10:03.141724231 +0300; +++ pdbqtformatx.cpp	2023-06-18 17:11:47.742477601 +0300; @@ -403,7 +403,7 @@; }; ; double charge = atom->GetPartialCharge();; - snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+5.3f %.2s"",; + snprintf(buffer, BUFF_SIZE, ""%s%5d %-4s %-3s %c%4d%c %8.3f%8.3f%8.3f 0.00 0.00 %+8.3f %-2.2s"",; het?""HETATM"":""ATOM "",; index,; type_name,; ```. If we use the specsed %+6.3f for the partial charges, everything except values greater than 99.999 are aligned correctly. ; The columns 67 to 76 can be used. According to the latter link I provided, they use `%+10.4s` so what gives? I use +8.3 and it works just dandy. The current breakdown is currently following:. ```; %s: Placeholder for a string (record name).; %5d: Placeholder for an integer with a width of 5 (serial).; %-4s: Placeholder for a left-aligned string with a width of 4 (atom name).; %-3s: Placeholder for a left-aligned string with a width of 3 (residue name).; %c: Placeholder for a single character (altLoc).; %4d: Placeholder for an integer with a width of 4 (resSeq).; %c: Placeholder for a single character (iCode).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (x).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (y).; %8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (z).; 0.00: Static value for the occupancy column.; 0.00: Static value for the temperature factor column.; %+8.3f: Placeholder for a floating-point number with a width of 8 and 3 decimal places (partialChrg).; %-2.2s: Placeholder for a left-aligned string with a width of 2 (atomType).; ```. Additionally, I just noticed that if I convert (with obabel) mol2 file to PDB file, optimize the geometries and calculate the partial charges with openmopac and convert (with obabel) the resulting PDB file (not MOO this time) to PDBQT-file, the charges are all total flat zero..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455:1887,optimiz,optimize,1887,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2595#issuecomment-1596156455,1,['optimiz'],['optimize']
Performance,that goes together with multijob implement: how about reading geometry optimization coords so every step can be visualized and additionally convergence plotted?. Reported by: jbaltrus. Original Ticket: [openbabel/feature-requests/144](https://sourceforge.net/p/openbabel/feature-requests/144),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1513:71,optimiz,optimization,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1513,1,['optimiz'],['optimization']
Performance,"tl is enough), or requires colour (.obj, .vmrl). Note, Scalfani *et al.* address a similar a task with Jmol and data by the COD in their open access publication *Programmatic conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""}; } catch (e) {jm; print e;; var a = e + ""\n""+load(alist[i]);; write inline @a @{alist[i]+"".error""};; }; }; ```. With an additional entry in `~/.bashrc` of. ```; alias jm=""java -jar ~/.../.../Jmol.jar -L""; ```. it suffices to cd into the folder with the list of cif files to process and to launch Jmol without a header. ```shell; $ jm -ions ./Jmol3DP.spt; ```. The paper announces https://chemapps.stolaf.edu/jmol/3dprint as a repository of 30k+ VRML/stl files; however somewhere between 2016 and today the page's address was changed, merged into an other interface, or the r",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:1624,load,load,1624,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['load'],['load']
Performance,"tring SmilesString=""C2CN(CCN1C(=O)N(CC)N=N1)CCC2(COC)N(C(=O)CC)C3=CC=CC=C3"";; stringstream ss(SmilesString);; OBConversion conv(&ss);; OBMol mol;; if(!conv.SetInFormat(""smi"") || !conv.Read(&mol)); {; cout << ""Bail out! Can't read SMILES string"" << endl;; system(""pause"");; return -1;; }; mol.AddHydrogens();; if (!pOp->Do(&mol)); {; cout << ""Bail out! 3D generation failed"" << endl;; system(""pause"");; return -1;; }; if (!pFF->Setup(mol)); {; cout << ""Bail out! Forcefield Setup failed"" << endl;; system(""pause"");; return -1;; }; pFF->SteepestDescent(1000);; pFF->GetCoordinates(mol);; int numrots = mol.NumRotors();; cout << ""Number of rot: "" << numrots << endl;; pFF->WeightedRotorSearch(numrots, 100);; pFF->GetCoordinates(mol);; cout << ""Got to the end"" << endl;; system(""pause"");; }. ////////////////////////////////////////////////. The error was in std::vector:; _DEBUG_ERROR(""vector iterator not dereferencable"");. The call stack was:; msvcp80d.dll!00819961(); [Frames below may be incorrect and/or missing, no symbols loaded for; msvcp80d.dll]; > OpenBabelDLLD.dll!std::_Vector_const_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 99 + 0x14; bytes C++; OpenBabelDLLD.dll!std::_Vector_iterator<OpenBabel::OBBond; *,std::allocator<OpenBabel::OBBond *> >::operator*() Line 327 C++; OpenBabelDLLD.dll!OpenBabel::OBMol::FindChildren(std::vector<int,std::allocator<int>; > & children=[0](), int first=3, int second=4) Line 560 + 0x23; bytes C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::AssignTorVals(OpenBabel::OBMol; & mol={...}) Line 424 C++; OpenBabelDLLD.dll!OpenBabel::OBRotorList::Setup(OpenBabel::OBMol &; mol={...}) Line 53 C++; OpenBabelDLLD.dll!OpenBabel::OBForceField::WeightedRotorSearch(unsigned; int conformers=10, unsigned int geomSteps=100) Line 1269 C++; testbug.exe!main(int argc=1, char * * argv=0x00ae6648) Line 79 +; 0x14 bytes C++; testbug.exe!__tmainCRTStartup() Line 586 + 0x19 bytes C; testbug.exe!mainCRTStartup() Line 403 C; kerne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751:1511,load,loaded,1511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751,1,['load'],['loaded']
Performance,"ument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:11762,load,load,11762,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['load'],['load']
Performance,"up-notification svg systemd tcpd tiff truetype udev udisks unicode upower usb vorbis wayland widgets wxwidgets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 fm801 hda-intel intel8x0 intel8x0m maestro3 trident usb-audio via82xx via82xx-modem ymfpci"" APACHE2_MODULES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""python3_4"" PYTHON_TARGETS=""python2_7 python3_4"" RUBY_TARGETS=""ruby21 ruby22"" USERLAND=""GNU"" VIDEO_CARDS=""nvidia intel"" XTABLES_ADDONS=""quota2 psd pknock lscan length2 ipv4options ipset ipp2p iface geoip fuzzy condition tee tarpit sysrq steal rawnat logmark ipmark dhcpmac delude chaos account""; Unset: CC, CPPFLAGS, CTARGET, CXX, EMERGE_DEFAULT_OPTS, INSTALL_MASK, LC_ALL, PO",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:11815,load,load,11815,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['load'],['load']
Performance,update:; - Use random distance matrix for initialization; - Optimize coordinates in 4D; - Use BFGS implemented in ~~[CppOptimizationLibrary](https://github.com/PatWie/CppNumericalSolvers)~~ [LBFGS++](https://github.com/yixuan/LBFGSpp/); - Introduce new error function instead of swapping atoms. I want to discuss where to put `cppoptlib` directory.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-502964047:60,Optimiz,Optimize,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-502964047,1,['Optimiz'],['Optimize']
Performance,"ure if it's related or not, but I'm getting segmentation faults now with 2-2-x branch svn snapshot:. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBAtom::BeginNbrAtom (this=0x0, i=@0x7fffe8695720); at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; 683 __normal_iterator(const _Iterator& __i) : _M_current(__i) { } ; Missing separate debuginfos, use: debuginfo-install ImageMagick.x86_64 bzip2.x86_64 e2fsprogs.x86_64 expat.x86_64 fontconfig.x86_64 freetype.x86_64 gcc.x86_64 glibc.x86_64 lcms.x86_64 libICE.x86_64 libSM.x86_64 libX11.x86_64 libXau.x86_64 libXdmcp.x86_64 libXext.x86_64 libXt.x86_64 libjpeg.x86_64 libtiff.x86_64 libxcb.x86_64 libxml2.x86_64 netpbm.x86_64 zlib.x86_64 ; (gdb) bt ; #0 OpenBabel::OBAtom::BeginNbrAtom (this=0x0, i=@0x7fffe8695720) ; at /usr/lib/gcc/x86_64-redhat-linux/4.3.0/../../../../include/c++/4.3.0/bits/stl_iterator.h:683 ; #1 0x00007fcbe00aa891 in OpenBabel::OBMol::GetBond ( ; this=<value optimized out>, bgn=0x0, end=0x1eaea30) ; at /work3/igor/openbabel-2-2-x/src/mol.cpp:865 ; #2 0x00007fcbda4ac4fd in OpenBabel::OBMol2Cansmi::GetCisTransBondSymbol ( ; this=0x7fffe86962a0, bond=0x1eb21d0, node=<value optimized out>) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:3235 ; #3 0x00007fcbda4b33a6 in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1eb36e0, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0x7fffe8696020, ; canonical_order=@0x7fffe8696000, isomeric=true) ; at /work3/igor/openbabel-2-2-x/src/formats/smilesformat.cpp:4188 ; #4 0x00007fcbda4b33eb in OpenBabel::OBMol2Cansmi::ToCansmilesString ( ; this=0x7fffe86962a0, node=0x1e85150, ; buffer=0x7fffe86965d0 ""C(=C)=CC(CC)CCCC.C1(=CC(C2=C(C3C(C1C)C3=C)C=C(CC)C(C(C=[C]#[C]=C)[*]C)C#[C](C2)C)C)C.[C]1(=CC=C=C("", ; frag_atoms=@0x7fffe869e840, symmetry_classes=@0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125:1002,optimiz,optimized,1002,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/835#issuecomment-281794125,1,['optimiz'],['optimized']
Performance,"us declarative dri dts dvd dvdr emboss encode exif fam firefox flac fortran gdbm gif glamor gpm gtk iconv ipv6 jpeg kde kipi kms kwallet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phonon plasma png policykit ppds qml qt3support qt4 qt5 readline sdl seccomp semantic-desktop session spell ssl startup-notification svg systemd tcpd tiff truetype udev udisks unicode upower usb vorbis wayland widgets wxwidgets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 fm801 hda-intel intel8x0 intel8x0m maestro3 trident usb-audio via82xx via82xx-modem ymfpci"" APACHE2_MODULES=""authn_core authz_core socache_shmcb unixd actions alias auth_basic authn_alias authn_anon authn_dbm authn_default authn_file authz_dbm authz_default authz_groupfile authz_host authz_owner authz_user autoindex cache cgi cgid dav dav_fs dav_lock deflate dir disk_cache env expires ext_filter file_cache filter headers include info log_config logio mem_cache mime mime_magic negotiation rewrite setenvif speling status unique_id userdir usertrack vhost_alias"" CALLIGRA_FEATURES=""kexi words flow plan sheets stage tables krita karbon braindump author"" COLLECTD_PLUGINS=""df interface irq load memory rrdtool swap syslog"" CPU_FLAGS_X86=""mmx mmxext sse sse2"" ELIBC=""glibc"" GPSD_PROTOCOLS=""ashtech aivdm earthmate evermore fv18 garmin garmintxt gpsclock isync itrax mtk3301 nmea ntrip navcom oceanserver oldstyle oncore rtcm104v2 rtcm104v3 sirf skytraq superstar2 timing tsip tripmate tnt ublox ubx"" INPUT_DEVICES=""evdev synaptics"" KERNEL=""linux"" L10N=""en en_AU en_GB en_US en-AU en-GB en-US"" LCD_DEVICES=""bayrad cfontz cfontz633 glk hd44780 lb216 lcdm001 mtxorb ncurses text"" LIBREOFFICE_EXTENSIONS=""presenter-console presenter-minimizer"" OFFICE_IMPLEMENTATION=""libreoffice"" PHP_TARGETS=""php5-6"" PYTHON_SINGLE_TARGET=""p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:11441,cache,cache,11441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,1,['cache'],['cache']
Performance,"with vectors a = b = c = 1 (Angstrom) and \alpha = \beta = \gamma = 90 (degrees), yet stating the triclinic space group P1. Solution NMR does provide other information about protein structures, in _partial_ overlap with what protein crystallography by diffraction on solid samples provides. One may anticipate some quality checks for model data from crystals are not applicable here. Contrasting to this, a .pdb file does not require the provision of lattice constants because the description of a single, individual, isolated molecule is sufficent. So if there are no a, b, c, \alpha, \beta, \gamma in original .pdb accessible to you, openbabel has nothing to add about them when exporting a .cif. On the other hand, the conversion of the (multimodel) .cif provided by the database into individual .pdb (one molecule each) still is possible with other programs than openbabel. From the terminal within [Jmol](http://jmol.sourceforge.net/), for example, you may access the multimodel .cif by. ```; load ""1ner.cif"";; ```; where it will recognize the presence of 30 models. It is possible to access them one by one via the GUI (right mouse button click into the canvas), or from the program's console, e.g. ```; load models ({4}) ""1ner.cif"";; ````. to access only the fifth model in the .cif file. From there, it is possible to export them, for example by either one of the following. ```; write ""model5.pdb"";; write ""model5.sdf"" as v3000;; ```; (the `as v3000` is to access the more modern variant of .sdf allowing e.g., a larger number of atoms). If you anticipate the conversions ahead are multiple, consider to write a [Jmol script](https://chemapps.stolaf.edu/jmol/docs/) and run Jmol without a GUI:. ```bash; jmol -ions water_script.spt; ```. with . ```; -i,--silent silent startup operation; -n,--nodisplay no display (and also exit when done); -o,--noconsole no console -- all output to sysout; -s,--script <arg> script file to execute; ```. (credit to [Robert Hanson](https://sourceforge.net/p/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418:1338,load,load,1338,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1123540418,1,['load'],['load']
Safety," -oxyz`. to obtain the backbone of benzene. _For OpenBabel_, the input. `obabel -:'c1ccccc1' --gen3d -oxyz`. -- the SMILES string enclosed by single quotes instead -- yields a result equivalent to the other (just checked again, OpenBabel 3.1.0 running in Linux Debian 11/bullseye, testing) as long as there is no space between the colon and the leading single / double quote. The absolute (x,y,z) coordinates about the same atom may differ from each other for either one of the two approaches. But, this equally is the case running either one of the two commands again, and again, too. I attribute these small variations to the MMFF optimization OpenBabel uses to offer rapidly a geometry «good enough» to continue work elsewhere. This being said, I see the number of protons differ from how `-p <integer_value>` is used. In contrast to my anticipation, this number however varies, depending if `--gen3d` is used, or not. Your suggest to pipe the intermediate SMILES string adjusted for the pH value explicitly set _then used_ for `--gen3d` is the better, because safer approach. With the same setup, results indeed differ as shown below:. + formic acid in acid, as expected 2 protons:; > $ obabel -:'C(=O)O' -p 1 -oxyz; > 5; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, as expected only one proton:; > $ obabel -:'C(=O)O' -p 14 -oxyz; > 4; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, unexpectedly writing two protons:; > $ obabel -:'C(=O)O' -p 14 --gen3d -oxyz; > 5; > ; > C 1.10369 -0.02330 -0.04653; > O 0.44240 0.56154 -0.88483; > O 2.44963 -0.04201 -0.01971; > H 0.68143 -0.60513 0.78745; > H 2.79396 -0.56462 0.72939; > 1 molecule converted. + formiate, following your suggestion with an intermediate SMILES string adjusted, with one proton o",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435:1194,safe,safer,1194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435,1,['safe'],['safer']
Safety," In the latter case, you need to do this before building open babel and you probably need to redo it after conda python is updated. In the former case, you need to change this everytime you compile open babel. Unfortunately, I don’t know enough of the linking process in Linux to tell what the corresponding workflow would be for getmolmap... Kind regards,; Fredrik. > 24 nov. 2015 kl. 22:27 skrev Michael Schmuker notifications@github.com:; > ; > Chiming in here because I've run in this issue today too. I reported a similar issue in the old sourceforge issue tracker a while ago (which was probably already abandoned by then): https://sourceforge.net/p/openbabel/bugs/916/ https://sourceforge.net/p/openbabel/bugs/916/ .; > ; > I was trying to compile openbabel from source on OSX, using the anaconda python distribution to link against. I used the cmake options -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=~/anaconda/include/python2.7/ -DPYTHON_LIBRARY=~/anaconda/lib/libpython2.7.dylib; > ; > Importing pybel results in; > ; > Fatal Python error: PyThreadState_Get: no current thread; > Abort trap: 6; > Running otool -L _openbabel.so shows that libpython2.7.dylib is linked without any prefixed path.; > The problem can be fixed using install_name_tool -change libpython2.7.dylib /Users/micha/anaconda/lib/libpython2.7.dylib, i.e. providing the full path to the anaconda libpython.; > ; > I reproduced this problem today on a fresh checkout of openbabel. BTW, installing openbabel from @patrickfuller https://github.com/patrickfuller 's conda channel also results in a segfault (which is why I resorted to compiling from source in the first place).; > ; > Is there a way to have cmake instruct the linker to use the full path of libpython2.7.dylib as provided on the command line? This would greatly facilitate compiling pybel from source on OSX.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/issues/203#issuecomment-159409936.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159500475:1765,Abort,Abort,1765,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159500475,1,['Abort'],['Abort']
Safety," hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf). --- . There is an ongoing discussion among the developers of [InChI trust](https://www.inchi-trust.org/) and the developers of FOSS about the current license scheme regarding implementations *computing* InChI in FOSS. Right of the tip of my hat, I don't recall if OpenBabel is in the fraction «be safe even if it means using an old version» (i.e., corresponding to InChI 1.03 by June 2010), or found a special agreement with InChI trust. Reference libraries and executables for Linux, Mac, Windows including to contemporary version 1.06 (released December 2020) may be downloaded for free from InChI trust [here](https://www.inchi-trust.org/download-latest-inchi-standard-software/).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:2738,safe,safe,2738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,1,['safe'],['safe']
Safety," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2443:1447,safe,safe,1447,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443,3,['safe'],['safe']
Safety," to save the streams. By not keeping pointers to the provided streams, the possibility of a use after free error goes away. The constructor, SetInStream/SetOutStream, ReadFile/WriteFile, and Read/Write functions can still be used to set persistent streams. Internally, SetInStream/SetOutStream are used to setup/teardown streams, as opposed to the previous approach which was to duplicate (slightly different) blocks of code everywhere this happened (for instance, to check for gzip, set NeedToFree, etc). OBConversion keeps track of what streams it owns the memory to. SetInStream(NULL) or SetOutStream(NULL) will take care of cleaning up the current stream. The semantics of the copy constructor have been refined and an assignment operator added. Previously the state was just copied resulting in two objects that both thought they owned the same memory and had to delete it. This only worked because of the implicit assumption that OBConversions were only copied to create AuxConv objects for XML parsing (why these need to be subclasses, I know not) and there's special logic to avoid duplicate deletions in this case. Now the semantics are that only the originating OBConversion retains ownership of any memory it allocated. This eliminates the possibility of a free-after-free, but not a use-after-free (the copy constructor just shouldn't be used). ReadFile/WriteFile will now extract the format from the filename if the format is not already set. This includes setting the gzip status of the file. I've also added a convenience constructor to OBConversion that takes filenames. This removes a lot of the boilerplate required for doing simple tasks. For example:. OBMol mol;; OBConversion conv(infile);; while(conv.Read(&mol)) {; //do stuff; }. Gzip support has been improved to work properly on files that are concatenations of gzip files (this is suppose to be a valid thing to do). The XML reader would return true to ReadMolecule even if it hadn't read a molecule in a multi-molecule file ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:4057,avoid,avoid,4057,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['avoid'],['avoid']
Safety,"""-DCMAKE_BUILD_TYPE=RELEASE"" will fix it. It turns out that the g++ build; does not default to ""RELEASE"", but instead to the build that includes debug; information, hence the humungous files. I think this is a mistake and will; send a pull request. Also, the Release build should use ""-O3"" unless we; know there is a problem with this.; - Noel. On 5 October 2016 at 07:02, Noel O'Boyle baoilleach@gmail.com wrote:. > At the least, there should be an option to bundle the plugins into the; > main .so, independently of a static build.; > ; > On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:; > ; > On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <; > notifications@github.com; > ; > > wrote:; > > ; > > It's the binary obabel and other tools + python parts. I can see that all; > > format files are linked in windows to one (if I remember correctly) and; > > they seam to be highly redundant on Linux. The same (i.e small size) is; > > on; > > OSX. Just review the libraries in my conda packages here; > > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > > ; > > OSX are ~10 times smaller than Linux counterparts.; > > ; > > I think it's a linker problem which might be overcome by GCC (?).; > ; > It would be nice to fix this on Linux (although I don't know how to). I; > don't care so much about the size, but the process startup time of obabel; > can be pretty bad as it loads all those files.; > ; > Cheers,; > ; > Jeff; > ; > —; > You are receiving this because you commented.; > ; > Reply to this email directly, view it on GitHub; > https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997:905,redund,redundant,905,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-252950997,1,['redund'],['redundant']
Safety,"""git grep -n 'std::string'|wc -l"" on Openbabel root directory gives 2686; Any idea how to proceed incrementally without breaking the build?. Not related but to simplify mem management+to avoid mem leaks in case of exceptions+just to avoid mem leak errors from SWIG it could be useful to use unique_ptr but it needs C++11. Any roadmap to use C++11 on Openbabel?; I'm not unique_ptr expert and I know that some cases may need shared_ptr which is much more difficult to use for a C++ beginner like me.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202:187,avoid,avoid,187,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202,2,['avoid'],['avoid']
Safety,"## Environment Information; Open Babel version: 2.4.1 with Python 3.7.9; Operating system and version: Ubuntu 20.04.4 LTS. ## Expected Behavior; Peptide structure prediction. ## Actual Behavior; SystematicRotorSearch briefly allocates more and more RAM until overflow (tested on a machine with 32 GB RAM).; RandomRotorSearch works fine alike the other methods, too. Maybe SystematicRotorSearch needs a lot of memory, but comparing to all other methods this looked odd for me. ## Steps to Reproduce; An arbitrary PDB file is needed. ; `ob_ff = openbabel.OBForceField.FindForceField(""gaff""). ob_conv = openbabel.OBConversion() # conversion object; ob_mol = openbabel.OBMol() # molecule; ob_conv.ReadFile(ob_mol, pdb_path). ob_ff.Setup(ob_mol); ob_ff.SystematicRotorSearch(10)`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498:163,predict,prediction,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498,1,['predict'],['prediction']
Safety,"$ echo ""c12.c23.c34.c45.c56.c61"" | babel -i smi -o smi; C1CCCCC1. The SMILE above should produce ""c1ccccc1"". The SMILES parser assumes that a bond between two aromatic atoms is aromatic, except across a ring-closure bond. If there is just one, or two non-adjacent ring-closure symbols, the aromaticity detector figures it out. But in the example above, all six bonds are represented using the dot-disconnect, resulting in all six bonds being marked single, and the aromaticity is lost. NOTE: This bug is already fixed but not checked in yet. I'm documenting it for the record. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/742:302,detect,detector,302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/742,1,['detect'],['detector']
Safety,"(Note to self: add to docs). # Add a small number of tests; 1. For each test you want to add, add a new switch statement target (the ""test ID"") at the bottom of regressions.cpp. To avoid merge problems it may be a good idea to choose test IDs in a particular unique range, e.g. values starting at 6200, rather than the next available integer.; 2. The switch statement should call a function that actually carries out the test. Appropriate code is described below.; 3. Edit the line starting with ""set (regression_parts"" in :file:`tests/CMakeLists.txt` to include your new test target integers.; 4. Rebuild the project. Now it should be possible to run your test directly with ""testrunner regression NN"" where NN is the test ID. It should also be run automatically by ""make test"". # Test code. Need to write this up. For the moment, check out existing tests. You can use OB_ASSERT, or printf(""Fail\n""), to fail a test. The best tests fail without the patch, and pass afterwards. Even better tests will cover a larger range of behaviour to ensure that it keeps working.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473:181,avoid,avoid,181,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/165#issuecomment-97709473,1,['avoid'],['avoid']
Safety,)); ./src/forcefields/forcefielduff.cpp: if (!isfinite(angle)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldgaff.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldghemical.cpp: if (!isfinite(tor)) // stop any NaN or infinity; ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(theta)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(tor)); ./src/forcefields/forcefieldmmff94.cpp: if (!isfinite(angle)); ./src/mol.cpp: if (isfinite(v.x()) || isfinite(v.y()) || isfinite(v.z())) {; ./src/depict/svgpainter.cpp:#define isfinite _finite; ./src/depict/svgpainter.cpp: if (!isfinite(opacity)); ./src/builder.cpp: if (!isfinite(newbond.x()) || !isfinite(newbond.y())); ./src/formats/pointcloudformat.cpp: if( !isfinite(probe_radius) || probe_radius < 0. ) { probe_radius = 0.; }; ./src/formats/pointcloudformat.cpp: if( isfinite(d) && d>0. ) { radius_mult_list.push_back( d ); }; ./src/formats/pointcloudformat.cpp: if( isfinite(d) && d>0. ) { density_list.push_back( d ); }; ./src/formats/stlformat.cpp: if( !isfinite(probe_radius) || probe_radius < 0. ) { probe_radius = 0.; }; ./src/formats/stlformat.cpp: if( !isfinite(scale_factor) || scale_factor < 0. ) { scale_factor = 0.; }; ./tools/obenergy.cpp: if (!isfinite(energy)) {; ```; It is used a lot. But I think it can be safely removed because by C99 standard it shoul be defined in math.h; https://en.cppreference.com/w/c/numeric/math/isfinite,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066:2768,safe,safely,2768,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462032066,1,['safe'],['safely']
Safety,"* Removed '@' from zts calculation patterns (it can be both of '@zts' or just '@' depending on nwchem version); * Fixed non-matching amount of frequencies and intensities. (in particular in avogadro); * Removed redundant vector<vector3>() insertion (it was already inserted above, and one more insertion per iteration just consumes memory.)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1666:211,redund,redundant,211,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1666,1,['redund'],['redundant']
Safety,"- Use rapidjson instead of json-cpp.; - Better method for including the JSON library: Instead of including the full source in the Open Babel repository, CMake looks for rapidjson on the system. If it doesn't find it, it downloads the latest version on demand and uses that. This is also a possible model for how the InChI code could work.; - Better detection of supported native CPU optimizations at compile time (used by rapidjson).; - Convert the existing PubChem and ChemDoodle JSON formats to use rapidjson.; - Fix a few minor bugs and add proper tests for the existing JSON formats. Should hopefully be faster:. ```; (jsoncpp) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 2.15 1.45 1.45; 1000 loops, best of 3: 1.45 msec per loop; ```. ```; (rapidjson) $ python -m timeit -n 1000 -v 'import pybel;list(pybel.readfile(""pcjson"",""CID_6857552_2D.json""))'; raw times: 1.55 0.818 0.818; 1000 loops, best of 3: 818 usec per loop; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1776:349,detect,detection,349,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1776,1,['detect'],['detection']
Safety,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2366:233,detect,detected,233,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366,2,['detect'],['detected']
Safety,"- [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: all. ---; There was a recent interesting paper about the ""Sobering Assessment of Small-Molecule Force Field; Methods for Low Energy Conformer Predictions""(https://arxiv.org/ftp/arxiv/papers/1705/1705.04308.pdf) . So I was trying to utilize that information from the paper above and instead of using MMFF94 I optimized my MOPAC file containing 1000 structures with openmopac PM7 and basically had a mopac output file (*.out *.arc) with a 1000 optimized PM7 structures. Now in order to utilized them further in my pipeline I needed to convert them from MOPAC output format (*.out *.arc) back to SDF. With the current OpenBabel GUI which i mostly use it only converts one single file, but not multiple MOPAC optimized structures. Would it be possible to integrate such a feature or is that rather something one would do outside with a small tools (similar to SDF2SMI) or maybe there is already a tool or some python code?. Tobias",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1789:310,Predict,Predictions,310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1789,1,['Predict'],['Predictions']
Safety,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2281:240,detect,detection,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281,4,['detect'],"['detect', 'detection']"
Safety,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: All; Operating system and version: MacOS with Anaconda (probably not limited). ## Actual Behavior; ```; % /usr/local/anaconda/bin/python3; > import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6; ```; ## Solution; Anaconda now performs static linking on python3, so there's no libpython.so or libpython.dylib. This means that _openbabel.so needs different linker flags:. On Mac:; `-bundle -undefined dynamic_lookup`. This can be retrieved using Python sysconfig:; ```; >>> import sysconfig; >>> sysconfig.get_config_var(""LDSHARED""); 'gcc -bundle -undefined dynamic_lookup -L/usr/local/anaconda/lib -arch x86_64 -L/usr/local/anaconda/lib -arch x86_64'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1802:348,Abort,Abort,348,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1802,1,['Abort'],['Abort']
Safety,"- [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: latest git; Operating system and version: linux. ## Actual Behavior; Configuration shows no errors:; ```; $ cmake ../openbabel -DCMAKE_INSTALL_PREFIX=~/programs/openbabel -DWITH_JSON=OFF -DEIGEN3_INCLUDE_DIR=/home/syesylevsky/programs/Eigen/include/eigen3; -- The C compiler identification is GNU 4.8.5; -- The CXX compiler identification is GNU 4.8.5; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Deprecation Warning at CMakeLists.txt:11 (cmake_policy):; The OLD behavior for policy CMP0005 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. CMake Deprecation Warning at CMakeLists.txt:13 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.1"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Could NOT find wxWidgets (missing: wxWidg",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1919:556,Detect,Detecting,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1919,8,['Detect'],['Detecting']
Safety,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370:672,detect,detector,672,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370,2,['detect'],"['detected', 'detector']"
Safety,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:548,safe,safe,548,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,2,"['redund', 'safe']","['redundantly', 'safe']"
Safety,- check if input file is passed to avoid SEGV; - remove unused variables; - clang-format,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2153:35,avoid,avoid,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2153,1,['avoid'],['avoid']
Safety,".0; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No floating point exception. I think there needs to be a check in vector3::normalize() for zero vectors since it is very hard to guarantee that no callers ever have a zero vector. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> . vector3::normalize() gets a zero vector. Thread 3 ""bfd-server-debu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:1782,Predict,Predict,1782,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['Predict'],['Predict']
Safety,"0.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); ==4287== by 0x4EF650E: OpenBabel::OBConversion::Conv",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1007:1030,detect,detector,1030,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007,1,['detect'],['detector']
Safety,"05) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(818) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(844) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(853) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ArrayList.c; Generating Code...; Compiling...; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(27) : error C2386: 'tr1' : a symbol with this name already exists in the current scope; ../../include\openbabel/reaction.h(44) : error C2039: 'shared_ptr' : is not a member of 'std::tr1'; ../../include\openbabel/reaction.h(44) : error C2065: 'shared_ptr' : undeclared identifier; ../../include\openbabel/reaction.h(44) : e",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:4489,unsafe,unsafe,4489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"06) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(818) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:3201,unsafe,unsafe,3201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"07) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(818) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(844) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(853) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:3845,unsafe,unsafe,3845,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"1. The PDB parser fails to parse some structures correctly, e.g. in 1XAJ chain B is not included in the OBMol object:. import pybel; from openbabel import *. mol = pybel.readfile('pdb', '1xaj.pdb').next(); for r in OBResidueIter(mol.OBMol):; 	print r.GetNum(), r.GetName(), r.GetChain(). 2. The parser replaces blank chain identifiers (' ') in ligands with a new one - which is wrong; the original identifier should be preserved. . From 1st August, the protein data bank will change to remediated structures, i.e. protein residues now always have a proper chain identifier (a-z, A-Z). ------. 19-July-2007. Remediated PDB Archive To Be Released on August 1, 2007. The PDB archive has been remediated and will be available starting August 1, 2007 from ftp://ftp.wwpdb.org. All data in the PDB archive will reflect the new features incorporated as part of this wwPDB project, including standardized IUPAC nomenclature for chemical components. Users may have to download new software to view the files with the new nomenclature (e.g., RasMol, Chimera). Please see http://remediation.wwpdb.org/software.html for details. A snapshot of the unremediated PDB archive (as of July 31, 2007) will be available at ftp://ftp.rcsb.org. An FAQ about this project and transition is available at http://www.wwpdb.org/docs.html. Questions may also be sent to info@wwpdb.org. . Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/666:486,remediat,remediated,486,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/666,4,"['Remediat', 'remediat']","['Remediated', 'remediated', 'remediation']"
Safety,"1/1 Test #212: pytest_babel .....................***Failed Error regular expression found in output. Regex=[ERROR] 1.16 sec; /home/jfkonecn/repos/openbabel/scripts/python:/home/jfkonecn/repos/openbabel/build/lib; .......E/usr/lib/python3.10/subprocess.py:955: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdin = io.open(p2cwrite, 'wb', bufsize); /usr/lib/python3.10/subprocess.py:961: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stdout = io.open(c2pread, 'rb', bufsize); /usr/lib/python3.10/subprocess.py:966: RuntimeWarning: line buffering (buffering=1) isn't supported in binary mode, the default buffer size will be used; self.stderr = io.open(errread, 'rb', bufsize); ........; ======================================================================; ERROR: testOBRMS (__main__.TestOBabel); Sanity checks for obrms; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 529, in testOBRMS; output, err = run_exec( ""obrms -t 10 %s %s""%(sdffile,sdffile)); File ""/home/jfkonecn/repos/openbabel/test/testbabel.py"", line 56, in run_exec; p = Popen([exe] + broken[1:],; File ""/usr/lib/python3.10/subprocess.py"", line 971, in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; File ""/usr/lib/python3.10/subprocess.py"", line 1863, in _execute_child; raise child_exception_type(errno_num, err_msg, err_filename); FileNotFoundError: [Errno 2] No such file or directory: '../bin/obrms'. ----------------------------------------------------------------------; Ran 16 tests in 1.128s. FAILED (errors=1). CMake Error at pytest_babel.cmake:20 (MESSAGE):; 1. 0% tests passed, 1 tests failed out of 1. Total Test time (real) = 1.16 sec. The following tests FAILED:; 212 - pytest_babel (Failed); Errors while running CTest; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2662:1806,Sanity check,Sanity checks,1806,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2662,1,['Sanity check'],['Sanity checks']
Safety,"16) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(818) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(844) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(853) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ArrayList.c; Generating Code...; Compiling...; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(27) : error C2386: 'tr1' : a symbol with this name already exists in the current scope; ../../include\openbabel/reaction.h(44) : error C2039: 'shared_ptr' : is not a member of 'std::tr1'; ../../include\openbabel/reaction.h(44) : error C2065: 'shared_ptr' : undeclared identifier; ../../include\openbabel/reaction.h(44) : error C2275: 'OpenBabel::OBMol' : illegal use of this type as an expression; ../../include\openbabel/mol.h(104) : see declaration of 'OpenBabel::OBMol'; ../../include\openbabel/reaction.h(44) : error C2059: syntax error : '>'; ../../include\openbabel/reaction.h(44) : error C2238: unexpected token(s) preceding ';'; ../../i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:4811,unsafe,unsafe,4811,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"1; N[C@H]1CCn2cccc2C1; NC[C@@H]1CC(=O)NO1; NC[C@H]1CC(=O)NO1; NC[C@H]1COc2ccccc2O1; OC(=O)[C@@H]1CCCN1. Failed SMILES:; CC(C)[C@H](N)C(O)=O; CC[C@H](O)C([O-])=O; CO[C@@H](CN)c1ccccc1; CO[C@H](CN)c1ccccc1; N[C@@H](CO)C(O)=O; N[C@H](CO)C(O)=O; NCCC[C@H](N)C(O)=O; NCCSC[C@H](N)C(O)=O. Command being used: babel ---errorlevel 2 -ocan -ismi <string>; (or -oinchi for inchi output). Open Babel 2.1.1 -- Sep 28 2007 -- 18:13:29; Altix Itanium; Intel(R) C++ Itanium(R) Compiler for Itanium(R)-based applications; Version 8.0 Build 20031017 Package ID: l_cc_p_8.0.056; Copyright (C) 1985-2003 Intel Corporation. All rights reserved. To be honest, I don't have many independent mechanisms to verify that OpenBabel is the point of failure in all cases; I can't read the SMILES 'by eye', and I don't have access to other internal tools to test the chirality. I detect 'disruption' when the OpenBabel generated key (either 'can' or 'inchi' format) differs depending on if I use the molfile or SMILES string supplied by the vendor; it's possible that the vendor has not done the molfile-to-SMILES mapping properly, and that the chirality differs within the vendor DB. So I am passing judgment on the molecules based on graphical visualization provided by PubChem:. http://pubchem.ncbi.nlm.nih.gov/edit/. ... and whenever I've spot-checked a disruption by this (unwieldy) mechanism, the chirality of the vendor-supplied SMILES matches that of the key generated by OB via the vendor-supplied molfile, but not the OB key made from the vendor-supplied SMILES (I can't be sure that there is not a bug within the PubChem tool, though). In a few cases, converting to InChI seems to demonstrate indisputable lost of stereochemical information. The following examples completely lack the InChI stereo layer after OpenBabel conversion:. CN1CCC[C@H]1c2cccnc2; InChI=1/C10H14N2/c1-12-7-3-5-10(12)9-4-2-6-11-8-9/h2,4,6,8,10H,3,5,7H2,1H3. CP(O)(=O)C[C@H](O)CN; InChI=1/C4H12NO3P/c1-9(7,8)3-4(6)2-5/h4,6H,2-3,5H2,1H3,(H,7,8). Eac",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683:2093,detect,detect,2093,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683,1,['detect'],['detect']
Safety,"4""; ACCEPT_LICENSE=""*""; CBUILD=""x86_64-pc-linux-gnu""; CFLAGS=""-O2 -pipe""; CHOST=""x86_64-pc-linux-gnu""; CONFIG_PROTECT=""/etc /usr/lib64/libreoffice/program/sofficerc /usr/share/config /usr/share/gnupg/qualified.txt""; CONFIG_PROTECT_MASK=""/etc/ca-certificates.conf /etc/dconf /etc/env.d /etc/fonts/fonts.conf /etc/gconf /etc/gentoo-release /etc/revdep-rebuild /etc/sandbox.d /etc/terminfo""; CXXFLAGS=""-O2 -pipe""; DISTDIR=""/usr/portage/distfiles""; FCFLAGS=""-O2 -pipe""; FEATURES=""assume-digests binpkg-logs config-protect-if-modified distlocks ebuild-locks fixlafiles merge-sync news parallel-fetch preserve-libs protect-owned sandbox sfperms strict unknown-features-warn unmerge-logs unmerge-orphans userfetch userpriv usersandbox usersync xattr""; FFLAGS=""-O2 -pipe""; GENTOO_MIRRORS=""http://ftp.swin.edu.au/gentoo""; LANG=""en_AU.UTF-8""; LDFLAGS=""-Wl,-O1 -Wl,--as-needed""; MAKEOPTS=""-j9""; PKGDIR=""/usr/portage/packages""; PORTAGE_CONFIGROOT=""/""; PORTAGE_RSYNC_OPTS=""--recursive --links --safe-links --perms --times --omit-dir-times --compress --force --whole-file --delete --stats --human-readable --timeout=180 --exclude=/distfiles --exclude=/local --exclude=/packages --exclude=/.git""; PORTAGE_TMPDIR=""/var/tmp""; USE=""X a52 aac acl acpi alsa amd64 berkdb branding bumblebee bzip2 cairo cdda cdr cli cracklib crypt cups cxx dbus declarative dri dts dvd dvdr emboss encode exif fam firefox flac fortran gdbm gif glamor gpm gtk iconv ipv6 jpeg kde kipi kms kwallet lcms ldap libnotify mad mng modules mp3 mp4 mpeg multilib ncurses nls nptl nvidia ogg opengl openmp pam pango pcre pdf phonon plasma png policykit ppds qml qt3support qt4 qt5 readline sdl seccomp semantic-desktop session spell ssl startup-notification svg systemd tcpd tiff truetype udev udisks unicode upower usb vorbis wayland widgets wxwidgets x264 xattr xcb xcomposite xinerama xml xscreensaver xv xvid xwayland zlib"" ABI_X86=""64"" ALSA_CARDS=""ali5451 als4000 atiixp atiixp-modem bt87x ca0106 cmipci emu10k1x ens1370 ens1371 es1938 es1968 f",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1566:10105,safe,safe-links,10105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1566,2,"['safe', 'timeout']","['safe-links', 'timeout']"
Safety,"56) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(818) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(844) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:3523,unsafe,unsafe,3523,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"6 and 1.8.0_74. Build process with make outputs are in attachments and include CMakeCache.txt are from the Latest OpenBabel source from github and the Java 1.8.0_74 environment. (Note other build combinations had same problem but figured latest code was best bet for figuring out this issue). > cmake -DEIGEN3_INCLUDE_DIR=/Users/marko/ob/eigen3.2.8 -DRUN_SWIG=ON -DJAVA_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/Users/marko/ob/vlatest/install ../ob-src 2>&1 | tee cmake.out; > make | tee make.out; > make install | tee make_install.out; > make test | tee make_test.out. The make activities (cmake, make, make install, make test) all run successfully. I had to convert ""#""'s to ""//"" comments in open-babel-java.i since the 3.0.8 Swig I have in my environment treats them as directives. The libopenbabel_java.jnilib is found and being loaded but crashes the JVM. The following is the JVM crash to the console:. ```; #; # A fatal error has been detected by the Java Runtime Environment:; #; # SIGSEGV (0xb) at pc=0x00000001363187a5, pid=17284, tid=6403; #; # JRE version: Java(TM) SE Runtime Environment (8.0_74-b02) (build 1.8.0_74-b02); # Java VM: Java HotSpot(TM) 64-Bit Server VM (25.74-b02 interpreted mode bsd-amd64 compressed oops); # Problematic frame:; # C [libawt_lwawt.dylib+0x447a5] JNI_OnLoad+0x91; #; # Failed to write core dump. Core dumps have been disabled. To enable core dumping, try ""ulimit -c unlimited"" before starting Java again; #; # An error report file with more information is saved as:; # /Users/marko/eclipseLuna_ws/IZIntegOpenBabel_1_8_0_74/hs_err_pid17284.log; #; # If you would like to submit a bug report, please visit:; # http://bugreport.java.com/bugreport/crash.jsp; # The crash happened outside the Java Virtual Machine in native code.; # See problematic frame for where to report the bug.; #; ```. I get the same crash and location using 3 different Java VM's. The JVM installs and runtimes are solid and I verified that the the JVM's libs were picked up for each OpenBab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1352:1190,detect,detected,1190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1352,1,['detect'],['detected']
Safety,"65) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(818) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(844) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(853) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ArrayList.c; Generating Code...; Compiling...; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:4167,unsafe,unsafe,4167,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"86s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenbabel%2Fopenbabel%2Fissues%2F2048%3Femail_source%3Dnotifications%26email_token%3DAAR3Z7V4NMS3XHAQBSZZSWLQSZXGXA5CNFSM4I27UV4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDUAV6Q%23issuecomment-552078074&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=lOxC%2B1UXZU3nS5d60G0W8VwTOW4HMOcFUQvfwcQRH%2FI%3D&reserved=0>, or unsubscribe<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAAR3Z7SRPFXHUWDHTYJ6FS3QSZXGXANCNFSM4I27UV4A&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633081111&sdata=EZOsbJInx0lMUyvnZ1THTF4lRBV9GlkcHkbSLocnodg%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:2364,safe,safelinks,2364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,2,['safe'],['safelinks']
Safety,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:919,detect,detected,919,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['detect'],['detected']
Safety,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269:965,safe,safe,965,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269,1,['safe'],['safe']
Safety,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. -[x] I believe this to be a bug; ![openbabel_ics](https://user-images.githubusercontent.com/19959249/47168595-486d8380-d2cf-11e8-9332-ff58cc8a92c3.png). I am using AddBond() to add bonds between the fragments of SiH2 and H2 and this is supposed to update the set of internal coordinates. However, not all the internal coordinates are added as expected. . As can be seen in the figure, the first bond updates the angle internal coordinate (dashed blue lines on left) as expected, but does not add the torsion internal coordinate. If I add another bond between the second hydrogen and the silicon this does not add the angle between this second Hydrogen Si (the dashed red line on the right) and still does not provide a torsion internal coordinate. Note that I am using the Iterators, e.g. AngleIter. . Obviously this is incorrect behavior. . - [ x] This is a feature request. More generally however, one should be able to add torsions and angles directly into the set, even if they are redundant. There should be an equivalent of AddBond",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1901:1572,redund,redundant,1572,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1901,1,['redund'],['redundant']
Safety,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemist",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2393:1013,predict,predictions,1013,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393,1,['predict'],['predictions']
Safety,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; ```; # Name Version Build Channel; openbabel 3.1.1 py310h956b46e_7 conda-forge; ```; Operating system and version:; ```; Distributor ID: ManjaroLinux; Description: Manjaro Linux; Release: 23.0.0; Codename: Uranos; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I was trying to recover bond orders and atom specific formal charges from a XYZ file of a molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It seems only the bond orders are recovered but the charges on the NH3+ and COO- are not written to the output SDF file.; Wondering if there are other functions I need to call for this.; I do not wish to add or remove hydrogen atoms as the molecule should not be modified in any way. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```python; from openbabel import pybel. mol = next(pybel.readfile(format=""xyz"", filename=""structure.xyz"")) # readfile returns an iterator; mol.OBMol.ConnectTheDots() # perceives bonding between atoms; mol.OBMol.PerceiveBondOrders(). mol.write",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623:911,recover,recover,911,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623,1,['recover'],['recover']
Safety,"<30s to clone and <1s to git status):; naboo:tmp dkoes$ time git clone git://github.com/openbabel/openbabel.git; Cloning into 'openbabel'...; remote: Enumerating objects: 9, done.; remote: Counting objects: 100% (9/9), done.; remote: Compressing objects: 100% (9/9), done.; remote: Total 78506 (delta 2), reused 1 (delta 0), pack-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenbabel%2Fopenbabel%2Fissues%2F2048%3Femail_source%3Dn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:1480,safe,safelinks,1480,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,1,['safe'],['safelinks']
Safety,"<float> x;; > vector<float> y;; > vector<float> z;; > };; >; > // Convert custom molecule to OBMol; > void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); > {; > mol.Clear();; >; > // map of residues; > map<int,OpenBabel::OBResidue*> reslist;; >; > mol.BeginModify();; >; > for(int i=0;i<sel.element.size();++i){; >; > // Create new atom in this mol; > auto oba = mol.NewAtom();; >; > oba->SetAtomicNum(sel.element[i]);; > oba->SetPartialCharge(sel.charge[i]);; > oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);; >; > // Create new residue if needed; > if(reslist.count(sel.resid[i])==0){; > OpenBabel::OBResidue* obr = mol.NewResidue();; > obr->SetNum(sel.resid[i]);; > obr->SetChain(sel.chain[i]);; > reslist[sel.resid[i]] = obr;; > }; >; > reslist[sel.resid[i]]->AddAtom(oba);; > reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; > }; >; > mol.ConnectTheDots();; > // Guess bond orders and aromaticity; > mol.PerceiveBondOrders();; >; > mol.EndModify();; >; > // Need to avoid recomputing partial charges on output; > mol.SetPartialChargesPerceived();; > }; >; > int main(int argc, char** argv); > {; > OpenBabel::OBMol src,sample1,sample2;; > // Read source molecule; > OpenBabel::OBConversion conv;; > conv.ReadFile(&src,""b.pdb"");; >; > // Read sample using babel; > conv.ReadFile(&sample1,""b_sample.pdb"");; >; > // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); > MyMol mymol;; > mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; > mymol.element = {6, 6, 6, 6, 6, 6};; > mymol.charge = {0, 0, 0, 0, 0, 0};; > mymol.resid = {1, 1, 1, 1, 1, 1};; > mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; > mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; > mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; > mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; > // CreateOBMol; > to_obmol(mymol,sample2);; >; > // Work with babel molecule; > OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766:1546,avoid,avoid,1546,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766,1,['avoid'],['avoid']
Safety,"==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1710,Timeout,Timeout,1710,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['Timeout'],['Timeout']
Safety,"> @JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:; > ; > ```shell; > python xyz2mol_b.py structure.xyz > recovery.sdf; > obabel recovery.sdf -d -O output.png; > ```; > ; > ![output](https://user-images.githubusercontent.com/19709084/264009387-85012637-64dd-424e-8e46-1322e265bda8.png); > ; > It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)).; > ; > [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip). But this will only work for neutral molecules with 0 overall net charge, am I right? How will it work if the molecule has an overall net formal change but I do not know this ahead of time?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635:240,recover,recovery,240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697723635,5,['recover'],['recovery']
Safety,"> Can you give me a use case or example file for this one?. Check this file out: http://www.crystallography.net/cod/cif/1/01/00/1010022.cif; When running, the result is (one of the paths to get NULL from SpaceGroup::Find):; `Unknown space group error, please file a bug report.`. The reason is a weird group name: `Hermann-Mauguin symmetry space group R -3 m HR`; With the patch, we get nice P1 file (since the transformations are correct [which is not always the case]). > would this be able to pull out the molecule when the CIF ""wraps"" it around the unit cell?. Not sure what you mean. I would guess it means that you have coordinates outside the unit cell:; `C1 1.2 -1.2 1.2`; which can be translated back to:; `C1 0.2 -0.2 0.2`. Looking into fillUC code it says:. ```; // Now loop over all symmetry operations, and generate symmetric atoms one at a time; // Avoid creating overlapping atoms (duplicate), and bring back atoms within the unit cell; ```. So the answer seems, yes. Let me know if you have any more questions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/261#issuecomment-183400926:863,Avoid,Avoid,863,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/261#issuecomment-183400926,1,['Avoid'],['Avoid']
Safety,> Can you revise the patch to detect for '-' in the next character?. I'm not sure what you mean. However I will revise it soon with some tests to make it purpose clear.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293:30,detect,detect,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293,1,['detect'],['detect']
Safety,"> From the release notes of 3.0.0:; > ; > > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster.; > ; > It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect. can the warning be silenced?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505:211,safe,safe,211,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-2024102505,1,['safe'],['safe']
Safety,"> Hello guys !!!! i'm trying to use the following script :; > ; > #!/bin/bash; > ; > #SBATCH --job-name=index_human #SBATCH --partition=all #SBATCH --ntasks=1 #SBATCH --cpus-per-task=10 #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com) #SBATCH --cpu-bind=rank #SBATCH --mail-type=ALL #SBATCH --hint=compute_bound; > ; > module load STAR/2.6.0c; > ; > srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$; > ; > when i run it this is the error : Dec 13 08:56:22 ..... started STAR run Dec 13 08:56:22 ... starting to generate Genome files Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time... Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk... slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed srun: Exceeded job memory limit slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 *** srun: Job step aborted: Waiting up to 32 seconds for job step to finish. srun: error: falkor7: task 0: Killed; > ; > How can i resolve it ?; > ; > Thanks to everyone !!!!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694:1153,abort,aborted,1153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853634694,1,['abort'],['aborted']
Safety,"> If you get the full output with `valgrind --leak-check=full --show-leak-kinds=all ./a.out`, the memory leak can be traced to `dlopen()`. @mquevill That is right, the errors that valgrind reports are related to `dl_open`. ; This also happens if I switch to `OBConversion::Read` as @ghutchis suggested. (lost 2592 Bytes). ```c++; #include<openbabel/atom.h>; #include<openbabel/mol.h>; #include<openbabel/generic.h>; #include<openbabel/obconversion.h>; int main(){; 	OpenBabel::OBMol mol;; 	{; 		std::ifstream ifs{""../al108.cif""};; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.Read(&mol, &ifs);; 	}; }; ```. @ghutchis also recommended to switch to LeakSantizer (clang's). In that case, the same number of bytes is lost (2592 bytes) but now it is `ConnectTheDots` what is blamed (maybe this in turn calls `dl_open`, I don't know). ```; =================================================================; ==333638==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 2592 byte(s) in 1 object(s) allocated from:; #0 0x4c43bd in operator new[](unsigned long) (/home/correaa/prj/al108/build/al108+0x4c43bd); #1 0x7f94f507e51e in OpenBabel::OBMol::ConnectTheDots() (/lib/x86_64-linux-gnu/libopenbabel.so.6+0x13251e). SUMMARY: AddressSanitizer: 2592 byte(s) leaked in 1 allocation(s).; ```. Thank you very much for all your help.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848398973:959,detect,detected,959,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848398973,1,['detect'],['detected']
Safety,"> Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). We've tried to use `const` where possible. Since the library is built up of lots of legacy code, there's only so much you can do... > What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. Yes, exactly. On my Mac, I currently have 125, comprising 120+MB of formats. IIRC, charges, forcefields, etc. are compiled together. There's been talk about ""load-on-demand"" but it just hasn't been implemented. > Ah, ok, so it is not purely a problem with `dl_open` then?. There's no leak with `dl_open`. As mentioned above, that's a valgrind thing. Valgrind can't easily deal with `dl_open`. I'd suggest trying LeakSanitizer instead. > `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Sure. Try `OBConversion::Read()` if you like, e.g.; https://github.com/openbabel/openbabel/blob/master/tools/obenergy.cpp. It may be easier if you have questions to post to the mailing lists.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876:112,avoid,avoid,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848316876,1,['avoid'],['avoid']
Safety,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1246,Abort,Aborted,1246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834,1,['Abort'],['Aborted']
Safety,"> Try to replicate the following; > ; > ```shell; > $ obabel -:""c1ccccc1"" -O aromatic.cml -A; > 1 molecule converted; > $ obabel aromatic.cml -ocan; > c1ccccc1	; > 1 molecule converted; > ```; > ; > as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). Thanks for the tips on the redundancies in the command. I ran the commands as you said, and that works, but the aromatic.cml created does not write bond orders as aromatic, it writes the Kekule form. ; [aromatic.txt](https://github.com/openbabel/openbabel/files/13417932/aromatic.txt). Changing the -A flag in your prompt to -xA writes the bonds as aromatic and I still see the issue described. ```; $ obabel -:""c1ccccc1"" -O aromatic.cml -xA; 1 molecule converted; $ obabel aromatic.cml -ocan; [CH]1[CH][CH][CH][CH][CH]1; 1 molecule converted; ```. Also for the comment on version, we are currently using the most recent 3.1.1, but I noticed the error we see in 3.1.1 isn't seen in 2.4.1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753:299,redund,redundancies,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819540753,1,['redund'],['redundancies']
Safety,"> Why are there RDKit related files in there?. I intended to do a comparison in protonation predictions between the toolkits so we could at least have tests for the unambiguous cases, but haven't been able to find the time to do so.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590:92,predict,predictions,92,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-538803590,1,['predict'],['predictions']
Safety,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:242,Detect,Detect,242,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857,2,"['Detect', 'detect']","['Detect', 'detect-chemistry-problems']"
Safety,"@JSLJ23 The following is not a solution to openbabel, however suggests a bypass relying on RDKit. Based on `xyz2mol` by the Jensen group, I forked [xyz2mol_b](https://github.com/nbehrnd/xyz2mol_b) which is capable to perform the intended recovery including assignment of charges. In the present case, the overall charges compensate and the flag `-c` (or `--charge`) is not necessary:. ```shell; python xyz2mol_b.py structure.xyz > recovery.sdf; obabel recovery.sdf -d -O output.png; ```. ![output](https://github.com/openbabel/openbabel/assets/19709084/85012637-64dd-424e-8e46-1322e265bda8). It became a wrapper (because RDKit 2202.09.3 includes the functionality) and nicely complements functionality provided by openbabel. The approach works best on small molecules without organometallic bonds ([video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) of Jan Jensen's presentation at the 2020 RDKit user group meeting, and [slides](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf)). [recovery.sdf.zip](https://github.com/openbabel/openbabel/files/12464139/recovery.sdf.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096:238,recover,recovery,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623#issuecomment-1697310096,5,['recover'],['recovery']
Safety,"@Ricardo The problem with all the SMILES strings around is that you; have to go far to recognize what type of SMILES string is offered to; you. In this perspective, I perceive OpenBabel as advantageous in; comparison to ChemDraw because with toggles like `-osmi` or `-ocan`; you may explicitly define which «dialect» the SMILES will be (e.g.,; canonical, universal, inchified). Like with any programs, as soon as you interface with other programs,; the lack of convention (or deployment of programs designed to adhere; different conventions), this may be anything in the spectrum of; «below the detection limit», «nuisance», and «incompatible». Say you; successfully load the structure in the JS of ChemDraw mentioned; earlier and request the interface to provide the SMILES string. You; may feed this string into OpenBabel in a pattern like. ```bash; obabel -:""c1ccncc1"" -osmi; ```. to ask OpenBabel for a SMILES representation (here about pyridine,; just substitute the SMILES string from ChemDraw accordingly). Here,; `-osmi` and `-ocan` yield the same SMILES string. With a molecule; more complex, like the cyclic one of yours, however, you are going to; recognize differences how input vs. output may differ, and how; different output options yield different SMILES generated by; OpenBabel, too. I don't know what you intend to do with the SMILES strings in hand.; Given observations like the ones mentioned above, I however notice my; tendency to withdraw from them and to deploy either InChI (for the; description and recreation of the structures), or InChIKey (their; hashes, for a convenient recognition of identity of two entries). For reasons beyond your initial question, I currently use one of the; handy reference implementations available for free (as in free beer); from the InChI trust.[1] These are compiled to run from the get-go; with 32 or 64 bit (either Windows or Linux, no separate Mac version); from the CLI to perform the assignment on (multi-model) .sdf files.; OpenBabel eq",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358:595,detect,detection,595,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-941186358,1,['detect'],['detection']
Safety,"@baoilleach - while Turbomole or other parsers should explicitly handle that, I also think that the detection of symbols should handle all cases. There are *many* non-standard files out there with CA = Ca or ""c"" instead of C. Policy has always been to ""accept reasonable files"" and ""write standard-compliant"". So yes, IMHO this is a bug, to accept additional symbols (D, T in particular) as well as case-insensitive comparisons.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2063#issuecomment-552118982:100,detect,detection,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2063#issuecomment-552118982,1,['detect'],['detection']
Safety,@cowsandmilk - I'm fine to bump to 2.8.10. That seems like a safe level for a bit.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624#issuecomment-326721809:61,safe,safe,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624#issuecomment-326721809,1,['safe'],['safe']
Safety,"@dkoes re pybel (about openbabel) which _is not_ PyBEL (about biological networks): You were looking for the section [Updating to Open Babel 3.0 from 2.x](https://open-babel.readthedocs.io/en/latest/UseTheLibrary/migration.html), were sub section _Python module_ states:. > ""In OB 3.x, both openbabel.py and pybel.py live within the openbabel module; ```python; # OB 2.x; import openbabel as ob; import pybel. # OB 3.0; from openbabel import openbabel as ob; from openbabel import pybel; ```; > While more verbose, the new arrangement is in line with standard practice and helps avoid conflict with a different Python project, PyBEL.""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1148285803:579,avoid,avoid,579,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483#issuecomment-1148285803,1,['avoid'],['avoid']
Safety,"@e-kwsm Thank you for your work. I will take a look. @baoilleach I understand that randomness should be removed. I would like to work on it, but I don't have a good idea about how to avoid using random numbers. For example, this procedure adds random offset to avoid planting atoms at the same place. How can I give a good offset which is deterministic but (almost) always different? ; https://github.com/openbabel/openbabel/blob/4709b0752109db593f1bee6298ef3bfa718d260d/src/builder.cpp#L1290. Another problem is how to realize trial and error without random numbers like this:; https://github.com/openbabel/openbabel/blob/4709b0752109db593f1bee6298ef3bfa718d260d/src/builder.cpp#L315. I would like to know your idea about how to avoid using random numbers in these situations.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-634012612:183,avoid,avoid,183,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-634012612,3,['avoid'],['avoid']
Safety,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:2696,recover,recover,2696,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['recover'],['recover']
Safety,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:1506,Predict,Predicted,1506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941,2,['Predict'],['Predicted']
Safety,"@husakm Can you share a specific example? The assignment of bonds in a .cif file is not mandatory (let alone *bond order*), and accounting for molecules on *special positions* (where symmetry operators of the unit cell [most frequently a centre of inversion, a mirror plane, a proper axis of rotation]) allow a *crystallographic motif* to be smaller than the whole molecule described can be difficult. With varying success to recover a molecule as such from a .cif file, you could resort to GUIs established in the field e.g., CCDC's Mercury (already in the [community edition](https://www.ccdc.cam.ac.uk/solutions/software/free-mercury/)), [Jmol](https://wiki.jmol.org/index.php/Main_Page), [Avogadro](https://github.com/OpenChemistry/avogadroapp). If you have a stack of files to process, an automated conversion into a .mol/.sdf file (or/then further processed to yield an .xyz) could be an option, too. Examples include `codcif2sdf` of the [cod-tools](https://wiki.crystallography.net/cod-tools/), a Jmol script, or Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) extension to RDKit. As mentioned by Jensen himself ([talk at the RDKit user meeting 2020](https://www.youtube.com/watch?v=HD6IpXMVKeo), link to a youtube recording), organometallic structures are more difficult in assigning bonds and bond order.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875:426,recover,recover,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085729875,1,['recover'],['recover']
Safety,"@nbehrnd @fredrikw ; Thanks for your reply.; * I have update the version of openbabel 3.1.1, but the result is not fit. In the document 3.0.0, I find the openbabel provide a new method base on paper ""Fast, efficient fragment-based coordinate generation for Open Babel"". But i can not find the how to use it.; * ""The nitrogen and sulphur on the lower right of my image being without hydrogens."" In this question, i want to explain that because i need to genereate the molecules base on this scaffold. It is the scaffold. In my project, i predict the atomic number and the coordinate to identify a molecule, so i need .xyz file to save my result and the point where without hydrogens is the point that need to add other side chain. ; * I also use the rdkit (ETKDG), it is result is also not fit.; * Now, i use the dataset named QM9, the origin paper shows the idea of utilize smiles to get 3D coordinate. It looks like diffcult to achieve it, but i also try to recurrence it all the time. And the all .xyz file in QM9 can convert .xyz to smiles rightly by openabel. So you have some other ideas in it? Thank you very much. Openbabel is a fantastic tool, i also hope it can become better and better. . ![image](https://user-images.githubusercontent.com/32425458/172571487-7ec24cd3-8e74-4f95-8621-568d14c13ae8.png). * @nbehrnd Ok , i will try it by Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol), Thank you.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888:537,predict,predict,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149638888,1,['predict'],['predict']
Safety,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:96,safe,safer,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675,1,['safe'],['safer']
Safety,"A confab beta tester reports:; ""When I input a gzipped file it only appears to read the first molecule. This has happened to me in the past in my own code - when I call OBConversion::Read; with the second argument as a file stream it only reads the first molecule. The trick is to; set the input stream first, then call Read with just the single OBMol& argument. It's a subtle one as it only shows up for zipped input formats, but it is to do with the fact; that when the stream argument is not null, it gets checked to see if it is zipped, and if; it has been checked before the Read simply returns false (to avoid repeated checking)."". Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1015:610,avoid,avoid,610,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1015,1,['avoid'],['avoid']
Safety,A nice example of why we should avoid duplicate functions. Could you change the signature to take const char and then it's good to merge.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302864300:32,avoid,avoid,32,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302864300,1,['avoid'],['avoid']
Safety,"A warning is issued when converting my favourite SDF file, head.sdf (in scripts/python/examples):. babel -i SDF head.sdf -o smi head.smi. ==============================; *** Open Babel Warning in OpenBabel::MDLFormat::ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 2 molecules converted; 1 warnings 34 audit log messages. The weird thing is...there is a title line!. ------------. From Geoff:. Rats. It seemed like a pretty safe fix -- add more verbose warnings to the mdlformat.cpp code when rejecting molecules. This comes when we try to read after the last $$$$ in that file. So you have read 2 molecules cleanly, and then attempt to read a 3rd.; Obviously, there isn't another molecule in the file (you hit the EOF), so it fails. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662:453,safe,safe,453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662,1,['safe'],['safe']
Safety,ADF DFTB: Add new detection string for ADF 2018,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1888:18,detect,detection,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1888,1,['detect'],['detection']
Safety,"Aaaaah my bad! It's indeed a macro, not a function... > Put all string **literals** in _T() macros. so not variables ^^'. The definition I have is similar to yours:; ```; #define __TEXT(q) L##q; #else; #define __TEXT(q) q; #endif; \\ comment; #define TEXT(q) __TEXT(q); ```. Indeed, in that same article,they say:. > `TCHAR` is #defined as either a `char` or a `wchar_t` depending on whether or not the `UNICODE` macro was defined. And, as you suggest, writing; ```; if(LoadLibrary( (PTCHAR) lib_name.c_str() )); return true;; ```; worked fine for me. However, now I have a doubt when they say:. > Never ever ever C style cast C strings from one type to another. C style casts mask very important compiler errors. Avoid C++ style casts also. Basically if you're getting type errors with your strings -- it's because you're doing something wrong. Don't try to cast around the problem. So this might not be exactly what we want... On the other hand, there is something I do not get... This `openLib()` method is implemented in the same way in both `dlhandler_win32.cpp` and `dlhandler_unix.cpp` when compiled with MinGW (in the latter, it is surrounded by `#ifdef __MINGW32__` ... `#else`). The compile error came only from `dlhandler_unix.cpp`. Is it because of some different `#include`s?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089:714,Avoid,Avoid,714,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1594#issuecomment-311684089,1,['Avoid'],['Avoid']
Safety,Abort Trap (core dump) on amd64,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592:0,Abort,Abort,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592,1,['Abort'],['Abort']
Safety,"Add [CIFuzz](https://google.github.io/oss-fuzz/getting-started/continuous-integration/) workflow action to have fuzzers build and run on each PR. This is a service offered by OSS-Fuzz where Open Babel already runs (https://github.com/google/oss-fuzz/tree/master/projects/openbabel). CIFuzz can help detect regressions and moves the fuzzing a bit further into the development pipeline, and has a variety of features (see the URL above). In the current PR the fuzzers gets build on a pull request and will run for 300 seconds.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2551:299,detect,detect,299,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2551,1,['detect'],['detect']
Safety,Add an option to the canonical SMILES format to specify the timeout.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386:60,timeout,timeout,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386,1,['timeout'],['timeout']
Safety,"Add timeout option (necessary for mols with many symmetries) and fix bug with default behavior (was not doing one to one mappings). Also, added test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2608:4,timeout,timeout,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2608,1,['timeout'],['timeout']
Safety,Added explicit spaces in output lines of MOL2 to avoid field overflowing...,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/83:49,avoid,avoid,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/83,1,['avoid'],['avoid']
Safety,"Adjust SVG title to avoid cryptic ""OBDepict"" string.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/44:20,avoid,avoid,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/44,1,['avoid'],['avoid']
Safety,"Aha! ; 1. The InChI format Is adding each bond twice, once from A->B and once from B->A.; 2. This wouldn't have been a problem except that the logic in AddBond was not adding up. It was adding virtual bonds in this case instead of just returning false immediately. I've avoided adding the bond twice in 1, and solved the logic in 2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306:270,avoid,avoided,270,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-97961306,1,['avoid'],['avoided']
Safety,"As a workaround, could I simply remove the faulty rigid fragments from the rigid-fragments.txt files and get a working (albeit slower) OpenBabel installation?. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: Geoff Hutchison <notifications@github.com>; Sent: Wednesday, March 25, 2020 3:16:21 PM; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Van Dam, Hubertus <hvandam@bnl.gov>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). Yes, we definitely want a check to detect such fragments in the future. I'll go back later today and look through the fragment generator and figure out why it created these too. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HUXXSDRYBF3LRQG2MTRJJKALANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103:590,detect,detect,590,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103,1,['detect'],['detect']
Safety,"As found in https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930, the current SSSR has a problem when removing redundant rings. The overlap is currently based on atoms instead of bonds, leading to incorrect results.; This code includes a fix for that problem, but I do not know how efficient the solution is. In addition, I have a few questions/problems regarding the testing. I added a test case to `ringtest.cpp` where I thought it belonged. However, since several other tests uses the file `test/files/attype.00.smi` this leads to a bunch of failing tests. Would it be best to rework ""my test"" to a regression test or regenerate the result files for the other failing tests (such as formalcharge and formula etc)?; In addition, this change seems to have affected canonicalization, at least I get a ton of errors in test_canonstable. If that code relies on SSSR it would be reasonable to expect this and in that case maybe a ""backwards-compability-switch"" so that the canonicalization could continue to call the old code that although not correct for SSSR-purposes should be good enough to produce stable canonicalization.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648:133,redund,redundant,133,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648,1,['redund'],['redundant']
Safety,"At the least, there should be an option to bundle the plugins into the main; .so, independently of a static build. On 4 Oct 2016 9:46 p.m., ""Jeff Janes"" notifications@github.com wrote:. On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > ; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,; or mute the thread; https://github.com/notifications/unsubscribe-auth/AACxGc3R18er8l1cbdUmtlzwhp6IwCktks5qwrs9gaJpZM4KHdph; .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311:455,redund,redundant,455,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251589311,1,['redund'],['redundant']
Safety,Avoid IndexError for plugins with empty names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/361:0,Avoid,Avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/361,1,['Avoid'],['Avoid']
Safety,Avoid `THREADS_HAVE_PTHREAD_ARG` since it is INTERNAL.; Fix #2201.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2203:0,Avoid,Avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2203,1,['Avoid'],['Avoid']
Safety,Avoid `using namespace` in headers,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2055:0,Avoid,Avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2055,1,['Avoid'],['Avoid']
Safety,"Avoid calling GetBond() when there are no bonds present. Also, reuse numbonds instead of multiple calls to NumBonds(). Fixes #1866.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1892:0,Avoid,Avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1892,1,['Avoid'],['Avoid']
Safety,Avoid logging messages that are taking time,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1714:0,Avoid,Avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1714,1,['Avoid'],['Avoid']
Safety,Avoid out-of-range access in OBMolBondBFSIter,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1892:0,Avoid,Avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1892,1,['Avoid'],['Avoid']
Safety,Avoids an extra function call on every iteration.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/12:0,Avoid,Avoids,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/12,1,['Avoid'],['Avoids']
Safety,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138:7239,abort,aborted,7239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138,1,['abort'],['aborted']
Safety,"Besides this being clearly a bug in VESTA (at worst), I think I found a workaround. I discovered that if, after doubling the cell, I click in the menu VESTA -> Utilities -> Standardization of Crystal Data and I export the CIF file, then I don't find this problem.; VESTA seems to correctly remove the contradictory symmetry operations from the file. It is hard to understand what this action does but it seems to produce the correct structure and OpenBabel doesn't complain. ; The volume and cell seems to change a little bit but maybe it is safe.; http://jp-minerals.org/vesta/archives/VESTA_Manual.pdf#91. ![image](https://user-images.githubusercontent.com/3047763/138957727-d62c5162-9115-4dbb-a97a-79dafc5eed6a.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422:542,safe,safe,542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422,1,['safe'],['safe']
Safety,"Bug report on trunk SVN (not sure is this 2.0.x or 2.1.x). Using the 1ABE.pdb file as input, the following code segfaults on Windows and gives an error message under Linux... """"""; import pybel, openbabel. obmol = pybel.readfile(""pdb"", ""1ABE.pdb"").next().OBMol. firstres = openbabel.OBResidueIter(obmol).next(). print firstres.GetName(); # Prints ASN; print firstres.GetAtoms(); # Segfault; """""". The error message is:; <Swig Object of type 'std::vector<OpenBabel::OBAtom *,std::allocator<OpenBabel::OBAtom * > > *' at 0x84343e8>swig/python detected a memory leak of type 'std::vector<OpenBabel::OBAtom *,std::allocator<OpenBabel::OBAtom * > > *', no destructor found. Regards,; Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639:539,detect,detected,539,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639,1,['detect'],['detected']
Safety,Build dir contains empty .keep file just to avoid creating it by user. Any other build files will be ignored,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1614:44,avoid,avoid,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1614,1,['avoid'],['avoid']
Safety,"By ""3D builder"", I mean software to construct 3D structures like Gaussview, Avogadro, IQmol, Spartan... Creating inputs for calculations is not the issue. The issue is precisely that these inputs don't contain the explicit multiplicity of the molecule to prevent openbabel from adding hydrogens despite being instructed not to. We can't really expect all 3D builders to ask for or guess the multiplicity of molecules. However, it seems to me like _openbabel should simply not add hydrogens with the option ""DoNotAddH""_. Specifying the multiplicity is more like a workaround. That being said, I'm not familiar with the codebase, so this might be easier said than done. Nevertheless, it is confusing and can be avoided, as demonstrated by the official `inchi` software.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840:709,avoid,avoided,709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840,1,['avoid'],['avoided']
Safety,"By the way, I think it would be a great idea to add a set of unit tests for space group detection and validation - it seems as if there are far too many unusual cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656:88,detect,detection,88,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656,1,['detect'],['detection']
Safety,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2406:1736,Detect,Detecting,1736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406,8,['Detect'],['Detecting']
Safety,"Can we do a ""git rebase"" to collapse this into one (or two) commits? Try ""git rebase -i"" for interactive rebasing:; https://help.github.com/articles/interactive-rebase. At the very least, I'd love to get rid of all these redundant ""merge branch master"" commits. They're key in your development, but merging this as-is will create a lot of unneeded commits in master. If you're confused, let me know and I can do the git-fu. Thanks -- it looks really cool!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/42#issuecomment-29436854:221,redund,redundant,221,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42#issuecomment-29436854,1,['redund'],['redundant']
Safety,Can you revise the patch to detect for '-' in the next character?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184349664:28,detect,detect,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184349664,1,['detect'],['detect']
Safety,"Chiming in here because I've run in this issue today too. I reported a similar issue in the old sourceforge issue tracker a while ago (which was probably already abandoned by then): https://sourceforge.net/p/openbabel/bugs/916/ . I was trying to compile openbabel from source on OSX, using the anaconda python distribution to link against. I used the cmake options `-DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=~/anaconda/include/python2.7/ -DPYTHON_LIBRARY=~/anaconda/lib/libpython2.7.dylib` . Importing pybel results in . ```; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6; ```. Running `otool -L _openbabel.so` shows that `libpython2.7.dylib` is linked without any prefixed path.; The problem can be fixed using `install_name_tool -change libpython2.7.dylib /Users/micha/anaconda/lib/libpython2.7.dylib`, i.e. providing the full path to the anaconda libpython. I reproduced this problem today on a fresh checkout of openbabel. BTW, installing openbabel from @patrickfuller 's conda channel also results in a segfault (which is why I resorted to compiling from source in the first place). Is there a way to have cmake instruct the linker to use the full path of `libpython2.7.dylib` as provided on the command line? This would greatly facilitate compiling pybel from source on OSX.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159409936:598,Abort,Abort,598,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159409936,1,['Abort'],['Abort']
Safety,"Compiling openBabel 2.1.1 on Linux. Compilation is ok, but cml test fails :; # sh ./cml.sh. # Testing CML support...; *** glibc detected *** double free or corruption (fasttop): 0x08c7f9c8 ***; 1..6; # CML2 with array; *** glibc detected *** double free or corruption (!prev): 0x085733f0 ***; not ok 1; # CML2 with XML version; *** glibc detected *** double free or corruption (fasttop): 0x08a859c8 ***; not ok 2; # CML1 with DOCTYPE; *** glibc detected *** double free or corruption (fasttop): 0x09bd09c8 ***; not ok 3; # CML2 arrays with namespaces; *** glibc detected *** double free or corruption (fasttop): 0x082119c8 ***; not ok 4; # Roundtripping from 2D MDL Molfile to CML and back; *** glibc detected *** double free or corruption (fasttop): 0x080c29c8 ***; not ok 5; # Roundtripping from 3D MDL Molfile to CML and back; *** glibc detected *** double free or corruption (fasttop): 0x090559c8 ***; not ok 6. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675:128,detect,detected,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675,7,['detect'],['detected']
Safety,Confirmed as a bug with aromaticity detection.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1042#issuecomment-305694135:36,detect,detection,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1042#issuecomment-305694135,1,['detect'],['detection']
Safety,Confirmed as a problem with aromaticity detection.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1132#issuecomment-305695284:40,detect,detection,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1132#issuecomment-305695284,1,['detect'],['detection']
Safety,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:45,timeout,timeout,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164,1,['timeout'],['timeout']
Safety,Creating the SMILES atom order OBPairData was taking 10% of the time of SMI->SMI conversion. I rewrote it to avoid using stringstream and I made it optional.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1710:109,avoid,avoid,109,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1710,2,['avoid'],['avoid']
Safety,"Currently an entire file is read (including all molecules) and then if ; that succeeds, the entire file is written. It might be useful to eventually ""interleave"" read and write ; operations, so if a molecule in the middle of the file is invalid, ; everything before that molecule is still translated correctly. Obviously, some error recovery tools are already available through ; the conversion framework, but in the case of a truly ""fatal"" error, or ; for formats which are difficult to find the start of the next valid ; molecule, interleaving read/write operations would help. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/45"":https://sourceforge.net/p/openbabel/feature-requests/45",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415:333,recover,recovery,333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415,1,['recover'],['recovery']
Safety,"Currently, this pull request make only some of the openbabel objects thread-safe: `OpenBabel::OBConversion` and `OpenBabel::OBGlobalDataBase`. I will keep working on this topic for the rest of the objects and update this PR. Important note: this commit will change the API of openbabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2273:76,safe,safe,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2273,1,['safe'],['safe']
Safety,"Dear OpenBabel developers.; Many thanks for your program, and sorry for avoiding the template. The problem appears in commit bf2204231bfc2bf1a97bf193fa56c3d72ff0c97b and now in master.; The issue is that the CIF file occupancy values can be treated incorrectly. ```; commit bf2204231bfc2bf1a97bf193fa56c3d72ff0c97b; Author: Alexandr Fonari <alexandr.fonari@gmail.com>; Date: Mon Mar 19 11:39:33 2018 -0400. Update mmcifformat.cpp. diff --git a/src/formats/mmcifformat.cpp b/src/formats/mmcifformat.cpp; --- a/src/formats/mmcifformat.cpp; +++ b/src/formats/mmcifformat.cpp; @@ -777,1 +777,3 @@; - occup->SetValue(token.as_number());; + double occup = token.as_number();; + if (occup <= 0.0 || occup > 1.0){; + occup = 1.0;. ```; The occupancy become 1.0 if it is 0.0. This affect supercell program. https://github.com/orex/supercell/issues/28; I would like to get a comment from @afonari about the reason of such behaviour. If there are no ""strong"" reasons for this, I propose to change the code to; ```; occup = std::max(0.0, std::min(1.0, occup));; ```. Sincerely yours,; Kirill.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2125:72,avoid,avoiding,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2125,1,['avoid'],['avoiding']
Safety,Differences in detecting ligand properties depending on it's format (mol2/sdf),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2281:15,detect,detecting,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281,1,['detect'],['detecting']
Safety,"Does openbabel provide a functionality to calculate atom chirality given a molfile representation? I guess the obchiral can only detect whether an atom is chiral or not without classification of R/S.; Thanks so much!; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2237:129,detect,detect,129,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2237,1,['detect'],['detect']
Safety,"Does someone have a clue for such compilation failure on fedora 30? . # cmake .. -DRUN_SWIG=on -DPYTHON_BINDINGS=on -DBUILD_GUI=on ; -- The C compiler identification is GNU 9.1.1; -- The CXX compiler identification is GNU 9.1.1; -- Check for working C compiler: /usr/lib64/ccache/cc; -- Check for working C compiler: /usr/lib64/ccache/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/lib64/ccache/c++; -- Check for working CXX compiler: /usr/lib64/ccache/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.9"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.3"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.4"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996:351,Detect,Detecting,351,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996,8,['Detect'],['Detecting']
Safety,"Drat, I was hoping to sneak it in. In my copious free time I will see if I can refactor the code to avoid boost, but the cmake files should be configured so obrms just isn't built if boost isn't available.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481756174:100,avoid,avoid,100,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481756174,1,['avoid'],['avoid']
Safety,"Every addition to std::vector in the bindings creates a lot of boilerplate; code and so I've avoided needlessly adding methods where a duplicate; exists. From what you say, this is also the case here. From a user; perspective, the other method should be excluded from the bindings; explicitly to avoid confusion. On 24 March 2017 at 11:24, Daniel Hogan <notifications@github.com> wrote:. > FindChildren. It seems to be overloaded with one version supporting an; > integer vector and the other supporting a vector of atom pointers. I wanted; > to use the latter version, but found there was no way to create a vector of; > Atoms. I did some digging to figure out why and found the above code that; > curiously omits OBAtom and OBAtom * from std::vector template bindings.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1551#issuecomment-288997835>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGdjeZN9hw1XqnSLbuXmZb55Ig9gtks5ro6fagaJpZM4MnkTO>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1551#issuecomment-289003303:93,avoid,avoided,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1551#issuecomment-289003303,2,['avoid'],"['avoid', 'avoided']"
Safety,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1445,safe,safer,1445,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243,1,['safe'],['safer']
Safety,Fails to properly parse an SD file and basically aborts,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693:49,abort,aborts,49,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693,1,['abort'],['aborts']
Safety,"Fair enough - it's a deliberate choice. In that case, I don't think we should change it now. I do favour prohibition however - IMO, anything that risks overwriting the input file should require an additional switch, e.g. --force or something. What about the case where you have a single input file and the same single output file, and it is a multimolecule format? Am I right in saying that this must always be an error?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797493:146,risk,risks,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797493,1,['risk'],['risks']
Safety,"First of all sorry for posting it again, I didn't know the project moved to github, so I opened two tickets at sourceforge. I'm just reposting it here since the project is here now. I'm using openbabel 2.3.2 (Linux Mint 17.1 package) and Python library installed from pip (version 1.8.2). I tried to use the Init method of OBRotorList and received the following error:. > TypeError: in method 'OBRotorList_Init', argument 2 of type 'std::string &'. Below I paste the call of the function, showing how it is in my code:. ``` python; rbonds = openbabel.OBRotorList(); temp = tempfile.NamedTemporaryFile(mode='w+t'); try:; temp.write(""[!$(#)&!D1]-!@[!$(#)&!D1] 1 2 3 4 60.0 -60.0 180.0 160.0 -160.0 90.0 -90.0 120.0 -120.0""); rbonds.Init(temp.name) # bug in openbabel 2.3.2 -- problem in swig interface; finally:; temp.close(); ```. Looking for a solution I found that the problem may be in the interface, in which an ""%include std_string.i"" may be missing (see, e.g., http://stackoverflow.com/questions/6090976/swig-python-c-typeerror-in-method-geodatabase-open-argument-2-of-type), but unfortunately I couldn't find out how to fix it in the package. Another problem is a warning related to the use of the OBRotor object. Everytime I use something from it I get:. > swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor ,std::allocator< OpenBabel::OBRotor \* > >::iterator ', no destructor found. My code is something like this:. ``` python; rbonds = openbabel.OBRotorList(); rbonds.Setup(mol); rotor = rbonds.BeginRotor(rbonds.BeginRotors()); for i in range(rbonds.Size()):; print rotor.Size(); rotor = rbonds.NextRotor(rbonds.BeginRotors()); ```. Best Regards,; Henrique",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/190:1276,detect,detected,1276,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190,1,['detect'],['detected']
Safety,"Fix confirmed for Open Babel revision 4692 using Ubuntu 11.10 with SWIG 2.0.4 and Oracle JDK 1.6.0_29. If LD_LIBRARY_PATH includes the directory containing libopenbabel_java.so and libopenbabel.so, it is not necessary to use the LD_PRELOAD trick. Of course it would be very nice to avoid the LD_LIBRARY_PATH change also. There is still an error in scripts/java/README. It refers to openbabel_java.cpp, but it should refer to openbabel-java.cpp. Original comment by: mkjensen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800541:282,avoid,avoid,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800541,1,['avoid'],['avoid']
Safety,Fix for bond order detection for azete,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2379:19,detect,detection,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2379,1,['detect'],['detection']
Safety,Fix#1331: avoid crash with Q-Chem fragment,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1820:10,avoid,avoid,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1820,1,['avoid'],['avoid']
Safety,Fixes:. Fixed detection of atomic number when coordinates in input file were set as z-matrix; Fixed detection of imaginary frequencies; New parsers of calculations:. ZTS calculation; OBElectronicTransferData extraction from TDDFT calculations; Single point energy calculation; New parsers of calculation details :. Partial charges; Orbital data; Energies; Optimization steps; Dipole moments; Restructurization of code:. Each parser in its own method; String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/214:14,detect,detection,14,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/214,2,['detect'],['detection']
Safety,Fixes:; - Fixed detection of atomic number when coordinates in input file were set as z-matrix; - Fixed detection of imaginary frequencies. New parsers of calculations:; - ZTS calculation; - OBElectronicTransferData extraction from TDDFT calculations; - Single point energy calculation. New parsers of calculation details :; - Partial charges; - Orbital data; - Energies; - Optimization steps; - Dipole moments. Restructurization of code:; - Each parser in its own method; - String constants replaced by their mnemonic names,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/213:16,detect,detection,16,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/213,2,['detect'],['detection']
Safety,Floating point exception in OpenBabel::OBGroupContrib::Predict for logP with PA0,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:55,Predict,Predict,55,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['Predict'],['Predict']
Safety,For the SD file located at http://cheminfo.informatics.indiana.edu/~rguha/problem.sdf. babel will only process 4 molecules. When I write code that tries to loop over the molecules I get a variety of messages such as. *** Open Babel Error in ReadMolecule; Error in alias block; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read atom and bond count; Expected standard 6 character atom and bond count. ==============================. Also the title does not seem to get read properly in some cases and instead of the title will print out one of the data fields. Finally my program aborts with . ==============================; *** Open Babel Error in ReadMolecule; Error in alias block; terminate called after throwing an instance of 'std::out_of_range'; what(): basic_string::substr; Aborted. Open Babel 2.2.0b1 -- Oct 11 2007 -- 09:51:39; Redhat Enterprise Linux Server 5.1; gcc 4.1.2. Reported by: @rajarshi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693:650,abort,aborts,650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693,2,"['Abort', 'abort']","['Aborted', 'aborts']"
Safety,"From Miguel Quiros Olozabal:; Charge might be safely added to isolated Cl, Br, F, I, Na, K atoms; ([Cl-], [Na+], ...). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/842:46,safe,safely,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/842,1,['safe'],['safely']
Safety,"From the release notes of 3.0.0:. > Code for handling implicit hydrogens and kekulization has been entirely replaced. As well as being accurate, the new approach is much faster. It is most likely safe to ignore the warning, but I would check the results to see that the structures look like you expect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601:196,safe,safe,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2567#issuecomment-1419070601,1,['safe'],['safe']
Safety,Gasteiger charge calculation should avoid use of GetType,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1760:36,avoid,avoid,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1760,1,['avoid'],['avoid']
Safety,Geminal diols have incorrect implicit Hs detected,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1035:41,detect,detected,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1035,1,['detect'],['detected']
Safety,Got it. It's the short-circuiting of the InChI generation that's causing the problem. Looks like the solution is to avoid this short-circuit if any options are specified to the writer. Will check in some code as soon as possible.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135#issuecomment-94251842:116,avoid,avoid,116,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135#issuecomment-94251842,1,['avoid'],['avoid']
Safety,Graph symmetry detection never finishes for PubChem molecule,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/374:15,detect,detection,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/374,1,['detect'],['detection']
Safety,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2135:855,remediat,remediate,855,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135,1,['remediat'],['remediate']
Safety,"HI Geoff, . We have managed to find a fix for this. It is rather tricky and we have posted the install instructions at. http://pymatgen.org/installation.html#installation-tips-for-optional-libraries. Maybe you could take a look and see if this is the right method. And perhaps you could modify open babel's install to better support Mac OS. . ; Shyue Ping. On Tuesday, September 24, 2013 at 8:29 AM, Geoff Hutchison wrote:. > Sorry for the long delay. For some reason, I'm not getting the bug postings by e-mail. Try installing pkg-config and see if that helps.; > http://www.freedesktop.org/wiki/Software/pkg-config/; > Supplying the path for EIGEN3 should be enough, but if things work with pkg-config, I'll be better able to find the problem. Thanks!; > [bugs:#883] (http://sourceforge.net/p/openbabel/bugs/883/) Can't compile with Eigen on Mac OS X; > Status: open; > Created: Tue Jun 11, 2013 05:07 PM UTC by Shyue Ping Ong; > Last Updated: Thu Jun 27, 2013 12:37 PM UTC; > Owner: nobody ; > I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3.; > However, it seems that eigen3 is not detected at all. When I do ; > import openbabel as ob; > ob.OBAlign ; > I get an AttributeError. Switching back to eigen2 did not work either. ; > Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere.; > SP; > Sent from sourceforge.net (http://sourceforge.net) because you indicated interest in https://sourceforge.net/p/openbabel/bugs/883/; > To unsubscribe from further messages, please visit https://sourceforge.net/auth/subscriptions/. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803569:1406,detect,detected,1406,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803569,1,['detect'],['detected']
Safety,"Hello guys !!!! i'm trying to use the following script : . #!/bin/bash; #; #SBATCH --job-name=index_human; #SBATCH --partition=all; #SBATCH --ntasks=1; #SBATCH --cpus-per-task=10; #SBATCH --mail-user=ivanamango@gmail.com; #SBATCH --cpu-bind=rank; #SBATCH --mail-type=ALL; #SBATCH --hint=compute_bound. module load STAR/2.6.0c. srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$. when i run it this is the error : ; Dec 13 08:56:22 ..... started STAR run; Dec 13 08:56:22 ... starting to generate Genome files; Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time...; Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk...; slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed; srun: Exceeded job memory limit; slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 ***; srun: Job step aborted: Waiting up to 32 seconds for job step to finish.; srun: error: falkor7: task 0: Killed. How can i resolve it ? . Thanks to everyone !!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657:1110,abort,aborted,1110,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657,1,['abort'],['aborted']
Safety,"Hello guys !!!! i'm trying to use the following script :. #!/bin/bash. #SBATCH --job-name=index_human; #SBATCH --partition=all; #SBATCH --ntasks=1; #SBATCH --cpus-per-task=10; #SBATCH --mail-user=[ivanamango@gmail.com](mailto:ivanamango@gmail.com); #SBATCH --cpu-bind=rank; #SBATCH --mail-type=ALL; #SBATCH --hint=compute_bound. module load STAR/2.6.0c. srun /opt/STAR/bin/STAR --runMode genomeGenerate --runThreadN 10 --genomeDir Genomes_STAR --genomeFastaFiles Genomi/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile GTF_files/Homo_sapiens.GRCh38.96.gtf --limitGenomeGenerateRAM 152003700778$. when i run it this is the error :; Dec 13 08:56:22 ..... started STAR run; Dec 13 08:56:22 ... starting to generate Genome files; Dec 13 08:57:27 ... starting to sort Suffix Array. This may take a long time...; Dec 13 08:57:45 ... sorting Suffix Array chunks and saving them to disk...; slurmstepd-falkor7: error: Step 1141810.0 exceeded memory limit (52917772 > 20971520), being killed; srun: Exceeded job memory limit; slurmstepd-falkor7: error: *** STEP 1141810.0 ON falkor7 CANCELLED AT 2023-12-13T08:58:22 ***; srun: Job step aborted: Waiting up to 32 seconds for job step to finish.; srun: error: falkor7: task 0: Killed. How can i resolve it ?. Thanks to everyone !!!!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2658:1136,abort,aborted,1136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2658,1,['abort'],['aborted']
Safety,"Hello, it definitely has been a while. I still find similar SWIG warnings on my Python codes (using the package from conda: `openbabel 3.1.1 py37h200e996_1 conda-forge`).; @baoilleach mentioned in #1340 that the problem is that some methods should not be used directly. However, I'm struggling to find which methods I should use in some cases.; For example, if I want to iterate over the atoms bonded to an OBAtom, what is the proper way of doing it in Python?; Currently, I'm using something similar to:. ```python; bondIterator = atom.BeginBonds(); nbrAtom = atom.BeginNbrAtom(bondIterator); connectedAtoms = []; connectedAtoms.append(nbrAtom); for i in range(2):; nbrAtom = atom.NextNbrAtom(bondIterator); connectedAtoms.append(nbrAtom); ```. However, I get:; ```; swig/python detected a memory leak of type 'OpenBabel::OBBondIterator *', no destructor found.; ```. How should I iterate over the bonded atoms in this case?. Best,; Henrique",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/190#issuecomment-943742960:780,detect,detected,780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190#issuecomment-943742960,1,['detect'],['detected']
Safety,"Here are some tests, using this script:. ``` python; import pybel; import os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:548,detect,detection,548,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,1,['detect'],['detection']
Safety,"Here's the backtrace on Linux. #0 0x00000036d4c30265 in raise () from /lib64/libc.so.6; #1 0x00000036d4c31d10 in abort () from /lib64/libc.so.6; #2 0x00000036d4c6a99b in __libc_message () from /lib64/libc.so.6; #3 0x00000036d4c729d6 in free () from /lib64/libc.so.6; #4 0x00002afc16aea38c in FreeINCHI (out=0x7fff00f24ec0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/libinchi/inchi_dll.c:112; #5 0x00002afc16aea414 in FreeStdINCHI (out=0x7fff00f24ec0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/libinchi/inchi_dll.c:126; #6 0x00002afc16d44410 in OpenBabel::InChIFormat::WriteMolecule (; this=0x2afc16f5f9c0, pOb=0xda86370, pConv=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/inchiformat.cpp:575; #7 0x00002afc16d444d8 in OpenBabel::InChIKeyFormat::WriteMolecule (; this=0x2afc16f5fa40, pOb=0xda86370, pConv=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/formats/inchiformat.cpp:811; #8 0x00002afc1645e7f9 in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl (; pConv=0x7fff00f26ab0, pFormat=0x2afc16f5fa40); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/obmolecformat.cpp:182; #9 0x00002afc16773cb1 in OpenBabel::OBMoleculeFormat::WriteChemObject (; this=0x2afc16f5fa40, pConv=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/include/openbabel/obmolecformat.h:118; #10 0x00002afc163eba97 in OpenBabel::OBConversion::Convert (; this=0x7fff00f26ab0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/obconversion.cpp:525; #11 0x00002afc163ebd43 in OpenBabel::OBConversion::Convert (; this=0x7fff00f26ab0, is=0x0, os=0x0); at /home/bcri/noboyle/tools/openbabel/nightly/openbabel/src/obconversion.cpp:398; #12 0x00002afc163ed283 in OpenBabel::OBConversion::FullConvert (; this=0x7fff00f26ab0, FileList=std::vector of length 0, capacity 0,; OutputFileName="""", OutputFileList=std::vector of length 0, capacity 0); at /home/bcri/noboyle/too",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1137#issuecomment-281801080:113,abort,abort,113,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1137#issuecomment-281801080,1,['abort'],['abort']
Safety,"Here's the new docs regarding residue information. Hopefully it's not too confusing:. > Residue information is preserved if the original OBMol is marked as having; > its residues perceived. If this is not desired, either call; > OBMol::UnsetChainsPerceived() in advance on the original OBMol to avoid copying; > the residues (and then reset it afterwards), or else call it on the new OBMol so; > that residue information will be reperceived (when requested). Oops - I've just noticed that there is no UnsetChainsPerceived(). I'm not very keen on these convenience functions - three (Set/Unset/Has) for each bit of a flag. Anyway, let's assume that an UnsetChainsPerceived() will magically appear in the near future via a PR.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1811#issuecomment-379360409:295,avoid,avoid,295,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1811#issuecomment-379360409,1,['avoid'],['avoid']
Safety,"Hey Geoff. Let me know what you think about this. It is basic, but it serves my own personal needs with it. In the ""out"" format, once ""ADF"" is detected, it now also detects the specific kind of ADF output.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1793#issuecomment-373864723:143,detect,detected,143,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1793#issuecomment-373864723,2,['detect'],"['detected', 'detects']"
Safety,"Hi All,. the builder fails on building 3d (example code below) for smiles: N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O; Message is:. terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted. Best regards,; Martin. P.S.:; * I am using ob 2.3.0.; * It works if the rotation info (@@) is removed.; * The smiles is from a well known bbb dataset: http://www.cheminformatics.org/datasets/#perm, first in list. #include <iostream>; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; #include <openbabel/builder.h>. using namespace std;; using namespace OpenBabel;. int main(int argc,char **argv); {; 	OBMol * mol = new OBMol();; 	OBConversion obconversion;; 	obconversion.SetInFormat(""smiles"");; 	//obconversion.ReadString(mol, ""C1(N=C(NC(C)C)N=C(N=1)OC)NC(C)C"");; 	obconversion.ReadString(mol,; 	""N12[C@@H]([C@@H](NC([C@@H](c3ccsc3)C(=O)O)=O)C2=O)SC(C)(C)[C@@-]1C(=O)O"");; 	cout << ""formula ""<< mol->GetFormula() << ""\n"";; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	OBBuilder builder;; 	builder.Build(*mol);; 	cout << ""Has3D: "" << mol->Has3D() << ""\n"";; 	delete(mol);; 	return 0;; }. Reported by: martinguetlein",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1051:261,Abort,Aborted,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051,1,['Abort'],['Aborted']
Safety,"Hi Noel!. Thanks for the hint, I went through the changes and applied what was still needed. The file has been updated at; http://download.yasara.org/service/yasaraformat.cpp. I should note that there was one patch that changed variables from 'int' to 'unsigned int':; https://github.com/openbabel/openbabel/commit/eb39d20558390cfb5f8597a57455e776b8780b96#diff-234aec539418d8c1bf366d8e0d0aa26e09284ebc8cf3f0a271164baa2466cee6. I don't know which exotic compiler triggered this patch, but I can safely say that efficient&productive C/C++ development becomes impossible if you cannot implicitly cast 'int' to 'unsigned int' and similar cases. I experimented a bit with the GCC options ""-Wconversion"" and ""-Wsigned-conversion"", but would have had to clutter the code with explicit type casts to compile without warning. Best regards,; Elmar",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970:494,safe,safely,494,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399#issuecomment-892438970,1,['safe'],['safely']
Safety,"Hi Noel,; The number of hydrogens in the SMILES should match the chemical formula in the second layer of the InChI, so for example, the last case (InChI=1/O/q-2) has chemical formula O and should not have any hydrogens...I think the SMILES should be [O-2] ( http://inchis.chemspider.com/Record.aspx?id=164400 ). (By the way, if you weren't aware of them, a couple of useful online tools for working with InChIs are: http://inchis.chemspider.com/Resolver.aspx and http://cactus.nci.nih.gov/chemical/structure .) In any case, this may be fixed in the latest versions of OpenBabel (I've been working with 2.2.0/2.2.1 to avoid Standard InChIs). In particular, I'm wondering if the fix for Issue 2794908 ( https://sourceforge.net/tracker/index.php?func=detail&aid=2794908&group_id=40728&atid=428740 ) addressed this. Thanks,; Greg. Original comment by: gmagoon",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793763:617,avoid,avoid,617,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793763,1,['avoid'],['avoid']
Safety,"Hi again Noel,. I must change my last remark: your ""hack"" avoiding the SER problem has some issue. Not straightforward to say why, though. To generate the bug, follow your advice: take a peptide ending with a SERINE, get the smiles string, turn it into a PDB without -d or --gen3d, then into a 3D PDB.; As you said, the file ""looks"" fine, and so does the structure. However, there must be something wrong somewhere, I'd say angles or distances, because when I prepare such generated PDB files for docking (prepare_ligand4.py, from the MGL tools kit), the output PDBQT structure is missing bonds. Mainly backbone ones, but the weirdest thing is that aromatic cycles are not generated flat (REALLY not flat, in some cases). This bug is 100% repeatable with OpenBabel 2.3.1 that I'm using. All the peptides generated through those two step PDB have the same issue, while the ones directly generated through the classic -d --gen3d from the smiles string seem to generate correct PDBQT files so far, with the MGL tools kit. . Interestingly, I found that OpenBabel 2.3.0 occasionally generated PDB files bahaving the same way, even when generated in a single -d --gen3d step. There might have been a fix made to the one-step (smiles -> 3D PDB) generation, that wasn't applied to the (no coordinate PDB -> 3D PDB) conversion. Anyway, this two-step conversion idea was worth trying, while waiting for the bug to be fixed, so thanks. I'll wait for the bug fix now. I hope Geoff's work is going well on that part!; Cheers. Original comment by: kevinrue",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801289:58,avoid,avoiding,58,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801289,1,['avoid'],['avoiding']
Safety,"Hi again,. Found the following in src/formats/mmcifformat.cpp: ; .....; .....; pmol->SetData(pCell);; if (use_fract); {; for (OBAtomIterator atom_x = pmol->BeginAtoms(), atom_y = pmol->EndAtoms(); atom_x != atom_y; ++ atom_x); {; OBAtom * atom = (* atom_x);; atom->SetVector(pCell->FractionalToCartesian(; pCell->WrapFractionalCoordinate(atom->GetVector())));; }; }; }; .....; ..... where the WrapFractionalCoordinate call is was causing the issue for me. Is it possible to avoid the wrapping if using the _atom_site_Cartn_? labels in the CIF instead?. Wonder,; Johan Westin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726#issuecomment-352011042:474,avoid,avoid,474,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726#issuecomment-352011042,1,['avoid'],['avoid']
Safety,Hi have added the safeguard on trunk with revision 5008. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802260:18,safe,safeguard,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802260,1,['safe'],['safeguard']
Safety,"Hi there!. I don't think it's so much a question on errors in the search routines, more a problem with how the searches in FastSearch files are working and the query smiles. The problem is that in SMILES/SMARTS C and c are different atoms, so they won't match. When using SMARTS, a possible way to solve this is to use [#6] instead of C and [#7] instead of N, so that the first Query would be [#6]c2ccc1ncc([#6])c([#7])c1c2. This would probably give the expected match if used like (untested); babel -s""[#6]c2ccc1ncc([#6])c([#7])c1c2"" example-1.sdf -osmi; The same is true for the second example. The ""unexpected"" hits in example 3 are due to the aromaticity detection. If you look at your query you haven't said anything on where the different bonds are located, only the atoms and that match all your hits.; Unfortunately, when using FastSearch files, you can't use SMARTS-based queries, the query needs to be proper SMILES and then I don't know how you could specify your queries to get the wanted result. Original comment by: @fredrikw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795554:659,detect,detection,659,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795554,1,['detect'],['detection']
Safety,"Hi, thank you very much for your help. I am just starting to understand the OB library. ; I am using it mainly to handle (programmatic) reads from files now, since it supports so many formats. Once in memory it is difficult to understand the ownership of stuff, so I am using it as read-only objects to avoid messing with it (constness is also strange in the library, it is used for somethings and not others). > Yeah, `obabel` opens a few hundred thousand files / streams with no leaks. The code for `obabel` is online:; > int count = Conv.FullConvert(FileList, OutputFileName, OutputFileList);; > ; > > does it make sense to load libraries on the fly and each time a Read operation is performed?; > ; > No, it doesn't, but you don't need to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:303,avoid,avoid,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['avoid'],['avoid']
Safety,"Hi,. I found a bug when trying to use OBRotor objects in Python openbabel library.; Everytime I call a method of this objects I get a warning. swig/python detected a memory leak of type 'std::vector< OpenBabel::OBRotor *,std::allocator< OpenBabel::OBRotor * > >::iterator *', no destructor found. My code is something like this:; 	rbonds = openbabel.OBRotorList(); 	rbonds.Setup(mol). 	rotor = rbonds.BeginRotor(rbonds.BeginRotors()); 	for i in range(rbonds.Size()):; 		print rotor.Size(); 		rotor = rbonds.NextRotor(rbonds.BeginRotors()). []'s. Reported by: hmcezar. Original Ticket: [openbabel/bugs/961](https://sourceforge.net/p/openbabel/bugs/961)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1340:155,detect,detected,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1340,1,['detect'],['detected']
Safety,"Hi,; I am converting the RNA PDB file built by Maestro to pdbqt. `ls 1KOC_clean.pdb | xargs /usr/local/bin/obabel -xcr -ipdb -opdbqt | tee receptor.pdbqt`. However, this conversion prints the ""ROOT"" keyword in pdbqt file and vina. ; ```. PDBQT parsing error: Unknown or inappropriate tag found in the rigid receptor.; > ROOT; ```. Although this is not openbabel related, is there any solution to avoid ROOT keyword?. Thanks!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2514:396,avoid,avoid,396,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2514,1,['avoid'],['avoid']
Safety,"Hi,; What do you mean with ""how is the edge predicted""? Is it the layout you are asking about? In general, an xyz-file will have coordinates in it, so how did you create the image? How would you like it to look?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2572#issuecomment-1438477721:44,predict,predicted,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572#issuecomment-1438477721,1,['predict'],['predicted']
Safety,"Hi,; the smi to sdf converter creates some funny atoms; in SDF which are not covered in CTFile Formats (SYMYX); At least I could not find QNB. This happens if one uses ""create 3D coordinates"" in OB 2.2.0 GUI (WIN). N#Cc1cscn1 generates. OpenBabel07080813553D. 7 6 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 C 0 0 0 0 0; -1.#IND -1.#IND -1.#IND C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; -1.#IND -1.#IND -1.#IND N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 2 0 0 0; 3 7 1 0 0 0; 4 5 1 0 0 0; 5 6 1 0 0 0; M END; $$$$. There are other examples with similar errors; see SMILES in ct0500287si20050211_120157.xls; http://www.google.com/search?num=100&hl=en&safe=active&q=ct0500287si20050211_120157.xls&btnG=Search. Cheers; Tobias. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793:760,safe,safe,760,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793,1,['safe'],['safe']
Safety,"Hi. I have a core dump with openbabel 2.0.2 (Abort trap) on OpenBSD under amd64; when running:; $ babel -icml cs2a.cml -omdl cs2a.mol. I have no idea how to fix this really, but here's a backtrace that might; give you a hint. (gdb) run -icml cs2a.cml -omdl cs2a.mol; Starting program: ; /home/ajacoutot/misc/openbabel/w-openbabel-2.0.2/openbabel-2.0.2/src/.libs/babel -icml cs2a.cml -omdl cs2a.mol. Program received signal SIGABRT, Aborted.; 0x0000000049584cea in kill () from /usr/lib/libc.so.40.3; (gdb) bt; #0 0x0000000049584cea in kill () from /usr/lib/libc.so.40.3; #1 0x00000000495c7f40 in __stack_smash_handler (func=0x595e5980 ""bool OpenBabel::XMLConversion::ReadXML(OpenBabel::XMLBaseFormat*, OpenBabel::OBBase*)"", damaged=6) at /usr/src/lib/libc/sys/stack_protector.c:89; #2 0x00000000594dde33 in OpenBabel::XMLConversion::ReadXML(OpenBabel::XMLBaseFormat*, OpenBabel::OBBase*) (this=0x48bde800,pFormat=0x598f16a0, pOb=0x4e3fc100) at xml.cpp:226; #3 0x00000000594d4ef8 in OpenBabel::XMLMoleculeFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (this=0x598f16a0, pOb=0x4e3fc100, pConv=0x7f7ffffc9e70) at xml.h:228; #4 0x00000000594d515b in OpenBabel::XMLMoleculeFormat::ReadChemObject(OpenBabel::OBConversion*) (this=0x598f16a0, pConv=0x7f7ffffc9e70) at xml.h:208; #5 0x000000004c89a5f6 in OpenBabel::OBConversion::Convert() (this=0x7f7ffffc9e70) at obconversion.cpp:491; #6 0x000000004c89a388 in OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (this=0x7f7ffffc9e70,is=0x7f7ffffc8bb0, os=0x7f7ffffc8860) at obconversion.cpp:434; #7 0x000000004c89c5ca in OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::string, std::allocator<std::string> >&) (this=0x7f7ffffc9e70, FileList=@0x7f7ffffc9e30, OutputFileName=@0x7f7ffffc9e20, OutputFileList=@0x7f7ffffc9e00) at obconversion.cpp:1096; #8 0x0000000000403f15 in main (argc=5, argv=0x7f7ffffca250) at main.cpp:340. Reported by: ajacoutot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592:45,Abort,Abort,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592,2,['Abort'],"['Abort', 'Aborted']"
Safety,How is the edge predicted? May I have the reference of this method? ; ![18](https://user-images.githubusercontent.com/95841534/220348774-d7fd1374-e694-4697-a888-f52ea86722fd.png),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2572:16,predict,predicted,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572,1,['predict'],['predicted']
Safety,"I agree that pdb is not the ideal file format for storing that kind of information.; However in this project we are dealing with a lot of pdb structures and their ligands. This prevents us from editing the files manually and is why we posted in the first place. So if possible we would like to avoid the manual editing of the ligands. We were just wondering, how much effort it was to modify openBabel such that it recognises this type of moiety. The C=N bond is perfectly flat and the bond distance (130pm) hints at a double bond, too. The software package MOE detects this successfully, but optimally we would like to stay within the openBabel framework. - best regards, Juergen. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795291:294,avoid,avoid,294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795291,2,"['avoid', 'detect']","['avoid', 'detects']"
Safety,"I am trying to get openbabel to compile on Mac OS X because I need the Python bindings. In general, I can get most of openbabel with python bindings working using the instructions I have written in this page: http://pythonhosted.org/pymatgen/installation.html#installation-tips-for-optional-libraries. Pls note that I have since upgraded to openbabel 2.3.2 and eigen3. However, it seems that eigen3 is not detected at all. When I do . import openbabel as ob; ob.OBAlign. I get an AttributeError. Switching back to eigen2 did not work either. . Can someone advise on how to get openbabel with python working properly on a Mac? I would also suggest making those instructions available somewhere. SP. Reported by: shyuep. Original Ticket: [openbabel/bugs/883](https://sourceforge.net/p/openbabel/bugs/883)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263:406,detect,detected,406,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263,1,['detect'],['detected']
Safety,"I am using openbabel 3.0.0 and I would like to convert a mol2 file to a cml file whilst maintaining the atom names in the mol2 file. For instance in the example below I would like the label 'O1' for atom 1 in the mol2 file to carry over to the cml file. However, when I do the conversion using openbabel, the names of the atoms are overwritten, so for instance ""O1"" becomes ""a1"". Is there any way I can avoid this? . Maintaining the atom names should compatible with the CML [schema](http://www.xml-cml.org/schema/schema3/), since they conform to the pattern value ""[A-Za-z][A-Za-z0-9_\.\-]*"" . My INPUT MOL2 FILE is:. @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O1 -8.7156 2.6803 0.0000 O.3 1 HOH1 -0.4105; 2 H2 -7.7456 2.6803 0.0000 H 0 HOH0 0.2052; 3 H3 -9.0389 1.9702 0.5763 H 0 HOH0 0.2052; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1. The CURRENT CML OUTPUT FILE is:; ```xml; <?xml version=""1.0""?>; <molecule id=""id*****"" xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O"" hydrogenCount=""2"" x3=""-8.715600"" y3=""2.680300"" z3=""0.000000""/>; <atom id=""a2"" elementType=""H"" hydrogenCount=""0"" x3=""-7.745600"" y3=""2.680300"" z3=""0.000000""/>; <atom id=""a3"" elementType=""H"" hydrogenCount=""0"" x3=""-9.038900"" y3=""1.970200"" z3=""0.576300""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a1 a3"" order=""1""/>; </bondArray>; </molecule>; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2120:403,avoid,avoid,403,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2120,1,['avoid'],['avoid']
Safety,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417:1021,Abort,Aborted,1021,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417,1,['Abort'],['Aborted']
Safety,"I break the -at option in a local build, and make test failed to detect; the breakage. Add a regression test for it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/183:65,detect,detect,65,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/183,1,['detect'],['detect']
Safety,"I can address as example la teobromine:; ![image](https://user-images.githubusercontent.com/335108/44854747-b3082880-ac69-11e8-9d55-e86c49bcd581.png); Updated CDK, RDkit, or Openbabel works on a Daylight-like model so it finds 10 aromatic bonds e 2 aromatic rings while basic model like implemented in prediction software Vega-cdk1.4.9 (https://www.vegahub.eu/) - , in padel-cdk 1.4.15 (http://www.yapcwsoft.com/dd/padeldescriptor/)- and like basic option in marvinsketch) reads only 5 aromatic bonds. Of course this is related to the lack of update of several software, but sometimes you need to use also old software for your work.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417322469:302,predict,prediction,302,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417322469,1,['predict'],['prediction']
Safety,"I can replicate your findings with OpenBabel 3.1.1 (dfsg-6+b1) as provided in Linux Debian 12/bookworm (branch testing). To recover the geometries _at all_, I recommend [Jmol](http://jmol.sourceforge.net/) as an alternative; here, the program recognizes 17 model geometries present. Reading a specific model (e.g., `load models ({3}) ""h2.log""`, cf. [Jmol wiki](http://wiki.jmol.org/index.php/Load/Filter) and [interactive documentation](https://chemapps.stolaf.edu/jmol/docs/?ver=14.32#loadmodels)) as well as the output (e.g., `write ""model_3.xyz"";`, cf. archive attached) equally may be scripted:. ![ezgif com-optimize](https://user-images.githubusercontent.com/19709084/161046607-e7053b1f-afb9-4a30-814c-e4c06bca2cda.gif). [model_3.xyz.zip](https://github.com/openbabel/openbabel/files/8388940/model_3.xyz.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976:124,recover,recover,124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457#issuecomment-1084470976,1,['recover'],['recover']
Safety,"I confirm that it works this way :). However do you plan to fix the bug itself in the near future? In other words, when and how could I be informed that fixed and stable code is available?. In the mean time, I don't mind designing a special-case in my pipeline, but it would make life much simpler to consider those peptides like any other... . In the meantime, thanks for this little ""hack"" avoiding the problem :). Original comment by: kevinrue",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285:392,avoid,avoiding,392,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285,1,['avoid'],['avoiding']
Safety,I created a pull request for the code that checks for these kind of fragments. This should make it easier to detect similar issues in the future.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-606766212:109,detect,detect,109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-606766212,1,['detect'],['detect']
Safety,"I fixed two problems:; - the fingerprint was being resized to 0 with an initial Clear() so nothing was returned.; - there was an off-by-one when using the atom Idx() to address AtomInfo. This was in the code to handle the nbrs, and lead to an out-of-bounds memory access (with random values sometimes appearing in the fingerprint). As a general principle, rather than subtracting one from atom indices, we should just use them as provided, and instead increase the size of the referenced data structures by 1. This avoids this sort of error, where you remember to subtract 1 in one place but not another.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1829:515,avoid,avoids,515,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1829,1,['avoid'],['avoids']
Safety,"I found the origin of the bug... there was a missing BeginModify() in CIFFormat::ReadMolecule()... Sorry, this should have been detected a long time ago (a bit strange since EndModify() was called once too many and there is a check for this ??). This is corrected in svn trunk. Could you chek & close the bug ?. Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800796:128,detect,detected,128,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800796,1,['detect'],['detected']
Safety,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:91,redund,redundant,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930,1,['redund'],['redundant']
Safety,"I have noticed that for certain species, hydrogens appear to be incorrectly added to certain species containing oxygen or nitrogen during the InChI to SMILES conversion. It is possible that there is some option that I am missing, and this is not a bug...if this is the case, please let me know how I can avoid this issue. I have pasted several (hopefully)representative examples below. If more examples are needed, I can provide them. InChI=1/C2H3N3/c1-2-4-5-3/h2H,1H2; SMILES output: [NH-]=[N+]=NC=C. InChI=1/C2HN/c1-2-3/h1H; SMILES: [NH-]=C=[CH2+]. InChI=1/C2HNO/c1-3-2-4/h2H; SMILES: [C-]#[NH+]C=O. InChI=1/CO/c1-2; SMILES: [C-]#[OH2+]. InChI=1/N2O/c1-2-3; SMILES: [NH-]=[N+]=O. InChI=1/N3/c1-3-2; SMILES: [NH-]=[N+]=[N]. InChI=1/NO/c1-2/q+1; SMILES: N#[OH2+]. InChI=1/O/q-2; SMILES: [OH2-2]. Reported by: gmagoon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813:304,avoid,avoid,304,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813,1,['avoid'],['avoid']
Safety,"I have only tested on OS X. The main thing I could see being an issue across platforms is using pkg-config to locate the Open Babel install. I added a fallback so if pkg-config fails, `/usr/local/` is guessed as the install location. If this is different across platforms, it should be possible to add some platform detection with alternative paths. I suspect this won't get a lot of use, considering it seems no one noticed setup.py has been broken for ages until Joshua fixed it a couple of weeks ago – I guess everyone just uses the cmake options when compiling. However this is useful for anyone who wants to install using pip and for virtualenv support. With regards to the name, the -python suffix seems uncommon on PyPI, seeing as by definition everything is python. If you are doing `pip install openbabel` you know you are getting python bindings. With the linux package managers I assume the -python suffix is necessary because Open Babel itself is also a package.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681:316,detect,detection,316,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33211681,1,['detect'],['detection']
Safety,"I have some probles hen converting data from g03 output to mol2. 1. I have problems with C.cat atoms ( from guanidinium ) that are not detected. In the file mol8_min.mol2, atom C25 ( index 35 ) has been assigned to C.2 and not to a C.cat.; If I do the same test with the old babel 1.6 I have the good assignation. I used :; - Linux UBUNTU; - g77 compiler; - openbabel 2.1.1. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/680:135,detect,detected,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680,1,['detect'],['detected']
Safety,"I intended to use canonical SMILES for checking input and predicted chirality as the latest commit. It worked in my local environment, but it didn't in Travis CI. I'm investigating why. I will prepare some cases where the judgement of DG and canonical SMILES does not match.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-528056695:58,predict,predicted,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-528056695,1,['predict'],['predicted']
Safety,I just created a pull request #1755 to fix this problem. I think it's the conflict behavior between ifs.peek() and ifs.tellg(). I rewrote the tail blank line removing codes to avoid the use of ifs.peek().,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1569#issuecomment-357570690:176,avoid,avoid,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1569#issuecomment-357570690,1,['avoid'],['avoid']
Safety,I just found that the position of ifs.peek() is moved 1 character forward after ifs.tellg() called. And that's the reason of issue #1569. Therefore I rewrote tail blank line removing codes to avoid use of ifs.peek().,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1755:192,avoid,avoid,192,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1755,1,['avoid'],['avoid']
Safety,"I like the concept, but I'd really like to avoid adding Boost just for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481754257:43,avoid,avoid,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1961#issuecomment-481754257,1,['avoid'],['avoid']
Safety,"I spent quite a bit of time debugging obabel on the Mac, and was seeing issues with an illegal instruction pretty early on as obabel started up. This was a pretty difficult one to debug as everything worked fine on the build machine, but I got a very generic error 14 on my laptop when trying to use the packaged obabel, in the end I found the answer through searching on Google and seeing a similar issue for Docker. CMake and the upstream compilers don't enable this by default as the binaries can be quite specific for the GPU you are building on. In this case it was a pretty new Mac Pro, and trying to run them on an older Macbook Pro laptop. The comments seem incorrect too, as they have little to do with cross compiling and more to do with optimizations for the specific CPU on the build machine. I think adding a section on optimization, and advising to turn this on there (with a big warning about the binaries being quite CPU dependent at that stage) would be great, but please consider turning this off by default to avoid having others spend time debugging strange run time errors.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279:1029,avoid,avoid,1029,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279,1,['avoid'],['avoid']
Safety,"I think I know the problem, but am currently unavailable to verify. Essentially the 2d layout code has hard-coded a max number of atoms and bonds, and it segfaults if you go above this. If you are compiling the code yourself, you can workaround by increasing the limit in lines 40 and 41. In the medium term, the code should be rewritten to avoid the need for setting these maxima. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1196#issuecomment-281802073:341,avoid,avoid,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1196#issuecomment-281802073,1,['avoid'],['avoid']
Safety,"I think it was borked when someone changed the static compiles. I use the normal build path, so I didn't detect this. Probably worth setting up some buildbots.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/159#issuecomment-97513740:105,detect,detect,105,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/159#issuecomment-97513740,1,['detect'],['detect']
Safety,I think it's safe to remove those 4 lines. Do you want to submit the PR?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462118370:13,safe,safe,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1927#issuecomment-462118370,1,['safe'],['safe']
Safety,"I think that the ultimate reason for the regression is that if you delete a bond coming off an aromatic ring (as in this code), you now need to increment the hydrogen count of the two atoms, whereas previously the hydrogen count was ""floating"" i.e. considered to adjust automatically. The fix seems fine - I just want to do something first. The second edit you've made should be unnecessary if I ""fix"" OBMol.Separate(). If the original Mol had its aromaticity perceived, then the Separate components should be returned as having their aromaticity perceived too. Aromaticity perception takes a little while so we should avoid it if possible. So let me do that first, and get back here..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374140816:619,avoid,avoid,619,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-374140816,1,['avoid'],['avoid']
Safety,"I think this is a question for one of our Conda experts. It may be that pyqt5 is bundling its own cairo, instead of using the one from condaforge (or maybe Open Babel is doing this). The whole point of a package management system like Conda is to avoid these types of problems.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2133#issuecomment-593073466:247,avoid,avoid,247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133#issuecomment-593073466,1,['avoid'],['avoid']
Safety,"I think this is the expected behaviour. We detect amino acid monomers and apparently nucleic acids too. These are PDB atom names. If you'd like us to add an option to force ""UNL"", that could be done though.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1767#issuecomment-373997867:43,detect,detect,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1767#issuecomment-373997867,1,['detect'],['detect']
Safety,"I tried installing through conda bundle. Installation is successful but when I call the package. It gives the following error in my MAC. Fatal Python error: PyThreadState_Get: no current thread; /Users/Sriram/anaconda/bin/python.app: line 3: 20610 Abort trap: 6 /Users/Sriram/anaconda/python.app/Contents/MacOS/python ""$@"" . on Linux-64 bit computer. My ipython window crashes with ""Illegal Instruction"" message",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/288#issuecomment-202986133:248,Abort,Abort,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/288#issuecomment-202986133,1,['Abort'],['Abort']
Safety,"I tried to compile openbabel from github (5f0837...) on OSX 10.9 Mavericks with python extensions, using anaconda python. By default, cmake picks Apple's libpython2.7.dylib to compile the python extension against. This can be overridden by editing the CMakeCache.txt file and setting the variables PYTHON_INCLUDE_DIR and PYTHON_LIBRARY to point to the respective anaconda python files, e.g. ```~; PYTHON_EXECUTABLE:FILEPATH=/Users/ms/anaconda/bin/python <-- cmake finds this by itself if in PATH; PYTHON_INCLUDE_DIR:PATH=/Users/ms/anaconda/include/python2.7/ <-- must be set by hand; PYTHON_LIBRARY:FILEPATH=/Users/ms/anaconda/lib/libpython2.7.dylib <-- this too.; ```~. However, after building, the openbabel module then fails to import in anaconda python, causing it to to crash:. ```~~~; $> ipython; Python 2.7.6 |Anaconda 1.9.1 (x86_64)| (default, Jan 10 2014, 11:23:15) ; [...]. In [1]: import openbabel; Fatal Python error: PyThreadState_Get: no current thread; Abort trap: 6 ; ```~~~. It seems something is wrong with the way the _openbabel.so file in the python extensions is linked:. ```~~~; $> otool -L _openbabel.so ; _openbabel.so:; 	libpython2.7.dylib (compatibility version 2.7.0, current version 2.7.0) ; 	/Users/ms/openbabel/installation/lib/libopenbabel.4.dylib (compatibility version 4.0.0, current version 4.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1); 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.0.0); ```~~~. Note that libpython2.7.dylib does not explicitely point to the anaconda python lib, but instead is specified as a simple file name. I suppose this causes the dynamic linker to use the system python lib at runtime. The system lib is from python 2.7.5, while anaconda comes with 2.7.6. The version mismatch is most likely responsible for the crash. . This mismatch can be fixed using install_name_tool to explicitely se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1296:968,Abort,Abort,968,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1296,1,['Abort'],['Abort']
Safety,"I tried to install openbabel 2.4.1 in my user folder; however, there is always error as follows. > CMake Error at src/cmake_install.cmake:48 (file):; file INSTALL cannot find; ""/home/user10/sources/openbabel-git/lib/libopenbabel.so.5.0.0"".; Call Stack (most recent call first):; cmake_install.cmake:75 (include). > make: [install] Error 1. Can someone tell me how to avoid this error?. Thank you.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1649:367,avoid,avoid,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1649,1,['avoid'],['avoid']
Safety,"I understood that the point of serialization in MyChem is to speed up; reading or writing, e.g. by avoiding perception. I think that adding this; to the core API would be interesting. But using pickling or serialisation; using an existing format doesn't help with this. On 7 March 2016 at 14:01, Maciej Wójcikowski notifications@github.com; wrote:. > I currently use mol2 files for pickling in my project; > https://github.com/oddt/oddt/blob/master/oddt/toolkits/ob.py#L480. It; > work fairly correct, and quite fast. Although it's not the ideal solution.; > The problem with code in mychem, which i have just noticed is that it; > doesn't store 3D information at all, which means that it would need lots of; > improvement.; > ; > Back to mol2-pickling, or in fact any other format. I can port the code to; > pybel so it can pickle it out of the box, but:; > - that's Python only solution (I don't need C serialization); > - is mol2 really the one to store molecules (atom typing as usual);; > i've benchamrked it vs sdf and mol2 was way faster;; > ; > It's easy and straightforward, and most probably we'd end up creating; > another file format. I didn't see it that way, but from this perspective it; > seams so. You might be right that the bottleneck is the kekulization and; > other checks.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/272#issuecomment-193257847; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985:99,avoid,avoiding,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193267985,1,['avoid'],['avoiding']
Safety,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:216,safe,safe,216,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,3,['safe'],['safe']
Safety,"I'm encountering a problem involving the OBMol::StripSalts() method. I've included some code and an example input file to describe the problem:. File 'inp.smi' is the molecule input file. This file contains only one line describing the smiles of an input molecule composed of two disconnected fragments (therefore the dot):. CC(=C)C(=O)OCCN(C)C.C=CN1CCCC1=O TIM|OVS2573256. This smiles describes a molecule composed of two disconnected fragments, of which the first (the largest fragment) does not contain a ring, while the second does. The code itself is given here:. OBConversion conv;; conv.SetInFormat(conv.FormatFromExt(""/Users/hans/Temp/inp.smi""));; OBMol* m = new OBMol();; m->Clear();; (void) conv.ReadFile(m, ""/Users/hans/Temp/inp.smi"");; m->StripSalts();; std::vector<OpenBabel::OBRing*> r(m->GetSSSR());; int s(0);; unsigned int nrings(r.size());; for (unsigned int i = 0; i < nrings; ++i); {; if (r[i]->IsAromatic()) s += +0.2244435;; }; exit(0);. When running this program, I'm getting a segmentation fault. Removing the OBMol::StripSalts() method resolves the problem, as well as modifying the input file by removing either the first of second fragment (it works fine on either of these). Analysing the problems has shown that the OBMol::StripSalts() method is correctly removing the smallest fragment (the second part of the input smiles, and which contains a ring), keeping only the first part which contains no rings. However, it seems that the OBMol::GetSSSR() method, which is called on the following line, still detects the presence of rings, and this is not correct. As a consequence, the program crashes when calling the OBRing::IsAromatic() method, since the OBRing pointer is pointing to a ring that does not exists anymore... Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/776:1532,detect,detects,1532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/776,1,['detect'],['detects']
Safety,"I'm running OpenBabel v2.3.0 on a xubuntu system v12.04.5 LTS; When I try to convert the given SDF file into a vectorial SVG file, running the following command:; >$ babel mol.sdf -osvg pic.svg. babel crash with the following error:; >\*\*\* glibc detected \*\*\* babel: munmap_chunk(): invalid pointer: 0x0000000000c52480 \*\*\*; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x7e846)[0x7fb00e48f846]; /usr/lib/libopenbabel.so.4(+0xc1b2d)[0x7fb00e0d1b2d]; /usr/lib/libopenbabel.so.4(+0xc462d)[0x7fb00e0d462d]; /usr/lib/libopenbabel.so.4(+0xd19bf)[0x7fb00e0e19bf]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel15generateDiagramEPNS_5OBMolE+0x65)[0x7fb00e0f8e25]; /usr/lib/openbabel/2.3.0/plugin_ops.so(+0xc012)[0x7fb00337f012]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x4b4c)[0x7fb00cbc4b4c]; /usr/lib/openbabel/2.3.0/svgformat.so(+0x6dc2)[0x7fb00cbc6dc2]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0xee)[0x7fb00e110fce]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1d3)[0x7fb00e114763]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x20b1)[0x7fb00e1168e1]; babel[0x40287b]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xed)[0x7fb00e43276d]; babel[0x402f51]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:06 5638697 /usr/bin/babel; 00605000-00606000 r--p 00005000 08:06 5638697 /usr/bin/babel; 00606000-00607000 rw-p 00006000 08:06 5638697 /usr/bin/babel; [...]. However, if I make all hydrogens implicit, in this way:; >$ babel mol.sdf -osvg pic.svg -d. the output is correctly generated. Reported by: silyus. Original Ticket: [openbabel/bugs/953](https://sourceforge.net/p/openbabel/bugs/953)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1333:248,detect,detected,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1333,1,['detect'],['detected']
Safety,"I'm totally fine avoiding the stringstream. I'm not so sure about making it optional.; - Regular SMILES - is the canonical atom order useful? The atoms won't be in that order; - Canonical SMILES - is the overhead that high now? As @mwojcikowski indicates, it would be useful for many reasons.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348257372:17,avoid,avoiding,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348257372,1,['avoid'],['avoiding']
Safety,"I'm using OpenBabel to perfrom substructure search in my own library. For this I'm converting my molecular structures (stored in Selection class) to OBMol using the following code:; ```; void Selection::to_obmol(OpenBabel::OBMol &mol) const; {; mol.Clear();. map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<size();++i){; auto& at = atom(i);. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(at.element_number);; oba->SetPartialCharge(at.charge);; oba->SetVector(10.0*x(i),10.0*y(i),10.0*z(i));. // Create new residue if needed; if(reslist.count(at.resid)==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(at.resid);; obr->SetChain(at.chain);; reslist[at.resid] = obr;; }. reslist[at.resid]->AddAtom(oba);; reslist[at.resid]->SetAtomID(oba,at.name);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();; ; mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }; ```. Obtained OBMol seems to be correct and consistent - it is written normally to files, reports correct number of bonds, etc. However when I'm trying to use it in substructure search it fails:; ```. void Selection::find_mapping(const Selection sel); {; OpenBabel::OBMol src,sample;; to_obmol(src);; ; //------------------------------; // (1) Variant with conversion ; sel.to_obmol(sample);; //------------------------------. //------------------------------; // (2) Variant with reading the file directly; OpenBabel::OBConversion conv;; conv.ReadFile(&sample,""sample.pdb"");; //------------------------------. OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; OpenBabel::OBIsomorphismMapper::Mappings maps;; mapper->MapAll(&src,maps);. std::cout << ""found "" << maps.size() << "" mappings"" << std::endl;. delete mapper;; delete query;; }. ```. If variant (2) is ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884:942,avoid,avoid,942,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884,1,['avoid'],['avoid']
Safety,I've added some more safety logic. Should be fixed now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063:21,safe,safety,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/946#issuecomment-281796063,1,['safe'],['safety']
Safety,"I've been looking at this issue for a while, and I didn't find any cases with strings. ; If people follows the standards of the format, it should be safe to go for a signed int.... but, it's the PDB, after all, so I wouldn't be surprised if somebody would feel the urge to put unicode characters in there.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371677480:149,safe,safe,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371677480,1,['safe'],['safe']
Safety,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008:37,redund,redundant,37,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"Ian Scott, iscott@frontier.com, Windows 7, 64-bit. When converting files from smiles, mol, mol2 ,sdf into pdbqt with the generate 3D coordinates active the molecules do not form correctly. Rings are broken and strange bonds form (as viewed in PyRx or Autodock). This problem can be avoided by performing the 3D conversion as an independent step with a different file output file type (e.g. sdf to sdf) and then converting to pdbqt without selecting the generate 3D coordinates option. Therefore, the problem is most likely in the pdbqt 3D coordinate generator. A example problem smiles string: COc1cc(cc(c1OC)OC)C(C(=O)N1CCCCC1C(=O)OC(CCCc1ccccc1)CCCc1cccnc1)(F)F	. Reported by: ianlscott1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1130:282,avoid,avoided,282,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1130,1,['avoid'],['avoided']
Safety,"If `-pthread` compilation flag is required, the file should be; ```diff; --- a/src/CMakeLists.txt; +++ b/src/CMakeLists.txt; @@ -253,13 +253,9 @@ target_link_libraries(openbabel ${libs}); if(Boost_FOUND AND (BUILD_SHARED OR BUILD_MIXED)); include_directories(${Boost_INCLUDE_DIRS}); target_link_libraries(openbabel ${Boost_LIBRARIES} ); + set(THREADS_PREFER_PTHREAD_FLAG ON); find_package(Threads REQUIRED); - if(THREADS_HAVE_PTHREAD_ARG); - target_compile_options(PUBLIC openbabel ""-pthread""); - endif(); - if(CMAKE_THREAD_LIBS_INIT); - target_link_libraries(openbabel ""${CMAKE_THREAD_LIBS_INIT}""); - endif(); + target_link_libraries(openbabel Threads::Threads); endif(); ; set_target_properties(openbabel PROPERTIES; ```. `THREADS_HAVE_PTHREAD_ARG` is INTERNAL and thus should be avoided. https://gitlab.kitware.com/cmake/cmake/-/blob/v3.7.0/Modules/FindThreads.cmake#L217-219",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2201#issuecomment-625024285:782,avoid,avoided,782,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2201#issuecomment-625024285,1,['avoid'],['avoided']
Safety,"If you can, it's best to avoid this problem by writing to a string instead of disk. You can just imagine people running the tests with ""sudo"" and creating all sorts of permissions problems. Could you describe the problem exactly - maybe I can help...?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152:25,avoid,avoid,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/311#issuecomment-225567152,1,['avoid'],['avoid']
Safety,"If you do this, it should be available through the C++ api and not just via; SWIG. IMO, the perceived need for a serialization is because reading from SMILES; is so slow. I think that speeding up SMILES reading (e.g. avoiding; kekulization and symmetry perception) would be a better win for OB, but; this requires some architectural changes.; - Noel. On 7 March 2016 at 12:46, Maciej Wójcikowski notifications@github.com; wrote:. > This is a major functionality which in my mind is missing from OpenBabel.; > The code is already included in mychem; > https://github.com/mychem/mychem-code/blob/master/src/serialization.cpp; > by @Pansanel https://github.com/Pansanel under GPL2. It's the MySQL; > cartridge for OB. The missing part is the swig definition of **getstate**; > and **setstate** which is fairly straightforward (via StackOverflow; > http://stackoverflow.com/a/19798903). But until anyone devotes their; > time into doing this, I'd like to discuss the idea. What do you think?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/272.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193250557:217,avoid,avoiding,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193250557,1,['avoid'],['avoiding']
Safety,"If you don't know how many hydrogens there should be on each atom, here are some lines taken from the pdbformat.cpp. Otherwise, use OBAtom::SetImplicitHCount(num) to avoid guessing.; ```; #include <openbabel/obfunctions.h>; // Guess how many hydrogens are present on each atom based on typical valencies; FOR_ATOMS_OF_MOL(matom, mol); OBAtomAssignTypicalImplicitHydrogens(&*matom);; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420767825:166,avoid,avoid,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420767825,1,['avoid'],['avoid']
Safety,"If you try to generate the canonical SMILES of a molecule that consists entirely of hydrogen atoms, OpenBabel gets a segmentation violation:. echo ""[H][H]"" | babel -i smi -o can. It is caused by a test in cansmilesformat.cpp that tries to avoid starting a SMILES on a hydrogen atom; if the molecule is entirely hydrogen atoms, it ends up with a NULL atom pointer and tries to use it. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/817:239,avoid,avoid,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/817,1,['avoid'],['avoid']
Safety,"If you try to use pybel to readstring an inchi, then try to write it out as an inchi again, you get a pointer error and a core dump. This is a serious error. like this:; >>> mol = pybel.readstring(""inchi"",""InChI=1S/C4H10/c1-3-4-2/h3-4H2,1-2H3\n""); >>> mol; <pybel.Molecule object at 0x7fbe5d1611d0>; >>> mol.write(); 'CCCC\t\n'; >>> mol.write(""inchi""); *** glibc detected *** python: free(): invalid pointer: 0x00007fbe5c6f14c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3e6aa75e66]; /lib64/libc.so.6[0x3e6aa7897a]; /tools/bioinfo/app/openbabel-2.3.1/lib/libinchi.so.0(FreeINCHI+0x11)[0x7fbe5a7d7701]; ...; core dump. Please investigate it to see what's going on. Reported by: annyoinglogin. Original Ticket: [openbabel/bugs/977](https://sourceforge.net/p/openbabel/bugs/977)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1356:363,detect,detected,363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1356,1,['detect'],['detected']
Safety,"If you're doing this, you may want to remove the FindSSSR() calls in the aromaticity detection -- it needs the same breadth-first analysis. That's PR#1663779 - Carbon fragments (nanotubes, diamondoid) convert VERY slowly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795770:85,detect,detection,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795770,1,['detect'],['detection']
Safety,Improve thread safety for global objects,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/381:15,safe,safety,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/381,1,['safe'],['safety']
Safety,"In both the latest stable release (2.2.1) and the SVN version (revision 3010), we failed to correctly convert an oxime moiety from PDB to MOL2 using the following command line:. babel -ipdb oxime_build.pdb -omol2 oxime_build.mol2. The N=C double bond is not detected correctly and hence, C is assigned atom type C.3 instead of C.2 (as listed in MOL2 file). Reported by: schtob",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/892:258,detect,detected,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/892,1,['detect'],['detected']
Safety,"In order to know whether a stereo OBData object is a CisTrans, etc., you need to first cast it to StereoBase and check its type. This adds the ability to cast to StereoBase to the Python bindings (there are many other casts there already). Note that users of OBStereoFacade avoid this need as there are specific functions that return the CisTrans subclass, etc. I think it's still useful to plug this hole.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2124:274,avoid,avoid,274,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2124,1,['avoid'],['avoid']
Safety,"In the Python bindings, avoid adding methods from the iterated object to the iterator itself",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1729:24,avoid,avoid,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1729,1,['avoid'],['avoid']
Safety,"In the SMILES reader, avoid allocating a BUFSIZE buffer, and the associated string copy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1728:22,avoid,avoid,22,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1728,1,['avoid'],['avoid']
Safety,"In the current implementation, when a rigid fragment is included in other fragments, it caused strange bonds. This pull request avoids this problem. The performance improved slightly judging by the Platinum dataset evaluation.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2049:128,avoid,avoids,128,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2049,1,['avoid'],['avoids']
Safety,"Inchi output mode incorrectly considers chiral centers; with symmetric layouts to be undefined. Here are the; contents of a mol file containing a chiral center which; I believe is properly defined, and which has a; perfectly equilateral layout:. -XXXX- 08290615282D. 4 3 0 0 0 0 0 0 0 0999 V2000; -1.7320 -1.0000 0.0000 F 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 1 0 0 0 0; 0 0 0 0 0; 0.0000 2.0000 0.0000 Br 0 0 0 0 0 0 0; 0 0 0 0 0; 1.7320 -1.0000 0.0000 Cl 0 0 0 0 0 0 0; 0 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 1 1 1 0 0 0; M END. Command line babel converts this to an inchi string; lacking stereochemical information, and produces the; warning:. *** Open Babel Warning in WriteMolecule; #1 Omitted undefined stereo; Ambiguous stereo: center(s). But it produces a different inchi string containing; stereochemical information, and doesn’t give a warning,; if I perturb all the angles slightly from 120 degrees:. -XXXX- 08290615282D; 4 3 0 0 0 0 0 0 0 0999 V2000; -1.7320 -0.9000 0.0000 F 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 1 0 0 0 0; 0 0 0 0 0; 0.0000 2.0000 0.0000 Br 0 0 0 0 0 0 0; 0 0 0 0 0; 1.7320 -0.9000 0.0000 Cl 0 0 0 0 0 0 0; 0 0 0 0 0; 2 3 1 0 0 0 0; 2 4 1 0 0 0 0; 2 1 1 1 0 0 0; M END. The respective inchi’s are:; InChI=1/CHBrClF/c2-1(3)4/h1H; InChI=1/CHBrClF/c2-1(3)4/h1H/t1-/m1/s1. Smiles output is the same for both:; F[C@@H](Br)Cl. I’m using:; Open Babel 2.0.2 -- Aug 16 2006 -- 17:22:44. I think the problem may be that symmetry detection,; which is appropriate for identifying undefined double; bond stereocenters, is being misapplied to chiral centers. Reported by: peterspiro",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/566:1485,detect,detection,1485,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/566,1,['detect'],['detection']
Safety,"Is ``%(NNN)`` notation standard or is proposed for addition? As per OpenSMILES, it is possible to reuse already used bond IDs, what avoids the problem, unless one needs to have >99 open rings at time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339592193:132,avoid,avoids,132,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339592193,1,['avoid'],['avoids']
Safety,"Isn't folding a one way function as hash is? You may loose some data during; folding and there is no way to recover that. ----; Pozdrawiam, | Best regards,; Maciek Wójcikowski; maciek@wojcikowski.pl. 2017-10-09 14:12 GMT+02:00 John Mayfield <notifications@github.com>:. > Yep, the use of 'folding' to a larger a size is for example with MACCS116; > doesn't fit nicely in 32 or 64 bit words which one would typically use for; > popcount.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1654#issuecomment-335139826>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACN8jSXPD85UREjkhmbiiA3kMGvx3Nphks5sqg3FgaJpZM4PtubR>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583:108,recover,recover,108,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583,1,['recover'],['recover']
Safety,"It builds fine under OSX 10.6.8. I have no info wrt 10.7.x. I rolled back from 10.8 to 10.6.8 to recover functionality, but would like (at some point) to be able to go forward to 10.8. Original comment by: do0gie",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1202#issuecomment-281802171:97,recover,recover,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1202#issuecomment-281802171,1,['recover'],['recover']
Safety,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:336,timeout,timeouts,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828,1,['timeout'],['timeouts']
Safety,"It may be that the example file is in C:\Program Files (x86)\OpenBabel-2.3.1\examples folder, which needs administrator privileges for writing in Windows 7. The default save path is the input path. I guess the problem may be similar under Linux. Future Windows releases will try avoid a new OpenBabel user coming across this difficulty. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1183#issuecomment-281801836:279,avoid,avoid,279,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1183#issuecomment-281801836,1,['avoid'],['avoid']
Safety,"It might be better to %ignore the element constants with swig and add them; natively in python, etc. It's slow crossing over to C++ for these. This; will also avoid the need for a rename maybe. On 17 Jan 2018 16:49, ""David Koes"" <notifications@github.com> wrote:. > The goal here is to map the API name to how people think. ""Is this atom a; > carbon"" vs ""does this class have an atomic number field equal to a; > predefined constant"". I'm also trying to ease the transition from the; > helper methods to a more general method. Along with this, people think of; > elements using both the names and the symbols, hence the reason to provide; > both.; >; > Personally, I think usefulness is a valuable trait in an API.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1754#issuecomment-358367165>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGcC4H8hvfgM_xRBkcj-f9_mXt69Qks5tLiSmgaJpZM4Rd0JU>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358745208:159,avoid,avoid,159,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-358745208,1,['avoid'],['avoid']
Safety,"It would be nice to have some method of finding the maximal common substructure, to look for graph isomorphism directly (rather than calculating the InChI, or canonical SMILES), and clique detection (I think this is related to maximal common substructure). It is common for users to want to find common substructures in a dataset of active compounds. Noel. Reported by: @baoilleach. Original Ticket: ""openbabel/feature-requests/128"":https://sourceforge.net/p/openbabel/feature-requests/128",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1497:189,detect,detection,189,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1497,1,['detect'],['detection']
Safety,It's the binary obabel and other tools + python parts. I can see that all format files are linked in windows to one (if I remember correctly) and they seam to be highly redundant on Linux. The same (i.e small size) is on OSX. Just review the libraries in my conda packages [here](https://anaconda.org/mwojcikowski/openbabel/files). *format.so files on OSX are ~10 times smaller than Linux counterparts. I think it's a linker problem which might be overcome by GCC (?).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251384538:169,redund,redundant,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251384538,1,['redund'],['redundant']
Safety,"Just FYI, I was asking Roger about this. According to http://libcxx.llvm.org/, libc++ applies the ""short string"" optimization, which involves placing the string itself into the vector (if it's smaller than a pointer to a string) rather than just a pointer to the string. On resizing, this will cause the c_str() to be moved. I asked him how we could have detected this and he thought that running it through valgrind should have flagged this up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448:355,detect,detected,355,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/62#issuecomment-32486448,1,['detect'],['detected']
Safety,"Just like you can re-use an OBMol, it would be nice to be able to reuse a std::vector as there might be some performance benefit both from avoiding creating the variable again in Python, and from avoiding some mallocs on the C++ side. With this in mind, I've commented out the SWIG directive to ignore the .clear() method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1834:139,avoid,avoiding,139,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1834,2,['avoid'],['avoiding']
Safety,"Just reran the timings. Locally, based on master + AvoidSSSR, IsOption takes 3.8%. With this change, it's 2.0%, with 0.6% from BuildCanonTree, 0.3% from WriteMolecule, and 0.3% from CreateCansmiString. One thing to think about is whether we could speed up IsOption itself, e.g. think about what sort of std::map we use, or whether to use a map at all for single letter boolean options. If you have no issues, I think for the moment that I'm happy with this PR as it is, and leave the more complicated issue of retaining state for another day.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349895870:51,Avoid,AvoidSSSR,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718#issuecomment-349895870,1,['Avoid'],['AvoidSSSR']
Safety,"Just to add my 2c to the discussion on atom typing. My recommendation would be to avoid SMARTS and do the atom typing in code. It will be faster, but I think also clearer and less prone to errors. You can find examples of both approaches in the Open Babel codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015:82,avoid,avoid,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015,1,['avoid'],['avoid']
Safety,"Just to clarify first, the string is the SMILES output order rather than the canonical atom order. Even where it is a regular SMILES, the output order may not be the order of the atoms in the molecule. I don't see the downside to making it optional. It avoids (a) the string generation, (b) the original vector generation (though this PR doesn't address that), (c) a minor slowdown in GetData() due to the additional entry, (d) the memory footprint of the OBPairData(). Sure, it might not be much, but why do it at all? Once you start looking at larger molecules, these are going to add up and I would expect that they will affect the size of the biggest molecule we can handle.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348500421:253,avoid,avoids,253,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1712#issuecomment-348500421,1,['avoid'],['avoids']
Safety,Large Ring not detected during OBMolRingIter,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1858:15,detect,detected,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1858,1,['detect'],['detected']
Safety,"Line 208 of molchrg.cpp has:; ```; if (EQ(atom->GetType(),""Npl"") || EQ(atom->GetType(),""Nam"")); ```; Gasteiger charge calculation should always return the same results for the same structure. However, the string returned by GetType() is set to an arbitrary value by an atom typer (or indeed the user), and so the results will change. Line 208 should be rewritten to avoid using GetType(). For example, it could call a function that checks whether the atom is nitrogen, and checks the type explicitly using Open Babel function calls.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1760:366,avoid,avoid,366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1760,1,['avoid'],['avoid']
Safety,"Logged In: NO . Geoff: I thought the STL iterators where introduced to avoid this problem,; shouldn't we be using them instead of ordinary loops?. Richard. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550:71,avoid,avoid,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809550,1,['avoid'],['avoid']
Safety,"Logged In: NO . See ATOM record in the PDB Format Description below.; http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_fra; me.html. According to the description, coordinates should be ; formatted as F8.3, ; i.e. 4 digits before the decimal point, 3 digits after the ; point.; This can represent -999.000 to 9999.000, i.e. 11000 ; Angstrom.; I think it is enough for most purposes. Your problem can be avoided by adding say 5000 to the z ; coordinate values. Takaaki Fukami. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138:410,avoid,avoided,410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776138,1,['avoid'],['avoided']
Safety,"Logged In: NO . The PSA calculation in SVN already uses the JOELib2 parameter files and is basically a translation. The reason why I used PSA and logP class is that it would be possible to add extra algorithms to calculate these properties. But shared GroupContribution class would make sense:; - avoid bugs in code that is quite similar; - add other JOELib properties that use GroupContribution (MR, ??). I'll implement this as a OBGroupContribution class. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058:297,avoid,avoid,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810058,1,['avoid'],['avoid']
Safety,"Logged In: NO . The maximum common substructure detection algorithm; described by Krissinel and Henrick in Software: Practice and; Experience; Volume 34, Issue 6 , Pages 591 - 607, is easy to implement; and reasonably fast for small (drug-size) molecules. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026:48,detect,detection,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810026,1,['detect'],['detection']
Safety,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:438,safe,safe,438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569,1,['safe'],['safe']
Safety,Logged In: YES ; user_id=1189615; Originator: NO. Thank you for taking the trouble to providing such a detailed description. There is more than one bug here.; The SMILES parser was not ordering the atoms correctly when one or more of the atoms attached to a chiral center was a ring closure.; The loss of chiral info occurred in FindChiralCenters(). Calling this was unnecessary and the SMILES parse now avoids this by calling SetChiralityPerceived().; These two corrections are in smilesformat.cpp rev 2065 (which compatible with v2.1.1) and SMILES to InChI should now be ok. There still seems to be a bug in Canonical SMILES output and this has not yet been corrected. The third set of molecules listed in the original bug report are examples. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558:404,avoid,avoids,404,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558,1,['avoid'],['avoids']
Safety,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:196,detect,detect,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439,1,['detect'],['detect']
Safety,"Logged In: YES ; user_id=1444119. This may be related to the SSSR detection in rings.c. It; appears to take exponential time O(K^R) where R is the; number of rings in a group. Fullerenes with 60 rings work,; but past about 72 rings the exponential time seems to be; prohibitive. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615:66,detect,detection,66,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615,1,['detect'],['detection']
Safety,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:219,avoid,avoid,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737,1,['avoid'],['avoid']
Safety,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:1283,predict,prediction,1283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,1,['predict'],['prediction']
Safety,"Logged In: YES ; user_id=169818. You can convert the TPSA calculation to OpenBabel:; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/algo/contribution/package-summary.html; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/data/GroupContributionHolder.html. It is based on SMARTS and because OpenBabel uses the same; expert systems, the prediction should have the same quality. Kind regards, Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054:381,predict,prediction,381,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054,1,['predict'],['prediction']
Safety,"Logged In: YES ; user_id=21420. I'm closing this. Many of these flags are either now supported in Open ; Babel or auxiliary obtools (e.g., obfit) or can safely be ignored, IMHO. If ; users request them, they can be added later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655:153,safe,safely,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655,1,['safe'],['safely']
Safety,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:337,redund,redundant,337,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245,1,['redund'],['redundant']
Safety,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:413,safe,safely,413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571,1,['safe'],['safely']
Safety,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:166,redund,redundant,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311,1,['redund'],['redundant']
Safety,"Logged In: YES ; user_id=21420. This is now fixed -- the coordinates are checked, and translated if needed to ; avoid this situation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139:112,avoid,avoid,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139,1,['avoid'],['avoid']
Safety,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:146,recover,recovers,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506,1,['recover'],['recovers']
Safety,"Logged In: YES ; user_id=21420; Originator: NO. Excellent. I'm going to mark this bug as closed. If Debian has an issue, I hope they will open a new bug. To be safe, can you tell me if any other bindings are still close to causing compile problems?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570:160,safe,safe,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570,1,['safe'],['safe']
Safety,"Logged In: YES ; user_id=21420; Originator: NO. This is actually a duplicate of PR#1663779. We call SSSR too frequently, and these calls are extremely slow and costly on fullerene-type structures. Ring and aromaticity perception need to avoid SSSR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827:237,avoid,avoid,237,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827,1,['avoid'],['avoid']
Safety,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:341,detect,detection,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076,1,['detect'],['detection']
Safety,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:326,safe,safer,326,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879,1,['safe'],['safer']
Safety,"Logged In: YES ; user_id=573515; Originator: NO. I can't speak for Debian and their m68k timeout problem, but ppc64 builds fine now (I backported the patch from SVN to b5):; http://koji.fedoraproject.org/koji/buildinfo?buildID=51921. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569:89,timeout,timeout,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569,1,['timeout'],['timeout']
Safety,"Logged In: YES ; user_id=850620; Originator: YES. Interestingly, if I change ""sub dl_load_flags { 0x01 }"" to ""0x00"" in the Makefile, and run the same perl script, it doesn't abort but gives some warnings:; oboyle@calvin:~/not-backed-up/openbabel-trunk/scripts/perl/examples$ perl tmp.p; l; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/pubchem.so did not load properly. ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/xmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cdxmlformat.so did not load prop; erly. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262:174,abort,abort,174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262,1,['abort'],['abort']
Safety,Logged In: YES ; user_id=851435; Originator: NO. This works fine here - I believe this is the same bug as the one I just fixed if by type the bug reporter means bond order. The problem was that the CML format was using atoi to convert a single character to an integer. This conversion worked on many platforms but on some did not as the string passed to atoi was a single character (i.e. not null terminated). I think that this is probably safe to mark as closed. To be honest my bug was a duplicate of this bug I think. See PR 1975137. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320:440,safe,safe,440,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320,1,['safe'],['safe']
Safety,MSVC gives a warning about:; src\charges\eqeq.cpp(98): warning C4805: '!=' : unsafe mix of type 'bool' and type 'const double' in operation. ```; if (!_ionizations[1][0] != hi_0); ```. Double negative? (Pun intended),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/173:77,unsafe,unsafe,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/173,1,['unsafe'],['unsafe']
Safety,"Mac OS X 10.9 Mavericks changes the default C++ library from libstdc++ to libc++, which provides C++11 library meaning things need to be moved out of the `tr1` namespace. In these changes, `#ifdef _LIBCPP_VERSION` is used to detect whether libc++ is being used, and if so, alternative includes are provided. Additionally, a recent change to `parsmart.cpp` has been reverted due to it causing segmentation faults. I'm not sure if this is a widespread issue, or just a problem when using libc++. Matt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/34:225,detect,detect,225,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/34,1,['detect'],['detect']
Safety,"Mac OS X uses Unix line endings, since ~2001. I think we're safe.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1706#issuecomment-347042525:60,safe,safe,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1706#issuecomment-347042525,1,['safe'],['safe']
Safety,Make openbabel objects thread-safe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2273:30,safe,safe,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2273,1,['safe'],['safe']
Safety,"Maximal common substructure, graph isomorphism,clique detect",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1497:54,detect,detect,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1497,1,['detect'],['detect']
Safety,Minor speedup to avoid repeated calls to IsOption by caching some options,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1718:17,avoid,avoid,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1718,1,['avoid'],['avoid']
Safety,"Nothing wrong with six, per se. We avoid adding dependencies unless; necessary. On Sun, 5 Apr 2020, 12:15 Maksim Rakitin, <notifications@github.com> wrote:. > Why is six a problem? It properly takes care of the py2->py3 transition,; > is available for all platforms on PyPI and conda.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/2157#issuecomment-609399897>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGNKEZRXKSMNTC6HR2LRLBR3ZANCNFSM4L4LAHWQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609406193:35,avoid,avoid,35,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157#issuecomment-609406193,1,['avoid'],['avoid']
Safety,"OBAromaticTyper, OBPhModel, OBAtomTyper, OBRingTyper are now all thread-safe (I believe), with only minimal changes needed for all but OBAromaticTyper. I've also tided up the use of some externs in residue.cpp/.h, which were probably not a problem but it's good to eliminate suspects from our enquiries. NOT DONE: chains.cpp has several static variables, which will cause problems. This is a bit of work; hence, this pull request with the low-hanging fruit.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/381:72,safe,safe,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/381,1,['safe'],['safe']
Safety,"OBAtomAtomIter. Iterator over the atoms of an OBAtom. On Thu, 14 Oct 2021, 22:20 Henrique Musseli Cezar, ***@***.***>; wrote:. > Hello, it definitely has been a while.; >; > I still find similar SWIG warnings on my Python codes.; > @baoilleach <https://github.com/baoilleach> mentioned on #1340; > <https://github.com/openbabel/openbabel/issues/1340> that the problem is; > that some methods should not be used directly.; >; > However, I'm struggling to find which methods I should use in some cases.; > For example, if I want to iterate over the atoms bonded to an OBAtom, what; > is the proper way of doing it in Python?; > Currently, I'm using something similar to:; >; > bondIterator = atom.BeginBonds(); > nbrAtom = atom.BeginNbrAtom(bondIterator); > connectedAtoms = []; > connectedAtoms.append(nbrAtom); > for i in range(2):; > nbrAtom = atom.NextNbrAtom(bondIterator); > connectedAtoms.append(nbrAtom); >; > However, I get:; >; > swig/python detected a memory leak of type 'OpenBabel::OBBondIterator *', no destructor found.; >; > How should I iterate over the bonded atoms in this case?; >; > Best,; > Henrique; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/190#issuecomment-943742960>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLTFRM5LVIJ6O5ERXTUG5CSZANCNFSM4BIEHN6Q>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/190#issuecomment-944033542:950,detect,detected,950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/190#issuecomment-944033542,1,['detect'],['detected']
Safety,"OBExtensionTable::TypetoMIME copies the MIME type into; a buffer which size is unknown. This is unsafe and; should be changed. The solution might be to add a; length parameter to the method.; From the user's point of view, the buffer used must be; larger than the length of the largest mime-type known; by OpenBabel and this might change when new types are; added. Reported by: jbrefort. Original Ticket: ""openbabel/feature-requests/28"":https://sourceforge.net/p/openbabel/feature-requests/28",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397:96,unsafe,unsafe,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397,1,['unsafe'],['unsafe']
Safety,OBExtensionTable::TypetoMIME is unsafe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397:32,unsafe,unsafe,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397,1,['unsafe'],['unsafe']
Safety,"OK, so that is not an option then. The only remaining viable option that I can see is to create a new manipulator class that contains all the functionality (in a consistent way) whilst leaving the current API unchanged. Access to the functionality already part of OBMol could be realized via wrapper methods in the new class. That way, the current API remains fully intact while avoiding an arbitrary separation of functionality. One might add a ""warning"" (possibly in comment-form) to the manipulation methods that are currently part of OBMol to tell the users not to use them anymore if it can be avoided. Obviously, whether or not to introduce such a warning is not for me to decide. Also, I did not mean that SetDihedralAngle should replace SetTorsion, but rather that it be provided as an alternative to SetTorsion as the latter is a bit awkward to use via the language bindings, IMHO. It could be provided within the new class if that route is taken.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716:379,avoid,avoiding,379,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716,2,['avoid'],"['avoided', 'avoiding']"
Safety,"Okay, I tried out something new. I noticed that the top part of CMakeLists.txt and formats.cmake are almost identical. To avoid having people re-write the formats that they add into both (and consequently avoid the problem of people forgetting to do so), I copied over the top portion of CMakeLists.txt to formats.cmake, and now static and dynamic builds both include formats.cmake. There were different instructions for shared vs static builds for only a few formats. For Inchi, I just wrapped the part that was in the shared build with a ""if(BUILD_SHARED)"" and the static part in the ""elseif(WITH_STATIC_INCHI)"" section. For LIBXML2, they were identical, so I just made sure that it runs when the proper conditions are set. For GenBankFormat, that one was only built statically (this is because it uses a function from the fasta format, and it can't build dynamically because it doesn't link to it). So I just wrapped it in ""if(NOT BUILD_SHARED)"". What do you think?. I tested this for both dynamic and shared builds, and I was able to convert formats just fine with the resulting obabel executables (I tried cml, inchi, and xyz for both).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270:122,avoid,avoid,122,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270,2,['avoid'],['avoid']
Safety,"On Tue, Oct 4, 2016 at 6:16 AM, Maciej Wójcikowski <notifications@github.com. > wrote:; > ; > It's the binary obabel and other tools + python parts. I can see that all; > format files are linked in windows to one (if I remember correctly) and; > they seam to be highly redundant on Linux. The same (i.e small size) is on; > OSX. Just review the libraries in my conda packages here; > https://anaconda.org/mwojcikowski/openbabel/files. *format.so files on; > OSX are ~10 times smaller than Linux counterparts.; > ; > I think it's a linker problem which might be overcome by GCC (?). It would be nice to fix this on Linux (although I don't know how to). I; don't care so much about the size, but the process startup time of obabel; can be pretty bad as it loads all those files. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387:269,redund,redundant,269,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/349#issuecomment-251508387,1,['redund'],['redundant']
Safety,"On the trunk (after I check in my latest), Perl bindings are identical to Python, and compile and install fine. However... make test gives:. PERL_DL_NONLAZY=1 /usr/bin/perl ""-MExtUtils::Command::MM"" ""-e"" ""test_harness(0,; 'blib/lib', 'blib/arch')"" t/*.t; t/atom.............ok; t/bond.............ok; t/conversion.......ok 3/9*** glibc detected *** double free or corruption (!prev; ): 0x082721c8 ***; t/conversion.......dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/data.............ok; t/format...........ok 1/3*** glibc detected *** double free or corruption (!prev; ): 0x0820a048 ***; t/format...........dubious; Test returned status 0 (wstat 6, 0x6); after all the subtests completed successfully; t/internalcoord....ok; t/mol..............ok; t/residue..........ok; Failed Test Stat Wstat Total Fail Failed List of Failed; -------------------------------------------------------------------------------; t/conversion.t 0 6 9 0 0.00% ??; t/format.t 0 6 3 0 0.00% ??; Failed 2/8 test scripts, 75.00% okay. 0/35 subtests failed, 100.00% okay.; make: *** [test_dynamic] Error 255. The main error (or at least one of them) is that the following code gives an error:; ============= ; #!/usr/bin/perl. use Chemistry::OpenBabel;. my $obConversion = new Chemistry::OpenBabel::OBConversion;. Noel; ========= Error message ; *** glibc detected *** double free or corruption (!prev): 0x081cb360 ***; Aborted. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720:336,detect,detected,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720,4,"['Abort', 'detect']","['Aborted', 'detected']"
Safety,"One more comment -- discussion with friends suggested ~ 14 carbons at the max for aromatic detection. Any longer than that and it's not aromatic, even with the 4n+2 electron rule. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795771:91,detect,detection,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932#issuecomment-281795771,1,['detect'],['detection']
Safety,"One more comment:; Can any of the suggested tools detect, the fragment is iont ?; I need to make the whole procedure automatic ...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091496606:50,detect,detect,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2091496606,1,['detect'],['detect']
Safety,"One more idea with this. Instead of containing imolecule.min.js with openbabel itself, we could install from the internet when the function is first used. Basically:. ```; if not installed:; get from openbabel/imolecule; cp imolecule.min.js notebook_install_directory; ```. It avoids the mess of having to figure out where to put this file, and still enables local usage after at least one remote use. If this is a better idea, I can revert `pybel/__init__.py` to `pybel.py`, delete `imolecule.min.js`, and change the pybel logic to accommodate this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652:277,avoid,avoids,277,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652,1,['avoid'],['avoids']
Safety,"OpenBabel's format conversion options (cf. section 3.2) include `-p` for a protonation in function to a user-defined pH value. As such, the safer approach is to use the complete syntax, i.e. a pattern like `-p 1` (equivalent for pH = 1), `-p 7` (equivalent for pH = 7), etc. According to section 3.3 (examples) of the current documentation, the bare `-p` implicitly assumes a pH value of 7.4 ([online reference](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#examples)). Cross-checking with the [NIH PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html), the does the SMILES string shown by you . `CN1C[C@@\H](Nc2nc3ccn(C)c3c(=O)n2C)C[C@@\H](c2ccccc2)C1`. yields an unusual structure representation of the stereogenic centres:. ![sketcher](https://user-images.githubusercontent.com/19709084/115306687-b7095180-a157-11eb-874f-89116c60f753.png). Check if the SMILES string. `CN4C[C@H](NC2=NC1=C([N](C=C1)C)C(=O)N2C)C[C@H](C3=CC=CC=C3)C4`. represents the correct diastereoisomer of your trarget structure:. ![sketcher_b](https://user-images.githubusercontent.com/19709084/115306969-17988e80-a158-11eb-92e8-86f922e3fbb0.png). (Perhaps a typo, but the recommended call of OpenBabel from the CLI is initiated by `obabel`; `openbabel.obabel` will not work.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-822807646:140,safe,safer,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-822807646,1,['safe'],['safer']
Safety,Openbabel 2.3.2 testsuite fails on AArch64 (64-bit ARM) under Fedora and Ubuntu distributions:. The following tests FAILED:; 	 10 - rotor_Test (Failed); 	 23 - inchiSteffen_PubChem.smi_Test (Timeout); 	 54 - pytest_sym (Timeout). I looked into rotor test and it looks like issue is in OBRotor::CalcTorsion method. I added bunch of std::cout calls there and compared results with x86-64:. <pre>; AArch64 x86-64. 1: 1:; 1: _torsion[0] = 6 1: _torsion[0] = 6; 1: _torsion[1] = 9 1: _torsion[1] = 9; 1: _torsion[2] = 12 1: _torsion[2] = 12; 1: _torsion[3] = 15 1: _torsion[3] = 15; 1: 1:; 1: v1x = -1.31002 1: v1x = -1.31002; 1: v1y = -0.796717 1: v1y = -0.796717; 1: v1z = -0.034437 1: v1z = -0.034437; 1: v2x = -1.21398 1: v2x = -1.21398; 1: v2y = 0.93634 1: v2y = 0.93634; 1: v2z = 0.043099 1: v2z = 0.043099; 1: v3x = 0.440074 1: v3x = 0.440074; 1: v3y = 1.46771 1: v3y = 1.46771; 1: v3z = 0.0653222 1: v3z = 0.0653222; 1: 1:; 1: c1x = -0.00209297 1: c1x = -0.00209297; 1: c2x = -0.00209297 1: c2x = -0.00209297; 1: c1y = 0.0982663 1: c1y = 0.0982663; 1: c2y = 0.0982663 1: c2y = 0.0982663; 1: c1z = -2.19382 1: c1z = -2.19382; 1: c2z = -2.19382 1: c2z = -2.19382; 1: c3x = -1.18684e-16 1: c3x = 6.66134e-16; 1: c3y = 1.0024e-16 1: c3y = -4.70977e-16; 1: c3z = 4.61789e-18 1: c3z = -2.17654e-17; 1: 1:; 1: c1mag = 4.82251 1: c1mag = 4.82251; 1: c2mag = 4.82251 1: c2mag = 4.82251; 1: costheta = 1 1: costheta = 1; 1: ang = -0.000447214 1: ang = 0.000447214; 1: 1:; 1: -0.000447214 1: 0.000447214; </pre>; Same set of tests fail on PPC64 but I did not checked is it same issue. Reported by: hrw-redhat. Original Ticket: [openbabel/bugs/927](https://sourceforge.net/p/openbabel/bugs/927),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1307:191,Timeout,Timeout,191,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1307,2,['Timeout'],['Timeout']
Safety,"Openbabel version 3.1, and perhaps former versions looking at ring-fragments.txt file, mis-identifies aromatics when O=C1C=COC=C1 ring fragments are present. Instead of the quinoidal structure, openbabel converts it to O=c1ccocc1, which is certainly wrong. With version 3.1 there is no way even to convert it to Kekule form, which could fix this problem as it could not distribute the bonds correctly. With increasing version number it is a step back in functionality. Wrong way to go honestly. Anyone knows if it is possible to fix this with modifying the bondtyp.txt file or some other?; The problem may originate from Geoff Huchinson's years back statement and aromatic detection implementation, that out-of ring double bonds to an aromatic carbon does not break aromaticity of the ring. It certainly does. That C1 carbon now has too many electrons and bonds of course. An xyz file is below that fails. If you would look at the same molecule with Avogadro, it detects the bonds perfectly. Perhaps they don't use openbabel for bond-detection, only for molecule conversion. ; ----; 17. C 2.55040 -0.73410 0.11530; C 1.24130 -0.01430 -0.01140; C 1.16330 1.30960 -0.24480; O -0.00100 1.99450 -0.36510; C -1.16460 1.30860 -0.24470; C -1.24140 -0.01540 -0.01130; C 0.00030 -0.79380 0.12670; O 0.00090 -2.00280 0.34090; C -2.54980 -0.73650 0.11560; H 3.39890 -0.05810 -0.00790; H 2.61890 -1.53020 -0.63070; H 2.62260 -1.22050 1.09180; H 2.01430 1.96810 -0.36130; H -2.01620 1.96620 -0.36110; H -2.61770 -1.53250 -0.63070; H -2.62140 -1.22310 1.09190; H -3.39900 -0.06120 -0.00740",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2263:673,detect,detection,673,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263,3,['detect'],"['detection', 'detects']"
Safety,"Or if a specific format needs to handle uppercase, e.g. xyz, it should; handle it itself. IMO, this function should focus on converting atomic; symbols (Ca, not ca or CA), and avoid the particulars of parsing various; file formats. On Sat, 20 Mar 2021, 18:27 Geoff Hutchison, ***@***.***>; wrote:. > I think we should be a bit cautious considering PDB parsing and others; > sometimes have weird atom naming (e.g., CA != calcium).; >; > I suggested to @dlf57 <https://github.com/dlf57> that we target common,; > unambiguous cases (e.g., CL = Cl, BR = Br, etc.); >; > I'm open to debate about enabling all upper-case two-letter parsing. For; > example is CA *always* calcium?; >; > I suppose we can go for it and target the bug reports that come later.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2333#issuecomment-803439746>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGMOFO3VSFNCZY6BMSTTETSJJANCNFSM4ZC3WLVQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803550378:176,avoid,avoid,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803550378,1,['avoid'],['avoid']
Safety,Originally thought to be a CIF problem (http://sourceforge.net/p/openbabel/bugs/742/) but the problem persists. Script attached should randomly reproduce the error. Generated it with openbabel 2.3.2 built on; `gcc (GCC) 4.4.5 20110214 (Red Hat 4.4.5-6)`; getting the following error:. *** glibc detected *** python: double free or corruption (!prev): 0x0000000000f281c0 ***; ======= Backtrace: =========; /lib64/libc.so.6[0x3aa0275716]; /home/me/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x6cb)[0x7ffff13c805b]; /home/me/lib/_openbabel.so(+0x93e38)[0x7ffff1765e38]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x60db)[0x7ffff7d1556b]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalFrameEx+0x563a)[0x7ffff7d14aca]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCodeEx+0x88e)[0x7ffff7d1691e]; /home/me/lib/libpython2.7.so.1.0(PyEval_EvalCode+0x32)[0x7ffff7d16a32]; /home/me/lib/libpython2.7.so.1.0(PyRun_FileExFlags+0xb0)[0x7ffff7d364d0]; /home/me/lib/libpython2.7.so.1.0(PyRun_SimpleFileExFlags+0xdc)[0x7ffff7d3669c]; /home/me/lib/libpython2.7.so.1.0(Py_Main+0xc5c)[0x7ffff7d4c0ec]; /lib64/libc.so.6(__libc_start_main+0xfd)[0x3aa021ec9d]; python[0x400649]. Also reproduced the error with openbabel 2.3.2 built with; `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)`; getting the following error:. Python(1529) malloc: *** error for object 0x7fe4ba47bf70: pointer being freed was not allocated. First generated the error for openbabel 2.3.1 as well built with the same gcc's above. Reported by: pierrelb. Original Ticket: [openbabel/bugs/867](https://sourceforge.net/p/openbabel/bugs/867),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1247:295,detect,detected,295,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1247,1,['detect'],['detected']
Safety,"Point a) I would describe this task as ""extend what obabel already can do""; Point b) I'm not aware if RDKit offers an interface to Materials Studio / .bgf files. The suggest to use multiple tools (the .sdf reconstruction with xyz2mol/RDKit, the preparation of .bgf with obabel) might be unfortunate for splitting the attention on two tools instead of one for the overall .xyz -> .bgf task ahead, but I presume the preparation of .bgf has to run only once and hence ""acceptable"". Point c) can one the tools detect if the .xyz is ionic? No, by now I do not think so. The method `xyz2mol` can be ambiguous because the charge parameter i) is *the overall charge*, i.e. an amino acid with simultaneous presence of ammonium and carboxylate is seen as neutral. And ii) no error is reported if the same data set about the cation is processed with `-c -1`, i.e. ```shell; $ python ./xyz2mol_b.py KAXWOV_cation_xyz.xyz -c -1 > negative.sdf; $ obabel negative.sdf -O negative.bgf; 1 molecule converted; ```. ![negative](https://github.com/openbabel/openbabel/assets/19709084/01e25457-b8ff-4426-a659-969820435ce1). The earlier Python script above however can be edited; molecules which (overall) don't carry a charge are rewritten as .sdf obabel can process. Structure files which might carry a charge in *excess* will be left untouched and there will be a note about them back to the CLI. The prototype script below allows both the sequential / use-1-CPU-only mode as well as one to spread the work of xyz2mol all CPU available. ```python; #!/usr/bin/env python3; """"""; name : filter.py; author : nbehrnd@yahoo.com; license: GPL2; date : 2024-05-03; edit :; purpose: perform xyz2mol on over all neutral molecules, inform abou the other; """""". import argparse; from multiprocessing import Pool # engage multiple CPU (Python standard library). import rdkit; from rdkit import Chem; from rdkit.Chem import rdDetermineBonds. def get_args():; """"""Get command-line arguments"""""". parser = argparse.ArgumentParser(; descrip",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462:506,detect,detect,506,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2093386462,1,['detect'],['detect']
Safety,"Probably a good idea. :-) If could rewrite to use a straightforward ""if"" statement I think the intention would be clearer and avoid the self-assignments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075:126,avoid,avoid,126,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075,1,['avoid'],['avoid']
Safety,"REMARK 4 7VSI COMPLIES WITH FORMAT V. 3.30, 13-JUL-11 ; REMARK 100 ; REMARK 100 THIS ENTRY HAS BEEN PROCESSED BY PDBJ ON 28-OCT-21. ; REMARK 100 THE DEPOSITION ID IS D_1300025299. ; REMARK 245 ; REMARK 245 EXPERIMENTAL DETAILS ; REMARK 245 RECONSTRUCTION METHOD : SINGLE PARTICLE ; REMARK 245 SPECIMEN TYPE : NULL ; REMARK 245 ; REMARK 245 ELECTRON MICROSCOPE SAMPLE ; REMARK 245 SAMPLE TYPE : PARTICLE ; REMARK 245 PARTICLE TYPE : POINT ; REMARK 245 NAME OF SAMPLE : HUMAN SGLT2-MAP17 COMPLEX ; REMARK 245 SAMPLE CONCENTRATION (MG ML-1) : NULL ; REMARK 245 SAMPLE SUPPORT DETAILS : NULL ; REMARK 245 SAMPLE VITRIFICATION DETAILS : NULL ; REMARK 245 SAMPLE BUFFER : NULL ; REMARK 245 PH : 7.50 ; REMARK 245 SAMPLE DETAILS : NULL ; REMARK 245 ; REMARK 245 DATA ACQUISITION ; REMARK 245 DATE OF EXPERIMENT : NULL ; REMARK 245 NUMBER OF MICROGRAPHS-IMAGES : NULL ; REMARK 245 TEMPERATURE (KELVIN) : NULL ; REMARK 245 MICROSCOPE MODEL : FEI TITAN KRIOS ; REMARK 245 DETECTOR TYPE : GATAN K2 SUMMIT (4K X 4K) ; REMARK 245 MINIMUM DEFOCUS (NM) : NULL ; REMARK 245 MAXIMUM DEFOCUS (NM) : NULL ; REMARK 245 MINIMUM TILT ANGLE (DEGREES) : NULL ; REMARK 245 MAXIMUM TILT ANGLE (DEGREES) : NULL ; REMARK 245 NOMINAL CS : NULL ; REMARK 245 IMAGING MODE : BRIGHT FIELD ; REMARK 245 ELECTRON DOSE (ELECTRONS NM**-2) : 5000.00 ; REMARK 245 ILLUMINATION MODE : SPOT SCAN ; REMARK 245 NOMINAL MAGNIFICATION : NULL ; REMARK 245 CALIBRATED MAGNIFICATION : NULL ; REMARK 245 SOURCE : FIELD EMISSION GUN ; REMARK 245 ACCELERATION VOLTAGE (KV) : 300 ; REMARK 245 IMAGING DETAILS : NULL ; REMARK 247 ; REMARK 247 ELECTRON MICROSCOPY ; REMARK 247 THE COORDINATES IN THIS ENTRY WERE GENERATED FROM ELECTRON ; REMARK 247 MICROSCOPY DATA. PROTEIN DATA BANK CONVENTIONS REQUIRE ; REMARK 247 THAT CRYST1 AND SCALE RECORDS BE INCLUDED, BUT THE VALUES ; REMARK 247 ON THESE RECORDS ARE MEANINGLESS EXCEPT FOR THE CALCULATION ; REMARK 247 OF THE STRUCTURE FACTORS. ; REMARK 300 ; REMARK 300 BIOMOLECULE: 1 ; REMARK 300 SEE REMARK 35",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2559:3474,DETECT,DETECTOR,3474,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2559,1,['DETECT'],['DETECTOR']
Safety,Rebuilt database from COD 'clean' subset from DataWarrior; and Platinum subset. Fix obfragment to avoid saving empty fragments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2150:98,avoid,avoid,98,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2150,1,['avoid'],['avoid']
Safety,"Regarding the original question, we shouldn't be using random number generators in 3D coordinate generation (outside the distance geometry). There is no need for them, and they should be removed. In 3.0 I removed OBRandom from the public API so that this change could be made more easily, and to avoid future uses of random numbers. PRs accepted to fix this problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-633867031:296,avoid,avoid,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-633867031,1,['avoid'],['avoid']
Safety,Remove redundant SSSR rings based on bond paths,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648:7,redund,redundant,7,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648,1,['redund'],['redundant']
Safety,"Remove some audit messages that copy the entire format description and then substring it. For smi->smi conversion, 1.6% of the total conversion time was spent on one of these audit message blocks, the majority of which on the string copy of the format description (which is not small for SMILES). Since the other ones are similar, why not remove all three? Actually, I would remove all audit and debug level logging statements throughout the library (I have never used them for debugging), so I have no qualms about removing these three. They could be rewritten to avoid the string copy, but... What do they think?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:565,avoid,avoid,565,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,1,['avoid'],['avoid']
Safety,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2405:335,safe,safety,335,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405,1,['safe'],['safety']
Safety,"Right now, floating point matrix code is handled by internal code and code ported from Eigen. When libblas and ATLAS are detected, the code should use this instead. This offers two advantages:; * BLAS and ATLAS are thoroughly tested and debugged.; * BLAS and ATLAS are highly tuned, vectorized, and multithreaded on many platforms, improving performance. Granted, performance is only a small component of Open Babel, but this wouldn't hurt. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/116"":https://sourceforge.net/p/openbabel/feature-requests/116",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485:121,detect,detected,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485,1,['detect'],['detected']
Safety,"SMILES format does not include the information of 3D coordinates, so we must predict them. The coordinates should be different in the *end* of the coordinate generation, but they are unknown in the beginning. Random offset is used in this prediction and we had problems without random numbers.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466927661:77,predict,predict,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-466927661,2,['predict'],"['predict', 'prediction']"
Safety,"SVG output with atom labelling (option ""i"") currently only supports numeric atom indices. These indices change, when explicit hydrogens are excluded (a typical use case when dealing with organic molecules). I have input from CML or CIF files and want to use atom labelling in SVG output for identification of torsions, rings, etc. detected by OB. Desired output will print (non-numeric) atom labels given in input (generic data ""label"" or ""_atom_site_label""). Any chance to get that functionality? A simple alternative/workaround without changing the library would be a XSLT style sheet generating the desired output from SVG with embedded CML (option ""e""). Reported by: shabermehl. Original Ticket: [openbabel/feature-requests/169](https://sourceforge.net/p/openbabel/feature-requests/169)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1537:331,detect,detected,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1537,1,['detect'],['detected']
Safety,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2176:519,avoid,avoided,519,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176,1,['avoid'],['avoided']
Safety,"See my pull request for a proposal for this. The charge mapping file is passed as a suffix to the partial charge method name:. `babel --partialcharge fromfile:mapping.txt ...`. The alternative seemed to be to add a top-level GENOPTIONS flag, and I wanted to avoid polluting that namespace unnecessarily. Comments?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/157#issuecomment-97882210:258,avoid,avoid,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/157#issuecomment-97882210,1,['avoid'],['avoid']
Safety,"Seriously, I'm not sure why anyone would want to do that. Why would you want to re-parse the same string repeatedly?. But what you're doing later is just bad code. You're parsing a molecule that Python probably treats as a temporary. Then you grab an atom reference. That's still probably a temporary. Then you put that into a list. Then *after* putting all those atom references in a list, you interrogate them? I'm not surprised it leads to weird behavior. Python (and the SWIG interface) can't determine whether the temporary can be free, so it probably frees some of them. Now you're asking for valence on some undefined C++ pointer. What exactly are you trying to do? Then we can probably come up with a safe way to do that.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688:709,safe,safe,709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688,1,['safe'],['safe']
Safety,So I think this is safe to close @ghutchis but perhaps you can tell me (us) how to add this particular file for example to the unit tests? :),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979:19,safe,safe,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979,1,['safe'],['safe']
Safety,"So all calls to OBConversion::RegisterOptionParam( .. ) are redundant?; Will it always DTRT based on what it finds onthe command line, irrespective; of what's been registered?. Matt. On 6 May 2015 at 21:29, baoilleach notifications@github.com wrote:. > That's exactly it. But what you don't realise is that there is no need to; > register options. If you just remove those lines everything will still; > work.; > ; > On 6 May 2015 at 18:08, M J Harvey notifications@github.com wrote:; > ; > > Certainly in the pointcloud and stl classes I only register those options; > > once, each with one parameter.; > > Are options registered into a single global set, rather than residing; > > within the scope of their format?; > > If so, then these warnings arise from some other format registering the; > > same letter option first, but with a differing # of parameters.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > <https://github.com/openbabel/openbabel/issues/170#issuecomment-99539688; > > .; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/170#issuecomment-99580928. ## . M J Harvey; CTO; Acellera Ltd.; London, Barcelona.; www.acellera.com | m.j.harvey@acellera.com; Follow us on: twitter http://www.twitter.com/acellera, linkedin; http://www.linkedin.com/company/acellera, youtube; http://youtube.com/acelleracom.; Skypename: acellera",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/170#issuecomment-99585381:60,redund,redundant,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/170#issuecomment-99585381,1,['redund'],['redundant']
Safety,"Sorry - I missed Problem 2 first time round... Problem 2 is not a bug, but rather an unsupported feature. Many group contribution methods don't assign values to all atoms so there's no reason to produce an error message. We could add a "";debug"" option, which would print out additional information which would be useful during development, e.g.; atom 1 matches SMARTS string CC[CX4] value 1.0; atom 2 has no match; etc. Regarding contributing to Open Babel, I should really write up a doc or do a video, describing the entire process on Windows (MSVC makes everything easy). Typically I run obabel in the debugger, and set a breakpoint at where I want to inspect, in this case groupcontrib.cpp in Predict. I found the location by searching the codebase for OBGroupContrib. Anyhoo, we're going off-topic for this bug report. I'll implement that ;debug thingy, if you agree... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801452:697,Predict,Predict,697,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801452,1,['Predict'],['Predict']
Safety,"Sounds like you might be right.; On 14 Mar 2016 2:44 p.m., ""Marcus D. Hanwell"" notifications@github.com; wrote:. > I spent quite a bit of time debugging obabel on the Mac, and was seeing; > issues with an illegal instruction pretty early on as obabel started up.; > This was a pretty difficult one to debug as everything worked fine on the; > build machine, but I got a very generic error 14 on my laptop when trying; > to use the packaged obabel, in the end I found the answer through searching; > on Google and seeing a similar issue for Docker.; > ; > CMake and the upstream compilers don't enable this by default as the; > binaries can be quite specific for the GPU you are building on. In this; > case it was a pretty new Mac Pro, and trying to run them on an older; > Macbook Pro laptop. The comments seem incorrect too, as they have little to; > do with cross compiling and more to do with optimizations for the specific; > CPU on the build machine.; > ; > I think adding a section on optimization, and advising to turn this on; > there would be great (with a big warning about the binaries being quite CPU; > dependent at that stage) would be great, but please consider turning this; > off by default to avoid having others spend time debugging strange run time; > errors.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/279.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512:1212,avoid,avoid,1212,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/279#issuecomment-196515512,1,['avoid'],['avoid']
Safety,Speed up the SMILES writer by avoiding creating the SMILES atom order vector,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1710:30,avoid,avoiding,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1710,1,['avoid'],['avoiding']
Safety,"Strange bug. When I try a simple convert to xyz, the error seems to occur when calling ConnectTheDots():; ##############################; vincent@quad:~/dev/perso/trunk/TEST/ob_files$ ../bin/babel input.cif input.xyz; *** glibc detected *** ../bin/babel: double free or corruption (out): 0x0000000002241fb0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x78a8f)[0x7f4837d5ca8f]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x73)[0x7f4837d608e3]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x753)[0x7f48379cd393]; /home/vincent/dev/perso/trunk/TEST/lib/openbabel/2.3.90/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0xb7a)[0x7f48274a871a]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xa0c)[0x7f4837a3795c]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x18e)[0x7f48379d55ce]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1e8)[0x7f48379d6608]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x1f41)[0x7f48379d9231]; ../bin/babel(main+0x103b)[0x4042fb]; ###################; I'm trying to run it through valgrind/valkyrie to see if I catch something... Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794:228,detect,detected,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794,1,['detect'],['detected']
Safety,"Summary:; *fixes memory leak ; *more robust support for gzipped files; *more convenient methods for opening files (format auto-detection); *fix bug with xml reader when reading files with multiple molecules. I have made every effort to maintain backwards compatibility (even when the existing behaviour was dubious) but there are some unavoidable changes. Specifically, streams passed to a OBConversion should not be deallocated before the OBConversion is deallocated or the stream is replaced. Details:; This was all motivated by a memory leak due to the line ending filter. OBConversion would swap out the rdbuf of the passed input stream with its own filtering rdbuf to normalize all line endings. This means a user-provided data structure is having its internals messed with and there is no way to properly free the filtering streambuf (since OBConversion doesn't control the stream itself). This would cause my long running program that opens millions of files to eventually consume all the memory on the machine and crash. Not acceptable. The solution is to not mess with the internals of the passed stream, but wrap the stream with a filtering stream. The full stream is wrapped, not just the underlying streambuf, in order to (more or less) keep the state of the user-provided stream consistent. That is, when OBConversion reads to the end of the file, the good bit of the user-provided steram will also be turned off (some test code depended on this behavior). GetInStream/GetOutStream may now return a stream that is not identical to the user-provided stream (since it's the wrapped version). In addition to the newline filter, streams may be wrapped if compression is enabled. . Compression is now provided by virtue of wrapping the stream (and leaving it that way until all writing/reading is done). GetInStream/GetOutStream provide this wrapped stream and so can be read as if the underlying stream were not compressed. FormatFromExt can take a second argument, a bool passed by reference",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/191:127,detect,detection,127,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/191,1,['detect'],['detection']
Safety,"Sure, I will post a salt CIF file demonstrating the problem.; Give me 2 days, I am out of office ...,; Generaly the issue is not CIF specific, the Kekulization will probably not work for any aromatic cycle with 1+ charge and protonated aromatic nitrogen.; We need OpenBabel primary as a tool for force field atom type assigment. We are crystallographers = we already implemented our CIF parser + space group handling engine on our side, so we can send to OB any format and molecules already fully completed by symetry operations + with special positions handled on our side. Vincent Favre-Nicolin who hed implemented OB CIF parser was working with me in the past ...; We only need correct handling of charged fragments in OB and posibility to export force field atom types detected (or enough output information so we can assign force fields atom types on our side).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676:773,detect,detected,773,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2085832676,1,['detect'],['detected']
Safety,"Sure, but I started by creating the test set. Any of the incremental changes were not sufficient to fully resolve all the failures. Nonetheless, I will try to do better in the future. I have learned that I need to rebase frequently to avoid headaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434:235,avoid,avoid,235,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434,1,['avoid'],['avoid']
Safety,"Thank you for your comment. I thought two molecular graphs are isomorphic only when all corresponding atoms are the same, so they are not tie (either of two is not isomorphic). After some googling, I found out that [molecular graphs](https://en.wikipedia.org/wiki/Molecular_graph) are classified as a labeled graph and there are two definitions for [isomorphism of labeled graphs](https://en.wikipedia.org/wiki/Graph_isomorphism#Isomorphism_of_labeled_graphs). I assumed the first definition (both edge-preserving and label-preserving) is used, but it seems to be the second definition (only edge-preserving) is adopted in the current implementation. Maybe we should update documentation to avoid future misunderstanding.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467109989:691,avoid,avoid,691,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467109989,1,['avoid'],['avoid']
Safety,"Thank you for your reply @ghutchis! I have now been able to reproduce this on three different machines, in two cases there were no previous conda installations. This is the output from `otool -L`:; ```; $ otool -L /anaconda/lib/python3.6/site-packages/_openbabel.so; /anaconda/lib/python3.6/site-packages/_openbabel.so:; 	@rpath/libpython3.6m.dylib (compatibility version 3.6.0, current version 3.6.0); 	@rpath/libopenbabel.5.dylib (compatibility version 5.0.0, current version 5.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1); 	@rpath/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 104.1.0); ```; I have tried explicitly replacing the paths with absolute ones to the libraries provided by conda (with `install_name_tool`), but I'm getting the same error.; ```; $ which python3; /anaconda/bin/python3; $ python3 --version; Python 3.6.3 :: Anaconda custom (64-bit); $ python3 -c ""import openbabel""; Fatal Python error: PyThreadState_Get: no current thread. zsh: abort python3 -c ""import openbabel""; ```; I don't think my `PYTHONPATH` has any problematic content:; ```; echo $PYTHONPATH; /Users/thomas/opt/openmm-plumed/lib:/Users/thomas/opt/psi4/lib:; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1711#issuecomment-351124248:1099,abort,abort,1099,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1711#issuecomment-351124248,1,['abort'],['abort']
Safety,"Thanks @bbucior. It looks like the code is working as intended. Lazily-evaluated properties (e.g. aromaticity or partial charges) need to be marked as perceived if you want to avoid the lazy evaluation. The ""normal"" situation is that you call GetPartialCharge() on an atom, and if not marked as perceived it triggers the evaluation across the whole molecule, assigns the values via SetPartialCharge() and then marks the property as perceived. If you set values ""manually"", then you also need to mark the molecule as having partial charges already perceived. I'm marking as closed, but feel free to reopen.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1817#issuecomment-383929995:176,avoid,avoid,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1817#issuecomment-383929995,1,['avoid'],['avoid']
Safety,"Thanks for helping. The cmake command I used was ""cmake -DPYTHON_BINDINGS=ON -DEIGEN3_INCLUDE_DIR=../eigen3 ../ob-src 2>&1 | tee cmake.out"". This is using openbabel src v 2.3.2 and eigen 3.1.3. The output I get is as follows:. -- The C compiler identification is GNU 4.2.1; -- The CXX compiler identification is Clang 4.2.0; -- Checking whether C compiler has -isysroot; -- Checking whether C compiler has -isysroot - yes; -- Checking whether C compiler supports OSX deployment target flag; -- Checking whether C compiler supports OSX deployment target flag - yes; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:671,Detect,Detecting,671,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,4,['Detect'],['Detecting']
Safety,"Thanks for the reminder - sorry for the very slow review. It looks okay. My last concern is that with the current implementation, there's nothing guaranteeing that a molecule will have a full set of partial charges. I think I'd prefer that the OBPartialCharge class only accept charges as a full vector<double> and checks to make sure it's equal to the number of atoms before storing. The reader should then push_back() into a temporary vector in the gauss format.cpp code. This way, if there's somehow a corrupted file (e.g., it got killed by the queuing software before the job finished) the partial charges are still safe - it won't store a set of ESP charges that are only half the molecule. I realize that's an unlikely case, but I'm trying to think from the library API perspective - you can access a set of vector<double> but set the charges one-by-one. That's asymmetric.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358:620,safe,safe,620,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373527358,1,['safe'],['safe']
Safety,"Thanks for your interest! This isn't so much of an issue - we have an e-mail list. A successful project would propose a set of filters / transformations similar (or identical to) the MolVS project for RDKit. I'll post a few links / article that can help you get started (e.g., what is standardization):; * https://depth-first.com/articles/2020/07/27/a-guide-to-molecular-standardization/; * MolVS is an example for RDKit - https://molvs.readthedocs.io/en/latest/guide/intro.html; * PubChem standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-018-0293-8; * ChemSpider standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-015-0072-8. The RDKit code is here:; * https://github.com/rdkit/rdkit/pull/2002; * https://github.com/rdkit/rdkit/blob/master/rdkit/Chem/MolStandardize/standardize.py; * https://github.com/rdkit/UGM_2018/blob/master/Presentations/Leung_GSoC_RDKit-MolVS_Integration.pdf. There are a few more recent articles on tautomers (including use of QM calculations to generate micro-pKa predictions):; * https://pubs.acs.org/doi/10.1021/acs.jcim.0c00232; * https://pubs.acs.org/doi/10.1021/acs.jcim.6b00338; * (InChI v2) https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b01080; * https://cactus.nci.nih.gov/tautomerizer/. As a first step, I'd suggest looking at the code in `src/ops` and submit a pull request for an OBOp that provides warnings for some simple things (e.g., carbon atoms beyond 4 bonds, total formal charge on a molecule isn't neutral, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217:1045,predict,predictions,1045,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217,1,['predict'],['predictions']
Safety,"Thanks so much for the heads-up. I know think we use that function, thus the bug. This is patched in SVN trunk (r3661) for 2.3.0 release, and I renamed the parameter to avoid the bug. Thanks again,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/978#issuecomment-281796551:169,avoid,avoid,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/978#issuecomment-281796551,1,['avoid'],['avoid']
Safety,"Thanks, @ghutchis !. I am looking to use openbabel to manipulate the torsion angles as part of a conformer optimization program. . My original thought was to manipulate the internal coordinates directly but, after looking at `OBMol.SetTorsion`, the routes you suggest would probably work better. It both provides a Python-friendly interface and avoids other issues around dealing with the internal coordinates directly (e.g., making sure to rotate neighboring atoms correctly).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056:345,avoid,avoids,345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329#issuecomment-783406056,1,['avoid'],['avoids']
Safety,"That would be a problem alright. Ignore my prevoius comment so. Ultimately the issue is that on some platforms, the DL loader fails to load the plugins without this kludge. This is also the case for other bindings and I think the correct solution is to move towards statically including the plugins in the main .so, so to avoid this issue completely.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952:322,avoid,avoid,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/368#issuecomment-277687952,1,['avoid'],['avoid']
Safety,That's concerning since that is the correct way to import openbabel in openbabel3 (even though it seems redundant). I would be worried you might have multiple versions of openbabel in your path and aren't importing the right one.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153:104,redund,redundant,104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-860967153,1,['redund'],['redundant']
Safety,The OBFingerprint line in the Ruby SWIG interface file is commented out. I think this was to avoid some errors. It should be uncommented and made available... Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/791:93,avoid,avoid,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/791,1,['avoid'],['avoid']
Safety,"The OpenSMILES spec at http://opensmiles.org/opensmiles.html#hydrogens says ""Question: are more than 9 hydrogens possible? Should they be supported?"". If we take Weininger (1988) as definitive, then he also wrote ""The rule used in the SMILES system is to eliminate all hydrogen atoms except in the following three cases: (1) hydrogens connected to other hydrogens; (2) hydrogens connected to zero or more than one other atom; and (3) in isomeric SMILES, isotopic hydrogen specifications"". [ZnH9][H] fall under none of these three exceptions. I think the most reasonable interpretation is that Weininger didn't think [*H10] would occur, rather than be definitive about avoiding more than one digit. FWIW, the spec and online documentation also say that there's at most one digit of charge, but [some years back](https://sourceforge.net/p/blueobelisk/mailman/message/29130183/) I pointed out the Daylight toolkit accepted even [C+65535] (which it interpreted as [C-]) - that is, just like the CEX example Noel pointed to, Daylight's code accepted a broader range of chemistry than Weininger (1988) or the online documentation. If H10 is chemically possible then I think a wider hcount range should be supported. Which is why I contributed that question to the OpenSMILES spec. ;)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2344#issuecomment-808473447:668,avoid,avoiding,668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2344#issuecomment-808473447,1,['avoid'],['avoiding']
Safety,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1650,avoid,avoid,1650,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733,1,['avoid'],['avoid']
Safety,The attached CIF file makes OpenBabel crashs either if used as a library or using the command-line convertion tool. This appends on a Debian sid with OpenBabel 2.2.3 or on an Ubuntu Hardy with 2.1.1. The message is:. caliste@myrte:~/tmp$ babel Open_babel_crash.cif Open_babel_crash.xyz; *** glibc detected *** babel: double free or corruption (out): 0x00000000006b6ff0 ***; ======= Backtrace: =========; /lib/libc.so.6[0x7f392848008a]; /lib/libc.so.6(cfree+0x8c)[0x7f3928483c1c]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x59a)[0x7f39293978ea]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x560)[0x7f39265f77a0]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0x7ce)[0x7f392660281e]; /usr/lib/openbabel/2.1/cifformat.so(_ZN9OpenBabel16OBMoleculeFormat14ReadChemObjectEPNS_12OBConversionE+0x12)[0x7f39265f8042]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEv+0x90)[0x7f39293a6400]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1f7)[0x7f39293a7c17]; /usr/lib/libopenbabel.so.2(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x124e)[0x7f39293aad6e]; babel[0x402f26]; /lib/libc.so.6(__libc_start_main+0xf4)[0x7f392842a1c4]; babel(__gxx_personality_v0+0x81)[0x401de9]; ======= Memory map: ========; 00400000-00406000 r-xp 00000000 08:01 70139 /usr/bin/babel; 00605000-00606000 rw-p 00005000 08:01 70139 /usr/bin/babel; 00606000-006c1000 rw-p 00606000 00:00 0 [heap]; 7f3918000000-7f3918021000 rw-p 7f3918000000 00:00 0; 7f3918021000-7f391c000000 ---p 7f3918021000 00:00 0; 7f391f391000-7f391f3a1000 r-xp 00000000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f3a1000-7f391f5a1000 ---p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a1000-7f391f5a2000 rw-p 00010000 08:01 920605 /usr/lib/openbabel/2.1/crkformat.so; 7f391f5a2000-7f391f5b2000 r-xp 00000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957:297,detect,detected,297,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957,2,['detect'],['detected']
Safety,"The bond flags OB_TORUP_BOND and OB_TORDOWN_BOND are; used for two unrelated purpuses: To mark cis/trans; around a double bond, and to mark up/down around a; chiral center. These two uses are incompatible, as; illustrated below. The SD file shown has a double bond; and a potential chiral center, but there is no 3D; information, nor is the molecule marked ""chiral"", but; OpenBabel incorrectly deduces chirality for the atom. ; This is because OB deduces cis/trans around the double; bond from the 2D coordinates, and marks the single; bonds ""up"" and ""down"". Then when the chirality; detection goes to work, it notices that one of the; single bonds at the chiral center is marked up/down,; and from that it ""deduces"" that the atom is chiral. Using the SD file below (call it ""ob_bug.sdf""), do the; following:. babel ob_bug.sdf -o smi; C\C=C\[C@@]1CCCCN1; 1 molecule converted. To fix this, a new pair of bond flag needs to be; defined, perhaps OB_CISTRANS_UP and OB_CISTRANS_DOWN,; along with appropriate functions; (bond->SetCisTransUp(), etc.), and then every file; needs to be examined for use of OB_TORUP/DOWN_BOND and; bond->SetUp/Down(), bond->GetUp/Down(), to determine; whether it's a chiral flag, a cis/trans flag, or both. ----------------------. JME. 9 9 0 0 0 0 0 0 0 0999 V2000; 6.0622 2.8000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 4.8497 2.1000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 3.6373 2.8000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 0.7000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 1.2124 0.0000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 0.0000 2.1000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 2.4249 0.7000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 1.2124 2.8000 0.0000 N 0 0 0 0 0 0 0; 0 0 0 0 0; 2.4249 2.1000 0.0000 C 0 0 0 0 0 0 0; 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 6 1 0 0 0 0; 5 7 1 0 0 0 0; 6 8 1 0 0 0 0; 7 9 1 0 0 0 0; 8 9 1 0 0 0 0; M END; $$$$; ----------------------. Reported by: @cjames53",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/578:584,detect,detection,584,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578,1,['detect'],['detection']
Safety,"The configure script should detect expat if available; for use with CML and other XML-based file formats.; (These will probably become more widely used soon.). This would greatly simplify the cml.cpp code. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/21"":https://sourceforge.net/p/openbabel/feature-requests/21",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390:28,detect,detect,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390,1,['detect'],['detect']
Safety,"The current CVS version of obgrep seems to have uncovered a bug ; in obconversion.h/cpp on UNIX (at least). The code now assigns a default format and stdin/stdout for the ; conversion input/output streams. Everything goes normally until :. // Search for pattern; for (c=0;;); {; mol.Clear();; conv.Read(&mol);; if (mol.Empty()); break;. The conv.Read() causes the program to abort after a failed cast from ; obconversion code. The new obgrep code ""looks"" correct. Since I'm not sure how to debug code in obconversion.* easily, I'm ; currently assigning this to Chris Morley. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445:375,abort,abort,375,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445,1,['abort'],['abort']
Safety,"The current implementation of smarts parsing and matching is not thread safe since it uses global variable. Attached is an svn diff with the 2-2-x branch that removes the usage of global variables and provides a thread-safe stateless matcher. With this patch, different threads can safely use different instances of OBSmartsPattern to parse and match (this is not currently true do to the use of global variables) and different threads can use the same instance of an OBSmartsPattern to perform matching with a call to the stateless matcher. My opinion is that the old API should be deprecated to discourage non thread-safe coding. The original motivation for this patch was that most of the perception routines use smarts matching and so are not thread-safe. With this patch, they still aren't thread safe since they all need to be modified to call the stateless matcher. However, even with that additional modification they remain not thread-safe due to other data sharing issues that would require some thought and time to resolve well. I can provide a match that at least makes the smarts matching thread-safe is desired. Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/155](https://sourceforge.net/p/openbabel/feature-requests/155)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524:72,safe,safe,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524,8,['safe'],"['safe', 'safely']"
Safety,The edge prediction from xyz is suboptimal.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2572:9,predict,prediction,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2572,1,['predict'],['prediction']
Safety,The enclosed SDF file fails at aromatic / Kekule detection in trunk:. babel example.sdf -osmi; C/C=C/CN1CC[NH+](CC1)CCn1c(c(n2c1nc1c2c(=O)n(c(=O)n1C)C)C)C. babel example.sdf -osmi | babel -ismi -osmi; C/C=C/CN1CC[NH+](CC1)CCN1C(C(N2C1NC1C2C(=O)N(C(=O)N1C)C)C)C. Reported by: @ghutchis,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963:49,detect,detection,49,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963,1,['detect'],['detection']
Safety,"The following two molecules are an example of problems that the SSSR algorithm has:; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=141105; http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=165896. In the first case only 4 of the 5 rings are reported - the inner 4 membered ring is not, probably due to false detection of its independence of the other 4.; In the second case, one of the rings has 48 atoms which seems to be above some internal limit of the SSSR algorithm.; In both cases the results from openbabel do not correspond to the rule of dependence between the number of components of a graph, vertices, edges and rings.; I would be glad to provide more info if needed.; Beda. Reported by: kosatab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/993:324,detect,detection,324,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/993,1,['detect'],['detection']
Safety,"The idea was just to avoid crash in #1851. Now if the patch is wrong since it causes regression, feel free to revert.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454439569:21,avoid,avoid,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1921#issuecomment-454439569,1,['avoid'],['avoid']
Safety,"The incomplete reading problem reported by Noel was that ALL_READS_BINARY had not been set by CMake build. (It is now done in the code.) Without it, seekg() gave incorrect results with UNIX file endings under MSVC. In revision 3556 in the trunk code the binary read and write of header variables in fs files are done separately, to avoid the possibility that a struct is laid out differently on other platforms. Maybe this will cure the problem on Linux 64 bit systems? . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339:332,avoid,avoid,332,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796339,1,['avoid'],['avoid']
Safety,"The issue seems to be an invalid fragment in the `data/rigid-fragments.txt` file. The structure in this bug report contains the fragment `OC1COCC1`. The fragment coordinates for this are all zero:; ```; OC1COCC1; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; 8 0.000 0.000 0.000; 6 0.000 0.000 0.000; 6 0.000 0.000 0.000; ```; When the OBBuilder class tries to connect such fragments the coordinates become NaN. This happens because the code tries to find a directional vector for the bond connecting this fragment to other parts. In this process the vector (0, 0, 0) is normalized which results in (NaN, NaN, NaN). Updating the `data/rigid-fragments.txt` file should fix this. In total, there are 12 fragments such fragments in the file:; ```; CC1=CC2=N3C1=Cc1cc(c4n1*13N3=C(C=c5n1c(=C2)cc5C)C(=CC3=C4)C)C; CC1=CC2=Cc3n4*56N2=C1C=c1cc(c(=CC2=N6C(=Cc4cc3C)C=C2C)n51)C; C1=CC2=N3C1=Cc1ccc4n1*13N3=C(C=CC3=C4)C=c3n1c(=C2)cc3; C=C1CCCC2(C1CCC2)C; OC1CC(=CC(C1)(C)C)C; OC1C(O)COCC1O; O=C1NC2C(N1)CSC2; OC1COCC1O; O=C1ccC(=O)N1; OC1COCC1; C1=CC=C[NH2]=C1; [O-]*(=O)(=O)[O-]; ```. Detecting this in `OBBuilder::LoadFragments()` and throwing an error would also make it easier to debug this in the future. Agree?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646:1092,Detect,Detecting,1092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604022646,1,['Detect'],['Detecting']
Safety,"The new OBAtom:IsHbondAcceptor() method should provide a more fine-grained detection of hydrogen bond capabilities of atoms, basing on their neighbors (i.e., different chemical moieties are recognized). The rules are based on references from Kubyni and others, and the result can differ significantly from the current 2.3.x implementation, especially for the oxygen atom. A legacy function (OBAtom:IsHBondAcceptorSimple()) has been created to provide some kind of backward compatibility. . Accordingly to these rules, the function will return:; aliph-O-aliph ether -> true [1]; hydroxy O-sp3 -> true [1]; aro-O-aliph ether -> true [1]; ester O-sp2 -> true [1]; sulfate O (R-SO3) -> true [2]; sulfoxyde O (R-SO-R) -> true [2]; organoboron-F (R-BF3) -> true [3]; ester O-sp3 -> false [1]; sulfone (R1-SO2-R2 ) -> false [2]; aro-O-aro -> false [1]; aromatic O -> false [1]; O-nitro -> false [2]; organic F (R-F) -> false [4]. References; [1] Kubinyi, H. ""Changing paradigms in drug discovery. ""SPECIAL PUBLICATION-ROYAL SOCIETY OF CHEMISTRY 304.1 (2006): 219-232.; [2] Kingsbury, Charles A. ""Why are the Nitro and Sulfone Groups Poor Hydrogen Bonders?."" (2015).; [3] Per Restorp, Orion B. Berryman, Aaron C. Sather, Dariush Ajami, Julius Rebek Jr., Chem. Commun., 2009, 5692 DOI: 10.1039/b914171e; [4] Dunitz, Taylor. ""Organic fluorine hardly ever accepts hydrogen bonds."" Chemistry-A European Journal 3.1 (1997): 83-92.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/244:75,detect,detection,75,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/244,1,['detect'],['detection']
Safety,"The original OBAromTyper applies atom types (corresponding to the number of pi electrons donated by particular atom environments) by matching SMARTS patterns against a molecule. Which somewhat convenient, this is a very inefficient way of applying the types, as it is all-against-all involving redundant matches, and also has subsequent pruning (based on hybridisation) in the code. The use of the 'D' in the SMARTS patterns almost meant that different results were possible depending on whether implicit or explicit hydrogens were present. This has been replaced with a more efficient, and fairly readable (IMO) switch statement on element, then on charge, and then heavy atom degree (in general). Pruning is now done *before* the switch statement. Reading SMILES is about 3.5% faster (based on ChEMBL ""-ismi -onul""). The SMILES output for ChEMBL, eMolecules and PubChem Compound is unchanged except for a single eMolecules entry where the output was previously in error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/378:294,redund,redundant,294,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/378,1,['redund'],['redundant']
Safety,"The original OBAromTyper applies atom types (corresponding to the number of pi electrons donated by particular atom environments) by matching SMARTS patterns against a molecule. Which somewhat convenient, this is a very inefficient way of applying the types, as it is all-against-all involving redundant matches, and also has subsequent pruning (based on hybridisation) in the code. The use of the 'D' in the SMARTS patterns almost meant that different results were possible depending on whether implicit or explicit hydrogens were present. This has been replaced with a more efficient, and fairly readable (IMO) switch statement on element, then on charge, and then heavy atom degree (in general). Pruning is now done before the switch statement. Reading SMILES is about 3.5% faster (based on ChEMBL ""-ismi -onul""). The SMILES output for ChEMBL, eMolecules and PubChem Compound is unchanged except for a single eMolecules entry where the output was previously in error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1545:294,redund,redundant,294,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1545,1,['redund'],['redundant']
Safety,"The original patch is from @rogersayle, which I've restricted a bit. This is is a SMILES extension that is already present in OEChem and RDKit, both undocumented and due to Roger. For at least OEChem, support is present for 1- and 2-digit numbers too. The primary use case is to support new elements where we don't yet have the symbol, but also to read SMILES written by OEChem/RDKit where *they* don't yet have the symbol. My own take is that this seems relatively safe, at least if restricted to 3-digits. As an implementation detail, if an atomic number >255 is specified, the SMILES is rejected with a warning (we use a char for the atomic number).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1997:466,safe,safe,466,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1997,1,['safe'],['safe']
Safety,"The point group is different from the graph symmetry, but yes there is a brute-force point group detection code. In C++. ```; OBMol mol;; OBPointGroup pg;. pg.Setup(&mol);; std::cout << ""Point Group: "" << pg.IdentifyPointGroup() << std::endl;; pg.Symmetrize(&mol);; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1699386403:97,detect,detection,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1699386403,1,['detect'],['detection']
Safety,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:226,avoid,avoid,226,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,1,['avoid'],['avoid']
Safety,"The problem is that you specified the output file as geom.xyz, by accident. The input is stdin...that's why babel appears to hang. This used to happen to me too. That's why babel is deprecated in favour of obabel, where we require the output file to be specified with -O to avoid this problem. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800758:274,avoid,avoid,274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800758,1,['avoid'],['avoid']
Safety,"The problem isn't in LSSR necessarily, but the Kekule assignment code. This is now fixed in trunk with a timeout and a new analysis path. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1025#issuecomment-281797359:105,timeout,timeout,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1025#issuecomment-281797359,1,['timeout'],['timeout']
Safety,"The removal of the aromaticity is fixed (or at least with #1576).; ```; >>> mol = pybel.readstring(""smi"", ""Clc1c(c2n3c(=O)/c(=C/c4ccc(N(CC)CC)cc4)/sc3nn2)cccc1 2185720""); >>> print mol.write(""smi""); Clc1c(c2n3c(=O)/c(=C/c4ccc(N(CC)CC)cc4)/sc3nn2)cccc1; ```. I think you're right that the ring attached to the triazole ring shoud not be detected as aromatic. I should file this as a separate bug...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305280439:336,detect,detected,336,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1358#issuecomment-305280439,1,['detect'],['detected']
Safety,"The silence is getting to me. Why not put everything through unchanged, except for the enum? Readability the same, but avoids the need for casting between enums and unsigned ints.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-363903792:119,avoid,avoids,119,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-363903792,1,['avoid'],['avoids']
Safety,The syntax of `obabel` is different from the old `babel` command. Try:. `obabel file.pdb -O a.pdb -d # obabel can detect file types by their extension`. The -O flag indicates the output filename.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2192#issuecomment-623510281:114,detect,detect,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2192#issuecomment-623510281,1,['detect'],['detect']
Safety,The test failure is supposed to be caused by the difference between SMILES generate from the predicted molecule (https://github.com/openbabel/openbabel/blob/18b5248b4aca14a5c9f224df08520cc4819dbcbf/src/distgeom.cpp#L918) and SMILES generated from SDF made by obabel. I'm not sure why such a difference exists.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242:93,predict,predicted,93,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242,1,['predict'],['predicted']
Safety,"There are a bunch of these reports, but the backtrace is very helpful because I can't reproduce this. Can you use --fastest with the --gen3d option? This will avoid the minimization and conformer search. I want to see where the NaN pops up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-602209945:159,avoid,avoid,159,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-602209945,1,['avoid'],['avoid']
Safety,"There are a few related changes here:; 1. Move the setting of the HasChainsPerceived() flag into the perception function itself, rather than out here in OBAtom::GetResidue(). What if someone calls the perception function directly? The new behavior is consistent with other perceived properties.; 2. Rewrite the function so that it is driven by the HasChainsPerceived() flag, rather than first checking whether the atom has a _residue assigned. This is the behavior I've been fixing for other lazily perceived properties.; 3. Remove the code to force (or avoid) perception added by @ghutchis 11 years ago to help Avogadro and others. This looks like a workaround because (2) was not done. How the lazily evaluated system is supposed to work is that you can force or avoid perception using the HasChainsPerceived() flag. Adding or removing an atom will call EndModify() and blow away this flag (I haven't changed this behavior but we could), but the user can store and reset the flag after edits if so desired.; 4. Remove the code to wipe the existing _residue if the chains perception returns false. This code doesn't make any sense as it only wipes a single residue. If all of the residues should be wiped then this is the responsibility of the perception code, which is in charge of setting these.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849:554,avoid,avoid,554,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849,2,['avoid'],['avoid']
Safety,"There's a cascade at the moment with SDF (in particular) - it currently calls SSSR for aromaticity. Anyone who wants to take up the task of aromaticity detection from a breadth-first-search after simple ring detection is welcome. I just haven't had the time. Mol2 has fewer cascaded calls, since aromaticity is defined in the bonds (usually). One of the Google Summer of Code proposed projects is to replace Kekulize with a faster graph-based algorithm.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469:152,detect,detection,152,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469,2,['detect'],['detection']
Safety,"These readers only read atom positions, the unit cell,; and the electronic energy. They were also added to the generic ""out"" format so that; they can be automatically detected.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1793:167,detect,detected,167,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1793,1,['detect'],['detected']
Safety,"This PR has two changes:; 1. Keep aromaticity in EndModify(); 2. A drive-by removal of code in EndModify() that I recognise as a workaround for the problem fixed in #1724. I know that there's an idea that all lazily perceived flags should be blown away in EndModify(), but I think this is going too far - we should try as far as possible to avoid blowing away information that has been perceived. Here I make a minor change so that aromaticity perception is preserved even when, for example, an atom is deleted (which triggers this code). IMO, this keeps things simpler and more understandable. Aromaticity will only be reperceived when the user directly unsets the aromaticity flag of the OBMol. Until then, they can delete all they want and nothing will change. If the user deletes an atom from benzene and writes it out as SMILES and sees that it is aromatic, they will soon realise what's going on. This is easier to understand than the current situation, where if you want to preserve the aromatic flags then you need to set the molecule as having aromaticity perceived after deleting an atom. To a user, it wouldn't be at all obvious that this is possible.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1847:341,avoid,avoid,341,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1847,1,['avoid'],['avoid']
Safety,"This PR makes SMILES writing fast. The main speedup was to avoid regenerating an OBStereoFacade each time we needed to look up a single atom. This was occurring in multiple places. Now a single OBStereoFacade is used for the molecule. Also, I have removed all uses of strcpy, strlen and strcat. There is some room for further speedups but I might move onto other stuff for now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699:59,avoid,avoid,59,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699,1,['avoid'],['avoid']
Safety,"This happens reproducibly at least on: armv7hl, aarch64, ppc64, ppc64le. ```; 97% tests passed, 4 tests failed out of 157; Total Test time (real) = 4300.78 sec; The following tests FAILED:; 62 - test_regressions_1 (OTHER_FAULT); 63 - test_regressions_221 (OTHER_FAULT); 147 - inchiSteffen_PubChem.smi_Test (Timeout); 149 - pytest_sym (Timeout); Errors while running CTest; Makefile:130: recipe for target 'test' failed; ```. The relevant log snippets are:. ```; Start 62: test_regressions_1; 62/157 Test #62: test_regressions_1 ...............***Exception: Other601.71 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Start 63: test_regressions_221; 63/157 Test #63: test_regressions_221 .............***Exception: Other587.19 sec; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; ```. ```; 147/157 Test #147: inchiSteffen_PubChem.smi_Test ....***Timeout 1500.01 sec; ==============================; *** Open Babel Warning in InChI code; #8 :Salt was disconnected;; ==============================; *** Open Babel Warning in InChI code; #30 :Salt was disconnected;; ```. ```; 149/157 Test #149: pytest_sym .......................***Timeout 1500.01 sec; ```. git commit used: 3a63a9849f8d9719c5989c43875d51be50c53019; environment: Fedora development branch (rawhide)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266:307,Timeout,Timeout,307,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266,4,['Timeout'],['Timeout']
Safety,"This is a follow-up to PR#1257827; https://sourceforge.net/tracker/?func=detail&aid=1257827&group_id=40728&atid=428740. The key problem is that formal charges should be assigned for some formats (e.g., XYZ) before aromaticity detection can occur. Many ""standard"" formats (e.g., SDF, SMILES) already have formal charges marked correctly, so this isn't an issue. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/940:226,detect,detection,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/940,1,['detect'],['detection']
Safety,"This may be related to issue #1551, but I tried using OBResidue's GetAtoms method because I'm trying to get the character code of the atoms in each residue. I can call the method and assign the result to a variable, but the result can't be indexed (has no __getitem__ attribute). Also, when I evaluate the variable in the interpreter, I get a message about a memory leak. I've tried demonstrating this behaviour below. ```; >>> r = mol.GetResidue(2); >>> r.GetNumAtoms(); 16; >>> r.GetAtoms(); <Swig Object of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *' at 0x105e14450>; >>> atom_list = r.GetAtoms(); >>> atom_list; swig/python detected a memory leak of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *', no destructor found.; <Swig Object of type 'std::vector< OpenBabel::OBAtom *,std::allocator< OpenBabel::OBAtom * > > *' at 0x105e14420>; >>> atom_list[1]; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: 'SwigPyObject' object has no attribute '__getitem__'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1552:666,detect,detected,666,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1552,1,['detect'],['detected']
Safety,"This problem arose with OpenBabel 2.2.3 on Ubuntu 10.04. When presented with a chiral SMILES whose chiral center is bonded to more than four neighbors, src/formats/smilesformat.cpp may overrun memory. A patch is attached. I'm not a chemist, so please pardon my lack of clarity :). I encountered the problem while using babel to convert a proprietary SMILES in which a chiral center was bonded to more than four other atoms. Here is a non-proprietary sample SMILES which helps demonstrate the problem:; [N@@]1234([C@@]9([C@H]1[C@H]3[C@@H]4[C@@H]29)). If this is saved to a file named problem.smi, and if babel is run under valgrind to convert the smiles to another format, valgrind will detect the memory overrun:; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; (See below for full valgrind output.). The attached patch for src/formats/smilesformat.cpp addresses the problem by resizing (ChiralSearch->second)->refs as needed. {{{; $ valgrind babel -i smi problem.smi -o sdf problem.sdf; ==4287== Memcheck, a memory error detector; ==4287== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==4287== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==4287== Command: babel -i smi problem.smi -o sdf problem.sdf; ==4287== ; ==4287== Invalid write of size 4; ==4287== at 0xC061A37: OpenBabel::OBSmilesParser::ParseComplex(OpenBabel::OBMol&) (smilesformat.cpp:2398); ==4287== by 0xC069DFA: OpenBabel::OBSmilesParser::ParseSmiles(OpenBabel::OBMol&) (smilesformat.cpp:988); ==4287== by 0xC06A3AB: OpenBabel::OBSmilesParser::SmiToMol(OpenBabel::OBMol&, std::string const&) (smilesformat.cpp:938); ==4287== by 0xC06AD27: OpenBabel::SMIBaseFormat::ReadMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (smilesformat.cpp:890); ==4287== by 0x4F0C864: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:93); ==4287== by 0x4EF5E67: OpenBabel::OBConversion::Convert() (obconversion.cpp:481); =",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1007:686,detect,detect,686,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1007,1,['detect'],['detect']
Safety,This pull request updates #1850. Currently this is a draft. - Add fragment index generator. I forgot to include it.; - Use ring fragments for better prediction.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1931:149,predict,prediction,149,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1931,1,['predict'],['prediction']
Safety,"This relates to reading the correct change and spin multiplicity when importing a Gaussian log file (.g03). The current implementation looks for the a line containing ""Symbolic Z-matrix:"" then reads the 3rd and 6th tokens from the next line, which usually says ""Charge = # Multiplicty = #"". Some log files do not contain the words ""Symbolic Z-matrix"", but follow a different format, such as:. Cartesian coordinates read from the checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. or. Redundant internal coordinates taken from checkpoint file:; checkpointfilename.chk; Charge = # Multiplicity = #. Molecules read from these log files end up with no charge or spin multiplicity set. Instead of looking for the line after ""Symbolic Z-matrix"", is there any harm in just looking for the line containing ""Multiplicity ="" ?. (The latter seems to work for all my files). Reported by: rhw27",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747:504,Redund,Redundant,504,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747,1,['Redund'],['Redundant']
Safety,"This should be possible and I will have a look at this. A quick look at the code shows that both the algorithm (use orbits of the permutation group) and performance can be improved (e.g. using a small vector optimization for inner loops, avoid dynamic allocated memory in general).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120:238,avoid,avoid,238,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/386#issuecomment-282087120,1,['avoid'],['avoid']
Safety,"This trivial patch (against OpenBabel 2.3.2 source) will prevent the segmentation fault, and produce what was probably the intended error message all along. It ought to be applicable to later versions and the Debian Jessie version, although the specific line number may differ. Prior to processing the .xml documents retrieved from PubChem (provided they all exist in a dedicated folder), executing this step,; ~~~; mv *.xml *.pc; ~~~; should make everything work fine. It would, of course, be of greater convenience were the .xml document opened (from which any number of heuristics could detect it is of the PubChem schema) and the format determined automatically. There appears an attempt to do something like this in the code, based on Namespace URI, although at the point **obprop** calls ReadMolecule(), the OutFormat is always NULL. Original comment by: stonelight",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1289#issuecomment-281804016:590,detect,detect,590,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1289#issuecomment-281804016,1,['detect'],['detect']
Safety,"This was a ""feature"" when it was deliberately introduced about six years ago. I'm not sure that it is so dangerous that it needs over-hasty reaction just before a release. To have input and output files the same:; - on the command line, you have deliberately typed the same file name twice.; - on the GUI you have been warned when you entered the output file name.; - in a program or a script, and the names are not explicit, maybe the program should be more carefully constructed to avoid unwanted overwriting. There are legitimate uses for having the input and output files the same. Suppose you wanted to add a new molecule from a mol file to an existing cml file. obabel thecmlfile.cml extra.mol -O thecmlfile.cml. does this very nicely, without the tedious file deletion and renaming that would be necessary if you couldn't have the output and input the same. Editors of all kinds routinely read and write to the same file. OB is an editor sometimes: make the hydrogens explicit:. obabel file.mol -O file.mol -h. The command-line is not set up for interactivity; it has be an acceptance or a prohibition. I would favour acceptance. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797492:484,avoid,avoid,484,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797492,1,['avoid'],['avoid']
Safety,This would be nice to fix before 2.3.0 and seems like a non-risky proposition. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797491:60,risk,risky,60,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1033#issuecomment-281797491,1,['risk'],['risky']
Safety,Thread-safe SMARTS matching (patch provided),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524:7,safe,safe,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524,1,['safe'],['safe']
Safety,Thread-safe version of objects,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269:7,safe,safe,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269,1,['safe'],['safe']
Safety,"To be honest, I don't like this. It's what I call automagic. It means that the software is making decisions over which the user has no control and which will only occur in particular circumstances. Either we should always add it, or never add it. This may fix the immediate problem, but I predict that at some point someone is going to regard this behaviour as a bug.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1828#issuecomment-384586603:289,predict,predict,289,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1828#issuecomment-384586603,1,['predict'],['predict']
Safety,"To follow up a little - from what I understand, in both cases (using `-h` and using `-p`) eventually `AddNewHydrogens(HydrogenType whichHydrogen, bool correctForPH, double pH)` [defined in mol.cpp](https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/src/mol.cpp#L2116) is called. While with `-h` the option `correctForPH` is set to false, with `-p` it is set to true, triggering the call of `CorrectForPH(pH)`. I assume this is where the residue names and numbers then get messed up. As mentioned, my actual use case is within a Python tool ([PLIP](https://github.com/pharmai/plip)), so I am looking for a solution that does not require additional programs, as I would like to avoid adding further dependencies.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618:710,avoid,avoid,710,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1970798618,1,['avoid'],['avoid']
Safety,"To whom it may concern My name is Alfredo Alba ( alba.alfredo@gmail.com) . Operating on Linux CentOS 5.4 and Fedora core 11, and 12. Have been using Open Babel over the JNI interface for a while and recently I found that when running in a concurrent environment it causes carashes. . I have tried SUN JVM 1.6 and IBM JVM 1.6 as well they both present the issue. . Essentially I am running a Web App with the LD_PRELOAD=/usr/loca/lib/libopenbabeljni.so option. . In this scenario when 2 Smile to InChI conversion calls execute simultaneously Sometimes Open babel produces the following Stack:. terminate called after throwing an instance of 'std::ios_base::failure'; what(): basic_ios::clear; JVMDUMP006I Processing dump event ""abort"", detail """" - please wait.; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp' in response to an event; Unhandled exception; Type=Segmentation error vmState=0x00020002; J9Generic_Signal_Number=00000004 Signal_Number=0000000b Error_Value=00000000 Signal_Code=00000001; Handler1=00002AAAAACE7310 Handler2=00002AAAAB06F720 InaccessibleAddress=0000000000000010; RDI=000000000000000C RSI=00000000000001B0 RAX=00000000000001B1 RBX=00002AACCC1EA730; RCX=000000000000000C RDX=0000000000000000 R8=00002AACCC000128 R9=0101010101010101; R10=0000000000000006 R11=0000000000200206 R12=00002AACCC000078 R13=00002AACCC000020; R14=0000000000000001 R15=0000000000000880; RIP=0000003F6F872B31 GS=0000 FS=0000 RSP=0000000041C86F30; EFlags=0000000000210202 CS=0033 RBP=0000000000000000 ERR=0000000000000006; TRAPNO=000000000000000E OLDMASK=0000000000000000 CR2=0000000000000010; xmm0 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm1 0000000000000000 (f: 0.000000, d: 0.000000e+00); xmm2 00002aacbc083b58 (f: 3154656000.000000, d: 2.318224e-310); xmm3 00002aacbc083ba5 (f: 3154656256.000000, d: 2.318224e-310); xmm4 00002aaaaae4a100 (f: 2867110144.000000, d: 2.317785e-310); xmm5 0000000000000000 (f: 0.000000, d: 0.000000e+00); xm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:727,abort,abort,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['abort'],['abort']
Safety,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2109:1072,avoid,avoid,1072,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109,1,['avoid'],['avoid']
Safety,Trunk fails aromatic detection,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963:21,detect,detection,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963,1,['detect'],['detection']
Safety,"UIFrame::OnConvert(wxCommandEvent&) + 2214; 8 libwx_baseu-3.0.dylib 	0x00000001038d520f wxEvtHandler::ProcessEventIfMatchesId(wxEventTableEntryBase const&, wxEvtHandler*, wxEvent&) + 93; 9 libwx_baseu-3.0.dylib 	0x00000001038d511a wxEventHashTable::HandleEvent(wxEvent&, wxEvtHandler*) + 124; 10 libwx_baseu-3.0.dylib 	0x00000001038d6459 wxEvtHandler::TryHereOnly(wxEvent&) + 73; 11 libwx_baseu-3.0.dylib 	0x00000001038d637c wxEvtHandler::ProcessEventLocally(wxEvent&) + 40; 12 libwx_baseu-3.0.dylib 	0x00000001038d630f wxEvtHandler::ProcessEvent(wxEvent&) + 185; 13 libwx_osx_cocoau_core-3.0.dylib	0x0000000103ba92b4 wxWindowBase::TryAfter(wxEvent&) + 112; 14 libwx_baseu-3.0.dylib 	0x00000001038d634a wxEvtHandler::ProcessEvent(wxEvent&) + 244; 15 libwx_osx_cocoau_core-3.0.dylib	0x0000000103ba92b4 wxWindowBase::TryAfter(wxEvent&) + 112; 16 libwx_baseu-3.0.dylib 	0x00000001038d634a wxEvtHandler::ProcessEvent(wxEvent&) + 244; 17 libwx_baseu-3.0.dylib 	0x00000001038d6553 wxEvtHandler::SafelyProcessEvent(wxEvent&) + 15; 18 libwx_osx_cocoau_core-3.0.dylib	0x0000000103a36dd6 wxButton::OSXHandleClicked(double) + 62; 19 libsystem_trace.dylib 	0x00007fffc16ebc41 _os_activity_initiate + 61; 20 com.apple.AppKit 	0x00007fffaa567770 -[NSApplication(NSResponder) sendAction:to:from:] + 456; 21 com.apple.AppKit 	0x00007fffaa0500d8 -[NSControl sendAction:to:] + 86; 22 com.apple.AppKit 	0x00007fffaa050000 __26-[NSCell _sendActionFrom:]_block_invoke + 136; 23 libsystem_trace.dylib 	0x00007fffc16ebc41 _os_activity_initiate + 61; 24 com.apple.AppKit 	0x00007fffaa04ff58 -[NSCell _sendActionFrom:] + 128; 25 com.apple.AppKit 	0x00007fffaa0928d9 -[NSButtonCell _sendActionFrom:] + 98; 26 libsystem_trace.dylib 	0x00007fffc16ebc41 _os_activity_initiate + 61; 27 com.apple.AppKit 	0x00007fffaa04e83c -[NSCell trackMouse:inRect:ofView:untilMouseUp:] + 2481; 28 com.apple.AppKit 	0x00007fffaa092616 -[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] + 798; 29 com.apple.AppKit 	0x00007fffaa04d1f7 -[NSCont",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742:3024,Safe,SafelyProcessEvent,3024,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742,1,['Safe'],['SafelyProcessEvent']
Safety,"Ultimately I think the solution is to rewrite that format to avoid this dependency. But in the meanwhile, looks like a reasonable fix.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853:61,avoid,avoid,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1894#issuecomment-434635853,1,['avoid'],['avoid']
Safety,"Unassigning, as this was assigned to me in error. (Assignment is done by developers when they start working on a problem to avoid duplication of effort.). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800247:124,avoid,avoid,124,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800247,1,['avoid'],['avoid']
Safety,"Use obabel instead of babel, which is deprecated. The handling of option parameters is much better and many of the current formats and ops rely on this. (It is also safer and has SMILES input built in.) Your example would be:; ./bin/obabel -:CC -O test.png -xp 300. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522:165,safe,safer,165,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522,1,['safe'],['safer']
Safety,"Using ""sudo"" for anything except the installation step is a mistake. It can lead to all sorts of problems that I am not going to debug. If you start over, avoid sudo, and send us the command-line, the CMakeCache.txt and output of make, we can take it from there. I note in passing that the CMakeCache.txt that you appended does not correspond to the command-line above (e.g. different PATHs).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1868#issuecomment-406587069:155,avoid,avoid,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1868#issuecomment-406587069,1,['avoid'],['avoid']
Safety,"Using babel 2.1.0. Defining sulphur radical SMILES in the way you can define carbon radicals doesn't work. We can define carbon radicals using explicit hydrogens and radical centres are correctly detected:. $ echo ""C[CH2]"" | babel -ismi -ocml; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C"" spinMultiplicity=""2""/>; <atom id=""a3"" elementType=""H""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a2 a4"" order=""1""/>; </bondArray>; </molecule>. Try doing the same for HOSO2 and the radical centre is ignored:. $ echo ""O[S](=O)=O"" | babel -ismi -ocml; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O""/>; <atom id=""a2"" elementType=""S""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""O""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""2""/>; <bond atomRefs2=""a2 a4"" order=""2""/>; </bondArray>; </molecule>. If you convert to InChI an extra hydrogen is inserted:. $ echo ""O[S](=O)=O"" | babel -ismi -oinchi; InChI=1/H2O3S/c1-4(2)3/h4H,(H,1,2,3). If you use the non-standard ""."" syntax it gets it right:. $ echo ""O[S.](=O)=O"" | babel -ismi -ocml; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O""/>; <atom id=""a2"" elementType=""S"" spinMultiplicity=""2""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""O""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""2""/>; <bond atomRefs2=""a2 a4"" order=""2""/>; </bondArray>; </molecule>. Reported by: donquix2003",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/749:196,detect,detected,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/749,1,['detect'],['detected']
Safety,"We should remove this format, as it duplicates smi and I did not update it; in the implicit H rewrite. On Sat, 14 Apr 2018, 12:16 Julien Nabet, <notifications@github.com> wrote:. > With master sources updated today, I could retrieve a bt:; > Error: attempt to subscript container with out-of-bounds index 2147483647,; > but container only holds 24 elements.; >; > Objects involved in the operation:; > sequence ""this"" @ 0x0x7fffffffc910 {; > type = std::__debug::vector<int, std::allocator >;; > }; >; > Program received signal SIGABRT, Aborted.; > __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > 51 ../sysdeps/unix/sysv/linux/raise.c: Aucun fichier ou dossier de ce type.; > (gdb) bt; > #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; > #1 <https://github.com/openbabel/openbabel/pull/1> 0x00007ffff7a54231 in; > __GI_abort () at abort.c:79; > #2 <https://github.com/openbabel/openbabel/pull/2> 0x00007ffff667e4d5 in; > ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; > #3 <https://github.com/openbabel/openbabel/pull/3> 0x00007ffff730d5d9 in; > std::__debug::vector<int, std::allocator >::operator[]; > (this=0x7fffffffc910, __n=2147483647) at /usr/include/c++/7/debug/vector:417; > #4 <https://github.com/openbabel/openbabel/pull/4> 0x00007fffe8282bbd in; > OpenBabel::OpenBabelCallback::setChiral (this=0x7fffffffc8d0, index=0,; > chirality=Smiley::AntiClockwise,; > chiralNbrs=std::__debug::vector of length 4, capacity 4 = {...}) at; > /home/julien/projects/openbabel/src/formats/smileyformat.cpp:140; > #5 <https://github.com/openbabel/openbabel/pull/5> 0x00007fffe8286e39 in; > Smiley::ParserOpenBabel::OpenBabelCallback::processStereochemistry; > (this=0x7fffffffc7b0); > at /home/julien/projects/openbabel/src/formats/smiley.h:2656; > #6 <https://github.com/openbabel/openbabel/pull/6> 0x00007fffe828475f in; > Smiley::ParserOpenBabel::OpenBabelCallback::parse (this=0x7fffffffc7b0,; > str=""[C@H]1(C@@HO)O\tInositol_trisphosphate"") at;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184:537,Abort,Aborted,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-381323184,2,"['Abort', 'abort']","['Aborted', 'abort']"
Safety,"We won't be changing our own Add/RemoveHydrogens to do this. The functionality you describe is outside the scope of Add/RemoveHydrogens() in a general purpose cheminformatics library. However, the required functionality can easily be implemented client-side by providing wrappers around the required functionality, e.g. NMRDATA::Add/RemoveHydrogens(OBMol*) which would call the relevant OBMol function and then have some extra code to update the sdf field. I should point out that this problem could have been entirely avoided by using a tag that didn't depend on atom order, but rather was based on intrinsic properties of the SDF file format, for example, involving atom labels rather than atom orders. These are invariant to operations on the molecule such as adding/removing hydrogens or rearranging the atoms in any other way.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1935#issuecomment-467479007:519,avoid,avoided,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1935#issuecomment-467479007,1,['avoid'],['avoided']
Safety,"Well I started writing a blog post, but when I looked into it closely, I thought I'd better trim a few of more obvious ones:. > There's an intial slow period where OB is loading the plugins (or at least, that's my interpretation). Focusing on the plateau, it seems that 63% of the time is spent writing the molecule, while 31% is spent reading. This is both good and bad; I would have expected reading to be slower than writing, due to the associated mallocing; on the other hand, it may indicate that there is potential for optimising.; >; > Stepping down through the functions, there are some obvious small gains. 1.6% of the total time is spent copying the description of the format so that the first portion can be used in an audit message. The fix here is probably to get rid of audit messages altogether, although avoiding the copy would an alternative. 3.4% of the time is spent on writing std::endl to the output buffer. ""\n"" might be a sensible alternative, though one could imagine having the option if you really needed it.; > ; > In the main part of the writer (52.3% of total), 10.2% is spent on CreateCisTrans, while 38.2% is spent on the meat of the writing. That 10.2% is suspicious; when you look into it, almost all the time is spent on FindSmallestRing, which in turn calls GetSSSR(). Rumour has it that SSSR is the root of all evil, and so I'm pretty sure this can be avoided.; > ; > As regards the 38.2%, ToCansmilesString() is 14.4%, BuildCanonTree() is 8.8% and operator << is 10.5% (!). That last one puzzled me, but then I found it. This is the generation of a string containing the canonical atom order. Wow, stringstream is slow. I think we can do something about this, like avoid it altogether unless requested (in which case, avoid stringstream).; > ; > Another optimisation in multiple places would be to cache the values of various options to avoid multiple lookups of the option map (2.3% in total).; > ; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180:820,avoid,avoiding,820,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347037180,5,['avoid'],"['avoid', 'avoided', 'avoiding']"
Safety,"Well the list of messages gets larger now that i started from scratch, but still it comes to the same conclusion. cmake -DCMAKE_INSTALL_PREFIX=/home/henritzi/build ~/src/openbabel; -- The C compiler identification is GNU; -- The CXX compiler identification is GNU; -- Check for working C compiler: /usr/bin/gcc; -- Check for working C compiler: /usr/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Using included inchi library.; -- WARNING: you are using the obsolete 'PKGCONFIG' macro use FindPkgConfig; -- Found LibXml2: /usr/lib/libxml2.so; -- Found ZLIB: /usr/lib/libz.so; -- Found wxWidgets: TRUE; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found.; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found.; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645:371,Detect,Detecting,371,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800645,4,['Detect'],['Detecting']
Safety,"Well, I don't think spglib has the transforms. I don't know completely how it works, but I know it detects symmetry in the crystal and then assigns a space group based off the symmetry. The transforms are usually used for generating a crystal with symmetry (like filling a unit cell). I was using Bilbao to find the transforms. For example, for space group 210, here is one: http://www.cryst.ehu.es/cgi-bin/cryst/programs/nph-getgen?what=text&gnum=210. However, it is somewhat tricky to do. Bilbao only has the space groups organized as the 230 fundamental space group numbers. In Open Babel and spglib, though, we have the space groups organized as 530 hall numbers (several of which are just a different representation of the same space group, which is why there are extra). In some cases, there is only one Hall number that matches an international number, so that is easy to pair. other cases may not be, though. For the tests I did, I was filling a unit cell with Avogadro using the Open Babel transforms, and then I was just detecting the space group with spglib to make sure the right space group was being detected. Anyways, I think it'd be better if we found somewhere else to get the transforms from so it'd be less complicated. I just don't know where yet...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983:99,detect,detects,99,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983,3,['detect'],"['detected', 'detecting', 'detects']"
Safety,"Well, the PR is in a state where it feels quite safe. I would prefer to rebase it in another branch and clean up the fixup commits. I added a -xS option to output to ball&stick, and the aromatic rendering. Please feel free to comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/202#issuecomment-124861251:48,safe,safe,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/202#issuecomment-124861251,1,['safe'],['safe']
Safety,"When `OBSmartsPattern::Init()` is called more than once in one object, a memory leak occurs. ## Environment Information; Open Babel version: Current master (`699a54e`); Operating system and version: Ubuntu 16.04. ## Steps to Reproduce; 1. Save the following code `leak.cpp`.; ```cpp; #include <openbabel/parsmart.h>. int main() {; OpenBabel::OBSmartsPattern sp;; sp.Init(""CC"");; sp.Init(""CO"");; }; ```; 2. Compile `leak.cpp` with sanitize flags; ```; g++ -g -fsanitize=address -fno-omit-frame-pointer -Wall -I /usr/local/include/openbabel-2.0/ -L /usr/local/lib/openbabel/2.4.90/ leak.cpp -o leak -lopenbabel; ```; 3. Execute the compiled program. The output in my environment was:; ```; $ ./leak . =================================================================; ==11385==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 48 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63ba27d in OpenBabel::OBSmartsPattern::ParseSMARTSPattern() (/usr/local/lib/libopenbabel.so.5+0x17427d). Indirect leak of 104 byte(s) in 1 object(s) allocated from:; #0 0x7f57a67786b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2); #1 0x7f57a63b8fa1 in OpenBabel::CreateAtom(OpenBabel::Pattern*, OpenBabel::_AtomExpr*, int, int) (/usr/local/lib/libopenbabel.so.5+0x172fa1). Indirect leak of 48 byte(s) in 2 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b7743 in OpenBabel::OBSmartsPattern::ParseSimpleAtomPrimitive() (/usr/local/lib/libopeParseSMARTSPartnbabel.so.5+0x171743). Indirect leak of 24 byte(s) in 1 object(s) allocated from:; #0 0x7f57a6778532 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99532); #1 0x7f57a63b9965 in OpenBabel::OBSmartsPattern::SMARTSParser(OpenBabel::Pattern*, OpenBabel::ParseState*, int, int) (/usr/local/lib/libopenbabel.so.5+",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869:797,detect,detected,797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869,1,['detect'],['detected']
Safety,"When bond-type 4 is detected, it is changed to 5 for internal storage (see formats/mdlformat.cpp:500). I believe bond-type 5 is a sort of internal ""this might be aromatic"" flag. After parsing, kekulize.cpp changes these to single/double. My guess is that some ""implicit-H-perceived"" flag isn't getting set if the bond-type == 5 during kekulization. It seems right that BOSum() + GetImplicitHydrogenCount() would be constant under normal valence situations ... but ""constant"" is tricky with S, P, N and so forth, e.g. with double-bonded oxygens. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1300#issuecomment-281804205:20,detect,detected,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1300#issuecomment-281804205,1,['detect'],['detected']
Safety,"When reading a line beginning with ""ATOM"" or ""HETATM"" in PDB file,; openbabel computes element from atom name field instead of element field. Here some extract of PDB documentation :; ""Therefore the PDB element column or mmCIF type_symbol data item should; be used to determine the element type, rather than using the atom name.""; (April 25, 2007); http://remediation.wwpdb.org/documentation/remediation_overview.pdf; ""Using the justification of the atom name to derive atom type; information is now strongly discouraged."" (June 29, 2007); http://remediation.wwpdb.org/documentation/remediation-impacts.pdf. Source code (ParseAtomRecord function) :; https://openbabel.svn.sourceforge.net/svnroot/openbabel/openbabel/trunk/src/formats/atomrecord.cpp . Patch explanation :; ParseAtomRecord is called when reading PDB file and PQR format because ""[PQR] format is a modification of the PDB format"" ).; In fact PDD and PQR formats are not so identical, for example in HETATM/ATOM lines, element field is mandatory for PDB format while PQR format doesn't mention it.; PDB format:; http://www.wwpdb.org/documentation/format32/sect9.html#ATOM; PQR format:; http://apbs.sourceforge.net/doc/user-guide/index.html#pqr-format. With this patch :; - PDB format and PQR format have each one their own ParseAtomRecord function (atomrecord.cpp is deleted) ; - Callers of ParseAtomRecord take care of returned value; - read/write PDB field charge (column 79-80). Please let me know if you see possible improvements. What is the coding style (code appearance) for openbabel ?. Reported by: lleell00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840:356,remediat,remediation,356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840,3,['remediat'],"['remediation', 'remediation-impacts']"
Safety,"When using MCDL to generate 2D images, valgrind reports a large number of conditional jumps that rely in uninitialized memory. Looking at the code (mcdlutil.cpp), these seem to be related to the TEditedMolecule class variables: fIOPT10, fIOPT11, fIOPT12 and fIOPT13, which don't seem to ever be set to any value. Below is the (partial) output from this command:. echo ""CCO"" | valgrind babel -i smi -o sdf --gen2d. ==7281== Memcheck, a memory error detector; ==7281== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==7281== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==7281== Command: babel -i smi -o sdf --gen2d; ==7281== ; ==7281== Conditional jump or move depends on uninitialised value(s); ==7281== at 0x52AA4E4: OpenBabel::TEditedMolecule::prepareQuery(OpenBabel::TSimpleMolecule&) (mcdlutil.cpp:4510); ==7281== by 0x52C22D5: OpenBabel::TemplateRedraw::TemplateRedraw() (mcdlutil.cpp:5217); ==7281== by 0x52C2E38: OpenBabel::generateDiagram(OpenBabel::OBMol*) (mcdlutil.cpp:6117); ==7281== by 0x126E05ED: OpenBabel::OpGen2D::Do(OpenBabel::OBBase*, char const*, std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (gen2D.cpp:54); ==7281== by 0x5335725: OpenBabel::OBMol::DoTransformations(std::map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<std::string const, std::string> > > const*, OpenBabel::OBConversion*) (op.h:89); ==7281== by 0x5340A02: OpenBabel::OBMoleculeFormat::ReadChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:113); ==7281== by 0x52E1147: OpenBabel::OBConversion::Convert() (obconversion.cpp:465); ==7281== by 0x52E182C: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:398); ==7281== by 0x52E78E5: OpenBabel::OBConversion::FullConvert(std::vector<std::string, std::allocator<std::string> >&, std::string&, std::vector<std::strin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1178:448,detect,detector,448,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1178,1,['detect'],['detector']
Safety,"With master sources updated today, I could retrieve a bt:; Error: attempt to subscript container with out-of-bounds index 2147483647, ; but container only holds 24 elements. Objects involved in the operation:; sequence ""this"" @ 0x0x7fffffffc910 {; type = std::__debug::vector<int, std::allocator<int> >;; }. Program received signal SIGABRT, Aborted.; __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; 51	../sysdeps/unix/sysv/linux/raise.c: Aucun fichier ou dossier de ce type.; (gdb) bt; #0 __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51; #1 0x00007ffff7a54231 in __GI_abort () at abort.c:79; #2 0x00007ffff667e4d5 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #3 0x00007ffff730d5d9 in std::__debug::vector<int, std::allocator<int> >::operator[] (this=0x7fffffffc910, __n=2147483647) at /usr/include/c++/7/debug/vector:417; #4 0x00007fffe8282bbd in OpenBabel::OpenBabelCallback::setChiral (this=0x7fffffffc8d0, index=0, chirality=Smiley::AntiClockwise, ; chiralNbrs=std::__debug::vector of length 4, capacity 4 = {...}) at /home/julien/projects/openbabel/src/formats/smileyformat.cpp:140; #5 0x00007fffe8286e39 in Smiley::Parser<OpenBabel::OpenBabelCallback>::processStereochemistry (this=0x7fffffffc7b0); at /home/julien/projects/openbabel/src/formats/smiley.h:2656; #6 0x00007fffe828475f in Smiley::Parser<OpenBabel::OpenBabelCallback>::parse (this=0x7fffffffc7b0, ; str=""[C@H]1([C@@H]([C@H]([C@@H]([C@H]([C@@H]1OP(=O)(O)O)O)OP(=O)(O)O)OP(=O)(O)O)O)O\tInositol_trisphosphate"") at /home/julien/projects/openbabel/src/formats/smiley.h:2717; #7 0x00007fffe827fb4b in OpenBabel::SmileyFormat::ReadMolecule (this=0x7fffe84b6af0 <OpenBabel::theSmileyFormat>, pOb=0x55555579f1f0, pConv=0x7fffffffe470); at /home/julien/projects/openbabel/src/formats/smileyformat.cpp:364; #8 0x00007ffff757896b in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl (pConv=0x7fffffffe470, pFormat=0x7fffe84b6af0 <OpenBabel::theSmileyFormat>); at /home/julien/projects/openb",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-381322015:341,Abort,Aborted,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-381322015,2,"['Abort', 'abort']","['Aborted', 'abort']"
Safety,"With openbabel sources updated today, I've got this; ASAN:DEADLYSIGNAL; '=================================================================; ==8994==ERROR: AddressSanitizer: SEGV on unknown address 0x55a2cecbd435 (pc 0x7fb250916094 bp 0x7fff308992b0 sp 0x7fff30898a28 T0); ==8994==The signal is caused by a WRITE memory access.; #0 0x7fb250916093 (/lib/x86_64-linux-gnu/libc.so.6+0xa1093); #1 0x7fb25188054d (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x7754d); #2 0x7fb2512e6503 in std::char_traits<char>::copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/char_traits.h:350; #3 0x7fb2512f014b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.h:340; #4 0x7fb251320497 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.tcc:440; #5 0x7fb25131fe5e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) /usr/include/c++/7/bits/basic_string.h:1420; #6 0x7fb25131f7aa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) /usr/include/c++/7/bits/basic_string.h:694; #7 0x7fb2514f0a6f in OpenBabel::OBSmartsPattern::Init(char const*) /home/julien/projects/openbabel/src/parsmart.cpp:1722; #8 0x55a2cecbd2f5 in main /home/julien/projects/openbabel/testjul/leak.cpp:5; #9 0x7fb250897b16 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x22b16); #10 0x55a2cecbd169 in _start (/home/julien/projects/openbabel/testjul/leak+0x1169). AddressSanitizer can not provide additional info.; SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0xa1093) ; ==8994==ABORTING; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434:1828,ABORT,ABORTING,1828,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434,1,['ABORT'],['ABORTING']
Safety,"Without working knowledge about the `.fasta` format, I simply provided a sequence like `ATCG`, requested to OpenBabel to convert this into a joined SMILES string (`-j`, or `--join`) and to write a `.sdf` for visual inspection in Jmol, too. The result is ambivalence. For one, the result already looks «DNA-like» in a ladder-like motif:. ![test](https://user-images.githubusercontent.com/19709084/116211601-831fc480-a733-11eb-8511-1cec5160032b.png). For the other side, the output is about _two_ molecules instead of the single one I anticipated. In the SMILES, this is marked by the dot laying on the floor; this syntax pattern is seen elsewhere, e.g., to describe co-crystals (presence of more than one molecule in a model, for example a remaining solvent molecule), too. So I speculate, this is / might be «common sense» for the typical user of `.fasta` files (which I'm not), not necessarily an error in OpenBabel. It can't be all day Fortran (for its typical leading safeguard instruction `implicit none`) ... [2021-04-27.zip](https://github.com/openbabel/openbabel/files/6383115/2021-04-27.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933:971,safe,safeguard,971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933,1,['safe'],['safeguard']
Safety,Wrong space group detection,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/263:18,detect,detection,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/263,1,['detect'],['detection']
Safety,"XLC is rather strict about syntax:. [ 18%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll.o; [ 18%] Building C object src/formats/libinchi/CMakeFiles/inchi.dir/inchi_dll_a.o; ""/home/jhammond/OPENBABEL/openbabel/src/formats/libinchi/ikey_dll.c"", line 265.10: 1506-342 (W) ""/*"" detected in comment. Merge in the following to fix this issue. https://github.com/jeffhammond/openbabel/commit/16fa16a1199927712c9bdc4133ada50087e84f5d. Thanks,. Jeff. Reported by: @jeffhammond. Original Ticket: [openbabel/bugs/925](https://sourceforge.net/p/openbabel/bugs/925)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1305:299,detect,detected,299,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1305,1,['detect'],['detected']
Safety,"Yes, it was my typo and it indeed makes an index file without any problem. The substructure search in the original example seems to work fine but it produces a bunch of message as follows. I am using CMake 2.8.0 and recompile OpenBabel today in case there may be some changes in codes. However, I encounter the same error messages during the “make test” process. Once Noel update the wiki, I will set up environments and test it. Makio. ----------------. $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; 1 candidates from fingerprint search phase. 1 molecule converted. 1 info messages 57 audit log messages . *** glibc detected *** babel: double free or corruption (!prev): 0x000000000755ed10 ***. ======= Backtrace: =========. /lib64/libc.so.6[0x3cd4a722ef]. /lib64/libc.so.6(cfree+0x4b)[0x3cd4a7273b]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae442328]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae5e6164]. /lib64/libc.so.6(__cxa_finalize+0x8e)[0x3cd4a3368e]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae43ee56]. ======= Memory map: ========. 00400000-00405000 r-xp 00000000 fd:00 30900304 /path/to/local/bin/babel. 00605000-00606000 rw-p 00005000 fd:00 30900304 /path/to/local/bin/babel. 07516000-07610000 rw-p 07516000 00:00 0 . 3cd4600000-3cd461c000 r-xp 00000000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481b000-3cd481c000 r--p 0001b000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481c000-3cd481d000 rw-p 0001c000 fd:00 90997106 /lib64/ld-2.5.so. 3cd4a00000-3cd4b4d000 r-xp 00000000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4b4d000-3cd4d4d000 ---p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d4d000-3cd4d51000 r--p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d51000-3cd4d52000 rw-p 00151000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d52000-3cd4d57000 rw-p 3cd4d52000 00:00 0 . 3cd4e00000-3cd4e82000 r-xp 00000000 fd:00 90997114 /lib64/libm-2.5.so. 3cd4e82000-3cd5081000 ---p 00082000 fd:00 90997114 /lib64/libm-2.5.so. 3cd5081000-3cd5082000 r--p 00081000 fd:00 90997114 /lib64/libm-2.5.so. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:631,detect,detected,631,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['detect'],['detected']
Safety,"Yes, we definitely want a check to detect such fragments in the future. I'll go back later today and look through the fragment generator and figure out why it created these too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362:35,detect,detect,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362,1,['detect'],['detect']
Safety,"You need to keep a reference to the molecule if you are accessing its; atoms. Otherwise the atom is destroyed when the molecule goes out of scope. On 19 Jul 2017 2:50 a.m., ""Geoff Hutchison"" <notifications@github.com>; wrote:. > Seriously, I'm not sure why anyone would want to do that. Why would you; > want to re-parse the same string repeatedly?; >; > But what you're doing later is just bad code. You're parsing a molecule; > that Python probably treats as a temporary. Then you grab an atom; > reference. That's still probably a temporary. Then you put that into a list.; >; > Then *after* putting all those atom references in a list, you interrogate; > them? I'm not surprised it leads to weird behavior. Python (and the SWIG; > interface) can't determine whether the temporary can be free, so it; > probably frees some of them. Now you're asking for valence on some; > undefined C++ pointer.; >; > What exactly are you trying to do? Then we can probably come up with a; > safe way to do that.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1602#issuecomment-316248688>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGelHVyH_Q3jXPmhX3bRQYeEp2NDWks5sPWDQgaJpZM4OXSC1>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990:979,safe,safe,979,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-316469990,1,['safe'],['safe']
Safety,"Your are right! A user can handle the functionality by himself, that's what I did in my own code to fix the bug. From another side, I think that convenience is important part of any libraries API. Users used to have such functionality: dictionaries in python, boost property tree etc. all of them have get(<default>) methods in API. I hope, that the solution I've proposed can be safe and convenient solution for users of your package (feedback is very welcome).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709:380,safe,safe,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709,1,['safe'],['safe']
Safety,"You’re welcome to make whatever changes you think are necessary, as long as all the tests get included eventually using the standard install procedure. IMO, it’s really really really important to have a suite of tests that _don’t_ fail to avoid unknown regressions. This is a sampling of pdb ligands, which is highly representative of what many people use openbabel for. I’m curious how you are getting such poor times. I just did a clean checkout and the times seem quite reasonable (<30s to clone and <1s to git status):; naboo:tmp dkoes$ time git clone git://github.com/openbabel/openbabel.git; Cloning into 'openbabel'...; remote: Enumerating objects: 9, done.; remote: Counting objects: 100% (9/9), done.; remote: Compressing objects: 100% (9/9), done.; remote: Total 78506 (delta 2), reused 1 (delta 0), pack-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:239,avoid,avoid,239,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,1,['avoid'],['avoid']
Safety,"```; import pybel. mA = pybel.readstring(""smi"", ""C(=O)([O-])C(=O)O""). print (mA.write(""smi"", opt={""I"" : True})); print (mA.write(""smi"", opt={""U"" : True})); ```. I expected this code to print the inchified SMILES form of the molecule followed by the universal SMILES form. In fact it works when the order of the write operations is reversed. But this ordering leads to abnormal program termination:. matt@mbe-laptop:~$ python pybel-bug.py ; C(=O)(C(=O)O)[O-] . terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check; Aborted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135:560,Abort,Aborted,560,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135,1,['Abort'],['Aborted']
Safety,"alias.cpp contains code that replaces some groups defined in superatom.txt file, with the corresponding aliases, like C(=O)C with Ac. The aliases from superatom.txt are always considered protonated, and implicit hydrogens are added to them to avoid replacing fragments in the middle of the molecule, so e.g. C(=O)CC should not be replaced with Ac. However, the molecule of interest can lack implicit hydrogens. In case of non-protonated molecules, out of range error can happen here:. `int id =(pmol->GetAtom(idx))->GetId();`. when it tries to find and remove all atoms found in alias including hydrogens lacking in the molecule. So idx can easily exceed the number of atoms in pmol. It causes out of bounds error and segfault as shown in my minimal example in issue description. Guess that incorrect behavior rather than segfault can also be a result.; The fix creates a protonated copy of the molecule to find numbers of all atoms that should be stripped and replaced with aliases. Hydrogens that have numbers above number of atoms in original molecule are ignored. This should ensure that hydrogens present in the original molecule are retained.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102:243,avoid,avoid,243,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102,1,['avoid'],['avoid']
Safety,"at openbabel generated up to now, versus the canonicals that are generated now for organometallic compounds. For further details consult my personal [repository for my end-of-degree project](https://github.com/Jesnm01/TFG) and in particular the [pdf document](https://mega.nz/file/FPJkhJga#ZU-TXKrflhvMlD_9RLcnW0eJ8yV8RCQG4e08vYytXXk) for the project. Bear in mind that the pdf document as well as most of the explanatory comments that I make in the code are in Spanish, so if not familiar with the language it may be difficult to understand it directly. Most relevant sections of the pdf are chapter 4.2 and chapter 5. Looking at the sizes of the other pull requests, I understand that the changes I propose are quite large and many features need to be revised or even rejected entirely. These are the classes to which I added new variables or methods:; - Added new features or variables to these classes:; - _OBMol_; - _OBAtom_; - _OBMol2Cansmi_; - _OBCanSmiNode_; - _SVGPainter_ (consecuently to _OBPainter_, _ASCIIPainter_ and _CommandPainter_); - Added these new classes:; - _CpComplex_: handle and define Cp (cyclopentadienyl) structures; - _BranchBlock_: detect branches during the canonicalization process, mainly for Cp depiction purposes; - _OpCpDraw_: plugin operation for identification and Cp storing inside the molecule for its later depiction.; - _SubTreeSizes_: helping struct for new organometallic canonicalization method.; - _subtreecomp_ and _mycomp_: custom comparator objects for the new organometallic canonicalization method.; - Modified some methods such as _CreateCansmiString_ or _OBDepict::DrawMolecule_ (among others) to fit in the new code. Modifications have comments above starting with '//New:' explaining them. In case its relevant, I've been working in Visual Studio C++ 2022 for Windows. . Let me know any concerns regarding the code.; Right now I don't have a lot of time to dedicate to this project, so I may not be able to quickly address any changes requested.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616:2331,detect,detect,2331,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616,1,['detect'],['detect']
Safety,"ava-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf717a50]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d1c3]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf72d2b0]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf732aa5]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf7654f1]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf765427]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9prt24.so [0x2aaaab06ee21]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9gc24.so [0x2aaaaf76546b]; /opt/ibm/ibm-java-x86_64-60/jre/lib/amd64/default/libj9thr24.so [0x2aaaaae4efd6]; /lib64/libpthread.so.0 [0x3f70006617]; /lib64/libc.so.6(clone+0x6d) [0x3f6f8d3c2d]; ---------------------------------------; JVMDUMP006I Processing dump event ""gpf"", detail """" - please wait.; JVMDUMP010I System dump written to /localdata/tomcat55/bin/core.20100328.223821.420.0001.dmp; JVMDUMP032I JVM requested Snap dump using '/localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc' in response to an event; JVMDUMP010I Snap dump written to /localdata/tomcat55/bin/Snap.20100328.223821.420.0003.trc; JVMDUMP032I JVM requested Java dump using '/localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt' in response to an event; JVMDUMP032I JVM requested System dump using '/localdata/tomcat55/bin/core.20100328.223821.420.0002.dmp' in response to an event; JVMDUMP010I Java dump written to /localdata/tomcat55/bin/javacore.20100328.223821.420.0004.txt; JVMDUMP013I Processed dump event ""abort"", detail """". The following smiles are instances where concurrent execution causes the issue:. [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: O1CCOCC1 From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: OS(=O)O From smi to inchi; [ Sun Mar 28 22:38:20 PDT 2010 ] Attempting to convert: C([C@@H](N)CCCCN)(=O)O From smi to inchi. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/979:5825,abort,abort,5825,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/979,1,['abort'],['abort']
Safety,avoid non-finite bond vectors,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981:0,avoid,avoid,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981,1,['avoid'],['avoid']
Safety,buffer overflows detected,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/821:17,detect,detected,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/821,1,['detect'],['detected']
Safety,"d-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_CXX_FLAGS=-mtune=generic -march=x86-64 -g2 -O2 -pipe -fPIC -fno-omit-frame-pointer -fexceptions -D_FORTIFY_SOURCE=2 -fstack-protector --param ssp-buffer-size=32 -fasynchronous-unwind-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_LD_FLAGS=-Wl,--copy-dt-needed-entries -Wl,-O1 -Wl,-z,relro -Wl,-z,now -Wl,-z,max-page-size=0x1000' -DCMAKE_LIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr .; -- The C compiler identification is GNU 6.4.0; -- The CXX compiler identification is GNU 6.4.0; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Using included inchi library.; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.4"") ; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -L/usr/lib64;-pthread;-Wl,--copy-dt-needed-entries;-Wl,-O1;-Wl,-z,relro;-Wl,-z,now;;-L/usr/lib64;;-lwx_baseu-2.8;-lwx_gtk2u_core-2.8;-lwx_gtk2u_adv-2.8 (found version ""2.8.12"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - found; -- Looking for regex.h; -- Looking for r",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:1200,Detect,Detecting,1200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,8,['Detect'],['Detecting']
Safety,d:00 30968915 /path/to/local/lib/openbabel/2.2.99/pcmodelformat.so. 2b0db9b06000-2b0db9b07000 rw-p 00006000 fd:00 30968915 /path/to/local/lib/openbabel/2.2.99/pcmodelformat.so. 2b0db9b07000-2b0db9b18000 r-xp 00000000 fd:00 30968862 /path/to/local/lib/openbabel/2.2.99/gamessformat.so. 2b0db9b18000-2b0db9d18000 ---p 00011000 fd:00 30968862 /path/to/local/lib/openbabel/2.2.99/gamessformat.so. 2b0db9d18000-2b0db9d19000 rw-p 00011000 fd:00 30968862 /path/to/local/lib/openbabel/2.2.99/gamessformat.so. 2b0db9d19000-2b0db9d1f000 r-xp 00000000 fd:00 30968904 /path/to/local/lib/openbabel/2.2.99/ghemicalformat.so. 2b0db9d1f000-2b0db9f1e000 ---p 00006000 fd:00 30968904 /path/to/local/lib/openbabel/2.2.99/ghemicalformat.so. 2b0db9f1e000-2b0db9f1f000 rw-p 00005000 fd:00 30968904 /path/to/local/lib/openbabel/2.2.99/ghemicalformat.so. 2b0db9f1f000-2b0db9f2b000 r-xp 00000000 fd:00 30968926 /path/to/local/lib/openbabel/2.2.99/chemdrawcdx.so. 2b0db9f2b000-2b0dba12b000 ---p 0000c000 fd:00 30968926 /path/to/local/lib/openbabel/2.2.99/chemdrawcdx.so. 2b0dba12b000-2b0dba12c000 rw-p 0000c000 fd:00 30968926 /path/to/local/lib/openbabel/2.2.99/chemdrawcdx.so. 2b0dba12c000-2b0dba131000 r-xp 00000000 fd:00 30968867 /path/to/local/lib/openbabel/2.2.99/hinformat.so. 2b0dba131000-2b0dba331000 ---p 00005000 fd:00 30968867 /path/to/local/lib/openbabel/2.2.99/hinformat.so. 2b0dba331000-2b0dba332000 rw-p 00005000 fd:00 30968867 /path/to/local/lib/openbabel/2.2.99/hinformat.so. 2b0dba332000-2b0dba337000 r-xp 00000000 fd:00 30968917 /path/to/local/lib/openbabel/2.2.99/shelxformat.so. 2b0dba337000-2b0dba537000 ---p 00005000 fd:00 30968917 /path/to/local/lib/openbabel/2.2.99/shelxformat.so. 2b0dba537000-2b0dba538000 rw-p 00005000 fd:00 30968917 /path/to/local/lib/openbabel/2.2.99/shelxformat.so. 7ffffc6a4000-7ffffc6c5000 rw-p 7ffffc6a4000 00:00 0 [stack]. ffffffffff600000-fffffff; Aborted. --------------------------------. $ more out.smi ; n1c(nc2c(c1N(C)C)cccc2)c1c(O)cccc1. Original comment by: makio323,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:33621,Abort,Aborted,33621,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,1,['Abort'],['Aborted']
Safety,"e C(=O)N; [#6D3^2]([#8D1])([#7])*		0 1 2 0 2 1 0 3 1; # Seleninic acid Se(=O)OH; [#34D3^2]([#8D1])([#8])*		0 1 2 0 2 1 0 3 1; # Thioacid / Thioester C(=O)S; [#6D3^2]([#8D1])([#16])*		0 1 2 0 2 1 0 3 1; # dithioacid / dithioester C(=S)S; [#6D3^2]([#16D1])([#16])*		0 1 2 0 2 1 0 3 1; # thioamide C(=S)N; [#6D3^2]([#16D1])([#7])*		0 1 2 0 2 1 0 3 1 . ^^^ these are fixes for the multi-match problem, look; for example at the attached cs3.pdb, which is typed as; C(=S)(=S)S without the fix. >replace; # amidine -C(=NH)NH2; # (only need to deal with case with implicit hydrogens); # (the code can figure out the other case by itself); [#6D3][#7D1][#7D1]	 0 1 2 0 2 1. # guanidinium (place C=N towards C-N-C nitrogen); # as in amidine, only need to deal with case with; implicit hydrogens; [#7D2][#6D3]([#7D2])[#7D2]	0 1 1 1 2 2 1 3 1; >with; # guanidinium and amidine -C(=NH)NH2 without hydrogens; [#6D3^2;!R]([#7D1H0;!R])([#7;!R])*	0 1 2 0 2 1 0 3 1; # and also with hydrogens; # (this can normally be figured out, but is needed to; avoid matching the next SMARTS); [#6D3^2;!R]([#7D2H1;!R])([#7;!R])*	0 1 2 0 2 1 0 3 1; # and also with more hydrogens than normal (protonated); [#6D3^2;!R]([#7D3H2;!R])([#7;!R])*	0 1 2 0 2 1 0 3 1; # Schiff base, protonated; [#6D3^2;!R]([#1,#6])([#1,#6])[#7D3^2;!R]([#1])[#6]	0 1; 1 0 2 1 0 3 2 3 4 1 3 5 1. ^^^ The original guanidinium pattern never worked (why; 3 times [#7D2] if no hydrogens are present?), things; also went wrong for PDB files with explicit hydrogens:; If the guanidinium group was protonated, Babel didn't; add a double bond, but a hydrogen to the central; guanidinium carbon. The '!R' turned out to be important; for typing heterocycles, which often contain parts that; look similar. >replace; # heme / porphyrin or phthalocyanine (yes, it's a long; pattern); # 0 1 2 3 4 5 6 7 8 9 10 11 12; 13 14 15 16 17 18 19 20 21 22 23; [#6]1(*[#6]([#7]2)[#6][#6][#6]2*[#6]3[#6][#6][#6]4[#7]3)[#6][#6][#6](*[#6]5[#6][#6][#6]([#7]5)*4)[#7]1; 	0 1 2 1 2 1 2 3 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/475:1764,avoid,avoid,1764,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/475,1,['avoid'],['avoid']
Safety,"e problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely better. Until then, the hash approach proves the point and required only small changes to the source. Thanks for looking into this and giving advice! I'll add a commit for the atom-label hash tonight, and hopefully get an octree running by the end of the week. Cheers,; Pat",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:1455,detect,detection,1455,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,1,['detect'],['detection']
Safety,"error with building trunk on slackware 14rc1 (eigen2 2.0.10); [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/distgeom.o; cd /tmp/SBo/trunk/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_SHARED_POINTER -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/trunk/build/include -I/tmp/SBo/trunk/data -I/tmp/SBo/trunk/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.2\"""" -o CMakeFiles/openbabel.dir/distgeom.o -c /tmp/SBo/trunk/src/distgeom.cpp; In file included from /tmp/SBo/trunk/src/distgeom.cpp:22:0:; /tmp/SBo/trunk/include/openbabel/distgeom.h:32:23: фатальная ошибка: Eigen/Dense: Нет такого файла или каталога; компиляция прервана. (cyrillic message is ""fatal error: Eigen/Dense: no such file or directory compilation aborted). with building 2.3.1 on the same system:; [ 18%] Building CXX object src/CMakeFiles/openbabel.dir/math/align.o; cd /tmp/SBo/openbabel-2.3.1/build/src && /usr/bin/c++ -DMAKE_OBDLL -DUSING_DYNAMIC_LIBS -DHAVE_LIBZ -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D__WXGTK__ -DHAVE_WXWIDGETS -DHAVE_EIGEN -O2 -march=i486 -mtune=i686 -pthread -O3 -DNDEBUG -O2 -DNDEBUG -fPIC -isystem /usr/lib/wx/include/gtk2-unicode-release-2.8 -isystem /usr/include/wx-2.8 -I/tmp/SBo/openbabel-2.3.1/build/include -I/tmp/SBo/openbabel-2.3.1/data -I/tmp/SBo/openbabel-2.3.1/include -I/usr/include/eigen2 -DOB_MODULE_PATH=""\""/usr/lib/openbabel/2.3.1\"""" -o CMakeFiles/openbabel.dir/math/align.o -c /tmp/SBo/openbabel-2.3.1/src/math/align.cpp; In file included from /usr/include/eigen2/Eigen/Core:99:0,; from /tmp/SBo/openbabel-2.3.1/include/openbabel/math/align.h:26,; from /tmp/SBo/openbabel-2.3.1/src/math/align.cpp:24:; /usr/include/eigen2/Eigen/src/Core/MathFunctions.h: In instantiation of «T Eigen::ei_hypot(T, T) [with T = double]»:; /usr/i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1203:977,abort,aborted,977,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1203,1,['abort'],['aborted']
Safety,"ertain atoms are aromatic or not. The -s option can now accept atoms like [#7], meaning aromatic or non-aromatic N. This is used as a SMARTS string in the second stage; for the fastsearch matching these atoms are converted to the non-aromatic form . Also needed is a new fingerprint. I have made a fingerprint FP1 which is the same as FP2 except that aromatic and single bonds are treated as the same. When this is used to make an fs index, example-1 and example-2 can match all the data sets (1 and 6 molecule) ,as ruchemist expects, if the -s string is carefully constructed: [#6]c1nc([#7])[n]c1[#6] , rather than the original Cc1nc(N)[nH]c1C for example-2. Note that it is necessary to remove the H from the [nH] group if side chains to the n are expected to be found. We are lucky that the SMILES conversion still works. The downside of using FP1 is that it is has much poorer discrimination. In a dataset of 120K molecules, querying using Cc1nc(N)[n]c1C on an index made with the default FP2 fingerprint gave 7 candidates from the first stage, and 2 results. Using the FP1 fingerprint and the same query string gave 3537 candidates and the same 2 results. However, using the query [#6]c1nc([#7])[n]c1[#6] there were 263 results, mostly with aromatic rings fused to the query ring. . It seems that if you want to use fastsearch to recover these fused ring compounds from a query which has a single ring, then you have to accept the poor discrimination. I tried the substructure query Cc1nc(N)[nH]c1C on eMolecules and it recovered only molecules which had an unsubstituted [nH] group and where the C,N and C side chains were non-aromatic. So it seems to be behaving similarly to OpenBabel's original method. I will commit the changes in the next few days when I have sorted out some other issues around fastsearch. Any suggestions as to how to do better?. Chris. Apologies Vladimir, for some reason emails to your SourceForge account address did not get through. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795557:1477,recover,recover,1477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795557,2,['recover'],"['recover', 'recovered']"
Safety,glibc detected: Double free or Corruption,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675:6,detect,detected,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675,1,['detect'],['detected']
Safety,"hemOutputFormat15ReadCoordinatesEPSiPNS_5OBMolE+0x1ff)[0x7fffe0f5ae5f]; /usr/lib/openbabel/2.4.0/nwchemformat.so(_ZN9OpenBabel18NWChemOutputFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0x1ba)[0x7fffe0f5c82a]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xd44)[0x7ffff7754ae4]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x1d5)[0x7ffff76f9a35]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0xa9)[0x7ffff76ff5f9]; /usr/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EERS7_SA_+0x1f71)[0x7ffff7701671]; /usr/bin/babel(main+0xacb)[0x402d9b]; /usr/lib64/libc.so.6(__libc_start_main+0xf1)[0x7ffff7a37731]; /usr/bin/babel(_start+0x29)[0x403429]. ```. In GDB:. ```; (gdb) backtrace; #0 0x00007ffff7a4b6f5 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54; #1 0x00007ffff7a4d2fa in __GI_abort () at abort.c:89; #2 0x00007ffff7a8c670 in __libc_message (do_abort=do_abort@entry=2, fmt=fmt@entry=0x7ffff7ba3060 ""*** Error in `%s': %s: 0x%s ***\n"") at ../sysdeps/posix/libc_fatal.c:175; #3 0x00007ffff7a94e0a in malloc_printerr (ar_ptr=<optimized out>, ptr=<optimized out>, str=0x7ffff7ba09a3 ""free(): invalid pointer"", action=3) at malloc.c:5004; #4 _int_free (av=<optimized out>, p=<optimized out>, have_lock=<optimized out>) at malloc.c:3865; #5 0x00007ffff7a9836c in __GI___libc_free (mem=<optimized out>) at malloc.c:2966; #6 0x00007fffe0f5ae5f in OpenBabel::NWChemOutputFormat::ReadCoordinates (this=this@entry=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, ifs=ifs@entry=0x63b450, molecule=molecule@entry=0x6dca40); at /home/madchem/openbabel-2.3.2/openbabel/src/formats/nwchemformat.cpp:237; #7 0x00007fffe0f5c82a in OpenBabel::NWChemOutputFormat::ReadMolecule (this=0x7fffe1163350 <OpenBabel::theNWChemOutputFormat>, pOb=<optimized out>, pConv=0x7fffffffd9c0); at /home",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/347:1562,abort,abort,1562,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/347,1,['abort'],['abort']
Safety,"ils.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(319) : warning C4996: 'open': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _open. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2235,unsafe,unsafe,2235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"io 9.0\VC\include\io.h(316) : see declaration of 'open'; ..\..\src\formats\KFReader.c(332) : warning C4996: 'close': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _close. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(306) : see declaration of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2557,unsafe,unsafe,2557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"lain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000.mol.log'; Opened input file './marvinjs_He_v3000.mol'; Opened output file './marvinjs_He_v3000.mol.txt'; Opened problem file './marvinjs_He_v3000.mol.prb'; The command line used:; ""./inchi-1 ./marvinjs_He_v3000.mol""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. End of file detected after structure #1. ; Finished processing 1 structure: 0 errors, processing time 0:00:00.00; $ cat ./marvinjs_He_v3000.mol.txt ; * Input_File: ""./marvinjs_He_v3000.mol""; Structure: 1; InChI=1S/He; AuxInfo=1/0/N:1/rA:1nHe/rB:/rC:.25,2.375,0;; $ ; $ obabel ./marvinjs_He_v3000.mol -oinchi; InChI=1S/He; 1 molecule converted; ```. The observations are collected with InChI version 1.07.1 published by August 21 ([source](https://github.com/IUPAC-InChI/InChI/releases)), and OpenBabel version 3.1.1/Sep 4 2024 as provided by Linux Debian 13/trixie.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:3051,Timeout,Timeout,3051,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,2,"['Timeout', 'detect']","['Timeout', 'detected']"
Safety,mis-detection of aromaticity for quinones,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2263:4,detect,detection,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263,1,['detect'],['detection']
Safety,"n will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; 1 molecule converted; $ cat obabel_Helium.sdf. OpenBabel09192411482D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 END BOND; M V30 END CTAB; M END; $$$$; $ ; $ ./inchi-1 ./obabel_Helium.sdf; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './obabel_Helium.sdf.log'; Opened input file './obabel_Helium.sdf'; Opened output file './obabel_Helium.sdf.txt'; Opened problem file './obabel_Helium.sdf.prb'; The command line used:; ""./inchi-1 ./obabel_Helium.sdf""; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; Timeout per structure: 60000 msec; Up to 1024 atoms per structure. Error 71 (no InChI; Error: No V3000 CTAB end marker) inp structure #1.; End of file detected after structure #1. ; Finished processing 1 structure: 1 error, processing time 0:00:00.00; $ cat obabel_Helium.sdf.txt ; * Input_File: ""./obabel_Helium.sdf""; $ ; $ obabel obabel_Helium.sdf -oinchi; InChI=1S/He; 1 molecule converted; $ ; ```. 2) On the other hand, [Marvin](https://marvinjs-demo.chemaxon.com/latest/) describes the same structure without the empty atom block:. ```. Mrv2311 09192409232D . 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 1 0 0 0 0; M V30 BEGIN ATOM; M V30 1 He -0.875 1.6667 0 0; M V30 END ATOM; M V30 END CTAB; M END; ```. Both InChI trust's reference executable, as well as OpenBabel can process and assign an InChI on this dataset:. ```shell; $ ./inchi-1 ./marvinjs_He_v3000.mol; InChI version 1, Software v. 1.07 (inchi-1 executable) ; Linux 64-bit Build (gcc 11.4.0) of Aug 10 2024 18:58:34. Opened log file './marvinjs_He_v3000.mol.log'; Opened input file './marvinjs_He_v3000.mol'; Opened output file './marvinjs_He_v3000.mol.txt'; Opened problem file '.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2725:1861,detect,detected,1861,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2725,1,['detect'],['detected']
Safety,"nbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version:; ```; # Name Version Build Channel; openbabel 3.1.1 py310h956b46e_7 conda-forge; ```; Operating system and version:; ```; Distributor ID: ManjaroLinux; Description: Manjaro Linux; Release: 23.0.0; Codename: Uranos; ```. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I was trying to recover bond orders and atom specific formal charges from a XYZ file of a molecule. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It seems only the bond orders are recovered but the charges on the NH3+ and COO- are not written to the output SDF file.; Wondering if there are other functions I need to call for this.; I do not wish to add or remove hydrogen atoms as the molecule should not be modified in any way. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```python; from openbabel import pybel. mol = next(pybel.readfile(format=""xyz"", filename=""structure.xyz"")) # readfile returns an iterator; mol.OBMol.ConnectTheDots() # perceives bonding between atoms; mol.OBMol.PerceiveBondOrders(). mol.write(format=""sdf"", filename=""structure.sdf"", overwrite=True); ```. [structures.zip](https://github.com/openbabel/openbabel/files/12459604/structures.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2623:1227,recover,recovered,1227,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2623,1,['recover'],['recovered']
Safety,"nds while using PDB files and to report all the issues at once. The result of this analysis is in the attachment. As previously, I noticed that OpenBabel 2.3.2 generated a correct output for the molecule I was analyzing, then I also decide to use this version in my tests. In all tests, I used the openbabel 2.4.1 library (python) for creating an OBMol molecule and then I printed the smiles for each one of the inputs (listed below). To check for possible errors of valence, charge, etc, I used the tool Chemicalize from Chemaxon (the figures in the attachment were obtained with this tool). First, I extract the ligand from the PDB file (all ligands and ids were informed in the attached file). Four different inputs were used to create the OBMol object:; 1) A .mol file obtained by converting the extracted file using OpenBabel 2.3.2.; 2) A .mol file obtained by converting the extracted file using OpenBabel 2.4.1. ; 3) The .pdb file. Function used: readfile(""pdb"", file); 4) The .pdb file as a string. Function used: readstring(""pdb"", pdb_block). Besides it, for each ligand I also evaluated the impact of creating the molecule without hydrogens and adding hydrogens according to some pH value. In the excel file, you'll find a column with the ligand information, one to indicate if I had used hydrogens and other to inform at which pH the hydrogens were added. Also, four other columns were added (one for each input). The red cells indicate if there is an incorrect aromatic perception. I believe these results can help you guys to detect what are the possible causes for these errors. I have not uploaded the molecule files because it would be too many files and all of them can be accessed through the PDB site. . If anything is not clear enough please just let me know and I could help you to reproduce the errors. Excel file: ; [Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip](https://github.com/openbabel/openbabel/files/2789808/Analysis_of_the_best_input_Send_to_OpenBabel.xls.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1925:1939,detect,detect,1939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1925,1,['detect'],['detect']
Safety,obtautomer fails to detect basic keto-enol tautomerism,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1616:20,detect,detect,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1616,1,['detect'],['detect']
Safety,"oject: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; APIInterface.cpp; atomrecord.cpp; cansmilesformat.cpp; ..\..\src\formats\cansmilesformat.cpp(865) : warning C4101: 'canorder' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1346) : warning C4101: 'atom' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'p' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1397) : warning C4101: 'pp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1395) : warning C4101: 'tmp' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1396) : warning C4101: 'chg' : unreferenced local variable; ..\..\src\formats\cansmilesformat.cpp(1445) : warning C4101: 'bond' : unreferenced local variable; mdlformat.cpp; mol2format.cpp; ..\..\src\formats\mol2format.cpp(341) : warning C4800: 'const char *' : forcing value to bool 'true' or 'false' (performance warning); obmolecformat.cpp; opendxformat.cpp; pdbformat.cpp; smilesformat.cpp; Generating Code...; Compiling manifest to resources...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; Embedding manifest...; Microsoft (R) Windows (R) Resource Compiler Version 6.0.5724.0; Copyright (C) Microsoft Corporation. All rights reserved.; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 0 error(s), 8 warning(s); ========== Build: 1 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. Can the warnings be safely ignored?. Reported by: peterennis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767:2422,safe,safely,2422,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767,1,['safe'],['safely']
Safety,"on of 'close'; ..\..\src\formats\KFReader.c(411) : warning C4996: 'read': The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _read. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\io.h(317) : see declaration of 'read'; ..\..\src\formats\KFReader.c(506) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(556) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(707) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(765) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(805) : warning C4996: 'strncpy': This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h(157) : see declaration of 'strncpy'; ..\..\src\formats\KFReader.c(816) : warning C4996: 'strncpy': This function or variable may be unsa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774:2879,unsafe,unsafe,2879,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774,1,['unsafe'],['unsafe']
Safety,"openbabel 3.1.1 on both windows and linux. My group and I have had success converting most of our molecules from .xyz to .smi, however when trying to convert oximes like formaldoxime (CH2NOH) or NH2CHNOH, openbabel returns the smiles [CH2][N]O and O[N]C=[NH2], when they should be ON=C and ON=CN respectively. In both cases, there should be a C=N double bond where there is only a CN single bond (and in the second case an additional incorrect C=N double bond). I was wondering if this issue could be fixed or if I could get some knowledge on how your bond prediction system works, like if it bases on atom distance or the number of bonds an atom would/should have etc. As for using alternate file formats, my group is working with VASP files which don't include bond information, so we cannot use something like .mol. We understand the limitations of xyz and the fact the openbabel has to predict the bonds, this case seemed notable however since the bug appeared for a seemingly simple molecule that wasn't a radical or any special case. Attached are the .xyz files for the two molecules I mentioned. Thank you for the help. . [xyzfiles.zip](https://github.com/openbabel/openbabel/files/11681743/xyzfiles.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2594:557,predict,prediction,557,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2594,2,['predict'],"['predict', 'prediction']"
Safety,"r<int> element;; vector<float> charge;; vector<int> resid;; vector<char> chain;; vector<float> x;; vector<float> y;; vector<float> z;; };. // Convert custom molecule to OBMol; void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); {; mol.Clear();. // map of residues; map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<sel.element.size();++i){. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(sel.element[i]);; oba->SetPartialCharge(sel.charge[i]);; oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);. // Create new residue if needed; if(reslist.count(sel.resid[i])==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(sel.resid[i]);; obr->SetChain(sel.chain[i]);; reslist[sel.resid[i]] = obr;; }. reslist[sel.resid[i]]->AddAtom(oba);; reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();. mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }. int main(int argc, char** argv); {; OpenBabel::OBMol src,sample1,sample2;; // Read source molecule; OpenBabel::OBConversion conv;; conv.ReadFile(&src,""b.pdb"");. // Read sample using babel; conv.ReadFile(&sample1,""b_sample.pdb"");. // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); MyMol mymol;; mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; mymol.element = {6, 6, 6, 6, 6, 6};; mymol.charge = {0, 0, 0, 0, 0, 0};; mymol.resid = {1, 1, 1, 1, 1, 1};; mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; // CreateOBMol; to_obmol(mymol,sample2);. // Work with babel molecule; OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapp",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938:1247,avoid,avoid,1247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938,1,['avoid'],['avoid']
Safety,"s%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2418:1165,detect,detected,1165,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418,1,['detect'],['detected']
Safety,"scripting interface. To my mind, this is the killer app for; cheminformaticians, who regularly need to manipulate SD; files. This problem appears to be due to the use of C++; streams which do not appear to translate nicely through; SWIG to Python iterators. Regards,; Noel. [As background, here is the text of an email describing; attempts to get this to work:. Attempt 1 Using Read after ReadFile; =========; from openbabel import *. myfile = ""3d.head.sdf""; obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadFile(mymol,myfile); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program segfaults before this line"". Attempt 2 Using Read after ReadString; =========; from openbabel import *. myfilestring = open(""3d.head.sdf"",""r"").read(); obConversion = OBConversion(); obConversion.SetInFormat(""sdf""). mymol = OBMol(); obConversion.ReadString(mymol,myfilestring); print mymol.GetMolWt(); print obConversion.Read(mymol); print ""The program aborts before this line"". >From the python point of view, what is needed is a; function that when; repeatedly called, will return additional molecules.; This doesn't need; to be in the main openbabel library, but can be in the; SWIG wrapper; somewhere. Regards,; Noel. On Wed, 2006-03-15 at 14:18 -0500, Geoffrey Hutchison; wrote:; > On Mar 15, 2006, at 5:18 AM, Noel O'Boyle wrote:; > ; > > It seems that OBConversion.ReadFile(OBMolecule); just reads in the ; > > first; > > molecule, and I cannot see a way of iterating over; the molecules.; > ; > The OBConversion.Read(OBMol) function should continue; to read from ; > the same file. However, since Python and Perl have no; concept of ; > ""streams"", it's not possible to use; OBConversion.Read() to set up the ; > input file or string.; > ; > So something like this (sorry, I haven't written much; Python, so the ; > syntax might be off):; > ; > import openbabel; > ; > mol = openbabel.OBMol(); > conv = openbabel.OBConversion(); > conv.SetInAn",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525:1125,abort,aborts,1125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525,1,['abort'],['aborts']
Safety,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2088:2939,Predict,Predict,2939,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088,1,['Predict'],['Predict']
Safety,"ter (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" throug",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2312:1735,Timeout,Timeout,1735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312,1,['Timeout'],['Timeout']
Safety,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1608,safe,safer,1608,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395,1,['safe'],['safer']
Safety,thread-safe smarts matching patch. Original comment by: @dkoes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1524#issuecomment-281811218:7,safe,safe,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1524#issuecomment-281811218,1,['safe'],['safe']
Safety,to avoid a segfault,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818:3,avoid,avoid,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818,1,['avoid'],['avoid']
Safety,"to read the way you wrote the code. The compiler and `openbabel` are just doing exactly what you asked. What I mean is that using `dl_open` for something that is already in the library seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Since I am writing a library this reading could happen in some deep call. ; I can make my classes more ""stateful"" to contain a whole (more) persistent OBConvert. (As you see this can complicate somewhat the design, but it is doable). > ; > ; > http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300; > ; > There are p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:1757,safe,safety,1757,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,1,['safe'],['safety']
Safety,"using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 2f34bda337d7ddefa8f2bebfc23931a63e45241f; Operating system and version: Debian 11.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When output format of `obabel` is `inchi` or `inchikey` and logging is enabled (i.e. `-xl`):. 1. Log levels for InChI are appropriately set; 2. Input format is correctly determined from command line argument. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. 1. In the examples below, the level should be Info (or Debug) but not Error; 2. Input format is always MOLfile–file extension and `-i` option are ignored. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. If input is SMILES-string,. ```console; $ obabel -:C -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. If input is a CML file,; ```console; $ obabel -:C -O CH4.cml --gen3D; 1 molecule converted; $ obabel CH4.cml -o inchi -xl; InChI=1S/CH4/h1H4; ==============================; *** Open Babel Error in InChI log; Generating standard InChI; Input format: MOLfile; Output format: Plain text; Full Aux. info; No timeoutUp to 65534 atoms per structure; 1 molecule converted; ```. `obabel -:C -o cml --gen3D | obabel -i cml -o inchi -xl` gives the same output.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2505:1853,timeout,timeoutUp,1853,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2505,2,['timeout'],['timeoutUp']
Safety,"valgrind(1) reports the use of an uninitialized variable in the InChI library with certain unusual metal/salt combinations. echo ""[Na+][Ge-2][Na+]"" | valgrind obabel -i smi -o inchi; ==18000== Memcheck, a memory error detector; ==18000== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.; ==18000== Using Valgrind-3.6.0.SVN-Debian and LibVEX; rerun with -h for copyright info; ==18000== Command: obabel -i smi -o inchi; ==18000== ; ==18000== Conditional jump or move depends on uninitialised value(s); ==18000== at 0x4C28757: strcpy (mc_replace_strmem.c:311); ==18000== by 0x68555B5: MakeCRVString (string3.h:107); ==18000== by 0x6820F75: str_AuxChargeRadVal (ichiprt3.c:2939); ==18000== by 0x688F163: OutputINChI1 (ichiprt1.c:3128); ==18000== by 0x68937B4: OutputINChI2 (ichiprt1.c:1110); ==18000== by 0x684CF3D: SortAndPrintINChI (runichi.c:958); ==18000== by 0x684DCAB: ProcessOneStructure (runichi.c:2933); ==18000== by 0x68797ED: GetINCHI1 (inchi_dll.c:451); ==18000== by 0x1213EE92: OpenBabel::InChIFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*) (inchiformat.cpp:489); ==18000== by 0x5343D07: OpenBabel::OBMoleculeFormat::WriteChemObjectImpl(OpenBabel::OBConversion*, OpenBabel::OBFormat*) (obmolecformat.cpp:182); ==18000== by 0x52E6B95: OpenBabel::OBConversion::Convert() (obconversion.cpp:581); ==18000== by 0x52E7347: OpenBabel::OBConversion::Convert(std::istream*, std::ostream*) (obconversion.cpp:450); ==18000== . Reported by: @cjames53. Original Ticket: [openbabel/bugs/872](https://sourceforge.net/p/openbabel/bugs/872)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1252:218,detect,detector,218,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1252,1,['detect'],['detector']
Security, *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging messages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4934,Audit,Audit,4934,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,8,"['Audit', 'audit']","['Audit', 'audit']"
Security," --title <title> Add or replace molecule title; --addtotitle <text> Append to title; --addformula Append formula to title. However the wiki page gives further details (eg -a) and in alphabetical order, would it be worth updating?. -a options; Format-specific input options. See -H format-ID for options allowed by a particular format; --addtotitle; Append text after the current molecule title; --addformula; Append the molecular formula after the current molecule title; -b; Convert dative bonds (e.g., [N+]([O-])=O to N(=O)=O; -c; Center atomic coordinates at (0,0,0); -C; Combine molecules in first file with others having the same name; -d; Delete Hydrogens; -e; Continue to convert molecules after errors; ---errorlevel 2; Filter the level of errors and warnings displayed:; 1 = critical errors only; 2 = include warnings too (default); 3 = include informational messages too; 4 = include ""audit log"" messages of changes to data; 5 = include debugging messages too; -f #; For multiple entry input, start import with molecule # as the first entry; -F; Output the available fingerprint types; -h; Add hydrogens; -H; Output usage information; -H format-ID; Output formatting information and options for format specified; -Hall; Output formatting information and options for all formats; -i<format-ID>; Specifies input format, see below for the available formats; -j; --join; Join all input molecules into a single output molecule entry; -k; Translate computational chemistry modeling keywords (e.g., GAMESS and Gaussian); -m; Produce multiple output files, to allow:; Splitting one input file - put each molecule into consecutively numbered output files; Batch conversion - convert each of multiple input files into a specified output format; -l #; For multiple entry input, stop import with molecule # as the last entry; -o format-ID; Specifies output format, see below for the available formats; -p; Add Hydrogens appropriate for pH (use transforms in phmodel.txt); --property; Add or replace a p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484:2807,audit,audit,2807,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484,1,['audit'],['audit']
Security, 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0; 1 10 2 0 0 0; 1 2 1 0 0 0; 2 3 2 0 0 0; 3 4 1 0 0 0; 4 9 1 0 0 0; 4 5 2 0 0 0; 5 6 1 0 0 0; 6 7 2 0 0 0; 7 8 1 0 0 0; 8 19 1 0 0 0; 8 9 2 0 0 0; 9 10 1 0 0 0; 10 11 1 0 0 0; 11 20 2 0 0 0; 11 12 1 0 0 0; 12 13 2 0 0 0; 13 14 1 0 0 0; 14 15 2 0 0 0; 15 20 1 0 0 0; 15 16 1 0 0 0; 16 17 2 0 0 0; 17 18 1 0 0 0; 18 19 2 0 0 0; 19 20 1 0 0 0; M END. Messages:. babel 1.smi 1.mol ---errorlevel 4; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule SMILES format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in AssignSpinMultiplicity; Ran OpenBabel::AssignSpinMultiplicity; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in FindRingAtomsAndBonds; Ran OpenBabel::FindRingAtomsAndBonds; ==============================; *** Open Babel Information in NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule. ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule MDL MOL format; 1 molecule converted; 1 info messages 6 audit log messages. Version Open Babel 2.2.0 -- Jul 7 2008 -- 22:06:15 . OS - gentoo GNU/linux. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830:1309,Audit,Audit,1309,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830,7,"['Audit', 'audit']","['Audit', 'audit']"
Security," 1 5 1 0 0 0 0; 2 6 1 0 0 0 0; M END; $$$$. >>> ; ```. Debian 12/bookworm (branch testing) occasionally is ahead of Ubuntu when it comes to programs the DebiChem project repackages. In the case of OpenBabel, this is the case ([tracker](https://tracker.debian.org/pkg/openbabel)) with version 3.1.1 available since June 2021. So I once removed all packages related to OpenBabel, and started from scratch with the combination of `sudo apt-get install openbabel python3-openbabel`. Then again, OpenBabel from the CLI as well from within Python are installed without warning, and work as anticipated:. ```; norwid@carnot2:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Debian; Description:	Debian GNU/Linux bookworm/sid; Release:	testing; Codename:	bookworm; norwid@carnot2:~$ ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ obj; objcopy objdump ; norwid@carnot2:~$ python pip uninstall openbabel; python: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ python3 pip uninstall openbabel; python3: can't open file '/home/norwid/pip': [Errno 2] No such file or directory; norwid@carnot2:~$ ; norwid@carnot2:~$ # get OpenBabel; norwid@carnot2:~$ ; norwid@carnot2:~$ sudo apt-get install openbabel python3-openbabel; [sudo] password for norwid: ; Reading package lists... Done; Building dependency tree... Done; Reading state information... Done; The following additional packages will be installed:; libopenbabel7; The following NEW packages will be installed:; libopenbabel7 openbabel python3-openbabel; 0 upgraded, 3 newly installed, 0 to remove and 5 not upgraded.; Need to get 0 B/3,837 kB of archives.; After this operation, 19.8 MB of additional disk space will be used.; Do you want to continue? [Y/n] y; Selecting previously unselected package libopenbabel7.; (Reading database ... 202950 files and directories currently installed.); Preparing to unpack .../libopenbabel7_3.1.1+dfsg-6_amd64.deb ...; Unpacking libopenbabel7 (3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:10412,password,password,10412,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['password'],['password']
Security, ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:1573,Audit,Audit,1573,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,9,['Audit'],['Audit']
Security," Describe the intended output or what you expected to see. -->; The installer drops OpenBabel's files and registry keys in a location for all users.; - Shortcuts in `C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\ProgramData\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installer drops its files and registry values in locations specific to the user account under which context the installer was run. To illustrate with an example scenario: a user is logged in interactively with a standard user account named 'Bob' with SID `S-1-5-21-1234`. The user downloads and runs the installer and is prompted to enter admin credentials so the user authenticates with an account named 'Admin' with SID `S-1-5-21-1000`. The installer finishes successfully but the user doesn't see OpenBabel in the Apps list in Windows Settings (alt. Programs and Features in Control Panel) or any shortcuts in their Start Menu; they log out from Bob and log in as Admin to find both there. The files and registry key are incorrectly in places specific for the account which was used to elevate the privileges of the installer (Admin in this example), not for the user which had interactively executed the installer (Bob in this example) or for all users on the computer (see the **Expected Behavior** section above).; - Shortcuts in `C:\Users\Admin\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OpenBabel 3.1.1`; - Miscellaneous program data (docs, examples etc.) in `C:\Users\Admin\AppData\Roaming\OpenBabel-3.1.1`; - Uninstall registry key to `\HKEY_USERS\S-1-5-21-1000\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\OpenBabel-3.1.1`. Th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2724:1735,authenticat,authenticates,1735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2724,1,['authenticat'],['authenticates']
Security, Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-upda,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2844,secur,security,2844,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security, Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2558,Audit,Audit,2558,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404:1536,audit,audit,1536,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404,1,['audit'],['audit']
Security, http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [11,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2385,secur,security,2385,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security," in a SMILES string, so far, my assumption was that somewhere an `@`, or `/`, or `\`, was lost, or was used too often. Perhaps the cause is between the keyboard and chair. Here, the request to report (obabel's) canonical SMILES string. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -ocan ; C[C@@H]1CN(C[C@H]1CNCc1nnc(n1C1CC1)C)C(=O)[C@]12CCCC[C@H]2C1	; 1 molecule converted; ```. doesn't help; advancing a step further. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -ocan | obabel -ismi --gen3d -osdf; 1 molecule converted; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (); with Atom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:1106,access,access,1106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['access'],['access']
Security," to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (installed through anaconda); Operating system and version: Mac OS 10.12.5 (Sierra); Python version: 3.6.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect pybel library calls to either return or throw a catchable exception. ## Steps to Reproduce and Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I have a python function that reads in a bunch of xyz files into pybel Molecule objects. Later on I iterate over all of the Molecule objects and read variables from some of the pybel Atom objects within each Molecule (to generate features for machine learning). While trying to access the Atom objects and variables within them a segmentation fault occurs that kills the python interpreter (it terminates with exit code 139). I can also kill the python interpreter with a segfault while my code is paused in the debugger (which I access through Eclipse / PyDev) by navigating into and trying to inspect pybel Atoms' variables. The segfault does not always occur when accessing the first Atom and does not consistently happen on the same Atom when running the exact same code multiple times in succession but it does usually happen within the first 5-10 Atoms. ## Notes. Sorry I understand this is probably difficult to debug because of its inconsistency and lack of a small reproducible example but I've already spent a lot of time trying to understand what was going on so hopefully I can give enough information to still be helpful. My current workaround which appears to be working is to have a wrapper python atom class around the pybel atom class with variables to keep a copy of all the data that I use from the pybel atom. I initialize ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602:1498,access,access,1498,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602,1,['access'],['access']
Security," — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-revie",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2996,secur,security-and-quality,2996,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security-and-quality']
Security,"""AccessInit: hash collision: 3 for both 1 and 1"" crash for ""import pybel, matplotlib.backends.backend_qt4agg""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1238:1,Access,AccessInit,1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1238,2,"['Access', 'hash']","['AccessInit', 'hash']"
Security,"""System.AccessViolationException"" in the NET bingding class OBBuilder",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2080:8,Access,AccessViolationException,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080,1,['Access'],['AccessViolationException']
Security,"## Environment Information; Open Babel version: 2.4.0/1; Operating system and version: Linux (Solus 3). ## Expected Behavior; Compile. ## Issue; cmake '-DCMAKE_CFLAGS=-mtune=generic -march=x86-64 -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fexceptions -D_FORTIFY_SOURCE=2 -fstack-protector --param ssp-buffer-size=32 -fasynchronous-unwind-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_CXX_FLAGS=-mtune=generic -march=x86-64 -g2 -O2 -pipe -fPIC -fno-omit-frame-pointer -fexceptions -D_FORTIFY_SOURCE=2 -fstack-protector --param ssp-buffer-size=32 -fasynchronous-unwind-tables -ftree-vectorize -feliminate-unused-debug-types -Wall -Wno-error -Wp,-D_REENTRANT' '-DCMAKE_LD_FLAGS=-Wl,--copy-dt-needed-entries -Wl,-O1 -Wl,-z,relro -Wl,-z,now -Wl,-z,max-page-size=0x1000' -DCMAKE_LIB_SUFFIX=64 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr .; -- The C compiler identification is GNU 6.4.0; -- The CXX compiler identification is GNU 6.4.0; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc; -- Check for working C compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++; -- Check for working CXX compiler: /usr/lib64/ccache/bin/x86_64-solus-linux-g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Using included inchi library.; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.4"") ; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -L/usr/lib64;-pthread;-Wl,--copy-dt-needed-entries;-Wl,-O1;-Wl,-z,relro;-Wl,-z,now;;-L/usr/lib64;;-lwx_baseu-2.8;-lwx_gtk2u_core-2.8;-lwx_gtk2u_adv-2.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1624:234,secur,security,234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1624,1,['secur'],['security']
Security,"$ svn update; At revision 3364.; $ babel -i mol2 123-pentatriene.mol2 -o inchi; InChI=1S/C5H8/c1-3-5-4-2/h3H2,1-2H3; 1 molecule converted; 4 audit log messages . According to vega it should be:; $ ./vega.sh 123-pentatriene.mol2; InChI=1/C5H6/c1-3-5-4-2/h4H,1H2,2H3. Reported by: maaren",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/925:141,audit,audit,141,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/925,1,['audit'],['audit']
Security,$ wget http://www.pdb.org/pdb/files/2BOH.pdb && wget http://www.pdb.org/pdb/files/2HOC.pdb; $ babel --partialcharge gasteiger 2HOC.pdb 2HOC.mol2; 0 molecules converted; 20 audit log messages ; $ babel --partialcharge gasteiger 2BOH.pdb 2BOH.mol2; 0 molecules converted; 20 audit log messages ; etc. Reported by: prozacr. Original Ticket: [openbabel/bugs/881](https://sourceforge.net/p/openbabel/bugs/881),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1261:172,audit,audit,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1261,2,['audit'],['audit']
Security,"(1) On 15 Dec, on openbabel-scripting mail list, Andreas Karwath reported:. Hi all,. I hope I don't have to send this to the developer list... I have installed the latest version of openbabel (2.1.0b3) including the python bindings... (openbabel and pybel), Linux Suse 9.2; I wanted to parse a gzipped SDF file (zipped file size 14 M) to extract specific molecules (by name), for this I first tried to do the normal routine, i.e.:. sdfFileName = <someGzippedSDFFile>; obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obconversion.SetOutFormat(""smi""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,sdfFileName); export = obconversion.WriteFile(obmol,'myTest.smi'); while notatend:; obconversion.Write(obmol); obmol = OBMol(); notatend = obconversion.Read(obmol). On a normal (i.e. unzipped) SDF File it works fine. But not on a gzipped one -> Segmentation Fault. It can only get access the first single molecule. The same is true when using the new pybel lib. -> Segmentation Fault!. I assume that OpenBabel keeps a pointer to the last read molecule in the SDF file, which would not work when accessing the zipped one... I don't want to unpack the file, as I have a few hundred of those.. (disk space!). Did anyone have the same problem and knows an elegant workaround?; I guess the problem should occur for other scripting languages as well... Regards,. A. Karwath. (2) Verified by me (baoilleach).; (3) Also, verified that babel -isdf myfile.sdf.gz -osmi myfile.smi works fine.; (4) Andreas Kawarth appears to have tracked down the bug as described by his email of 18th Dec:. I also traced the vbug back to mdlformat.cpp, where a false is; returned as the if(!ifs.getline(buffer,BUFF_SIZE)) return(false);; returns false... Regards,; Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586:903,access,access,903,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586,2,['access'],"['access', 'accessing']"
Security,"(From openbabel-devel). Ok, it builds, but it segfaults in the CML tests. I've extracted one of the; failing tests and ran it under gdb:. [rathann@ryvius ~/build/BUILD/openbabel-2.2.0b3-20080215-r2249/test/cmltest]$ gdb ../../tools/.libs/lt-babel ; GNU gdb Red Hat Linux (6.6-16.fc7rh); Copyright (C) 2006 Free Software Foundation, Inc.; GDB is free software, covered by the GNU General Public License, and you are; welcome to change it and/or distribute copies of it under certain conditions.; Type ""show copying"" to see the conditions.; There is absolutely no warranty for GDB. Type ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu""...; Using host libthread_db library ""/lib64/libthread_db.so.1"".; (gdb) run -isdf 3d.head.sdf -ocml 3d.head.2.cml; Starting program: /home/rathann/build/BUILD/openbabel-2.2.0b3-20080215-r2249/tools/.libs/lt-babel -isdf 3d.head.sdf -ocml 3d.head.2.cml; warning: no loadable sections found in added symbol-file system-supplied DSO at 0x7fffdbbfd000; 70 molecules converted; 785 audit log messages . Program received signal SIGSEGV, Segmentation fault.; 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; Current language: auto; currently c; (gdb) bt full; #0 0x00000030eba8f501 in std::ostream::sentry::sentry () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #1 0x00000030eba8fd57 in std::ostream::write () from /usr/lib64/libstdc++.so.6; No symbol table info available.; #2 0x00002aaab3fc225f in OpenBabel::XMLConversion::WriteStream (context=<value optimized out>, ; buffer=0x7fffdbace810 ""���\227"", len=-609425392) at xml.cpp:337; ofs = (ostream *) 0x7fffdbace810. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728:1043,audit,audit,1043,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728,1,['audit'],['audit']
Security,"*A single* lone pair is assigned the absolute lowest priority in the set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:965,Validat,ValidationSuite,965,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['Validat'],['ValidationSuite']
Security,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223:254,access,accesses,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223,3,['access'],"['access', 'accesses']"
Security,"- [x ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (32 and 64 bit); Operating system and version: Windows 10 64-bit. ## Expected Behavior; If a NWChem output file is converted with obgui.exe to any other file type (e.g. *.xyz) this works fine when the 'CONVERT' button is clicked the first time. ## Actual Behavior; If the button is clicked again obgui.exe crashes with a heap corruption exception (error code 0x000374).; The problem is present in the Windows versions of obgui.exe (32 bit and 64 bit) delivered with OpenBabel ; 2.4.1; The problem does not occur if obabel.exe is called twice.; The problem was not present in obgui.exe delivered with OpenBabel 2.3.2.; This is not trivial: the same error occurs if a command of type 'OBConv.ReadFile(OBMol, MolFilePath)' is called twice in an application if accessed e.g. via ObDotNet.dll thus crashing the calling process. ## Steps to Reproduce; [Acetonitrile.txt](https://github.com/openbabel/openbabel/files/872762/Acetonitrile.txt); (change file extension from txt to nwo)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555:895,access,accessed,895,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555,1,['access'],['accessed']
Security,- [x ] This is a feature request. I'm trying to use OBElements namespace that replaced OBElementTable in 3.x version of openbabel. I find the way of importing it into python quite confusing. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.5. ## Expected Behavior; I'd expect import to be something like; ```python; from openbabel.elements import OBElements. # so that the namespace/module methods can be accessed from a defined module; atomic_num = OBElements.GetAtomicNum('C'); ```; ## Actual Behavior; Instead OBElements is imported silently as a part of openbabel and all the available functionality is accessible from general openbabel namespace that makes it a bit confusing:. ```python; import openbabel.openbabel as ob; atomic_num = ob.GetAtomicNum('C'); ```; ## Steps to Reproduce; Try the import in any IDE of choice,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2259:453,access,accessed,453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2259,2,['access'],"['accessed', 'accessible']"
Security,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2265:1769,access,access,1769,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265,1,['access'],['access']
Security,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:193,Access,Accessing,193,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,1,['Access'],['Accessing']
Security,"-h -ph # should be allowed to access the; AddHydrogens/adjust for pH features. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/16"":https://sourceforge.net/p/openbabel/feature-requests/16",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1385:30,access,access,30,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1385,1,['access'],['access']
Security,"-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:2031,secur,security,2031,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3902,secur,security,3902,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2327,secur,security,2327,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/uni,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2114,secur,security,2114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2294,secur,security,2294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu fo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3067,secur,security,3067,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building depe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4000,secur,security,4000,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,6 kB]; Get:19 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 DEP-11 Metadata [363 kB]; Get:20 http://security.ubuntu.com/ubuntu focal-security/main Translation-en [205 kB]; Get:21 http://security.ubuntu.com/ubuntu focal-security/main amd64 DEP-11 Metadata [38.2 kB]; Get:22 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 48x48 Icons [18.3 kB]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu foca,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:2970,secur,security,2970,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"6100 -0.00100; C -0.92800 1.06000 -0.00000; C -2.25900 0.77200 -0.00000; C -2.68700 -0.45600 0.00100; C -1.84800 -1.53300 0.00100; C -0.47300 -1.33400 0.00100; C 0.00100 -0.00700 -0.00000; C 1.38700 0.25300 0.00000; C 2.28100 -0.83300 0.00100; C 1.82800 1.58700 0.00000; C 0.91800 2.60500 -0.00000; C -0.47300 -1.33400 0.00100; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100; C 2.28100 -0.83300 0.00100; C 1.38700 0.25300 0.00000; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100. Atoms #20 and #16, #19 and #15, #18 and #10 are identical: molecule contains only three rings, but perylene contains 5. babel 1.smi 1.xyz --gen3d ---errorlevel 4; ============================== ; *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule SMILES format ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in FindRingAtomsAndBonds ; Ran OpenBabel::FindRingAtomsAndBonds ; ============================== ; *** Open Babel Information in NewPerceiveKekuleBonds ; Kekulize: Huckel rule not satisfied for molecule . ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:863,Audit,Audit,863,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Audit'],['Audit']
Security,"8):. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); # Density in g/cm^3. Should be ~1.2; print sum(atom.atomicmass for atom in mol.atoms) / (mol.unitcell.GetCellVolume() * 0.6022); ```. The problem here is that the duplicate-atom checking in `OBUnitCell::FillUnitCell` assumes the input atoms are already unique. If this isn't the case, the method compounds the error. Fixed by checking the input atoms before expanding the unit cell in `FillUnitCell` (maybe this kind of check belongs somewhere else?). **Issue 2:** `OBUnitCell::FillUnitCell` hangs on large unit cells. This is due to the algorithm used in atom checking. It checks atom-atom distances, which is O(N^2). The new approach uses a hash, which should be amortized O(N). It uses the extra speed to check _every_ atom for uniqueness, rather than just symmetry unique ones. Note that a better approach would use an octree, but the hash was easier to implement and proves the point. **Issue 3:** `OBUnitCell::FillUnitCell` doesn't check all possible duplicates. To replicate, use [FeMOF74](https://gist.github.com/patrickfuller/6419438) and the above script. The underlying issue is that `FillUnitCell` assumes that the listed symmetry operations are logical. However, CIFs are a mess. In the case of the example cif, the file already has more than one unitcell worth of atoms, and additionally has defined symmetry operations. This is solved by the solution of Issue 2; by using the extra speed afforded by the hash to check every atom-atom connection, we can check for more duplicates. **Issue 4:** Some crystallographic programs fail if atom coordinates are not in [0, 1]. It's annoying, but an easy fix. I just added `WrapFractionalCoordinate` to cifformat.cpp. **Issue 5:** Centering can segfault. To replicate, use CoMOF74. ``` python; import pybel; with open(""CoMOF74.cif"") as in_file:; mof = in_file.read(); mol = pybel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23:1296,hash,hash,1296,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23,1,['hash'],['hash']
Security,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408:6458,validat,validate,6458,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408,1,['validat'],['validate']
Security,":. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On ever",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:964,secur,security,964,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3869,secur,security,3869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3268,Audit,Audit,3268,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,:FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3170,Audit,Audit,3170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3660,Audit,Audit,3660,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,5,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in Ge,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4150,Audit,Audit,4150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4248,Audit,Audit,4248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4346,Audit,Audit,4346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Aud,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4444,Audit,Audit,4444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ===========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4542,Audit,Audit,4542,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ===========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4640,Audit,Audit,4640,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian co,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4738,Audit,Audit,4738,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging message,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:4836,Audit,Audit,4836,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/ubuntu focal-security/multiverse Translation-en [4948 B]; Get:45 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 DEP-11 Metadata [2464 B]; Get:46 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 48x48 Icons [29 B]; Get:47 http://security.ubuntu.com/ubuntu focal-security/multiverse DEP-11 64x64 Icons [2638 B]; Get:48 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 c-n-f Metadata [536 B]; Fetched 8534 kB in 3s (2906 kB/s) ; Reading package lists... Done; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ sudo apt-get install openbabel python3-openbabel; Reading package lists... Done; Building dependency tree ; Reading state information... Done; The following additional packages will be installed:; libopenbabel6 libschroedinger-maeparser1; The following NEW packages will be installed:;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:4190,secur,security,4190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: babel 2.8.0 py_0 conda-forge; Operating system and version: Ubuntu 18.04.4 LTS. ## Expected Behavior; babel should produces a xyz file . ## Actual Behavior; I used the following command. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. to generate 3D xyz file form the input .smi file. But babel reports the error "" Segmentation fault (core dumped)"". I have finished the same transformation (from smi to xyz) using bash script. This transformation is the last one, the program didn't run. ; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. [smiles8800_2.txt](https://github.com/openbabel/openbabel/files/5514082/smiles8800_2.txt). Please note that github doesn't allow ""smi"" file uploading, so I changed the file as "".txt"". You will need to change it back to "".smi"" to run. ; The smi file maybe look a littitl werid to you as the comment for each SMILES is just the same SMILES, this is for the convinience for future steps. I suppose it doesn't influence the validaty of the .smi file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2302:1896,validat,validaty,1896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2302,1,['validat'],['validaty']
Security,==============; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004. ==============================; *** Open Babel Information in OpenBabel::OBMol::NewPerceiveKekuleBonds; Kekulize: Huckel rule not satisfied for molecule ACB_PCA-0004; Kekulize: Cannot get an even number of electron for molecule ACB_PCA-0004. ==============================; *** Open Babel Audit Log in OpenBabel::OBMoleculeFormat::WriteChemObjectImpl; OpenBabel::Write molecule Sybyl Mol2 format; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignTypes; Ran OpenBabel::AssignTypes; ==============================; *** Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; Ran OpenBabel::AssignImplicitValence; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in OpenBabel::OBBond::IsClosure; Ran OpenBabel::PerceiveClosureBonds; ==============================; *** Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; Ran OpenBabel::AssignHybridization; ==============================; *** Open Babel Audit Log in OpenBabel::OBChainsParser::PerceiveChains; Ran OpenBabel::PerceiveChains; ==============================; *** Open Babel Audit Log in OpenBabel::OBGastChrg::AssignPartialCharges; Ran OpenBabel::AssignPartialCharges; 1 molecule converted; 2 info messages 15 audit log messages. ===================================== END. Reported by: @baoilleach,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671:1710,Audit,Audit,1710,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671,12,"['Audit', 'audit']","['Audit', 'audit']"
Security,================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2876,Audit,Audit,2876,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2974,Audit,Audit,2974,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"> ; These are exact paths I get through `sys.path`. I was deleting folders for confidentiality. . ['/lrlhps/data/c3tk/dev/virtenv/auto3D/bin',; '/lrlhps/users/<userid>/repo/openbabel-install/build/lib',; '/lrlhps/users/<userid>/repo/openbabel-install/lib',; '',; '/lrlhps/users/<userid>/repo/openbabel-install/lib/python3.8/site-packages',; '/lrlhps/data/c3tk/dev/virtenv/auto3D/lib/python3.8/site-packages',; '/lrlhps/apps/python/python-3.8.5/lib/python38.zip',; '/lrlhps/apps/python/python-3.8.5/lib/python3.8',; '/lrlhps/apps/python/python-3.8.5/lib/python3.8/lib-dynload']",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2122#issuecomment-1320256731:79,confidential,confidentiality,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122#issuecomment-1320256731,1,['confidential'],['confidentiality']
Security,"> On Aug 21, 2017, at 9:07 PM, Geoff Hutchison <notifications@github.com> wrote:; > ; > If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request.; > ; > . I think this patch only includes the changes related to obthermo. . https://github.com/openbabel/openbabel/pull/1598 <https://github.com/openbabel/openbabel/pull/1598>. > Please create a completely new branch for each change and use git cherry-pick to grab only the specific changes you want, e.g.; > ; > https://guides.github.com/introduction/flow/ <https://guides.github.com/introduction/flow/>; > I'm sorry to be picky, but I'd like to merge the obthermo changes and not the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.); > ; > . I am happy to discuss it. ; Please let me know how the code need to change, then I will do it. Because, it will be very useful to extract different charges from the Gaussian output. . Cheers,; Mohammad; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ANAeJNaXfKr9_X5SpRkRNtkUAwCAf2RSks5sadVogaJpZM4OVlnh>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547:809,access,accessing,809,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547,1,['access'],['accessing']
Security,"> Please compare the above structure with the pubchem 2D structure; > > <https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure>,; > > showing, in green, a H which 'protrudes towards the camera'. The same H is; > > depicted as 'protruding' above the ring with the NCH3 group in the; > > wikipedia entry; > > <https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png>; > > .; > >; > ; > Having a hydrogen protrude above the screen conveys exactly the same; > information as having any one of the three carbons indicated to protrude; > below the screen. And that is what you are seeing, one of the carbons was; > chosen to be depicted protruding below the screen. Openbabel's depiction; > of below-the-plane bonds includes a solid line with the hashed wedged; > superimposed over the solid line, instead of just showing the hashed wedge; > like most software does. You seem to be confusing that superimposition to; > be two different bonds (and further thinking one of them is to a hydrogen,; > despite the lack of 'H'). It is not, it is one bond with two graphical; > elements.; > ; > Personally I find the superimposition of hashed wedge with a solid line; > through it to be unattractive, especially when the solid line is so thick; > as in your image. Maybe there is some option you can give it to turn off; > that solid line running through the hashed wedge. That would make it more; > attractive to me and less confusing for you.; > ; > > The Pubchem 3D shows the hydrogen in more detail.; > >; > ; > Well, you didn't tell Pubchem to delete the hydrogens, like you did; > openbabel.; > ; > Cheers,; > ; > Jeff; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/issues/1681#issuecomment-341868270>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ATTvgvwCTMc6NcHc8gcjXpuhr8lW7Bw2ks5sy9hIgaJpZM4QKtnS>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465:1431,hash,hashed,1431,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465,2,['hash'],['hashed']
Security,"> Shouldn’t `bondStrereo` have `atomRefs4` attribute?. I admit I know CML too little to answer that. Nonetheless, the provided CML file validates against CML XML schemas, both v2.3 and v3 (to check that, schema information has to be added to the input file manually, see #2326 for instructions). The bug is that the CML reader should not encounter segmentation faults on any input.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211:136,validat,validates,136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382#issuecomment-858307211,1,['validat'],['validates']
Security,"> Sorry for the spamming, I don't have access to an arm64 computer so I will ask you to do a couple of more things. Could you please check `obabel -ismi -:""C1CCCCC1"" -osdf --gen2D` and `obabel -ismi -:""c1ccccc1"" -osdf --gen2D` and `obabel -ismi -:""c1ccncc1"" -osdf --gen2D`. Just checked, all of these work, and produce meaningful looking SDF output. Let me know should you want me to check anything else on arm64.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942101685:39,access,access,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942101685,1,['access'],['access']
Security,"@AlexisGeorgiou There is a technique called `sanitize SMILES strings`. This is to validate SMILES strings (as Geoffrey mentioned, to identify and sort out e.g. pentavalent carbons early), but not limited to this. See RDKit's cookbook, entry [Detect Chemistry Problems](http://rdkit.org/docs/Cookbook.html#detect-chemistry-problems) as an entry and means to cure the problems by an algorithm. Though keep in mind, there often are multiple SMILES strings one can assign to a structure, e.g. ```shell; obabel -:'c1ccncc1' -osmi -xk; C1C=CN=CC=1	; 1 molecule converted; ```. which entered pyridine in an implicit description of the aromaticity to provide a kekulized SMILES string. And there are universal and inchified SMILES strings by openbabel, too ([link](https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html)). As a sequence of characters, OpenBabel's default SMILES about a structure need not be equal to the one by RDKit's default implementation either. (If creating a database, ascertain consistency in the generation of the data.). Aside from valence, stereochemistry in a SMILES string *can* be an issue on its own. For instance `C/C=C/C` about (*E*)-butene, `C/C=C\C` about (*Z*)-butene, and `CC=CC` which can describe both are all valid *by SMILES syntax* (see there depiction e.g. by [CDK depict](https://www.simolecule.com/cdkdepict/depict.html)). Similar ambiguous if e.g. `OC(c1ccccc1)C(=O)O` aims to describe the (*R*)-, the (*S*)- or both enantiomers of mandelic acid.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857:45,sanitiz,sanitize,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651#issuecomment-1832462857,2,"['sanitiz', 'validat']","['sanitize', 'validate']"
Security,"@H]2C1	; 1 molecule converted; ```. doesn't help; advancing a step further. ```shell; $ obabel -:""Cc1nnc(CNC[C@@H]2CN(C(=O)[C@@]34CCCC[C@H]3C4)C[C@H]2C)n1C1CC1"" -ocan | obabel -ismi --gen3d -osdf; 1 molecule converted; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 1 stereocenter(s) in this molecule (); with Atom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/b",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:1469,validat,validator,1469,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,1,['validat'],['validator']
Security,"@SteelDominic I think OpenBabel is not the right tool for this. Before trying to convert batches of molecules for 3D print (similar to NIH's [3d print exchange](https://3d.nih.gov/), or CCDC's [printing contests](https://www.ccdc.cam.ac.uk/discover/blog/2017-10-17-we-have-a-csd3dprint-contest-winner/)), one better would define if one wants a ball-and-stick model, or one of van der Waals-spheres; if the model is about individual molecules, or a packing; if the object should be free and isolated, or on a plinth; if the result is good enough in as a structure (where a .stl is enough), or requires colour (.obj, .vmrl). Note, Scalfani *et al.* address a similar a task with Jmol and data by the COD in their open access publication *Programmatic conversion of crystal structures into 3D printable files using Jmol* ([link](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-016-0181-z)). The authors equally mention [cif2vrml](http://cad4.cpac.washington.edu/Cif2VRMLHome/Cif2VRML.htm) by Werner Kaminsky as an executable for the Windows operating system, too. Both approaches target vrml (VRML V2.0 utf8) as output format, though Jmol alternatively can provide .obj, or .stl files as well. Jmol's documentation compiles some additional hints on its wiki ([link](https://wiki.jmol.org/index.php/3D_printing)). ```java; # name : Jmol3DP.spt; # source : Scalfani et al, J Cheminform 8, 66 (2016). https://doi.org/10.1186/s13321-016-0181-z; # purpose: convert with Jmol individual .cif into .vrml97 suitable for 3D printing; #; # ""G:/CIF files"" # indicate the folder containing the list of cif to process; var alist=load(""CIF_list_filenames.txt"").lines; for (var i = 1; i < alist.length;i++) {; try{; load @{alist[i]} {1 1 1}; info = getProperty(""moleculeInfo""); nmax = getProperty(info, ""nAtoms"").max; m = getProperty(info, ""[select (number) where nAtoms == nmax]"")[1]; print {molecule=m}; select on molecule=m; delete molecule !=m; axes OFF; set exportScale (10.0); write @{alist[i]+"".wrl""};",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089:716,access,access,716,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1988946089,1,['access'],['access']
Security,"@baoilleach If someone wants to suggest flags, I'm happy to set up an Ubuntu ""sanitize"" builder. I'm not 100% up - can you add most/all of the sanitize flags together?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625891403:78,sanitiz,sanitize,78,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625891403,2,['sanitiz'],['sanitize']
Security,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:133,Validat,ValidationSuite,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056,1,['Validat'],['ValidationSuite']
Security,"@e-kwsm On the installation accessible to me, I'm able to replicate the processing, which yields the same output as reported. Equally, the initially stated observations using only openbabel may be replicated. For one, to identify the line yielding the warning. ```bash; $ obabel -ismi check01.smi -ocan -f 4 -l 4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ``` ; while the other combinations of first line/last line to pick an other single line from the raw .smi file read don't yield a warning:. ```bash; $ obabel -ismi check01.smi -ocan -f 1 -l 1; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 2 -l 2; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	; 1 molecule converted; $ obabel -ismi check01.smi -ocan -f 3 -l 3; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	; 1 molecule converted; ```. For the other, the report over all four entries processed in one batch, with the warning not next to the line it would belong to:. ```bash; $ obabel -ismi check01.smi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907:28,access,accessible,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1067944907,1,['access'],['accessible']
Security,"@ej73.com. > On 4 Nov 2017, at 03:21, Jeff Janes <notifications@github.com> wrote:; > ; > On Fri, Nov 3, 2017 at 7:04 AM, phosphre <notifications@github.com> wrote:; > ; > > Please compare the above structure with the pubchem 2D structure; > > <https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure>,; > > showing, in green, a H which 'protrudes towards the camera'. The same H is; > > depicted as 'protruding' above the ring with the NCH3 group in the; > > wikipedia entry; > > <https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png>; > > .; > >; > ; > Having a hydrogen protrude above the screen conveys exactly the same; > information as having any one of the three carbons indicated to protrude; > below the screen. And that is what you are seeing, one of the carbons was; > chosen to be depicted protruding below the screen. Openbabel's depiction; > of below-the-plane bonds includes a solid line with the hashed wedged; > superimposed over the solid line, instead of just showing the hashed wedge; > like most software does. You seem to be confusing that superimposition to; > be two different bonds (and further thinking one of them is to a hydrogen,; > despite the lack of 'H'). It is not, it is one bond with two graphical; > elements.; > ; > Personally I find the superimposition of hashed wedge with a solid line; > through it to be unattractive, especially when the solid line is so thick; > as in your image. Maybe there is some option you can give it to turn off; > that solid line running through the hashed wedge. That would make it more; > attractive to me and less confusing for you.; > ; > > The Pubchem 3D shows the hydrogen in more detail.; > >; > ; > Well, you didn't tell Pubchem to delete the hydrogens, like you did; > openbabel.; > ; > Cheers,; > ; > Jeff; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465:1049,hash,hashed,1049,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341931465,2,['hash'],['hashed']
Security,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2428:2060,access,accessing,2060,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428,1,['access'],['accessing']
Security,"@fredrikw ; Your approach by `obabel check01.smi -O result01.can -e` is more compact, easier to memorize and returns unproblematic SMILES strings at a faster rate. However, I notice it returns seven out of eight entries of `check01.smi` -- including the fourth one my approach did not let pass. Do you think OpenBabel's report about this entry qualifies to skip the entry altogether?. For checks with partialsmiles'[1] `validate.py`, the entry passes well:. ```bash; $ python3 validate.py ""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O""; Input: CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O. 1. Parse as full SMILES:. OK. 2. Parse as partial SMILES:. OK. 3. Parse substrings as partial SMILES:. OK; ```. OpenBabel however issues a warning/error _interpreted_ as serious enough to remove this entry for good:. ```bash; $ obabel -:""CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O"" -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO 1 molecule converted; ```. The meaning of the formulae provided by CDKDepict[2] did not alter -- e.g., no change in the configuration of the stereogenic centers, and the double bond still can't be assigned to match either the pattern of (E), or (Z):. ![2022-03-30_CDKDepict_entry04](https://user-images.githubusercontent.com/19709084/160856599-8123cc0e-39b3-44b7-a2be-019bf7d5294b.png). Because I'm not aware if OpenBabel can resolve such ambiguities (here: to return one SMILES string with the explicit (E), and an other SMILES string with the explicit (Z) double bond) -- wouldn't be the more strict (pedantic?) remove of this entry an; advantage to address specific configurations?*. Last (but not least), the explicit return of problematic SMILES. The in-silico generation of molecules as SMILES appeared to me as affordable (enough) to skip entries with SMILES OpenBabel/partial",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256:420,validat,validate,420,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083218256,2,['validat'],['validate']
Security,"@fredrikw Good point to spot the missing H in the first structure _as if_ the structures might be subject to keto-enol tautomerism. In fact, submitting the SMILES assigned by ChemDraw to one (putative) structure of these pteridines. ![pteridine](https://user-images.githubusercontent.com/19709084/172549678-aa88ec3b-262c-4b6f-af6e-b4b30dc46d58.png). into [NIH's tautomerizer](https://cactus.nci.nih.gov/cgi-bin/tautomerize.tcl) a set of six isomers (compilation attached below). @DreamMemory001 If there is no better format than .xyz accessible to you (better as in «retains bond orders _in addition_ to atoms' coordinates, like e.g., .mol, .mol2, .sdf), you might consider to check for plausibility of the results openbabel provides with a tool outside (working independently) of openbabel. Because every algorithm requested to enrich the information stored in the records may err once on one, or an other side. Though not leading to SMILES (but .mol files one can express again with SMILES), for «typical organic molecules»* Jan Jensen's [xyz2mol](https://github.com/jensengroup/xyz2mol) may assist here. It was presented on [RDKit UGM 2020](https://github.com/rdkit/UGM_2020/blob/master/Presentations/JanJensen.pdf), his [video recording](https://www.youtube.com/watch?v=HD6IpXMVKeo) about it still is on youtube. *) Known complications are salts, and difficulties with complexes including transition metals, etc. So it is working best for neutral molecules consisting of (C, N, O, P, S; H; halogens). [Predicted tautomers.pdf](https://github.com/openbabel/openbabel/files/8859045/Predicted.tautomers.pdf)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941:534,access,accessible,534,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149550941,1,['access'],['accessible']
Security,@ghutchis : Red Hat provides interested developers with access to ppc64(le) VMs running Fedora: https://fit-rhlab.rhcloud.com/powerlinux-openpower-development-hosting/ . Just fill in the Request Form linked there. I've been using a couple of their VMs (ppc64 and ppc64le) for building and debugging my Fedora packages for quite some time now.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266#issuecomment-206619489:56,access,access,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266#issuecomment-206619489,1,['access'],['access']
Security,"@jajupmochi Would an update of openbabel an option for you? There are might be good reasons to use a LTS from the Ubuntu family instead their intermediate releases published twice a year, as well as against; if you stick to LTS I would recommend to update to 20.04 LTS (and in this summer, to 22.04 LTS). To provide perspective, OpenBabel repackaged by DebiChem for Linux Debian 12/bookworm (branch testing) is at version 3.1.1 by February 6th, 2022 ([tracker](https://tracker.debian.org/pkg/openbabel)). If the generation 0D (the SMILES string) to 3D (the .xyz) fails, an alternative is to generate an intermediate 2D (.xyz) in first place. Sometimes, rewriting the SMILES string into a form more accessible to OpenBabel equally helps/offers additional help. . For the first SMILES string:. ```bash; obabel -:""N1(C=C[C@@H](C=C1C)[C@H]1C=CN(C(=C1)C)CCCl)CCCl"" -ocan | obabel -ismi -h --gen3d -oxyz; ```. yields e.g., . ```; 1 molecule converted; 42. Cl 0.93057 -0.72235 0.11214; C 2.70908 -0.81013 0.17949; C 3.30555 -0.84380 -1.22848; N 4.78308 -0.91157 -1.16078; C 5.50030 0.27828 -1.04781; C 6.79964 0.34655 -0.72869; C 7.58978 -0.90870 -0.42149; C 6.78436 -2.16623 -0.71814; C 5.47659 -2.13574 -1.05238; C 4.75761 -3.43161 -1.33497; C 9.00781 -0.95143 -1.07678; C 9.00304 -0.87328 -2.58644; C 9.84595 -0.06092 -3.23557; N 10.75438 0.79769 -2.61330; C 10.72369 0.90150 -1.20482; C 9.92661 0.09709 -0.46849; C 11.53292 1.93288 -0.45745; C 11.76972 1.46635 -3.46203; C 13.02007 0.59878 -3.60521; Cl 14.17952 1.34836 -4.73549; H 2.97462 -1.70594 0.74913; H 3.06144 0.06210 0.73931; H 3.00196 0.05450 -1.78183; H 2.89782 -1.68767 -1.79530; H 4.92952 1.18267 -1.23133; H 7.29603 1.30611 -0.65422; H 7.74476 -0.91385 0.66839; H 7.30518 -3.11487 -0.62493; H 5.43684 -4.29123 -1.32134; H 4.29997 -3.40647 -2.32943; H 3.97906 -3.61608 -0.58816; H 9.45341 -1.92403 -0.81917; H 8.32012 -1.50882 -3.14057; H 9.85509 -0.03516 -4.32277; H 9.92024 0.18199 0.61507; H 11.99814 2.68502 -1.09382; H 12.32360 1.45087 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989:698,access,accessible,698,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046568989,1,['access'],['accessible']
Security,"@janosh I assume (contrasting to https://github.com/openbabel/openbabel/issues/1905), the computer accessible to you knows only Python3. Is this true (some computers in academia are updated slowly...)?. Because the thread mentions `pip3`, which is/was in Xubuntu 18.04LTS the pip for Python3 vs `pip` for Python2. A fresh/bare metal installation of Ubuntu 20.04 Fossa (and later releases ) leads to a clean transition, a mere upgrade of the distribution leaves traces of legacy Python2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959:99,access,accessible,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1014269959,1,['access'],['accessible']
Security,"@nbeaver There may situations where editing a single `.cif` file manually, directly in the file, is fine, especially if you know plausible entries. If not, [publcif](https://journals.iucr.org/services/cif/publcif/) is a freely available, multi-platform editor which guides you by internal dictionaries and checkers. Note, however, beside the crystallographic model (e.g., unit cell, symmetry operations, atom coordinates), a `.cif` file equally may contain instructions how this model was refined, as well as a reduced representation of the experimental diffraction data. Their consistency is probed with checksums (test [PLAT012](https://journals.iucr.org/services/cif/checking/PLAT012.html)) by Platon, because these two would both allow a) to replicate the construction of the model, and b) build an other, possibly improved, model. For the background, see A. Spek's recent open access publication (author of Platon) [here](http://scripts.iucr.org/cgi-bin/paper?S2056989019016244).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769:605,checksum,checksums,605,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769,2,"['access', 'checksum']","['access', 'checksums']"
Security,"@nbehrnd Thank you for the suggestion. I see that it works for this particular case, but is it actually retaining the hydrogen atoms or is it still removing them and then readding them using an internal obabel mechnism?. I am trying to use the formula to validate a specific SMILES dataset, so it is quite important that the hydrogen atoms are ingested as is. P.S. I am @vaitkus, not @merkys. :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2624#issuecomment-1706968602:255,validat,validate,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2624#issuecomment-1706968602,1,['validat'],['validate']
Security,"@orex I added atomic numbers to the hash approach, so your cifs should be preserved. Later in the week / this weekend, I'm going to get some speed profile data on old vs this vs even bigger hash (to see how much speed is lost with a bad hash), and maybe the octree thing too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23761437:36,hash,hash,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23761437,3,['hash'],['hash']
Security,"@raulorteg The current documentation about openbabel is [here](https://open-babel.readthedocs.io/en/latest/index.html) (including download as html, pdf, or epub for off-line access). In section [Generating conformers for structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=Generating%20conformers%20for%20structures#generating-conformers-for-structures), it however is MMFF94 which is stated as the default.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577:174,access,access,174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2585#issuecomment-1509001577,1,['access'],['access']
Security,"A follow-on from PR#3089953. For the attached file, Inchi executable gives:; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7-,8?,10-,11?/m1/s1. We get the same if we pass the Wedge/Hash bonds to InChI through OB (the default):. >obabel igor.sdf -oinchi; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7-,8?,10-,11?/m1/s1. but not if we use the generated stereochem:. >obabel igor.sdf -oinchi -xs; InChI=1S/C11H18O4/c1-3-6-10(13)8(5-14-2)7-4-9(12)15-11(6)7/h6-8,10-11,13H,3-5H2,1-2H3/t6?,7?,8?,10-,11?/m1/s1; 1 molecule converted. The difference is inchi atom 7, which is 7- versus 7?. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1038:225,Hash,Hash,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1038,1,['Hash'],['Hash']
Security,"A large portion of the code use standard libc string; manipulation functions which can sometimes allow buffer; overflow and other bugs. Programs like flawfinder and; its4 are automated security scanners that list; potential problems. (Granted, Open Babel probably has little to worry about; security consequences of buffer overflows, but these; may cause other bugs such as memory corruption, etc.). Attached is the flawfinder-1.22 output as of; 22-April-2003. These should be inspected and fixed as; needed. Any non-problems should be flagged with comments like:; // Flawfinder: ignore. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/419:185,secur,security,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/419,2,['secur'],['security']
Security,"A recent API change (#1576) broke FragIt (https://github.com/FragIt/fragit-main) which depended on the knowledge about implicit bonds. Now, #1576 did include new utility functions (obfunctions.h) but these functions were never exposed through the python API. 1. This PR exposes those functions hidden away in obfunctions.h so I can use them in FragIt. This PR does not add or remove anything in the API apart from exposing functionality in the API through the python-bindings but I am unsure whether I am required to add some form of test or other documentation?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697:227,expose,exposed,227,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697,2,['expose'],"['exposed', 'exposes']"
Security,"A warning is issued when converting my favourite SDF file, head.sdf (in scripts/python/examples):. babel -i SDF head.sdf -o smi head.smi. ==============================; *** Open Babel Warning in OpenBabel::MDLFormat::ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 2 molecules converted; 1 warnings 34 audit log messages. The weird thing is...there is a title line!. ------------. From Geoff:. Rats. It seemed like a pretty safe fix -- add more verbose warnings to the mdlformat.cpp code when rejecting molecules. This comes when we try to read after the last $$$$ in that file. So you have read 2 molecules cleanly, and then attempt to read a 3rd.; Obviously, there isn't another molecule in the file (you hit the EOF), so it fails. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662:331,audit,audit,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662,1,['audit'],['audit']
Security,Access to 'depth' in Depth-First Search and BFS,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495:0,Access,Access,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495,1,['Access'],['Access']
Security,Accessing ContigFragList from Perl bindings,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1198:0,Access,Accessing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1198,1,['Access'],['Accessing']
Security,Accessing molecule information should be const,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2369:0,Access,Accessing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369,1,['Access'],['Accessing']
Security,"According to the Daylight SMARTS website ""[#6;X3v3+0]"" should match a carbon radical. (http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html#RAD). This doesn't work, instead the radical is treated as a connection:. $ echo 'C[CH2]' | babel -ismi -s'[#6;X3v3+0]' -osmi; 0 molecules converted; 12 audit log messages; $ echo 'C[CH2]' | babel -ismi -s'[#6;X4v4+0]' -osmi; C[CH2]; 1 molecule converted; 31 audit log messages. Similarly for the less constrained match ""[#6;X3]"". $ echo 'C[CH2]' | babel -ismi -s'[#6;X3]' -osmi; 0 molecules converted; 12 audit log messages. I'd like to see this work consistently for heteroatoms too:. $ echo 'CCO[O]' | babel -ismi -s'[O;X1]' -osmi; 0 molecules converted; 18 audit log messages. Cheers,; Stephen. Reported by: donquix2003",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/803:320,audit,audit,320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/803,4,['audit'],['audit']
Security,"Actually, even without reproducing the segfault, I think I can see the problem. And I don't think it's with OB. You shouldn't put anything inside a Begin/EndModify block that relies on perceived data. The whole point of the block is to postpone the reperception until the final EndModify. Within the block, if the perception code becomes invalid, it is not updated and so you get segfaults if you use it. The specific cause here is either:; (a) the fact that DeleteAtom marks the LSSR and SSSR as needed to be reperceived. This would be reperceived automatically next time the user asks for the SSSR but here you do this within a Modify block, and so the recalculation of the SSSR is suppressed.; or; (b) DeleteAtom contains its Begin/EndModify block, indicating that various perceived information has been invalidated. Since you access the information before the outer EndModify is reached, the vengeful Furies descend. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803482:830,access,access,830,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803482,1,['access'],['access']
Security,"Additional remark: When I use babel from the Avogadro package it seems to work, however this is a different version (2.2.2b1) and it produces the same warning message nevertheless. /Applications/Avogadro.app/Contents/bin/babel; Open Babel 2.2.2b1 -- Jun 2 2009 -- 12:15:39. /Applications/Avogadro.app/Contents/bin/babel -i cif 2aev.cif -o pdb test.pdb ; ==============================; *** Open Babel Warning in Init; Unable to open data file 'space-groups.txt'; ==============================; *** Open Babel Warning in Init; Cannot initialize database; ==============================; *** Open Babel Warning in Find; Unknown space group with incomplete or wrong definition.; 1 molecule converted; 3 warnings 80 audit log messages 1 debugging messages. Original comment by: knollentroll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455:713,audit,audit,713,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/910#issuecomment-281795455,1,['audit'],['audit']
Security,Addressed review comments as part of this hash - 549b182.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/130#issuecomment-78091444:42,hash,hash,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/130#issuecomment-78091444,1,['hash'],['hash']
Security,"Affirmative. Though you still can obtain the executables from the [release page](https://github.com/openbabel/openbabel/releases) on GitHub, and access the latest documentation via [readthedocs](https://open-babel.readthedocs.io/en/latest/). Addition: consult the package manager of your Linux distribution, survey by [repology.org](https://repology.org/project/openbabel/packages):. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288:145,access,access,145,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2643#issuecomment-1811062288,1,['access'],['access']
Security,"After reading the docs, I realise that in the Python interface all global variables are stuck into openbabel.cvar somehow, but dir(openbabel.cvar) doesn't work. However, accessing openbabel.cvar.obErrorLog works fine, e.g.:. >>> dir(openbabel.cvar.obErrorLog); ['ClearLog', 'GetAuditMessageCount', 'GetDebugMessageCount', 'GetErrorMessageCou; nt', 'GetInfoMessageCount', 'GetMaxLogEntries', 'GetMessageSummary', 'GetMessage; sOfLevel', 'GetOutputLevel', 'GetOutputStream', 'GetWarningMessageCount', 'SetMa; xLogEntries', 'SetOutputLevel', 'SetOutputStream', 'StartErrorWrap', 'StartLoggi; ng', 'StopErrorWrap', 'StopLogging', 'ThrowError', '__class__', '__del__', '__de; lattr__', '__dict__', '__doc__', '__getattr__', '__getattribute__', '__hash__',; '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__',; '__setattr__', '__str__', '__swig_destroy__', '__swig_getmethods__', '__swig_set; methods__', '__weakref__', 'this']; >>> pybel.ob.cvar.obErrorLog.StopLogging(). It's possible to rename cvar to something more catchy - I vote for 'globals' (see section 30.3.3). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169:170,access,accessing,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169,1,['access'],['accessing']
Security,"Again, that method should be commented out in the bindings, as the atoms should be accessed instead through an interator, OBResidueAtomIter.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1552#issuecomment-289269283:83,access,accessed,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1552#issuecomment-289269283,1,['access'],['accessed']
Security,Allow public access to retrieve gradients,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1833:13,access,access,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1833,1,['access'],['access']
Security,"Already an input like; ```bash; obabel -:""c1ccncc1"" -O py*.smi; ```; will not create `py*.smi`, but `py1.smi`. In other cases, the file names will require an escape to access them (e.g., `py?.smi` as `py\?.smi` for e.g., `obabel py\?.smi -O test.png`). You might be able to adjust the terminal emulator to do this for you *on the fly*, however chances are your colleagues' computers are not set up for this by default. However, this may become an obstacle down the road (e.g., retrieve by regexes). If you want to ease exchange, stick to to the 2x26 English characters of [a-zA-Z], decimals [0-9] plus dash, plus, and underscore.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090:168,access,access,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445#issuecomment-1020199090,1,['access'],['access']
Security,Also it can be useful to add the testpypi server to your `.pypirc` file to test everything is OK before uploading:. ```; [distutils]; index-servers =; pypi; testpypi. [pypi]; repository: https://pypi.python.org/pypi; username: <un>; password: <pw>. [testpypi]; repository: https://testpypi.python.org/pypi; username: <un>; password: <pw>; ```. So then it's easy to do a quick. ```; python setup.py register -r testpypi; python setup.py sdist upload -r testpypi; ```. then check on http://testpypi.python.org before doing the proper upload with. ```; python setup.py sdist upload -r pypi; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704:233,password,password,233,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33500704,2,['password'],['password']
Security,"An option to parse comments provided by UCSF Dock and Chimera. Mol2 writer is also capable to write properties from other sources, like SDF. Example of such comments:. ```; ########## Name: ZINC04087362; ########## HA_RMSDs: 10.5487; ########## HA_RMSDh: 10.5466; ########## HA_RMSDm: 5.8751; ########## Cluster Size: 19; ########## Grid Score: -45.986282; ########## Grid_vdw: -38.770088; ########## Grid_es: -7.216196; ########## Int_energy: 9.837175. @<TRIPOS>MOLECULE; ZINC04087362; ....; ```. Note:; There is a bug, although I'm not proficient enough in C to fix that - if N molecules are skipped using ""-l"" option, then comments for first molecule are lost. I guess MOL2Format::SkipObjects needs to check if line ""m-2"" has # at the beginning, and then skip few lines back (until hashed lines finish).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/112:785,hash,hashed,785,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/112,1,['hash'],['hashed']
Security,"Are there places I can access to debug this? AFAIK, Travis is only x86, so I don't have access to other arch personally.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/266#issuecomment-206475173:23,access,access,23,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/266#issuecomment-206475173,2,['access'],['access']
Security,"As a comment, because it does not aim to solve the issue for Open Babel:. File `example_bad.cif` contains a syntax error because of the missing closing `'`. Note, from the perspective of the syntax of a `.cif` file, there is no need to enclose each of the symmetry equivalent positions by a `'`. However, if you choose to use an opening `'`, you need a closing `'`, too. You may submit any `.cif` to an checker like [checkcif](https://checkcif.iucr.org/) -- doing so for this file (here you need to choose option `Validation of CIF only (no structure factors)`) will both identify the problem as well as its location (line 36). Side notes:; - The _original_ `.cif` from the COD ([card #1011063](http://crystallography.net/cod/1011063.html)) does not use the single quotation marks and a conversion with obabel (3.1.0) works just fine. The same for its sibling entry, [COD 1011024](http://crystallography.net/cod/1011024.html) about ice III.; - One of the references of the `.cif` syntax is IUCr's dedicated [web site](https://www.iucr.org/resources/cif/spec/version1.1/cifsyntax).; - Assuming `example_bad.cif` is the result of an (automated ?) edit of a `.cif` from a database like the [COD](http://crystallography.net/cod/index.php): the checkcif service relies in large part on [Platon](https://www.platonsoft.nl/platon/) and its [validation routines](https://www.platonsoft.nl/platon/pl000601.html). It is possible to install Platon locally, and subsequently perform the checks on a batch of `.cif` files, too.; - Consider updates. If you like to continue with Ubuntu LTS, either change from the old point release of Ubuntu 18.04.1 (Jul 2018) to the current 18.04.4 (Feb 2020), or mark [August 6th](https://wiki.ubuntu.com/FocalFossa/ReleaseSchedule) for an install of the next LTS with the point release 2020.1. The later would at least substitute Open Babel 2.3.2 (first released 2012) by release 3.0 (fall 2019).; Or, compile Open Babel from the sources.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804:514,Validat,Validation,514,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-663831804,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"As background, have you seen my blog post?; http://baoilleach.blogspot.co.uk/2013/11/anatomy-of-bug-fix.html. So I have tested that the code makes things better. I think you are asking; about unit tests though. I don't see how this code is testable without exposing some of the; depiction internals, or reimplementing them in the tests. Specifically; measuring the ""clash overlap"", which was an existing function in the; depiction code but is not exposed in the API. I'll look into it - it might; be as simple as setting a data field on the molecule. On 21 November 2013 22:23, Geoff Hutchison notifications@github.com wrote:. > Can we get some layout tests? I'm not sure quite how we'd test this, but; > it seems like a good idea.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/40#issuecomment-29030719; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865:447,expose,exposed,447,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865,1,['expose'],['exposed']
Security,AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3464,Audit,Audit,3464,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,Attempt some sanitizer builds using GCC and Clang,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2213:13,sanitiz,sanitizer,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2213,1,['sanitiz'],['sanitizer']
Security,Audit Log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316:0,Audit,Audit,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779316,1,['Audit'],['Audit']
Security,Avoid out-of-range access in OBMolBondBFSIter,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1892:19,access,access,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1892,1,['access'],['access']
Security,B]; Get:23 http://security.ubuntu.com/ubuntu focal-security/main DEP-11 64x64 Icons [35.5 kB]; Get:24 http://security.ubuntu.com/ubuntu focal-security/main amd64 c-n-f Metadata [9104 B]; Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [643 kB]; Get:26 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 48x48 Icons [219 kB]; Get:27 http://archive.ubuntu.com/ubuntu focal-updates/universe DEP-11 64x64 Icons [393 kB]; Get:28 http://security.ubuntu.com/ubuntu focal-security/restricted Translation-en [91.7 kB]; Get:29 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 c-n-f Metadata [536 B]; Get:30 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [675 kB]; Get:31 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 c-n-f Metadata [20.0 kB]; Get:32 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [24.8 kB]; Get:33 http://security.ubuntu.com/ubuntu focal-security/universe Translation-en [115 kB]; Get:34 http://archive.ubuntu.com/ubuntu focal-updates/multiverse Translation-en [6928 B]; Get:35 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 DEP-11 Metadata [940 B]; Get:36 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 48x48 Icons [1865 B]; Get:37 http://archive.ubuntu.com/ubuntu focal-updates/multiverse DEP-11 64x64 Icons [2498 B]; Get:38 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 c-n-f Metadata [620 B]; Get:39 http://security.ubuntu.com/ubuntu focal-security/universe amd64 DEP-11 Metadata [66.3 kB]; Get:40 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 48x48 Icons [31.6 kB]; Get:41 http://security.ubuntu.com/ubuntu focal-security/universe DEP-11 64x64 Icons [70.3 kB]; Get:42 http://security.ubuntu.com/ubuntu focal-security/universe amd64 c-n-f Metadata [13.0 kB]; Get:43 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [21.8 kB]; Get:44 http://security.ubuntu.com/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:3343,secur,security,3343,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,1,['secur'],['security']
Security,"Based on the «steps to reproduce» shared by you, it seems plausible you missed an explicit space between `-O` (uppercase o) and the file to store the result as permanent record. I.e., try `obabel -icif 1ner.cif -opdb -O 1ner.pdb`. But then (accessing the .cif with vim), there are approx. 35.6 k atoms described, perhaps a bit much for obabel to digest quickly. Is there a particular reason why using the .pdb ready-to-go offered by the database is not an option for you?. ![atRCSBPDB](https://user-images.githubusercontent.com/19709084/167395183-44667694-3438-452b-9219-d2cb27be7df9.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1120945509:241,access,accessing,241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472#issuecomment-1120945509,1,['access'],['accessing']
Security,"Beyond SMILES (or other 0D / 1D formats), 2D formats do not ; properly convert to 3D cartesians. However, unlike SMILES ; conversion, much of the structure is already defined (e.g., up/down, ; wedge/hash notation), making this problem considerably easier. Addition of a force field (e.g., Tripos-like or MMFF) would facilitate ; such structure-generation problems. -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/38"":https://sourceforge.net/p/openbabel/feature-requests/38",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1408:199,hash,hash,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1408,1,['hash'],['hash']
Security,"Bonds and atoms are indexed inconsistently, with atoms; numbered starting at 1, e.g. (from alchemy.cpp):. for(i = 1;i &lt;= mol.NumAtoms(); i++); {; atom = mol.GetAtom(i);. but bonds are numbered starting at 0, e.g. (from; binary.cpp). binary.cpp: for (i = 0;i &lt; (signed)mol.NumBonds();i++); mol.GetBond(i)-&gt;SetAromatic();. This leads to inconsistency, confusion and inefficient; access to vectors (and potentially plenty of bugs!); This needs to be fixed. Unfortunately, it'll require a; substantial investment of time and effort since almost; all of the code will need to be checked and re-checked.; (about 29,000 lines currently). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/11"":https://sourceforge.net/p/openbabel/feature-requests/11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380:386,access,access,386,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380,1,['access'],['access']
Security,"By the way, I think it would be a great idea to add a set of unit tests for space group detection and validation - it seems as if there are far too many unusual cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656:102,validat,validation,102,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-183400656,1,['validat'],['validation']
Security,"Constraining the conversion to a small set (`timeout 120 obabel ache_smiles.smi -O ache.sdf --gen3d 5 --p 7.4`) and the fastest algorithm to suggest a conformer (which need not lead to the global optimum), the CLI reports multiple entries where the stereochemistry either is ambiguous, or wrong (`Could not correct 1 stereocenter(s) in this molecule ()`). Actually, there are entries with more than one problematic chirality center, too. In this perspective, it is better if OpenBabel's permanent record only is about the non-problematic structures. The better thing to do would be a revision of the structure generator; since SMILES are a reduced representation of the structures, possibly the maintainers of the generator may fix the problem and benchmark the assignment of stereochemistry (CIP rules) against a reference set. Meanwhile, perhaps the generator you use offers the export of the molecules as 3D structures, e.g. in the .sdf format to bypass the current problem. https://github.com/CIPValidationSuite/ValidationSuite",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164:1016,Validat,ValidationSuite,1016,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2506#issuecomment-1174678164,1,['Validat'],['ValidationSuite']
Security,"Dear Dev,. OBMol.GetCoordinates returns a C array and it is not accesseble from Python.; ( <Swig Object of type 'double *' at 0x10d487f90> ) . Best Regards,; Fabio L. Reported by: fabiolol. Original Ticket: [openbabel/bugs/988](https://sourceforge.net/p/openbabel/bugs/988)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1367:64,access,accesseble,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1367,1,['access'],['accesseble']
Security,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:438,validat,validation,438,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,1,['validat'],['validation']
Security,"Dear Dr. Hutchison,. Thank you for you pointing out where the conflict of the this pull request. Actually, this problem is caused by the “priority” of the checking sequence. Let me explain it in detail. To validate the `file-format`, in testing script `scripts/python/examples/testpybel.py`, there is an intentioned `assert`:. ```; LINE 194: def RFformaterror(self):; LINE 195: mol = getattr(self.toolkit.readfile(""noel"", ""head.sdf""), nextmethod)(); ```. In old `pybel.py`, since the format `noel` is not supported at the very beginning, the `format-error` will be raised firstly, by using returned Boolean variable `formatok`, which is just like assumed. . However, in new updated codes, the function becomes: `pybel.readfile(format=None, filename=None, opt=None)`, because the argument `filename` is always required, so to be efficient, it is being checked first. Due to file path of `head.sdf` is `python/examples/head.sdf`, but does not exist at `where-the-ctest-being-executed`, thus the error `IOError` will be raised, yet it is not equivalent with the expected `ValueError`, coded in:. ```; # file: scripts/python/examples/testpybel.py. LINE 197: def testRFformaterror(self):; LINE 198: """"""Test that invalid formats raise an error""""""; LINE 199: self.assertRaises(ValueError, self.RFformaterror); ```. Therefore, the testing process is not passed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470:206,validat,validate,206,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204726470,1,['validat'],['validate']
Security,"Dear Geoff,. The variable ""OBConversion conv;"" is a local function variable. That means, I guess, each time this function is called I got a memory leak? :). If instances of OBConversion class should be accessed via singleton instance, its constructor should not be public. Or please explain, what static instance do you mean. Original comment by: dma_k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/997#issuecomment-281796880:202,access,accessed,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/997#issuecomment-281796880,1,['access'],['accessed']
Security,Expose obfunctions api through python bindings,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697:0,Expose,Expose,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697,1,['Expose'],['Expose']
Security,"Fair enough, I swapped in the hash you suggested i.e. the most recent commit hash.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553:30,hash,hash,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2354094553,2,['hash'],['hash']
Security,"Figuratively speaking, `--gen3d` attempts an energy optimization while varying the geometry described. Out of the [multiple methods available](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) (the default `--gen3d` *alone* is a place holder for the more verbose instruction `--gen3d med`), it is possible that the method selected identifies *one local*, but not necessarily *the global* optimum. In the example presented, either one of the two following two instructions; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d best -O out_best.sdf; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d dg -O out_dg.sdf; ```; yields a conformer more reasonable, i.e. with the proton in question oriented out to the periphery of the quinazolin-4(3*H*)-one if spending a little extra of computation. ![peripheral_hydrogen](https://user-images.githubusercontent.com/19709084/126817356-57c5865f-49a0-4cef-b24e-ddd25a28216a.png). An open access publication (https://doi.org/10.1186/s13321-019-0372-5) illustrates the trade-offs for OpenBabel in further detail.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038:1013,access,access,1013,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398#issuecomment-885784038,1,['access'],['access']
Security,"First part is to always parse space group origin:; - This is fixed by removed overloaded version of SpaceGroup::SetHMName.; - Unrelated, removed similar overloaded SpaceGroup::SetHallName. Second part:; - Expose -xo option for write PDB, to set space group setting (if present) in space group label. Added tests.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558:205,Expose,Expose,205,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558,1,['Expose'],['Expose']
Security,Fix wedge/hash in cyclopropyl,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1582:10,hash,hash,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1582,1,['hash'],['hash']
Security,"Fixed in r4134:; ""Fix for PR#3081474 to correct handling of isotopes in InChI output. I just needed to change isotab.GetExactMass() to etab.GetMass(). The problem was only exposed when converting molecules with isotopes of Br, where the most abundant isotope (79) is not the same as the atomic molecular weight (~80). "". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797436:172,expose,exposed,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1030#issuecomment-281797436,1,['expose'],['exposed']
Security,Fixed in r4232 by using Hash/Wedge designations when generating InChIs from 2D data. I'm about to file a follow-on bug report though as the 2D data was not interpreted correctly by OB. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1036#issuecomment-281797520:24,Hash,Hash,24,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1036#issuecomment-281797520,1,['Hash'],['Hash']
Security,"For file downloaded from ccdc ( https://summary.ccdc.cam.ac.uk/structure-summary?id=doi:10.5517/cc8j3mh&sid=DataCite ), openbabel fail to convert from mmcif to pdb and give the following error - . Unknown space group error (H-M symbol:P21/c), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 21 warnings 14 audit log messages. In the attached cif file from ccdc, the short space group P21/c is recognized by openbabel. Openbabel by default remove the space and add it to dictionary. The thing went wrong was due to the following block -; loop_; _symmetry_equiv_pos_as_xyz; ???; Openbabel doesn't treat the transformation as unknown and try to match and fail in the library. I checked in a patch in my forked repo and created a pull request - . https://github.com/openbabel/openbabel/commit/4d9b605f793cf932c8fd6e3fc3770d385a683d4b. Please evaluate and let me know.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/238:353,audit,audit,353,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/238,1,['audit'],['audit']
Security,"For some reason babel treats the hydrogen atom differently from the lithium atom in the xyz parser. This is what happens for lithium. $ babel -ixyz li.xyz -oreport; FILENAME: li.xyz; FORMULA: Li; MASS: 6.9410; EXACT MASS: 7.0160045; INTERATOMIC DISTANCES; ... $ babel -ixyz li.xyz -oqcin ; $comment; li.xyz; $end. $molecule; 0 1; 3 0 0 0; $end. $rem. $end; 1 molecule converted; 12 audit log messages . And this is what happens for the hydrogen atom:. $ babel -ixyz test.xyz -oreport; FILENAME: test.xyz; FORMULA: H; MASS: 1.0079; EXACT MASS: 1.0078250; TOTAL SPIN: 2; INTERATOMIC DISTANCES; ... $ babel -ixyz test.xyz -oqcin ; $comment; test.xyz; $end. $molecule; 0 2; 1 0 0 0; $end. $rem. $end; 1 molecule converted; 11 audit log messages . As can be seen, the Q-Chem input file for the lithium atom has the wrong multiplicity (1=singlet) instead of the expected 2. Running with ---errorlevel 5, it appears that the lithium atom XYZ input triggers OpenBabel::AssignImplicitValence but not the hydrogen atom XYZ input. Reported by: @jiahao",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1099:382,audit,audit,382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1099,2,['audit'],['audit']
Security,"For some smiles, cansmiles yields incorrect results. PROBLEM:; echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ismi -osmi; O=[C]1=[NH][C](=O)=C2C=CC=C3C2C1C=CC3	; 1 molecule converted; 4 info messages 33 audit log messages; The resulting SMILES in not correct. I expected the result to be identical to the input, because the input came from a canonicalization of another SMILES. BACKGROUND:; The input SMILES above came from here.; echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ismi -osmi; O=c1[nH]c(=O)c2cccc3c2c1ccc3	; 1 molecule converted; 1 info messages 33 audit log messages. This resulting cansmiles is correct, but I cannot convert it properly (see PROBLEM).; Another way to think of this is; cansmiles(x) = cansmiles(cansmiles(x)); This is not true for x = 'O=c1[nH]c(=O)c2cccc3c2c1ccc3'. I think this is a general problem with aromatic rings having =O subtitutions and how to aromatize them. Linux/ubuntu; openbabel 2.2.3. TJ; tjo@gnova.com. Reported by: tjbear",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986:201,audit,audit,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986,2,['audit'],['audit']
Security,"From Andrew Dalke on list:. Perhaps I'm missing something after staring at fingerprint SMARTS definitions for the last few days. I'm validating the MACCS substructure keys from RDKit, which are also used in OpenBabel and CDK. I'm writing a test suite, which will be public when done. (Actually, they are public now, if you know where the version control repository is.). I'm having a very difficult time generating an aromatic ring with a ""P"" in it in OpenBabel. >>> import pybel; >>> pybel.readstring(""smi"", ""c1cccp1"").write(); 'C1CCCP1\t\n'; >>> pybel.readstring(""smi"", ""c1ccccp1"").write(); 'C1=CC=NC=P1\t\n'. Since P is in the same group and has the same valence levels as N, I expected the first of these to return ""c1cccp1"", similar to. >>> pybel.readstring(""smi"", ""c1cccn1"").write(); 'c1ccc[nH]1\t\n'. Both RDKit and OEChem have no problem dealing with ""c1cccp"" and interpreting it as an aromatic ring. I processed about 50K structures from PubChem to find a number with aromatic ""p"" in them. Since PubChem doesn't have aromaticity information, what I did was use another program to perceive the aromaticity. Below I show the RDKit SMILES for a structure and the OpenBabel equivalent for it. You can see that of the 53 structures where RDKit has no problems with a ""p"" in an aromatic ring, 51 of them are converted into aliphatic form by OpenBabel. Is this due to a chemical reason or a design reason for why OpenBabel does this? Perhaps it's something subtle about aromaticity perception (which I sadly admit I still don't have a good grasp on). This is with OEChem OBReleaseVersion() '2.3.0' which I built a couple of days ago. Andrew; dalke@dalkescientific.com. Columns are; column 1: ""p"" in OpenBabel's SMILES; column 2: the SMILES string from RDKit; column 3: the SMILES string from OpenBabel. False 'CCc1c(CC)p(-c2ccccc2)c(-c2ccccc2)c1-c1ccccc1' 'CCC1C(CC)P(C2CCCCC2)C(C2CCCCC2)C1C1CCCCC1\t\n'; True '[W].Cc1np(C([Si](C)(C)C)[Si](C)(C)C)nc1N1CCCCC1.[O+]#[C-].[C-]#[O+].[O+]#[C-].[C-]#[O+].",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1109:133,validat,validating,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1109,1,['validat'],['validating']
Security,"From marcolippi83@gmail.com nopenbabel-discuss:. Hi,. I am encountering a problem when asking OpenBabel to generate an InChI from; a molecule which has an alias bonded through a wedge/hash bond... It seems; to be missing the wedge/bond after expanding the alias... Here is an example of what I mean:. OpenBabel01241222313D. 20 21 0 0 0 0 0 0 0 0999 V2000; -3.2672 1.9552 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -4.4572 0.9403 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.9562 -4.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.7871 -5.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.1816 -0.9104 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -4.4572 -1.0299 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.0564 0.9403 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0125 -1.9254 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.5553 -2.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.7662 -1.0597 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.9562 -2.0448 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.1566 -1.3582 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.4342 3.6269 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; -1.0334 1.6269 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 2.5783 0.6418 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 5.0000 -1.3582 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; -3.4342 -2.3433 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.0334 -4.3433 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 1.3674 -4.3433 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 5.0000 -5.3284 0.0000 * 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 7 2 0 0 0 0; 1 13 1 0 0 0 0; 2 6 2 0 0 0 0; 3 4 1 0 0 0 0; 3 11 1 0 0 0 0; 3 20 1 1 0 0 0; 4 19 1 0 0 0 0; 5 7 1 0 0 0 0; 5 8 1 0 0 0 0; 5 17 2 0 0 0 0; 6 17 1 0 0 0 0; 7 14 1 0 0 0 0; 8 12 1 0 0 0 0; 8 18 2 0 0 0 0; 9 10 1 0 0 0 0; 9 12 1 1 0 0 0; 9 19 1 0 0 0 0; 10 11 1 0 0 0 0; 10 15 1 6 0 0 0; 11 16 1 1 0 0 0; A 13; OMe; A 15; OAc; A 16; OAc; A 20; OAc; M END. The generated InChI is. InChI=1S/C18H22N2O10/c1-8(21)28-12-7-27-18(16(30-10(3)23)15(12)29-9(2)22)20-17(25)13-14(24)11(26-4)5-6-19-13/h5-6,12,15-16,18,24H,7H2,1-4H3,(H,20,25)/t12?,15?,16?,18-/m1/s1. Am I missing something ?. Thanks !. Marco. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1155:184,hash,hash,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1155,1,['hash'],['hash']
Security,"From: Joe Leonard; To: Geoff Hutchison. It might also be useful if you can get Gasteiger's; group to help validate the charges in OpenBabel. I; looked at the code, and it looks like stuff which I was; familiar with at Tripos - and I don't know how those; compare to Gasteiger's work (due to parameter creep). They're only Gasteiger-sigma charges, too. Reported by: *anonymous. Original Ticket: ""openbabel/feature-requests/2"":https://sourceforge.net/p/openbabel/feature-requests/2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371:106,validat,validate,106,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371,1,['validat'],['validate']
Security,Give access to BODR data,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1521:5,access,access,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1521,1,['access'],['access']
Security,"Good find. Do you still have the test case? I'd like to see where in the code it was accessing the value, as it may be a logic problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984:85,access,accessing,85,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2038#issuecomment-533662984,1,['access'],['accessing']
Security,"Good point. I was thinking more along the lines of someone saying ""hey, I have an issue"" but I'd welcome either:; a) a way to provide confidentiality (since we don't have a separate maintainers list); b) re-wording for the text. Not sure of either, although I can take a stab at rewording.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338527989:134,confidential,confidentiality,134,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338527989,1,['confidential'],['confidentiality']
Security,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2135:418,secur,security,418,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135,3,"['Secur', 'secur']","['Security', 'secure', 'security']"
Security,"Hello :-). The DOI foundation recommends [this new resolver](https://www.doi.org/doi_handbook/3_Resolution.html#3.8). Yes, a bit ironic that they would change the URL of their service, but it's now [encrypted](https://www.ssllabs.com/ssltest/analyze.html?d=doi.org). Because the old links with the `dx` subdomain continue to work, there is no urgent need to do anything. However, I'd hereby like to suggest to follow the new recommendation by applying this update to all static DOI links. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1909:199,encrypt,encrypted,199,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1909,1,['encrypt'],['encrypted']
Security,"Hello Raik,. I don't know if Geoff was in touch with you or not, but you've now got SVN access. Welcome to OpenBabel. - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/912#issuecomment-281795474:88,access,access,88,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/912#issuecomment-281795474,1,['access'],['access']
Security,"Hello everyone,. I am Ayush Paliwal, a 3rd-year student at the Indian Institute of Technology (BHU), Varanasi. I am interested in working with OpenBabel for GSoC 2021. I want to work on the project Develop a validation and standardization filter. I have good experience in C++, python and JS. I also worked on a molecular simulation project using MAPS software.; I would be grateful if you guided me on how to get more involved, contribute.; Looking forward to contributing!. Sincerely,. Ayush Paliwal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334:208,validat,validation,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334,1,['validat'],['validation']
Security,"Hello, Patrick. I check your implementation of FillUnitCell. I'm using now the function for structures with partial occupancy sites (for example 50% Si and 50% Al). For the structures I have your FillUnitCell implementation will break my code (and not only mine). To solve the problem, I think, will be enough to add an atom label to the hash. Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. But if you want to make the function as fast as possible and little bit more universal I have a few suggestion.; 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. . Best regards,; Kirill.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23718837:338,hash,hash,338,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23718837,2,['hash'],['hash']
Security,"Hello,. I'm trying to use openbabel 2.1.1 on linux to convert mdl mol v3000 files into mdl mol v2000. The example-file molex.mol (see attachment) contains a COLLECTION Block. ; No conversion is taking place.; No warning or error (except for the title line. % babel -errorlevel 5 -imdl molex.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 0 molecules converted; 1 warnings 4 audit log messages. If the COLLECTION-Block is removed, conversion goes through smoothly. % babel -errorlevel 5 -imdl molexZ.mol -omdl molex2.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read title line. 1 molecule converted; 1 warnings 16 audit log messages. reiner.dieden@ucb-group.com. Reported by: reinerdieden",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663:483,audit,audit,483,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663,2,['audit'],['audit']
Security,"Hey I am quite new in this and I have read the documentation.; I have a list of SMILES and I want to check if they are valid in 3d space, like a structure validation. This way I can get a percentage of 3D validity in my set of molecules. I am converting my smi to pdb or pdbqt and I generate3D using either cmd or python binding, and I get my converted file with sane coordinates in every atom but some of them are not valid, the conversion still happens so I don't have any way to know. Is there a feature for 3d structure validation?. Thanks for the help.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2651:155,validat,validation,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2651,2,['validat'],['validation']
Security,"Hi Hin-Tak, thanks for the comments and the fix. I want to ask whether you would be interested in running a nightly build on a Tru64 system. None of the developers have access to such a system and so errors like this occur from time to time, and are difficult to resolve. We have recently (i.e. in the last week) set up a build dashboard at http://my.cdash.org/index.php?project=Open%20Babel&date=2010-02-14 and are working through the warnings and test failures. The build procedure is simply a one command that should be run from cron. If you are happy to do so, please contact me off-list at baoilleach@gmail.com. . - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279:169,access,access,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279,1,['access'],['access']
Security,"Hi Kirill,. > I check your implementation of FillUnitCell. I'm using now the function for structures with partial occupancy sites (for example 50% Si and 50% Al). For the structures I have your FillUnitCell implementation will break my code (and not only mine). To solve the problem, I think, will be enough to add an atom label to the hash. The atom label could be easily added to the hash, although I'm not understanding how the cif file is organized. Do you have Si and Al atoms overlapping?. > Optional suggestion. My filling is that FillUnitCell cannot hangs on real structures with all atoms to all atoms distance algorithm. 1000 atoms (1E6 pairs) will be processed in a few second. My issue is that I'm using unit cells with ~10,000 atoms, so 1E8 pairs. I have some cifs that take a few hours on the O(N^2) FillUnitCell :(. > 1) It will be good to control accuracy of the duplicity. For this I can suggest not to use string hash, but make a class with overridden ""<"" operator which can compare vectors with some precision (and also atom labels). And after that use the class in set. The implementation should be significantly faster.; > 2) Use in second part of the function (where you check the duplicity of the transformed structures) not all coordinateSet, but set, with only transformed coordination of the site. You're right that there are better approaches than the hash. In fact, game developers have hyper-optimized 3-dimensional collision detection approaches. The common solution is called an [octree](http://en.wikipedia.org/wiki/Octree), and there are [open-source GPL implementations in C++](http://nomis80.org/code/octree.html). An octree is basically a three-dimensional binary tree (8 = 2^3), and has O(NlogN) performance. Accuracy is controlled by the number of decision steps in tree traversal. In this case, fractional coordinate absolute accuracy should be 0.5^n, where n is the number of steps used. I'll play around with an octree implementation soon, as it's definitely b",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081:336,hash,hash,336,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23723081,3,['hash'],['hash']
Security,"Hi Noel,. > Otherwise all of the developers get emails for every commit, and don't know when it's finished. I apologize for that. It was a combination of self-review and improvements. > Can you provide a short description of what problem or feature this pull request solves/adds and how it does it. 1. Align space-groups.txt with spglib: in particular (a) ensure that each of the Hall names present in the spglib is present (only once) in the space-groups.txt; (b) Ensure that HM names are group (aliased) to the correct Hall name (this solves issue #1559); (c) ensure that space operators are correct for each Hall name (this fixes space groups that weren't fixed in https://github.com/openbabel/openbabel/pull/367) compared to spglib. 2. Remove overloaded SpaceGroup::SetHMName and SpaceGroup::SetHallName that were expecting const char *name. Now the only signature is const std::string &name for both functions. This is needed to always correctly parse origin by calling SpaceGroup::SetHMName(const std::string &name). Added code to correctly deal with :H origin, needed for rhombohedral groups. 3. Expose -xo option for PDB writer, to set space group setting (if present) in space group label.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302442405:1103,Expose,Expose,1103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-302442405,1,['Expose'],['Expose']
Security,"Hi `openbabel/openbabel`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull r",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2546:284,secur,security,284,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2546,1,['secur'],['security']
Security,"Hi all. I am currently a Google Summer of Code Scholar working with MDAnalysis. My project involves the creation of a converter to convert between OpenBabel OBMols and MDAnalysis Universes. I am working with the automatic python bindings. I am keen to chat with current OpenBabel maintainers to gain a deeper insight into the package and take on any suggestions for features or attributes that would be beneficial to access and convert. I also have some questions about functionality that I would love some assistance with. 1. I can see that OpenBabel supports PDB formats, but I cannot see any attributes within the OBMol or OBAtom classes for alternate locations, chainids, occupancies and tempfactors/B-values. Would anyone be able to point me in the direction of where I can find these attributes (if they are supported)? The only documentation I can find it [here](http://openbabel.org/docs/FileFormats/Protein_Data_Bank_format.html). 2. I would love to utilise a handful of the OpenBabel test-set files to test the converter, but I do not want to clone the entire repo into my converter for size purposes. Do you have a preferred way for me to access and credit the files back to OpenBabel? . Thanks for your time! You can follow along with my project [here](https://github.com/MDAnalysis/mda-openbabel-converter).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708:417,access,access,417,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708,2,['access'],['access']
Security,"Hi guys, i'm trying to follow this papeline on git hub: ; https://github.com/seanharr11/phytebyte. When i arrive to point four this is the result : . % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (60) SSL certificate problem: certificate has expired; More details here: https://curl.se/docs/sslcerts.html. curl failed to verify the legitimacy of the server and therefore could not; establish a secure connection to it. To learn more about this situation and; how to fix it, please visit the web page mentioned above. How can i resolve it ? i don't want to use the site without protection.... . Thanks",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628:313,certificate,certificate,313,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628,3,"['certificate', 'secur']","['certificate', 'secure']"
Security,"Hi there,. I am very new to all of this, and am looking for help with the install. I followed the instructions on the page below:. http://openbabel.org/wiki/Install_(source_code). specifically the section on Installing globally with root access. I also installed a GNU compiler according to these instructions: https://wiki.helsinki.fi/display/HUGG/GNU+compiler+install+on+Mac+OS+X and cmake prior to running these commands. I used the following commands:. tar zxvf openbabel-2.4.1.tar.gz; mv openbabel-2.4.1 ob-src; mkdir ob-build; cd ob-build; cmake ../ob-src 2>&1 | tee cmake.out; sudo make install. Everything seemed to install, but I am looking to run the optimize plugin in pymol, and I got an error there: ""Optimize plug-in needs openbabel to be installed in your system, please follow the instructions at; http://openbabel.org/wiki/Get_Open_Babel”. I realized I still did not have it completely installed, so I tried the following command:; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib; which “ran” with no errors. I now have several files and folders in the following directory:; /usr/local/lib; They are:; pkgconfig (FOLDER). libinchi.dylib. libinchi.0.4.1.dylib. libinchi.0.dylib. openbabel (FOLDER). libopenbabel.dylib. libopenbabel.5.0.0.dylib. libopenbabel.5.dylib. cmake (FOLDER). I believe open babel is still not completely installed because I did not compile the language bindings at the time of install. I now have installed python (2.7.10), but am looking for how I can finish this install. As I said above, I’m looking to use the optimize plugin in pymol. I’m working on a Mac (running MacOS Mojave version 10.14). Would very much appreciate any help. Thanks very much!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1897:238,access,access,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1897,1,['access'],['access']
Security,"Hi, a number of CVEs have been issued against openbabel by Cisco's security research unit:; * CVE-2022-37331; * CVE-2022-41793; * CVE-2022-42885; * CVE-2022-43467; * CVE-2022-43607; * CVE-2022-44451; * CVE-2022-46280; * CVE-2022-46289; * CVE-2022-46290; * CVE-2022-46291; * CVE-2022-46292; * CVE-2022-46293; * CVE-2022-46294; * CVE-2022-46295; With these advisories:; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1666; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1672; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1667; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1668; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1664; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1669; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1670; * https://talosintelligence.com/vulnerability_reports/TALOS-2022-1665. Did Cisco ever contact this repository's owners about these vulnerabilities? Are they valid? Are any fixed?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2650:67,secur,security,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650,1,['secur'],['security']
Security,"Hi,. I don't know where else to do to, so I ask here. The openbabel.org page is not working, it is failing with `ERR_TOO_MANY_REDIRECTS`. I didn't report it immediately, but it's been happening at least since last week. Without it, there's no access to the documentation. Thanks,; João",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2645:243,access,access,243,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2645,1,['access'],['access']
Security,"Hi,. My suggestion when working in the conda environment is to use the conda-packages for openbabel that have been supplied by various users. E.g. patrickfuller/openbabel (see below). Otherwise, you really need to make sure that all cmake variables are set correctly to have openbabel compile against the conda python. Kind regards,; Fredrik. [Fredriks-MBP] > anaconda show patrickfuller/openbabel; Using anaconda-server api site https://api.anaconda.org; Name: openbabel; Summary: A chemical toolbox designed to speak the many languages of chemical data; Access: public; Package Types: conda; Versions:; - 2.3.90. To install this package with conda run:; conda install --channel https://conda.anaconda.org/patrickfuller openbabel. > 23 nov. 2015 kl. 09:28 skrev getmolmap notifications@github.com:; > ; > Reproduced both on Intel and AMD pc with LMDE2 in the latest python 3.4 conda environment:; > ; > import pybel; > Segmentation fault; > ; > However, importing opnbabel works fine.; > When I install openbabel and python bindings from packages, it works without problem with the system's python2.7, but not in the conda environments.; > ; > Advice on diagnosis and/or workaround would be appreciated.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/openbabel/openbabel/issues/203#issuecomment-158875942.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-158928983:556,Access,Access,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-158928983,1,['Access'],['Access']
Security,"Hi,. There is a bug in the atom type determination of terminal oxygens attached to Sulfurs, e.g. in the sulphonamide group S(=O)(=O)N. Line 2339 on src/forcefields/forcefieldmmff94.cpp : ; if (nbr2->IsOxygen() && nbr2->GetValence() == 0). should be changed to,; if (nbr2->IsOxygen() && nbr2->GetValence() == 1). Except for single ions, there are no atoms with a valence of 0!. This is causing the terminal O's on sulfur to be typed as index 7 instead of index 32.; If one looks at molecule BBSPRT10 in the MMFF Validation suite, the type assignment for the O is indeed 32(check file MMFF94_opti.log in the validation suite). Regards,; Tushar Jain. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/877:511,Validat,Validation,511,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/877,2,"['Validat', 'validat']","['Validation', 'validation']"
Security,"Hi,. This is the perfect solution! Yes, please send the patch. Is there a planned date for release of 3.0?. Thanks a lot!. Regards,; Johan Westin. From: Geoff Hutchison [mailto:notifications@github.com]; Sent: den 17 april 2018 23:01; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Westin, Johan <Johan.Westin@astrazeneca.com>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] Differences in atom coordinates loading CIF using version 2.3.2 and 2.4.1 (#1726). I can confirm that it's the wrapping call. I'm going to revert that behavior by adding a flag to wrap if requested - but the default will be to use the unwrapped coordinates. Do you want a copy of the patch? It'll go into development (3.0) but not 2.4.x. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/1726#issuecomment-382144569>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AAyD7nZJZdbf5-Tpv4ozlngznLao757nks5tplgpgaJpZM4RAQGy>. ________________________________. Confidentiality Notice: This message is private and may contain confidential and proprietary information. If you have received this message in error, please notify us and remove it from your system and note that you must not copy, distribute or take any action in reliance on it. Any unauthorized use or disclosure of the contents of this message is not permitted and may be unlawful.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659:1092,Confidential,Confidentiality,1092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1726#issuecomment-386543659,2,"['Confidential', 'confidential']","['Confidentiality', 'confidential']"
Security,"Hi,. While looking at the output of OBForceFieldMMFF94::Validate(), I noticed that molecule VUWXUG's output was missing. On further looking at the source code, I found that in file forcefieldmmff94.cpp, lines 3930:3931 are:. -----------------; 3930: if ((c == 98) || (c == 692)) // CUDPAS & VUWXUG; 3931: continue;; -----------------. Is there a reason that these molecules are skipped during Validation?. -Tushar. Reported by: tsjain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/894:56,Validat,Validate,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/894,2,['Validat'],"['Validate', 'Validation']"
Security,"Hi; I'm using Fedora Core 4, gcc-c++-4.0.2-8.fc4.i386.rpm and I'm trying to compile openbabel-2.0.0. The compile is fine until this:; --------; g++ -DHAVE_CONFIG_H -I. -I. -I. -I../data/ -DOB_MODULE_PATH=\""/usr/lib/openbabel\"" -DUSING_DYNAMIC_LIBS -g -O2 -MT obconversion.lo -MD -MP -MF .deps/obconversion.Tpo -c obconversion.cpp -fPIC -DPIC -o .libs/obconversion.o. zipstreamimpl.h: In constructor 'zlib_stream::basic_zip_streambuf<charT, traits>::basic_zip_streambuf(std::basic_ostream<_CharT, _Traits>&, int, zlib_stream::EStrategy, int, int, size_t)':; zipstreamimpl.h:76: error: there are no arguments to 'setp' that depend on a template parameter, so a declaration of 'setp' must be available; zipstreamimpl.h:76: error: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated); --------; According to zipstream.h, this is based on zlib 1.1.4; do we have to worry about the zlib security holes that were fixed in later versions? The current version of zlib is 1.2.3. If I knew C++, I'd give you a patch. Thanks!. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/518:941,secur,security,941,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518,1,['secur'],['security']
Security,"I am a new Open Babel user and have installed babel on my MacOSX 10.6 from the package OpenBabel-2.2.3b.mac.zip. I am trying to convert from a .cif file taken from the Cambridge database to a .pdb. However, I receive the following error:. *** Open Babel Error in Find; Unknown space group error (H-M symbol:Fm-3m), cannot match the list of transforms, please file a bug report.; 1 molecule converted; 1 errors 16 audit log messages 1 debugging messages. If anyone has any suggestions as to how this issue can be solved and any future advice I would greatly appreciate it. . Thanks, ; Stephanie; steichm@Sandia.gov. Reported by: *anonymous",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1011:413,audit,audit,413,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1011,1,['audit'],['audit']
Security,"I am considering to include OpenBabel force fields in on of my applications, studying conformational transitions of (macro)molecules.; To this end, I need the values of the molecular energy, gradients and (possibly) the second derivatives. I managed to write a wrapper that gives me the energy of a configuration, but I could not find a way to access the values of the gradients (using the API's of openbabel-2.2.3).; As far as I understand, this is so because the routines that calculate the gradients are declared ""private"" in include/openbabel/forcefield.h, but I cannot see why this has to be so. Therefore, I am suggesting to extend/modify the API to allow access of the force-field gradients to general programs making use of the library. As a first step to this goal, I managed to patch the source code of openbabel, moving the declaration of GetGradients and friends in the public section of the relevant classes (see the attached file).; After recompiling the library, I am now able to access the forces, after calling the method Energy of OBForceField with the value ""true"".; This is probably not the most elegant hack around, but it ""works for me"" and might be useful to other people. Finally, let me just thank all the developers of this impressive code for their valuable efforts. Best regards. Reported by: *anonymous. Original Ticket: [openbabel/feature-requests/156](https://sourceforge.net/p/openbabel/feature-requests/156)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1525:344,access,access,344,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525,3,['access'],['access']
Security,"I am not a fan of this. Unless initialising to zero is a requirement of the code logic, all that we're doing here is slowing things down, and papering over potential problems. I would prefer the code to segfault and for us to fix the underlying problem, rather than the code seemingly working fine but actually not. A good example is PR #2038, where the underlying logic problem remains (it's on my TODO) and was only found due to the unitialized memory. . However, I do think it would be good to run our test suite in an environment that could catch such problems (e.g. address-sanitizer). We actually used to do this back in the day when we used CDash for nightly builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584:579,sanitiz,sanitizer,579,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625697584,1,['sanitiz'],['sanitizer']
Security,"I assume that it will also break for Py2 and filename of unicode type. Maybe an input validation `isinstance(filname, str)` is sufficient? If not throw `ValueError` and let the user bother. The other solution would be more complex and would require casting from bytes to str in Py3 and from unicode to bytes in Py2 with addition of `six` preferably.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1615#issuecomment-338610295:86,validat,validation,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1615#issuecomment-338610295,1,['validat'],['validation']
Security,"I can add a probe radius too, no problem.; On 28 Apr 2015 20:11, ""Geoff Hutchison"" notifications@github.com wrote:. > Looks nice, although I have some questions beyond point clouds.. Many; > people would like solvent-accessible or solvent-excluded surfaces at; > variable probe radii. The ""radius multiplier"" seems like it would be more; > useful from a user perspective as an additive factor (e.g., VdW + 0, +1 +; > 1.5Ang, etc.); > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717:217,access,accessible,217,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97160717,1,['access'],['accessible']
Security,I cannot find its set of symm. ops in the spglib. I remember there was CIF files with that space group (I don't have access to CCDC to check). Also another website mentions it: https://bruceravel.github.io/demeter/documents/Artemis/atoms/space.html as being 117.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1641#issuecomment-331228523:117,access,access,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1641#issuecomment-331228523,1,['access'],['access']
Security,I changed the GetNewBondVector to handle 2D in the new stereo branch. I also comitted these changes to the 2.2.x branch since this doesn't really require the other stereo code. All hydrogens in the sdf file are now correctly added (position + hash/wedge). Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795088:243,hash,hash,243,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/878#issuecomment-281795088,1,['hash'],['hash']
Security,"I fixed two problems:; - the fingerprint was being resized to 0 with an initial Clear() so nothing was returned.; - there was an off-by-one when using the atom Idx() to address AtomInfo. This was in the code to handle the nbrs, and lead to an out-of-bounds memory access (with random values sometimes appearing in the fingerprint). As a general principle, rather than subtracting one from atom indices, we should just use them as provided, and instead increase the size of the referenced data structures by 1. This avoids this sort of error, where you remember to subtract 1 in one place but not another.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1829:264,access,access,264,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1829,1,['access'],['access']
Security,"I get an error message with the compiled trunk on Windows when using Python to read hashizume.cif (in scripts/python/examples):. >>> a = pybel.readfile(""cif"", ""hashizume.cif"").next(); ==============================; *** Open Babel Error in OpenBabel::SpaceGroup::Find; Unknown space group error, please file a bug report.; ==============================. Geoff says this is likely to be a bug in the spacegroup.cpp code. I reckon the problem is related to difference in Windows and Linux line-endings, which have caused problems reading the text files in the data directory. Noel. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715:84,hash,hashizume,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715,2,['hash'],['hashizume']
Security,"I guess a potential attack vector would be If someone were running a publicly exposed webapp that did conversions, and an attacker combined it with a privilege escalation vulnerability, they would have control of the server.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917:20,attack,attack,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2650#issuecomment-1826722917,3,"['attack', 'expose']","['attack', 'attacker', 'exposed']"
Security,"I have a strange problem with the conversion of charged structures from; InChI to Canonical smiles on 64bit architectures (I am using the Ruby; interface, but the effect seems to be reproducible also on the command; line). It gives the expected result on 32 bit machines (tested with; Ubuntu Hardy + Open Babel 2.2.2, Ubuntu Intrepid + Open Babel 2.2.3):. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na+].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. but the positive charge is missing on 64bit machines (tested on 2 machines with; Debian Lenny, Open Babel 2.2.2 and 2.2.3). echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -ocan --; [Na].F[B-](F)(F)F; 1 molecule converted; 1 info messages 21 audit log messages. The same problem occurs without canonification:. echo ""InChI=1S/BF4.Na/c2-1(3,4)5;/q-1;+1"" | babel -iinchi -- -osmi --; [B-](F)(F)(F)F.[Na]; 1 molecule converted; 1 info messages 21 audit log messages. PS: Noel O'Boyle has confirmed the problem on 64bit Linux, but it works on 64bit Windows. Reported by: chelma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/962:488,audit,audit,488,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/962,3,['audit'],['audit']
Security,"I have not confirmed yet if this bug exists also on the SVN trunk, but it certainly exists on the 2.1 branch right now. The invalidsmiles test works fine up until the tests to read random binary data. This evidently causes an infinite loop immediately:. The main crash:; Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0xbf7ffff0; 0x0115120c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<char> >::underflow (this=0x0) at zipstreamimpl.h:341; 341 basic_unzip_streambuf<charT, traits>::underflow(void). Here's a backtrace:; #13525 0x01150fd4 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::fill_input_buffer (this=0x313530) at zipstreamimpl.h:493; #13526 0x0115111c in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::unzip_from_stream (this=0x313530, buffer=0x280fa04 """", buffer_size=4092); at zipstreamimpl.h:462; #13527 0x01151374 in zlib_stream::basic_unzip_streambuf<char, std::char_traits<c; har> >::underflow (this=0x313530) at zipstreamimpl.h:357; #13528 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13529 0x0114664c in OpenBabel::LineEndingExtractor::operator() (this=0x312834, ; src=@0x313530) at ../include/openbabel/lineend.h:171; #13530 0x01150a34 in OpenBabel::FilteringInputStreambuf<OpenBabel::LineEndingExt; ractor>::underflow (this=0x312810) at ../include/openbabel/lineend.h:132; #13531 0x94c6cab0 in std::basic_streambuf<char, std::char_traits<char> >::uflow ; (); #13532 0x94c6d1bc in std::basic_streambuf<char, std::char_traits<char> >::xsgetn; (); #13533 0x94c54da8 in std::istream::read (). Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649:321,access,access,321,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649,1,['access'],['access']
Security,"I have the same problem with version 2.4.1 on Gentoo, reading output from GAMESS-US ver. 11 Nov 2017 (R3). I did some debugging and I found the problem to be in actual part of **gamessformat.cpp** that reads frequencies. Namely in line **515**, before reading reduced mass, it should also read SYMMETRY line:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; Fixed:; ```; frequencies.push_back(atof(vs[i].c_str()));; }; ifs.getline(buffer, BUFF_SIZE); // SYMMETRY; ifs.getline(buffer, BUFF_SIZE); // reduced mass; ```; otherwise lines **549-550** process a blank line instead of an atom - hence the segfault. Patch is attached that fixes the code. Here is a fragment of the GAMESS output where the problem appears:; > FREQUENCY: 2.93 1.88 0.55 0.35 0.16; > SYMMETRY: E E E E E; > REDUCED MASS: 6.79503 6.40438 13.42881 10.66293 9.71937; > IR INTENSITY: 0.23456 0.34034 0.01209 0.00004 0.00182. The second issue arises at the end of the loop that reads the modes (lines **582-584**):; ```; ifs.getline(buffer, BUFF_SIZE);; tokenize(vs, buffer);; modeCount = vs.size() - 3;; ```; At the end of the modes `buffer` variable contains empty string, so `vs.size()` returns 0. However, `modeCount` is defined as `unsigned int` (in line **544**):; ```; unsigned int modeCount = vs.size() - 3;; ```; therefore line **584** produces a huge positive value instead of -3, and the program does not leave the loop (condition in line **547**), leading to another segfault, which wasn't exposed due to the first one. Again - a fix is proposed in the included patch. [segfault_when_reading_vib.txt](https://github.com/openbabel/openbabel/files/1691481/segfault_when_reading_vib.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531:1528,expose,exposed,1528,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298#issuecomment-362786531,1,['expose'],['exposed']
Security,"I just compiled 2.2.0 to see if the problem exists there, too.; It's a bit more verbose now, but problem persists. Open Babel 2.2.0 -- Nov 25 2008 -- 17:53:21. Yours,; Steffen. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 249 -l 249 -isdf -omol /tmp/313325.mol; 1 molecule converted; 17 audit log messages. zcat pubchem/Compound_00300001_00325000.sdf.gz | babel -f 250 -l 250 -isdf -omol /tmp/313325.mol; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problems reading a MDL file; Cannot read atom and bond count; Expected standard 6 character atom and bond count. 0 molecules converted; 1 warnings 2 audit log messages . Original comment by: sneumann",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060:300,audit,audit,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/831#issuecomment-281794060,2,['audit'],['audit']
Security,"I should have attacked this earlier. The problem is that OB correctly types this atom as O-, but then the type translation table says that Sybyl expects O.co2 for O- atoms. The Sybyl atom types list says O.co2 is for:; oxygen in carboxylate and phosphate groups. I note that ZINC types this as O.3. If you think that's fine, I can add some atom typing rules that handle negative SO3 oxygens separately from phosphate and carboxylate. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/806#issuecomment-281793628:14,attack,attacked,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/806#issuecomment-281793628,1,['attack'],['attacked']
Security,"I think (not tested),. https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176. is the problem as this makes the hashing asymetric (trailing bond order)? The rotation to find the max ring hash (in DoRings()) is then different depending on which way round you traverse the path. John",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309:142,hash,hashing,142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-127271309,2,['hash'],"['hash', 'hashing']"
Security,I thought I could call this function by openbabel.addFragment(). This is what the documentation suggests. I also tried OBMol.addFragment() with no luck. Anyone know how to access this function? Is it in a plugin or something?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2536:172,access,access,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2536,1,['access'],['access']
Security,"I used a profiler to find the stereofacade issue. That was essentially a misuse of the class. After that, there are a few more things that could probably be rewritten for speed such as CreateCanonTree, testing whether two stereo configs are equal, and finding the smallest ring a bond is in (maybe this latter is unnecessary in the smiles code). More generally, calling buffer.reserve at the start might help, caching option lookups, caching multiple accesses to GetIdx (etc).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019:451,access,accesses,451,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-346757019,1,['access'],['accesses']
Security,"I was trying to use the Perl interface to OpenBabel to do some RMSD calculations and found I couldn't since key functionality seemed to be missing. Specifically, the ability to manipulate SWIG C arrays in perl and access to a couple functions. Here are the changes I made to get things to work:. include/openbabel/obutil.h ; 156,164d155; < #ifndef __KCC; < extern ""C"" {; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int);; < }; < #else; < OBAPI void rotate_coords(double*,double m[3][3],unsigned int);; < OBAPI double calc_rms(double*,double*,unsigned int); ; < #endif; 165a157,159; > OBAPI void rotate_coords(double*,double m[3][3],int);; > OBAPI double calc_rms(double*,double*,unsigned int);; > . scripts/openbabel-perl.i ; 163,188d162; < // Add some helper functions for C arrays; < %inline %{; < double *double_array(int size) {; < return (double *) malloc(sizeof(double)*size);; < }; < void double_destroy(int *a) {; < free(a);; < }; < void double_set(double *a, int i, double val) {; < a[i] = val;; < }; < double double_get(double *a, int i) {; < return a[i];; < }; < ; < double (*rotation_matrix())[3] {; < return (double (*)[3]) malloc(9*sizeof(double));; < }; < ; < void rotation_matrix_free(double (*m)[3]); < {; < free(m);; < }; < ; < %}; < . Reported by: @dkoes. Original Ticket: [openbabel/feature-requests/157](https://sourceforge.net/p/openbabel/feature-requests/157)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1526:214,access,access,214,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1526,1,['access'],['access']
Security,I'd like to obtain canonical SMILES with chiral info from PDB file.; Option -xi for chiral info was ignored when -ocan used instead of -osmi.; I got the following result with bable ver.2.1.0. $ cat mpd_clean.pdb; ATOM 1 C1 MPD 4728 -0.344 -1.472 -1.321 1.00 20.00 C+0; ATOM 2 C2 MPD 4728 -0.084 0.021 -1.122 1.00 20.00 C+0; ATOM 3 O2 MPD 4728 1.323 0.254 -1.049 1.00 20.00 O+0; ATOM 4 CM MPD 4728 -0.670 0.802 -2.299 1.00 20.00 C+0; ATOM 5 C3 MPD 4728 -0.746 0.485 0.177 1.00 20.00 C+0; ATOM 6 C4 MPD 4728 -0.145 -0.280 1.357 1.00 20.00 C+0; ATOM 7 O4 MPD 4728 1.240 0.047 1.481 1.00 20.00 O+0; ATOM 8 C5 MPD 4728 -0.878 0.106 2.643 1.00 20.00 C+0; END. $ babel -ipdb mpd_clean.pdb -osmi -xi 1.smi ; cat 1.smi; 1 molecule converted; 18 audit log messages; CC(C)(O)C[C@@H](O)C mpd_clean.pdb. $ babel -ipdb mpd_clean.pdb -ocan -xi 1.smi ; cat 1.smi; 1 molecule converted; 31 audit log messages; CC(O)CC(C)(C)O mpd_clean.pdb. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635:736,audit,audit,736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635,2,['audit'],['audit']
Security,I'll have a patch later today - there's an index / table of contents for faster access.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470:80,access,access,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470,1,['access'],['access']
Security,"I'm afraid the generation of wedge and hash bonds is incomplete and needs more work, which is why it is labelled ""experimental"". Perhaps it would have been better to have omitted the option completely until it was working properly. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1087#issuecomment-281800195:39,hash,hash,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1087#issuecomment-281800195,1,['hash'],['hash']
Security,"I'm going to merge this for 3.0. I think we probably need to revisit having a separate (larger) test set for cases like this, MMFF94 validation, etc. I'm going to remove bondtyper from the script bindings unless someone can explain why it's crucial.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368:133,validat,validation,133,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535705368,1,['validat'],['validation']
Security,"I'm not sure if I understood well enough your aim to double the cell and thus come back to you here. It seems possible your aim is 1) to use a the .cif to access the unit cell as such, subsequently 2) to replicate this parallelepiped by translation in one/in multiple directions, and 3) to use these additional atom coordinates of this slab/super cell built elsewhere. And that these manipulations should retain the information of the unit cell (the lattice vectors, etc.). In case this assumption is correct and indeed meets your needs, I would read the «good .cif file» in question e.g., with CCDC's Mercury, and use its option calculate -> packing slicing and use one of the four options to define the inclusion of the atoms, followed by either a) one of the presets (like a 2 x 2 x 2 supercell), or a manual dial along a, b, and c to increase the representation. Starting from yesterday's file 9000071.cif, and opting for an increase to a 2 x 2 x 2 super cell, the new set of data may be exported either as .cif (9000071_222.cif), or as .xyz (9000071_222.xyz). Processing *this* super cell .cif with OpenBabel by. ```bash; obabel -icif 9000071_222.cif -oxyz -O 9000071_222_xyz_by_obabel.xyz; ```; does not report problems back to the CLI. Other than a different formatting tables in the .xyz written and a different number of decimals past the full stop, this OpenBabel generated .xyz does not seem to differ from the one exported by Mercury. For documentation, I attach archive supercell.zip below. [supercell.zip](https://github.com/openbabel/openbabel/files/7328150/supercell.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-940777514:155,access,access,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-940777514,1,['access'],['access']
Security,"I'm still working on the RPM, but I will provide a spec when I am satisfied with it, perhaps as soon as later today. In the meantime, here are the relevant parts of the expansion of the `%cmake` rpm macro of CentOS 8.1 (Fortran flags are omitted, as are CMake options pertaining to specifying installation directories):. ```; CFLAGS=""${CFLAGS:--O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection}"" ; export CFLAGS ;; CXXFLAGS=""${CXXFLAGS:--O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection}"" ; export CXXFLAGS ;; LDFLAGS=""${LDFLAGS:--Wl,-z,relro -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld}"" ; export LDFLAGS ;; /usr/bin/cmake \; -DCMAKE_C_FLAGS_RELEASE:STRING=""-DNDEBUG"" \; -DCMAKE_CXX_FLAGS_RELEASE:STRING=""-DNDEBUG"" \; -DBUILD_SHARED_LIBS:BOOL=ON; ```. That was generated by trimming the output of the command `rpm --eval %cmake`. The various flags do contain one or two things that probably need to be removed or changed for non-RedHat platforms (*i.e.* the ones with ""redhat"" in them).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629446392:378,secur,security,378,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223#issuecomment-629446392,2,['secur'],['security']
Security,"I'm totally fine removing these. I don't want to remove audit-level statements, because I think it's useful to retain a list of anything that possible changes the state of the molecular data. Debugging-level.. that's a different story.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707#issuecomment-347042447:56,audit,audit-level,56,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707#issuecomment-347042447,1,['audit'],['audit-level']
Security,"I've been intrigued by ThreadSanitizer, but don't think it runs on Mac yet:; https://github.com/google/sanitizers/wiki",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-206471244:103,sanitiz,sanitizers,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-206471244,1,['sanitiz'],['sanitizers']
Security,"I've been investigating cis/trans problems with the new Canonical SMILES code and validating against Daylight Depict and ChemDraw. (Granted, there could be bugs in each.). Here's an independent bug with cis/trans markings. The attached structure generates two distinct SMILES from -osmi and -ocan:. -osmi; C(\C(\C)=N\O)(=N/O)C 9.xyz. -ocan; O/N=C(\C)\C(=N\O)/C 9.xyz. The first has the correct ""trans"" geometry around the =N-OH caps. The second switches to a ""cis"" form. This can be verified using Open Eye depict: http://demo.eyesopen.com/cgi-bin/depict. If, in fact, these are bugs in other software, I'm happy. But the SMI output certainly matches the actual 3D XYZ coordinates, while CAN does not. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/605:82,validat,validating,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605,1,['validat'],['validating']
Security,"I've hit a problem using SMILES as SMARTS, ; which in my case requires using *canonical* SMILES as input,; see the example below. The problem occurs both with ob-2.2.3 ; and todays SVN trunk. #-------- Cut & Paste from here ------------. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o smi; #C1=CC(n2cnc3c(N)ncnc23)OC=1 ; #1 molecule converted; #1 info messages 25 audit log messages . echo 'O' | babel -i smi - -s 'C1=CC(n2cnc3c(N)ncnc23)OC=1' -o smi - ; #==============================; #*** Open Babel Error in SMARTSError; # SMARTS Error:; #C1=CC(n2cnc3c(N)ncnc23)OC=1; # ^. echo 'InChI=1S/C9H7N5O/c10-8-7-9(12-4-11-8)14(5-13-7)6-2-1-3-15-6/h2-6H,(H2,10,11,12)' | babel -i inchi - -o can; #Nc1ncnc2c1ncn2C1C=C=CO1 ; #1 molecule converted; #1 info messages 25 audit log messages . # Correct:; echo 'O' | babel -i smi - -s 'Nc1ncnc2c1ncn2C1C=C=CO1' -o smi - ; #0 molecules converted. Reported by: sneumann",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1021:426,audit,audit,426,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1021,2,['audit'],['audit']
Security,"I've reversed wedges and hashes in r4334, reverting a change made earlier. There is more work to be done on the depiction of wedges and hashes. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1070#issuecomment-281799907:25,hash,hashes,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070#issuecomment-281799907,2,['hash'],['hashes']
Security,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2449:118,access,access,118,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449,1,['access'],['access']
Security,"If you think this is the way to go, then go for it. My token question is what happens if the user does not have internet access?. I see that rapidjson appears in Debian, though the version numbers are quite low. I'd be interested to hear what @mbanck thinks of this way of automatically downloading dependencies and whether there are steps we should take to help packagers.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1776#issuecomment-364789406:121,access,access,121,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1776#issuecomment-364789406,1,['access'],['access']
Security,"If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request. Please create a completely new branch for *each* change and use `git cherry-pick` to grab only the specific changes you want, e.g. https://guides.github.com/introduction/flow/. I'm sorry to be picky, but I'd like to merge the obthermo changes and *not* the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612:491,access,accessing,491,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612,1,['access'],['accessing']
Security,"In a previous commit, the type of the variable i was changed from int to unsigned int. As a result, the back substitution loop became infinite (comparison of unsigned int with zero) and the arrays B and A were accessed beyond their bounds causing a segfault.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/241:210,access,accessed,210,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/241,1,['access'],['accessed']
Security,"In absence of working knowledge of C++, I lack insight how Openbabel's C++ code is organized, interacting, and eventually providing results. Your log shared by 2029-02-29 might indicate ""something is broken"" in the setup of Open Babel accessible to you, because issuing the same command as you yields in my instance (OpenBabel 3.1.1. as provided by Debian) only the following:. ```shell; $ obabel 3lcs.pdb -O 3lcs_prot.pdb -p; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 1 molecule converted; ```. Speculation: the PLIB tool's file `requirements.txt` lists Open Babel (line 4, `openbabel~=3.0.0`), which might interfere here. It might be a library missing, or a conflict of ""which one to use"" e.g., if you have a system wide installation of OpenBabel, then partially overwritten by PLIB. My recommendation consists of. - to remove the current (local?) installation of Open Babel.; - if you reinstall Open Babel for general use on the computer (e.g., because of obgui), use the most recent version ([original source](https://github.com/openbabel/openbabel/releases)); - if you want to want to use Open Babel inside a Python project, use a virtual environment; isolated from the rest of Python libraries you have, an error in dependencies of the libraries were constrained to this compartment; - edit this (or any other) `requirements.txt` file. The current fetch of openbabel's Python bindings via pypi is known to be problematic; perhaps because it lists version 3.1.1.1 (four levels) on its [PyPi entry](https://pypi.org/project/openbabel/) instead of typical three (e.g., 3.1.1). Anyway, substitute the line of `openbabel` by `openbabel-wheel>=3.1.1.16` (as an example of application, see [here](https://github.com/OpenChemistry/fragments/blob/main/scripts/requirements.txt)) before running the usual `pip install -r ./requirements.txt` to amend the local Python setup. [openbabel-",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939:235,access,accessible,235,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1973548939,1,['access'],['accessible']
Security,"In the current SVN trunk, conversion of a gzip encoded file only generates one molecule:. tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2.gz -osmi; C(C(O)=O)N AGLYSL01. But there are, in fact, 761 molecules in the file:; tools/babel ~/Desktop/Downloads/MMFF94_dative.mol2 -osmi; ...; 761 molecules converted; 9 warnings 9281 audit log messages . (Perhaps it's faster and better to implement a gzip decoder like the lineend.h code? This might also solve other PR in this list.). -Geoff. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/111"":https://sourceforge.net/p/openbabel/feature-requests/111",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480:328,audit,audit,328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480,1,['audit'],['audit']
Security,"In the first example, the molecule containing the atoms of interest is destroyed as soon as the find_ligand_rings() function is finished. When the molecule is destroyed, its atoms are destroyed. Accessing the attributes of the atom after this point can cause a segfault. In short, you need to keep the OBMol around if you still want to access any attributes of the molecule at a later point. Feel free to reopen this bug if this explanation is unclear or you have any questions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2000#issuecomment-507326428:195,Access,Accessing,195,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2000#issuecomment-507326428,2,"['Access', 'access']","['Accessing', 'access']"
Security,"In this case, the file is broken.; ```; CONECT 107 105 105; ```. Indicates there should be a double bond to atom 105. There's probably some merit to a validation filter that reports ""hey, this file has weird bonding"" but I don't know that Open Babel (or PyMol) should over-rule the file itself..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2298#issuecomment-798768417:151,validat,validation,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2298#issuecomment-798768417,1,['validat'],['validation']
Security,"Introduced in #112. If N molecules are skipped using ""-l"" option, then comments for first molecule are lost. I guess MOL2Format::SkipObjects needs to check if line ""m-2"" has # at the beginning, and then skip few lines back (until hashed lines finish).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/127:230,hash,hashed,230,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/127,1,['hash'],['hashed']
Security,"Isn't folding a one way function as hash is? You may loose some data during; folding and there is no way to recover that. ----; Pozdrawiam, | Best regards,; Maciek Wójcikowski; maciek@wojcikowski.pl. 2017-10-09 14:12 GMT+02:00 John Mayfield <notifications@github.com>:. > Yep, the use of 'folding' to a larger a size is for example with MACCS116; > doesn't fit nicely in 32 or 64 bit words which one would typically use for; > popcount.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1654#issuecomment-335139826>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACN8jSXPD85UREjkhmbiiA3kMGvx3Nphks5sqg3FgaJpZM4PtubR>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583:36,hash,hash,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335140583,1,['hash'],['hash']
Security,"It didn't work to do the 32 bit installer. I can just use Linux or the; online instance. Thanks. On Fri, Mar 1, 2024 at 9:12 AM nbehrnd ***@***.***> wrote:. > Re executables: with Windows 64bit in hand, you might i) deinstall the; > current installation of openbabel (for 64bit) to ii) then try the installer; > for 32bit. No guarantee this then works better.; >; > Else, openbabel is packaged for a couple of Linuxes. At least Debian,; > Ubuntu, and Fedora offer live images, i.e. the OS works from the; > RAM/without permanent installation on the hard disk, while accessing their; > openbabel package from the corresponding repositories -- just in case you; > don't want/are not permitted to modify the computer you use.; >; > [image: Packaging status]; > <https://repology.org/project/openbabel/versions>; >; > If the structure isn't IP, you may consider cheminfo.org; > <https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html>; > with its online instance of openbabel. It equally allows the conversion of; > e.g., a SMILES string into a 3D .sdf.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FFYNVOYB3B4M6DBDOSTYWCSFDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNZTGQ3DMMBUGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801:566,access,accessing,566,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1974322801,1,['access'],['accessing']
Security,"It doesn't seem to be a build problem as much as a run time problem so the build logs wouldn't help I'm afraid (I see that my wording was unclear above, I meant if you could make a debug build and run that with e.g. gdb).; I also did not see any mention of the failing testTemplates in the test output of the build, but there were some timeouts so it may be hidden in other stuff.; Unfortunately, without access to an arm64 machine to test on I will not be able to locate the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828:405,access,access,405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942187828,1,['access'],['access']
Security,"It is making sense. Thanks for prompt reply.; Just for completeness , also OBAtom.GetVector() seems doesn't work :; <openbabel.vector3; proxy of <Swig Object of type 'OpenBabel::vector3 *' at 0x114085480> >. On the other hand, is true that, the coordinates are accessible via OBAtom.GetX(),OBAtom.GetY(),OBAtom.GetZ(). Original comment by: fabiolol",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805154:261,access,accessible,261,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1367#issuecomment-281805154,1,['access'],['accessible']
Security,"It is true, CCDC's Mercury is one of the corner stones of their CSD database product. However, there is a *community edition* of this GUI available (at least version 2020.3.0 I got in April 2021 for Linux). This lacks the database and many of the functions are disabled ([comparison](https://www.ccdc.cam.ac.uk/Community/blog/the-difference-between-free-Mercury-and-full-licence-Mercury/)), without no cost to you. The arrangement of 2 x 2 x 2 unit cells next to each other and their subsequent export this as .cif and .xyz was achieved with this free Mercury version, too. This kind of packing always was part of the freely available versions of Mercury so one of the [legacy versions](https://www.ccdc.cam.ac.uk/support-and-resources/downloads?Legacy=True) is good enough for this type of work if the legacy button was clicked:. ![community](https://user-images.githubusercontent.com/19709084/137188118-edf62abe-0b82-4297-8f31-93e2344d6ef2.png). The older the Mercury, the less of libraries are installed (regardless if eventually be useable by a license, or not) and less resource hungry because they started to pack it with PovRay for image rendering, a minimal Python + some larger Python libraries for visualization one would use when accessing the CSD database via the Python API. The registration into the CCDC site does not cost you money, only offers you some notifications about continuous update of the database and webinars you may join for free; all at a moderate to low frequency of e-mails (1-4 emails per month). But it could be worth to address the question about building these slabs programmatically, without Mercury, on [https://mattermodeling.stackexchange.com/](https://mattermodeling.stackexchange.com/), too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331:1241,access,accessing,1241,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942616331,1,['access'],['accessing']
Security,"It looks like the mmcif reader is having problems with the metadata in the first line. I'm not sure of a permanent fix at the moment, but in the meantime you should be able to use this database if you hide the first line within a comment using a hash symbol (`#`). For example, on a copy of the file you could try `sed -i '1s/^/# /' path_to_the_copy_of_cakyaq.cif`, then try obabel/Python on that one. It looks like there's a standard `data_` header in line 2 of these files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1827#issuecomment-385795002:246,hash,hash,246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1827#issuecomment-385795002,1,['hash'],['hash']
Security,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:611,validat,validation,611,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766,2,"['Validat', 'validat']","['ValidationSuite', 'validation']"
Security,"It seems that all wedge and hash bonds created by OBDepict have the thick and thin end of the wedge swapped. The thin end of the wedge should be on the stereocenter. Here's an example. PubChem CID 10836 at http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=10836&loc=ec_rcs. It's 2D Mol file is at http://pubchem.ncbi.nlm.nih.gov/summary/summary.cgi?cid=10836&disopt=SaveSDF. If you save this, right click, and choose ""OBDepect"", it draws the molecule with the wedge pointing from the Nitrogen to the Carbon, instead of from the Carbon to the Nitrogen. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1070:28,hash,hash,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070,1,['hash'],['hash']
Security,"It's gone, dude. Why is it gone? See https://github.com/openbabel/openbabel/pull/1952. If there was functionality in there that you wanted, can you describe it and we can bring it back or suggest an alternative way to do it, or access that info. I'm marking this as closed, but feel free to reopen and comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2077#issuecomment-552076143:228,access,access,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2077#issuecomment-552076143,1,['access'],['access']
Security,"It's impossible to access the values of data fields in; SD files using Python. The problem is that the; GetData() method should return OBPairData(), but; instead returns OBGenericData(). The latter does not; have a GetValue() method. Here is some example code:. >>>> Python; from openbabel import *. obconversion = OBConversion(); obconversion.SetInFormat(""sdf""); obmol = OBMol(). notatend = obconversion.ReadFile(obmol,""test.sdf""); assert notatend, ""No molecules in file!""; assert obmol.HasData('Molecular weight'), ""Doesn't have; a field called molecular weight!""; data = obmol.GetData('Molecular weight'); print ""The data has the following class: %s"" %; data.__class__; print ""The available methods include:""; print dir(data). >>>> Output; The data has the following class: <class; 'openbabel.OBGenericData'>; The available methods include:; ['Clone', 'GetAttribute', 'GetDataType', SetAttribute',; '__class__', '__del__', '__delattr__', '__dict__',; '__doc__', '__getattribute__', '__hash__', '__init__',; '__module__', '__new__', '__reduce__','__reduce_ex__',; '__repr__', '__setattr__', '__str__',; '__swig_destroy__', '__weakref__', 'this', 'thisown']. >>>> Notes; Please find attached test.sdf. Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532:19,access,access,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532,1,['access'],['access']
Security,"Just about `--gen3d`: this is a handy abbreviation to perform *an* optimization as if there were nothing (no solvent, no bulk, no ligand; but uniform vacuum) around the molecule of interest. But it is one of five options to guess an energetic optimum. See [this page](https://open-babel.readthedocs.io/en/latest/3DStructureGen/SingleConformer.html) and check the author's open access [publication](https://jcheminf.biomedcentral.com/articles/10.1186/s13321-019-0372-5) about possible applications and limitations. Complementary to this, a systematic search for low energy conformers is described [here](https://open-babel.readthedocs.io/en/latest/3DStructureGen/multipleconformers.html).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919:377,access,access,377,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916401919,1,['access'],['access']
Security,"Just checked openbabel.cvar on Linux. It gives the following:. Swig global variables (AliasDataType, resdat, chainsparser, atomtyper, aromtyper, isotab, ttab, etab, ElemNo, ResNo, ElemDesc, Residue, obErrorLog, VZ, VY, VX, VZero). (On Windows, ""print openbabel.cvar"" crashes Python - a SWIG error). Is it worthwhile making any of these additional variables accessible? After all, it's easy for the user to instantiate most of them. This is in contrast to obErrorLog, where it is important to be able to access that specific instance. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171:357,access,accessible,357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794171,2,['access'],"['access', 'accessible']"
Security,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:1197,access,access,1197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432,1,['access'],['access']
Security,"Just for information with the patch, I got this:; 2 molecules converted; 1 info messages 34 audit log messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094:92,audit,audit,92,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1852#issuecomment-395565094,1,['audit'],['audit']
Security,"Just make it clear that it's not confidential, but that they can email the lead developer confidentially if they want. I don't think you need to provide an email address - they'll figure it out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653:33,confidential,confidential,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653,2,['confidential'],"['confidential', 'confidentially']"
Security,"Just tested latest dev code on a 64bit Linux system. Seems to work fine:. > babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi; 1 candidates from fingerprint search phase; 1 molecule converted. makeio, could you test the development code and see whether the problem has gone away for you. See the instructions at http://openbabel.org/wiki/CMake; 1 info messages 57 audit log messages. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341:370,audit,audit,370,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796341,1,['audit'],['audit']
Security,"Logged In: NO . ##########################################################; ******** Error resolved **********************************; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former or temp directories; under win (using the FileMon) http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425:556,Access,Access,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793425,3,['Access'],['Access']
Security,"Logged In: NO . ##########################################################; ******** Error resolved if fragment.txt is found *********; ##########################################################. Hi, ; I also found out that OBGUI.exe looks the fragment.txt up in some former; or temp directories; under win (using the FileMon); http://technet.microsoft.com/en-us/sysinternals/bb896642.aspx; My OB is installed in C:\chemistry\OpenBabel-2.2.0; however it does the following . 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\2.2.0\fragments.txt	PATH NOT; FOUND	Options: Open Access: All	; 2:02:43 PM	OBGUI.exe:3304	OPEN	Z:\smi23d-win\fragments.txt	NOT; FOUND	Options: Open Access: All	. OK, now I got it, I used the former directory as a working directory in; the WIN GUI.; However now I changed to ""USE input below (ignore input file)"" So actually; it should never; look in any old working directory, but in the *installation directory*. Cheers; Tobias. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open fragments.txt; 1 molecule converted. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433:559,Access,Access,559,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793433,3,['Access'],['Access']
Security,"Logged In: NO . It works if you ask for CANONICAL SMILES. % babel -j -icdx melanocortin-2007-17-16.cdx -ocan; O=Cc1ccccc1N1CCN(CC1)[C@@H](=O)[C@H]1CN(C[C@H]1c1ccc(Cl)cc1)C(C)C	_melanocortin-2007-17-16.cdx; 1 molecule converted; 46 audit log messages 393 debugging messages . (Openbabel 2.1.1, Mac OS X 10.5.1) ufos@ufos-software.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398:231,audit,audit,231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779398,1,['audit'],['audit']
Security,"Logged In: NO . There's no semi-colon in the actual code snipet (sorry for poor copy-paste skills!):; .....; if (bond[i].hash); mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type,OB_HASH_BOND);. else; mol.AddBond(atom[bond[i].a].n,atom[bond[i].b].n,bond[i].type);; ....; conv.WriteFile(&mol,""out.sdf"");; ..... Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010:121,hash,hash,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779010,1,['hash'],['hash']
Security,"Logged In: YES ; user_id=1189615. Indeed this was the way it was until last week. But Jean ; Bréfort found difficulties when loading files during the ; initialization of a static variable. See; https://sourceforge.net/mailarchive/forum.php?; thread_id=8969769&forum_id=3042; He (as I understand it) was loading OB using dlopen. He ; said ""This might be a glibc bug, but we must live with ; it."" So we are: currently a (possibly dummy) OBConversion ; object has to be constructed to access the static data. ; Not elegant, but not a big deal either. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151:482,access,access,482,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776151,1,['access'],['access']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. Is this what is required?. >echo CCO|babel -ismi -ocml --AddPolarH; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a3 a4"" order=""1""/>; </bondArray>; </molecule>; 1 molecule converted; 22 audit log messages. Options like these can be added as plugins, without altering existing code.; The code is in src/ops/addpolarh.cpp and it should be compiled like gen3d.cpp. (It is very similar - I just altered a few words.) Feel free to make or suggest improvements. Command-line options which are OBTransforms can be added without compiling, see data/plugindefines.txt. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957:526,audit,audit,526,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:371,audit,audit,371,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. Openbabel is very close to compiling on your system but it will not do so until some small code changes are made. To make these I need some information that Microsoft does not make easily accessible unless you have bought their product. This would open up Openbabel to other users with VC2008. Could you help with information on the tr1 header files as detailed previously?. Some of the errors you are seeing are new transient ones which are inevitable in development code because of the delay in adjusting the build files when developers using other platforms have made code changes. I can see these and can correct them, but I need help with VC2008. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177:238,access,accessible,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177,1,['access'],['accessible']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. SDFormat outputs wedge/hash bonds only if the dimension of the molecule is 2. The default for a newly constructed OBMol is 3, so you need to call SetDimension(2). . However smiles format output does not seem to be recognizing OB_HASH_BOND in the case I tried. I'll look into this further. Canonical smiles (can format) works ok. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011:73,hash,hash,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011,1,['hash'],['hash']
Security,"Logged In: YES ; user_id=1189615; Originator: NO. The InChI example files were using the <NAME> property and no title. They were all single line, though. If it is a practice that is in use, then we should support it. . Maybe to prevent errors but minimise information loss, any line break in a title retrieved by OBMol::GetTitle() should be returned with any line break converted to a space or a tab. I don't think the loss of backward compatibility is serious enough to worry about. The function could have a bool parameter whose default has this behaviour, but the inverse would allow access to the raw multiline text if necessary. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126:587,access,access,587,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126,1,['access'],['access']
Security,"Logged In: YES ; user_id=1189615; Originator: YES. Input [CH4] crashes on line 2878 because the vector canonical_order, which has a size of 1 is being accessed with an index of 1. That is nbr1->GetIdx() returned 2. This is with the default _canonicalOutput=false, so I guess it is using your new code. It works ok when _canonicalOutput=true. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122:151,access,accessed,151,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122,1,['access'],['accessed']
Security,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:493,access,access,493,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326,2,['access'],['access']
Security,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:226,audit,audit,226,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407,2,['audit'],['audit']
Security,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:303,audit,audit,303,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404,1,['audit'],['audit']
Security,Logged In: YES ; user_id=196016; Originator: NO. I can reproduce the problem with the provided input:. crease~$ babel water.gzmat water.xyz; 1 molecule converted; 11 audit log messages; crease~$ cat water.xyz; 3; water.gzmat; O 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H nan nan nan; crease~$ cat water.gzmat; #. water. 0 1; O; H 1 r; H 1 r 2 a. r 0.9572; a 104.52. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679:166,audit,audit,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=196016; Originator: NO. Writing out the audit log messages, there is maybe a spurious second OpenBabel::Read molecule Gaussian Z-Matrix Input call. It might be trying to read in a second structure, and falss over; I don't have the source tree around currently to debug this. crease~$ babel ---errorlevel 20 -igzmat water.gzmat -oxyz water.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in InternalToCartesian; Ran OpenBabel::InternalToCartesian; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted; 11 audit log messages. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680:65,audit,audit,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680,13,"['Audit', 'audit']","['Audit', 'audit']"
Security,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:869,access,access,869,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,2,['access'],['access']
Security,"Logged In: YES ; user_id=21420. Having a complete list of the aromatic rings which are incorrectly de-; aromatized would be very helpful. Pointing to one triazole ring doesn't really ; help -- we can fix this one system and still not solve your ""some aromatic ; rings."". Is this the only one, or can you give a more complete list. (E-mail me privately ; if you have confidential data.). Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433:366,confidential,confidential,366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433,1,['confidential'],['confidential']
Security,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:136,access,access,136,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728,3,['access'],['access']
Security,"Logged In: YES ; user_id=21420. It would really help if I could get a stack backtrace from gdb, e.g. gdb /usr/local/bin/babel; ...; run #command-line options here; ...; bt. This was also reported by R. Guha, but I don't have much information:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9599682&forum_id=47190. For example, have you tried the current CVS development version? Does this ; also happen on FC5?. Since I don't have access to a FC4 machine, it's very hard for me to debug. It ; certainly doesn't happen on the FC3 machine in the SourceForge compile ; farm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461:442,access,access,442,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461,1,['access'],['access']
Security,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:519,access,accessing,519,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158,1,['access'],['accessing']
Security,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:844,confidential,confidential,844,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018,1,['confidential'],['confidential']
Security,"Logged In: YES ; user_id=21420; Originator: NO. I've been checking on this particular bug. It seems you've exposed a crash in the residue/chain parser which attempts to recognize residue sequence information in the .mol file when going back to PDB. So the resulting file really only has the initial comment that the PDB file was generated by Open Babel -- but no coordinates. Incidentally, the .mol files won't be read by many visualization files. Old-style MDL molfile v2000 is the most widely supported (e.g., VMD) and has a limitation of 999 atoms and 999 bonds. Many, many PDB files are much larger. If you want a more bullet-proof format, I'd suggest Sybyl .mol2 since it preserves residue information and is also fairly widely supported. In the meantime, I'm checking on the crash in chain perception. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797:107,expose,exposed,107,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797,1,['expose'],['exposed']
Security,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:53,audit,audit,53,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405,2,['audit'],['audit']
Security,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:215,hash,hash,215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708,2,['hash'],['hash']
Security,"Logged In: YES ; user_id=21420; Originator: NO. This should now work in the SVN trunk (which will become 2.2). If you do not have access to this, I can send you a snapshot. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021:130,access,access,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021,1,['access'],['access']
Security,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:408,validat,validate,408,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267,1,['validat'],['validate']
Security,"Logged In: YES ; user_id=21420; Originator: NO. What's the bug here? As Igor indicated, this works in 2.1 or later. It's not worth fixing this in 2.0.x. I'm surprised that the wedge/hash is switched in SDF output. Is this true in 2.2 as well?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015:182,hash,hash,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015,1,['hash'],['hash']
Security,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:67,audit,audit,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314,1,['audit'],['audit']
Security,Logged In: YES ; user_id=786138. If the input is invalid it shoudl throw an exception with out ; accessing an NULL atom. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157:97,access,accessing,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157,1,['access'],['accessing']
Security,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:440,access,access,440,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926,1,['access'],['access']
Security,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:349,audit,audit,349,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:322,audit,audit,322,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=850620. Please attach the file to the bug, unless you are worried; about confidentiality. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467:98,confidential,confidentiality,98,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467,1,['confidential'],['confidentiality']
Security,"Logged In: YES ; user_id=850620; Originator: NO. I find it difficult to sort out this problem because:; (a) I don't have a dependency chart of OB header files; (b) I don't have access to a ppc64, and so I don't know how much I have to squeeze the file size down. If I can get (a) + (b), then we can make some progress I hope. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566:177,access,access,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566,1,['access'],['access']
Security,"Logged In: YES ; user_id=850620; Originator: NO. I'm afraid not. Regular objects also need to be wrapped in the same interface file. For example, OBConversion returns OBMols and these aren't wrapped. So the current situation is that you can read in molecules from a file, but you can't access any of the methods or attributes of the molecules. I'm going to revert these recent changes (if no-one objects today) except for the changes to the SWIG command line. I would appreciate if someone could then check whether the changes to the command line are enough to allow compilation. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578:286,access,access,286,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578,1,['access'],['access']
Security,"Logged In: YES ; user_id=850620; Originator: NO. Using the latest OBWinInstaller, I still get the same error. Here's a simple test case. D:\Tools\OpenBabel\OBBug>babel -ismi -osdf --gen3D; N#CSSC#N; ^Z. OpenBabel08190809343D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 S 0 0 0 0 0; -1.#IND -1.#IND -1.#IND S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; 4 5 1 0 0 0; 5 6 3 0 0 0; M END; $$$$; 1 molecule converted; 47 audit log messages 1 debugging messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436:566,audit,audit,566,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436,1,['audit'],['audit']
Security,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:50,Access,Accessing,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194,3,"['Access', 'access']","['Accessing', 'access']"
Security,"Logged In: YES ; user_id=850620; Originator: YES. Good news first?. The good news is that it's working for BFS (I can access CurrentDepth fine). The other good news is that BFS is really the one we want it to work for (e.g. in the case of circular fingerprints), as the user might terminate the iteration after a certain depth. The bad news is that the BFS iterator in OpenBabel doesn't accept an atom as a starting point (the DFS iterator does though), and so this iterator can't be used for the use cases I imagine. Let me know if you want me to resubmit this feature request under a different title: ""BFS iterator with OBAtom as starting point"" or so. This would really be a killer feature. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911:118,access,access,118,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911,1,['access'],['access']
Security,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:690,expose,exposed,690,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976,1,['expose'],['exposed']
Security,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:447,access,accessing,447,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898,1,['access'],['accessing']
Security,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:215,access,access,215,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196,2,['access'],"['access', 'accessed']"
Security,"Logged In: YES ; user_id=850620; Originator: YES. This works, but I need to add a small bit of code to the interface file to make it easier to access this in the BFSIterator. I will return to close the bug when done. Thanks!. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914:143,access,access,143,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914,1,['access'],['access']
Security,Logged In: YES ; user_id=851435; Originator: NO. This is already working for the CMake based build of OpenBabel. To be honest far too much of the API is exposed wholesale to make visibility all that useful. I think until the API of OpenBabel is redesigned the visibility doesn't help very much at all as the DLLs just export everything... That is why I never really spent the time talking Autotools into playin ball. Should help a lot with API redesign in 3.0 though. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449:153,expose,exposed,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449,1,['expose'],['exposed']
Security,"Looks nice, although I have some questions beyond point clouds.. Many people would like solvent-accessible or solvent-excluded surfaces at variable probe radii. The ""radius multiplier"" seems like it would be more useful from a user perspective as an additive factor (e.g., VdW + 0, +1 + 1.5Ang, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062:96,access,accessible,96,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/156#issuecomment-97159062,1,['access'],['accessible']
Security,"MMFF Validation skipped for CUDPAS, VUWXUG",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/894:5,Validat,Validation,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/894,1,['Validat'],['Validation']
Security,Made TetStereoToWedgeHash handle negative scores for very unfavorable wedge/hash bonds. Fixes #1581.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1582:76,hash,hash,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1582,1,['hash'],['hash']
Security,"Maybe we should also remove the extra check for CYGWIN on line 235. If I understood that comment correctly, this change should fix that bug as well, in a less definitive way (in case CYGWIN adds the missing symbol in the future...). But I don't have access to CYGWIN to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858:250,access,access,250,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858,1,['access'],['access']
Security,No wedged or hashed bonds in svg,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1087:13,hash,hashed,13,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1087,1,['hash'],['hashed']
Security,"No, in the Ubuntu Fossa 20.02.2 live USB version, the elder version of OpenBabel 3.0.0 installs as anticipated; no warning, nothing. I just re-run again:; ```; To run a command as administrator (user ""root""), use ""sudo <command>"".; See ""man sudo_root"" for details. xubuntu@xubuntu:~$ lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.2 LTS; Release:	20.04; Codename:	focal; xubuntu@xubuntu:~$ ; xubuntu@xubuntu:~$ # installation of OpenBabel; both in once; xubuntu@xubuntu:~$ sudo apt-get update; Ign:1 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal InRelease; Hit:2 cdrom://Xubuntu 20.04.2.0 LTS _Focal Fossa_ - Release amd64 (20210209.1) focal Release; Hit:3 http://archive.ubuntu.com/ubuntu focal InRelease; Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB] ; Get:6 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB] ; Get:7 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [1469 kB]; Get:8 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [1135 kB]; Get:9 http://archive.ubuntu.com/ubuntu focal-updates/main Translation-en [291 kB]; Get:10 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 DEP-11 Metadata [279 kB]; Get:11 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 48x48 Icons [60.8 kB]; Get:12 http://archive.ubuntu.com/ubuntu focal-updates/main DEP-11 64x64 Icons [98.3 kB]; Get:13 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 c-n-f Metadata [14.7 kB]; Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [694 kB]; Get:15 http://archive.ubuntu.com/ubuntu focal-updates/restricted Translation-en [99.0 kB]; Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 c-n-f Metadata [532 B]; Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [892 kB]; Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe Translation-en [196 k",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080:877,secur,security,877,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1013915080,2,['secur'],['security']
Security,"No, we're not going to grab `master`. For consistency and security, it's much better to grab a specific commit hash. That's immutable. I'd rather see a new release of rapidjson, but in the meantime, I'd prefer something like `7c73dd7de7c4f14379b781418c6e947ad464c818`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997:58,secur,security,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2721#issuecomment-2353736997,2,"['hash', 'secur']","['hash', 'security']"
Security,"OB currently doesn't correctly handle two stereobonds at a tet center, e.g. three bonds at 120 (the fourth an implicit H), where two of the bonds are either both wedges or both hashes. (This situation can be treated the same as if just one of the bonds was a wedge or a hash). Reported by: @baoilleach",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1170:177,hash,hashes,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1170,2,['hash'],"['hash', 'hashes']"
Security,OB version: 2.1.1. Converting the attached SDF file to SMILES produces the following output:. $ babel -isdf DB03043.sdf -osmi. NC(Cc1c[nH]c2[se]ccc12)C(O)=O SDF file of DB03043; 1 molecule converted; 13 audit log messages. Which in a strict sense is wrong according to the openSMILES specification as non-aromatic atoms start with uppercase characters. Reported by: *anonymous,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/711:203,audit,audit,203,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/711,1,['audit'],['audit']
Security,OBDepict draws wedge+hash bonds pointing in wrong direction,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1070:21,hash,hash,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1070,1,['hash'],['hash']
Security,"OK, no worries I can wait until tomorrow. I just wondered if there was something simple I could do, but this sounds like it would be more complicated than that. -----------------------------------------------------------------------------------------------------; Hubertus van Dam, 631-344-6020, hvandam@bnl.gov<mailto:hvandam@bnl.gov>; Brookhaven National Laboratory. From: Geoff Hutchison <notifications@github.com>; Reply-To: openbabel/openbabel <reply@reply.github.com>; Date: Friday, March 27, 2020 at 10:26; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: ""Van Dam, Hubertus"" <hvandam@bnl.gov>, Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). I'll have a patch later today - there's an index / table of contents for faster access. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HXOQA2SW2DZWDXSI5DRJSZPXANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119:819,access,access,819,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119,1,['access'],['access']
Security,"OK, so that is not an option then. The only remaining viable option that I can see is to create a new manipulator class that contains all the functionality (in a consistent way) whilst leaving the current API unchanged. Access to the functionality already part of OBMol could be realized via wrapper methods in the new class. That way, the current API remains fully intact while avoiding an arbitrary separation of functionality. One might add a ""warning"" (possibly in comment-form) to the manipulation methods that are currently part of OBMol to tell the users not to use them anymore if it can be avoided. Obviously, whether or not to introduce such a warning is not for me to decide. Also, I did not mean that SetDihedralAngle should replace SetTorsion, but rather that it be provided as an alternative to SetTorsion as the latter is a bit awkward to use via the language bindings, IMHO. It could be provided within the new class if that route is taken.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716:220,Access,Access,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/350#issuecomment-251347716,1,['Access'],['Access']
Security,"OMG... I embarrassed myself! segfaults is because I did not use ""make install"". Without root access, ""make install"" gives an error at the final step to link to /usr/local/bin. But the binary at openbabel/build/bin works fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/194#issuecomment-117933728:93,access,access,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/194#issuecomment-117933728,1,['access'],['access']
Security,"Ok. I've reenabled size(). This seems to be enough for the basic vector access:. #!/usr/bin/perl. use Chemistry::OpenBabel;. my $noel = new Chemistry::OpenBabel::VectorDouble(4);; print $noel->size().""\n"";; print $noel->get(0).""\n"";; $noel->set(0, 3);; print $noel->get(0).""\n"";. my $obMol = new Chemistry::OpenBabel::OBMol;; my $obConversion = new Chemistry::OpenBabel::OBConversion;; $obConversion->SetInFormat(""smi"");; $obConversion->ReadString($obMol, ""c1ccccc1C2CCC2"");. my $vec = $obMol->GetSSSR();; print $vec->size().""\n"";; for ($i = 0; $i<$vec->size(); $i++) {; $ring = $vec->get($i);; if ($ring->IsAromatic()) {; print ""Aromatic!\n"";; }; else {; print ""Not aromatic!\n"";; }; }. Now I'll look at the specific question. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1198#issuecomment-281802094:72,access,access,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1198#issuecomment-281802094,1,['access'],['access']
Security,"On Fri, Nov 3, 2017 at 7:04 AM, phosphre <notifications@github.com> wrote:. > Please compare the above structure with the pubchem 2D structure; > <https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure>,; > showing, in green, a H which 'protrudes towards the camera'. The same H is; > depicted as 'protruding' above the ring with the NCH3 group in the; > wikipedia entry; > <https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png>; > .; >. Having a hydrogen protrude above the screen conveys exactly the same; information as having any one of the three carbons indicated to protrude; below the screen. And that is what you are seeing, one of the carbons was; chosen to be depicted protruding below the screen. Openbabel's depiction; of below-the-plane bonds includes a solid line with the hashed wedged; superimposed over the solid line, instead of just showing the hashed wedge; like most software does. You seem to be confusing that superimposition to; be two different bonds (and further thinking one of them is to a hydrogen,; despite the lack of 'H'). It is not, it is one bond with two graphical; elements. Personally I find the superimposition of hashed wedge with a solid line; through it to be unattractive, especially when the solid line is so thick; as in your image. Maybe there is some option you can give it to turn off; that solid line running through the hashed wedge. That would make it more; attractive to me and less confusing for you. > The Pubchem 3D shows the hydrogen in more detail.; >. Well, you didn't tell Pubchem to delete the hydrogens, like you did; openbabel. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341868270:858,hash,hashed,858,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341868270,4,['hash'],['hashed']
Security,"On Mon, Aug 3, 2015 at 8:02 AM, John May notifications@github.com wrote:. > I think (not tested),; > ; > https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176; > ; > is the problem as this makes the hashing asymetric (trailing bond order)?; > The rotation to find the max ring hash (in DoRings()) is then different; > depending on which way round you traverse the path. In the case here, the missing (or extra) fingerprint bit is not part of a; ring-fingerprint (there is a ring, but the closure of the ring is not part; of the fingerprint path. The 7th atom closes back to the 2nd one, not back; to the 1st one), so I don't think that that alone can be the answer. Also,; if the rotation algorithm was broken, I think that would lead much less; subtle problems than this one seems to be. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227:230,hash,hashing,230,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227,2,['hash'],"['hash', 'hashing']"
Security,"On my linux machines, building the csharp bindings did not complete because they were build in the BINARY_DIR, but later steps looked for them in SOURCE_DIR . It seems the standard for openbabel bindings is to build in the SOURCE_DIR , so I modified so they build there and the build now completes on my linux machines using mcs as the CSHARP_EXECUTABLE . I don't have access to a windows machine, so someone should make sure this doesn't break windows, where I think it is much more important to have working csharp bindings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/47:369,access,access,369,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/47,1,['access'],['access']
Security,"On occasion, I sometimes embark a route like. ```bash; obabel -:""c1ccncc1"" -can | obabel -ismi -h --gen2d -osdf | obabel; -isdf --gen3d -osdf; ```; for «difficult» cases. Because, the more conformational flexible; (number of one may rotate) a molecule is, especially with stereogenic; centres, the more computational demanding the provision of /a/; conformation by OpenBabel is. For a rigid molecule like pyridine; above, this has no benefit. I do not possess a one-fits-all scale; to anticipate ahead of time when this extended route is necessary. Note, by documentation (incl. a reference to an open-access; publication), `--gen3d` is only one out of five levels to provide you; /one/ starting conformation. And though it does not aim to compete; with protein folding programs, OpenBabel's `--conformer` flag allows; you to generate conformers, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212:602,access,access,602,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1046661212,1,['access'],['access']
Security,"On osx using installing with macports, I keep getting a segmentation error when trying to convert from a .gro file type to .pdb or .ml2. Here is the output from trying a conversion ; ```$ obabel test.gro -O test.pdb; Segmentation fault: 11```. When run using `gdb` I recieve the output ; ```Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000098; 0x00000001000cbfea in OpenBabel::OBResidue::AddAtom ()```. I'm not too familiar with C, but looking at the [code](http://fossies.org/dox/openbabel-2.3.2/groformat_8cpp_source.html) I think problem may have to do with `res` being set before it is defined. Reported by: ivirshup. Original Ticket: [openbabel/bugs/942](https://sourceforge.net/p/openbabel/bugs/942)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1322:341,access,access,341,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1322,1,['access'],['access']
Security,"On pc Debian x86-64 with master sources updated today, I tried to reproduce the original pb.; Here what I got:; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.smi -ofs`; `This will prepare an index of ../../bugs/ten.smi and may take some time...`; `It contains 10 molecules`; ` It took 0.077262 seconds`; `6 molecules converted`; `5 audit log messages `; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.fs -ifs `-sNc2nc(c1ccccc1)nc3ccccc23' out.smi`; `1 candidates from fingerprint search phase`; `1 molecule converted`; `12 audit log messages `; So I don't reproduce the pb.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823:356,audit,audit,356,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823,2,['audit'],['audit']
Security,Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2778,Audit,Audit,2778,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"Open Babel tool does not read name 'Si' element name from the smiles notation:; > echo ""Si"" | babel -i smi -o xyz; 0 molecules converted; 5 audit log messages . However everything works fine if 'Si' is brackteted:; >echo ""[Si]"" | babel -i smi -o xyz; 1. Si 0.00000 0.00000 0.00000; 1 molecule converted; 6 audit log messages . Seems that babel reads 'Si' name as two elements, 'S' and aromatic 'I', which is wrong. Open Babel 2.2.3 -- Feb 18 2011 -- 13:16:37; Darwin Marat-Talipovs-iMac.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386 i386 iMac11,3 Darwin. Marat Talipov,; TalipovM@gmail.com. Reported by: mirari",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1106:140,audit,audit,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1106,2,['audit'],['audit']
Security,"Open Babel version = 2.2.0 on opensuse 11.0. [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C can makes openbabel segfault:; babel -i ""smi"" 9626.smi -o ""mol"" - ; Segmentation fault. this smiles was generated from mol:; babel -i ""mol"" 9626.mol -o ""smi"" -; [C@@]123[C@H](C(C=C3)(C)C)CC[C@@](C1)(CCC2)C 10102; 1 molecule converted; 29 audit log messages. see files attached.. openbabel also segfaults when just reading it:; babel -i ""smi"" 9626.smi -o ""smi"" -; Segmentation fault. I hope this helps... Leszek . Reported by: leszekrupnicki",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/839:328,audit,audit,328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/839,1,['audit'],['audit']
Security,"OpenBabel is having problems when parsing SDF files from DrugBank. Steps to reproduce:. Download SDF from DrugBank:; http://www.drugbank.ca/sdf_set/nutra_drugs.sdf. Run babel or use corresponding function from the lib:; > babel -isdf nutra_drugs.sdf -opdb ethanol.pdb; 0 molecules converted; 2 audit log messages. Discovery Studio (DS) Visualizer, for instance, has no problem parsing SDF files from DrugBank. I'm hoping that someone can fix this before I did down into the source code. Reported by: sarkiss",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760:294,audit,audit,294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760,1,['audit'],['audit']
Security,"OpenBabel wiki pages on scripting cannot be accessed. Also, other pages only mention Perl and Python scripting, please make sure Java scripting instructions are provided also. . ## Environment Information; Open Babel version: web page visited 08-Dec-2020; Operating system and version: N/A. ## Expected Behavior; I see a web page explaining how to use the scripting APIs. ## Actual Behavior; I see ""Whoops, we can't find that page."". ## Steps to Reproduce; Go to http://openbabel.org/wiki/Main_Page, on left pick Develop with Babel, then select OpenBabel-scripting. I accidentally stumbled on a reference to OBTest.java somehow, but that also gets an access error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2310:44,access,accessed,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310,2,['access'],"['access', 'accessed']"
Security,"Openbabel v2.4.1 [is already in Debian experimental release](https://packages.qa.debian.org/o/openbabel.html), thus AFAIK, it should appear in the nearest Debian and Ubuntu releases. As per Debian policy, non-security updates are not backported in the stable releases. I have no experience with RPM packaging and inclusion of RPM packages by their package managers.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1766#issuecomment-361281635:209,secur,security,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1766#issuecomment-361281635,1,['secur'],['security']
Security,"Options are the way to go, but kekulization is triggered during reading of; mol2 and sdf currently:. > # obabel tmp.mol2 -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule. Even more stuff is happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in Ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:166,Audit,Audit,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,5,['Audit'],['Audit']
Security,Paging @jiahao - is there any way to validate against the published data set?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1865#issuecomment-401922140:37,validat,validate,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1865#issuecomment-401922140,1,['validat'],['validate']
Security,"Posted from Noel's e-mail:. As I understand it, the idea behind the DataTypes is exactly this, to; distinguish different types of data from each other. Could we have a; particular data type for data fields contained in a molecular file; format, and make it separate from data types that are computed by; OpenBabel?. For example, for an SD file with two data fields, Molecular weight and; NSC, I find the following OBGenericDatas:; ('Comment', 'CORINA 2.61 0041 25.10.2001', 3); ('NSC', '1', 1); ('Molecular weight', '122.03677944', 1)]. (i.e. Attribute, Value, Datatype). However, if I compute the SSSR and access GetFormula, in addition I get:; ('RingData', 'RingData', 8); ('Formula', 'C7H6O2', 1). Note that although RingData has its own datatype, 8, Formula is thrown; in with the data fields from the SD file. In summary, if it makes sense to everyone, could computed datatypes be; kept separate from those that are parsed from the file. Otherwise, it; will be impossible to distinguish data fields from calculated fields. Reported by: @ghutchis. Original Ticket: ""openbabel/feature-requests/98"":https://sourceforge.net/p/openbabel/feature-requests/98",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1467:607,access,access,607,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467,1,['access'],['access']
Security,"Problem initially found when attempting to open output in Avogadro. Openbabel 2.3.2 gives a segmentation fault 11 when attempting to open any output file created by MOPAC2012. I had come across some an older [discussion](http://forums.openbabel.org/Open-Babel-version-2-3-2-wrong-format-conversion-td4656780.html) which suggested that changes to the MOPAC2012 output format broke the OB parser, however there was no mention of a segfault. Simple input/output attached. Was briefly tested with OB GUI on windows, with same results. OB version:. Benjamins-MacBook-Pro:MOPAC test ben$ babel -V; Open Babel 2.3.2 -- Jan 26 2015 -- 08:21:12. OB audit log:. Benjamins-MacBook-Pro:MOPAC test ben$ babel ---errorlevel 4 -i mopout methane.out -o xyz methane.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule MOPAC Output format; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Debugging Message in GetAtom; Requested Atom Out of Range; Segmentation fault: 11. Reported by: stei7766. Original Ticket: [openbabel/bugs/954](https://sourceforge.net/p/openbabel/bugs/954)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334:640,audit,audit,640,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334,5,"['Audit', 'audit']","['Audit', 'audit']"
Security,Publicly access the values of the gradients,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1525:9,access,access,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1525,1,['access'],['access']
Security,Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ;,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3366,Audit,Audit,3366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Audit'],['Audit']
Security,"Re executables: with Windows 64bit in hand, you might i) deinstall the current installation of openbabel (for 64bit) to ii) then try the installer for 32bit. No guarantee this then works better. Else, openbabel is packaged for a couple of Linuxes. At least Debian, Ubuntu, and Fedora offer live images, i.e. the OS works from the RAM/without permanent installation on the hard disk, while accessing their openbabel package from the corresponding repositories -- just in case you don't want/are not permitted to modify the computer you use. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=3&&minversion=3.0.0)](https://repology.org/project/openbabel/versions). If the structure isn't IP, you may consider [cheminfo.org](https://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html) with its online instance of openbabel. It equally allows the conversion of e.g., a SMILES string into a 3D .sdf.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045:389,access,accessing,389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1973466045,1,['access'],['accessing']
Security,Reading MDL mol files via STDIN fails if the molecule has no title. This fails to create a molecule in the second step:. > echo CCC | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; 0 molecules converted. While this works fine:. > echo CCC foo | babel -ismi -omol | babel -imol -osmi; 1 molecule converted; 19 audit log messages; CCC foo; 1 molecule converted; 13 audit log messages. As does this:. > echo CCC | babel -ismi -ocml | babel -icml -osmi; 1 molecule converted; 19 audit log messages; CCC; 1 molecule converted; 13 audit log messages. Reported by: sea36,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765:198,audit,audit,198,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765,5,['audit'],['audit']
Security,Remove some audit messages,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:12,audit,audit,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,1,['audit'],['audit']
Security,"Remove some audit messages that copy the entire format description and then substring it. For smi->smi conversion, 1.6% of the total conversion time was spent on one of these audit message blocks, the majority of which on the string copy of the format description (which is not small for SMILES). Since the other ones are similar, why not remove all three? Actually, I would remove all audit and debug level logging statements throughout the library (I have never used them for debugging), so I have no qualms about removing these three. They could be rewritten to avoid the string copy, but... What do they think?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1707:12,audit,audit,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1707,3,['audit'],['audit']
Security,Running GetFormula on molecules containing the heaviest elements; (atomic number > 110) could cause a segfault due to out of bounds; memory access. Updated the alphabetized list of elements and added; bounds checking for the atomic number.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1565:140,access,access,140,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1565,1,['access'],['access']
Security,"Running under gdb... Program received signal EXC_BAD_ACCESS, Could not access memory.; Reason: KERN_INVALID_ADDRESS at address: 0x0000000000000000; 0x00007fff8facbc9f in strncasecmp_l (). Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1214#issuecomment-281802805:71,access,access,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1214#issuecomment-281802805,1,['access'],['access']
Security,See below in my case:; ```shell; werner@X10DAi:~$ ls /usr/local/lib/python3.10/site-packages; ls: cannot access '/usr/local/lib/python3.10/site-packages': No such file or directory; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947690802:105,access,access,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2673#issuecomment-1947690802,1,['access'],['access']
Security,Segfault accessing GetBeginAtomIdx of orphan OBBond,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/754:9,access,accessing,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/754,1,['access'],['accessing']
Security,Segfault on Windows when accessing vector3.x(),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661:25,access,accessing,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661,1,['access'],['accessing']
Security,"Since a molecule can contain multiple &quot;conformers,&quot;; each coordinate set should be marked as 2D or 3D. This; would allow access to only a 2D representation or a 3D; representation. Or for file formats like CML which; allow storing both 2D and 3D coordinates, both could be; output. (Of course this would actually give much greater; flexibilty than currently available in CML, but the API; should be a superset of chemical ontology.). As requested by PMR. -Geoff. Reported by: @ghutchis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403:131,access,access,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403,1,['access'],['access']
Security,"So far, I used MOPAC's `.out` files for a conversion to, e.g., a `.pdb`; however, your suggestion to access the more compact `.arc` files instead of the former rises the question if your interest is for the coordinates, or / and (which?) of the parameters should be understood by openbabel. May you detail which ones are of interest for you?. One of the differences between the output files, beside the representation of the geometries (e.g., presence / absence of an atom number count), is `.arc`'s entry `HEAT OF FORMATION` which equates `.out`'s entry `FINAL HEAT OF FORMATION`. To ease your discussion with the developers, I add an archive including a MOPAC `.mop` input, as well as `.out` and `.arc` output files of a recent computation of mine. The equally present `.pdb` was generated on the fly by. `obabel -imopout comp434+_1-0.out -opdb -O probe.pdb`. with an installation of open babel (3.1.0) as offered in the repositories of Linux Debian 10 / branch «testing». [test_conversion.zip](https://github.com/openbabel/openbabel/files/5012332/test_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045:101,access,access,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045,1,['access'],['access']
Security,"Sorry for the spamming, I don't have access to an arm64 computer so I will ask you to do a couple of more things. Could you please check; `obabel -ismi -:""C1CCCCC1"" -osdf --gen2D` and `obabel -ismi -:""c1ccccc1"" -osdf --gen2D` and `obabel -ismi -:""c1ccncc1"" -osdf --gen2D`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942098541:37,access,access,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417#issuecomment-942098541,1,['access'],['access']
Security,"Sorry it's taking me a while to respond. Could energyToKcal be implemented instead of a set of consts in the header file (e.g. ""const double JOULE_TO_CAL = whatever"")? This wouldn't need any API changes though we could expose it if useful. We have something similar for DEG_TO_RAD I think. The nice thing about a const is that the IDE will fill in the name of the variable, though I guess a function taking an enum would do the same. I'll do the necessary work for extract_thermochemistry tomorrow. Hopefully I can send you a pull request directly, and then you get to hassle me about my patch! :-)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407:219,expose,expose,219,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125341407,1,['expose'],['expose']
Security,"Sorry, what is the particular site you're trying to access with curl, and how does it connect to openbabel? Can you be a bit more specific?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1714042614:52,access,access,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2628#issuecomment-1714042614,1,['access'],['access']
Security,Stereo code accesses freed memory,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1265:12,access,accesses,12,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1265,1,['access'],['accesses']
Security,"Suggestion: If the content of the .pdb is not confidential, copy-paste the file into a folder and attach the then generated .zip archive to your question. This allows to replicate your operation, and to narrow down what's going on here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-786190281:46,confidential,confidential,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-786190281,1,['confidential'],['confidential']
Security,"Sure. I note though that it's not going to be confidential if sent to openbabel-devel@lists.sf.net, but the text gives that impression.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338505884:46,confidential,confidential,46,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-338505884,1,['confidential'],['confidential']
Security,"Thank you for adding label to cache. In the end of the letter you can see how this ""special"" file looks like. And the case is really common in solid state physics/chemistry. As you can see Ga and Si atoms occupied the same position. As for octree, my filling, that it can be waste of your time and it can make openbabel code heavy (one more dependence). The algorithm you implemented gives you the same performance O(N*logN). N you have when goes through all the atoms and logN - when insert item into std::set. The weak point is hash. To create it and after to compare. The best thing, IMHO, is to make the class in paragraph 1) which will be very fast (3 double comparison and one string). If you have few minutes of your time, please check the performance of looping though all atoms with hash created one and twice (add fake hash creating). For me it will be really interesting because I'm working know quite similar task. . #------------------------------------------------------------------------------; #$Date: 2013-05-05 14:21:46 +0000 (Sun, 05 May 2013) $; #$Revision: 85285 $; #$URL: file:///home/coder/svn-repositories/cod/cif/9/01/27/9012795.cif $; #------------------------------------------------------------------------------; #. # This file is available in the Crystallography Open Database (COD),. # http://www.crystallography.net/. The original data for this entry. # were provided the American Mineralogist Crystal Structure Database,. # http://rruff.geo.arizona.edu/AMS/amcsd.php. #. # The file may be used within the scientific community so long as. # proper attribution is given to the journal article from which the. # data were obtained. #; data_9012795; loop_; _publ_author_name; 'Belokoneva, E. L.'; 'Stefanovich, S. Y.'; 'Pisarevskii, Y. V.'; 'Mosunov, A. V.'; _publ_section_title; ;Refined structures of La3Ga5SiO14 and Pb3Ga2Ge4O14 and the crystal-chemical; regularities in the structure and properties of compounds of the langasite; family; ;; _journal_name_full 'Russian",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647:530,hash,hash,530,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647,3,['hash'],['hash']
Security,Thanks for commenting @baoilleach :). As long as the functions are exposed (or there is another clever way to easily calculate what I need) then I see no problem with where things are stored in the C++ API. I used to use the `GetImplicitValence()` method on atoms in combination with `GetValence()` to figure out whether or not an atom needed to be given a hydrogen. Such a situation can arise if one needed to cut (in openbabel technically remove) a bond between a QM region and MM region with FragIt. I found an old blogpost of mine on the subject from almost 6 years ago (http://pythonchem.blogspot.dk/2012/01/adding-hydrogen-atoms-is-no-mean-feat.html) which explains it with a slightly different angle. The code I used has barely changed. The updated code (see https://github.com/FragIt/fragit-main/blob/develop/src/qmmm.py#L139) needs to know how many bonds really would like to be present and the following code apparently satisfies my testcases. Hope that explains how I used the old (and new) functionality.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770:67,expose,exposed,67,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770,1,['expose'],['exposed']
