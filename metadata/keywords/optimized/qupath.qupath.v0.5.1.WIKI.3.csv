quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5253,interface,interface,5253,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEdito",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5468,interface,interface,5468,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"SelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6990,interface,interface,6990,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Server;  ; getServerType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getServerType() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getServerType() - Method in interface qupath.lib.images.servers.ImageServer. A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). getServerType() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. getShape() - Method in class qupath.lib.roi.AreaROI;  ; getShape() - Method in class qupath.lib.roi.EllipseROI;  ; getShape() - Method in class qupath.lib.roi.GeometryROI;  ; getShape() - Method in interface qupath.lib.roi.interfaces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnSha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:513331,interface,interface,513331,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Server<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Parameters:; width - ; height - ; Returns:. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:6432,interface,interface,6432,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2964,interface,interface,2964,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"Show the cursor location. showLocationProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the cursor location. showMeasurementTableObjectIDs - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableObjectIDsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show object IDs by default or not. showMeasurementTableThumbnails - Variable in class qupath.lib.gui.panes.PreferencePane.MeasurementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.View",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968060,message,message,968060,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"SpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949671,interface,interface,949671,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4803,interface,interface,4803,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageSe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5200,interface,interface,5200,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: T,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7492,interface,interface,7492,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Static method in class qupath.lib.gui.viewer.PathObjectPainter. Get a BasicStroke with the specified thickness. getCachedThumbnail(ImageServer<BufferedImage>, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(ImageServer<BufferedImage>, RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCachedTile(TileRequest) - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getCachedTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTile(TileRequest) - Method in interface qupath.lib.images.servers.ImageServer. Get a cached tile, or null if the tile has not been cached. getCachedTilesForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get a map of all cached tiles pertaining to a specific ImageServer. getCaretPosition() - Method in interface qupath.lib.gui.scripting.EditableText. Get the current caret position. getCaretPosition() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the caretPosition property. getCaretPosition() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the caretPosition property. getCaseID() - Method in class qupath.lib.objects.TMACoreObject. Get the case ID metadata value. getCellObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all cell objects in the hierarchy. getCellObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current cell objects. getCenterPixelX() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:346842,interface,interface,346842,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant in enum class qupath.lib.images.servers.PixelType. 8-bit unsigned integer. uncompressed() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1057346,interface,interface,1057346,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5957,message,message,5957,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.Virtua",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6125,interface,interface,6125,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Description copied from interface: SimpleImage; Get the image height. Specified by:; getHeight in interface SimpleImage; Returns:. getArray; public float[] getArray(boolean direct); Description copied from interface: SimpleModifiableImage; Request the pixel array representing all the pixels in this image, returned row-wise. Specified by:; getArray in interface SimpleModifiableImage; Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1908,interface,interface,1908,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,8,['interface'],['interface']
Integrability,"T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1330,interface,interface,1330,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['interface'],['interface']
Integrability,"TH; public static final String PROPERTY_NAME_BOUNDS_WIDTH. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_HEIGHT; public static final String PROPERTY_NAME_BOUNDS_HEIGHT. See Also:. Constant Field Values. Method Details. dispose; public void dispose(); Dispose the OpenSlide object; this is equivalent to close(). getLevelCount; public int getLevelCount(); Get the total number of pyramid levels. Returns:. getLevel0Width; public long getLevel0Width(); Get the width of the full-resolution image (level 0). Returns:. getLevel0Height; public long getLevel0Height(); Get the height of the full-resolution image (level 0). Returns:. getLevelWidth; public long getLevelWidth(int level); Get the image width at the specified level. Parameters:; level - ; Returns:. getLevelHeight; public long getLevelHeight(int level); Get the image height at the specified level. Parameters:; level - ; Returns:. paintRegionARGB; public void paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h); throws IOException. Throws:; IOException. getProperties; public Map<String,String> getProperties(); Get an unmodifiable map of all available properties. Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); throws IOException; Get a named associated image. Parameters:; name - ; Returns:; Throws:; IOException. getAssociatedImages; public List<String> getAssociatedImages(); Get a list of all associated image names. Returns:. close; public void close(); Close; this is important for cleanup. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable. getICCProfileBytes; public byte[] getICCProfileBytes(); throws UnsupportedOperationException; Request the bytes for an ICC profile. Returns:; the bytes of an ICC profile is available, or null otherwise.; Throws:; UnsupportedOperationException - if an unsatisfied link error occurred, which indicates that; the OpenSlide version is not compatible (it should be 4.0.0 or greater). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:5174,interface,interface,5174,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,4,['interface'],['interface']
Integrability,"Text(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void repla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10372,wrap,wrapTextProperty,10372,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,3,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"Text; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10017,interface,interface,10017,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9412,interface,interface,9412,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolation(Graphics2D g2d). paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:3560,interface,interface,3560,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['interface'],['interface']
Integrability,"Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLengt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8877,interface,interface,8877,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,Tool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanoseconds() - Method in class qupath.lib.common.Timeit. Report timings in nanoseconds. navigationAcceleration - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Apply acceleration/deceleration effects when holding and releasing navigation key. navigationSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale navigation speed. nBins() - Method in class qupath.lib.analysis.stats.Histogram. Total number of histogram bins. nCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of censored events. nChannels() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nChannels() - Method in interface qupath.lib.images.servers.ImageServer. Number of channels (3 for RGB). nChildObjects() - Method in class qupath.lib.objects.PathObject. Total number of child objects. nComponents() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Number of output components. nCores() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; nCores() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Total number of cores in the TMA grid. nDescendants() - Method in class qupath.lib.objects.PathObject. Total number of descendant objects. NEAREST - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Nearest neighbor interpolation. NECROSIS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Necrosis classification. NECROSIS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Necrosis classification. negate() - Method in interfac,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:708116,interface,interface,708116,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Tool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer viewer); Description copied from interface: PathTool; Deregister the tool from the viewer. It is essential that tools clean up properly ; and do not impact other tools that may be registered for the viewer later. Specified by:; deregisterTool in interface PathTool; Parameters:; viewer - the viewer from which this tool should be deregistered. nameProperty; public ReadOnlyStringProperty nameProperty(); Description copied from interface: PathTool; Property giving the name of the tool. Specified by:; nameProperty in interface PathTool; Returns:; the name property. iconProperty; public ReadOnlyObjectProperty<Node> iconProperty(); Description copied from interface: PathTool; Property giving the icon that should be used for the tool. Specified by:; iconProperty in interface PathTool; Returns:; the icon property. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:2324,interface,interface,2324,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,7,['interface'],['interface']
Integrability,"Type) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the channel type for the output. outputClasses(Map<Integer, PathClass>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as a map. outputClasses(PathClass...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as an array. outputClassNames(String...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as an array of classification names. outputClassNames(Map<Integer, String>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the classifications for the output as a map with string values. outputHandler(OutputHandler<S, T, U>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the output handler. OutputHandler<S,T,U> - Interface in qupath.lib.experimental.pixels. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U> - Class in qupath.lib.experimental.pixels;  ; OutputHandler.OutputToObjectConverter<S,T,U> - Interface in qupath.lib.experimental.pixels;  ; outputPath(String) - Method in class qupath.lib.gui.FileCopier. Name of the output directory. outputPath(Path) - Method in class qupath.lib.gui.FileCopier. Path representing the output directory. outputPixelType(PixelType) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Output pixel type. outputs(String...) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the layer outputs. outputs(Map<String, DnnShape>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shapes for one or more outputs. outputs(Map<String, DnnShape>) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the layer outputs and shapes. outputShape(long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:734242,interface,interface,734242,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1565,message,message,1565,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"URIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:3112,interface,interface,3112,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['interface'],['interface']
Integrability,"UriUpdater. Apply all current replacements, updating the UriResource objects. applySettingsToDisplay(ImageDisplay, ImageDisplaySettings) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Apply the settings to the display, if they are compatible. applyTiled(Function<Mat, Mat>, Mat, int, int, Padding, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a function to a Mat that strictly requires a specific input size. applyToChannels(Mat, Consumer<Mat>) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.display.ImageDisplay. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; applyTransforms(BufferedImage, BufferedImage) - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean) - Static method in class qupath.lib.display.ImageDisplay. Deprecated.; use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:44083,interface,interface,44083,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"VClassifiers.LogisticRegressionClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsProbabilities() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... supportsPyramidal() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPyramidal() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPyramidal() - Method in interface qupath.lib.images.writers.ImageWriter. Returns true if the writer is capable of writing pyramidal images. supportsPyramidal() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsRGB() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsRGB() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsRGB() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsRGB() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsRGB() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle RGB (it probably can...). supportsRGB() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsT() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsT() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsT() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsT() - Method in class qupath.lib.images.writer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1012464,interface,interface,1012464,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"VProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; write(JsonWriter, T) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; writeClassifier(ObjectClassifier<T>, Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Write the classifier to a file. writeClassifier(PixelClassifier, Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Write a pixel classifier to a file. writeDensityMapImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to the current image image. writeDensityMapImage(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, String) - Static method in class qupath.lib.scripting.QP. Write ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1111219,wrap,wrapTextProperty,1111219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['interface', 'wrap']","['interface', 'wrapTextProperty']"
Integrability,"Value; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3324,depend,depending,3324,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['depend'],['depending']
Integrability,"Viewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer slot.; If no empty slots are available, an error will be shown. Parameters:; viewer - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11933,interface,interface,11933,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.featu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6545,interface,interfaces,6545,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interfaces']
Integrability,"X - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8623,interface,interface,8623,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5430,interface,interface,5430,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5685,interface,interface,5685,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7494,interface,interface,7494,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3460,wrap,wrapText,3460,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,2,['wrap'],"['wrapText', 'wrapTextProperty']"
Integrability,"a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; getROI() - Method in class qupath.lib.roi.RoiEditor. Retrieve the ROI currently being edited (may be null). getROI(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. getROIEditor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the RoiEditor used by this viewer. getRoiName() - Method in class qupath.lib.roi.AreaROI;  ; getRoiName() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiName() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiName() - Method in interface qupath.lib.roi.interfaces.ROI. Get a String representation of the kind of ROI we have, ; e.g. getRoiName() - Method in class qupath.lib.roi.LineROI;  ; getRoiName() - Method in class qupath.lib.roi.PointsROI;  ; getRoiName() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiName() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiName() - Method in class qupath.lib.roi.RectangleROI;  ; getRoiType() - Method in class qupath.lib.roi.AreaROI;  ; getRoiType() - Method in class qupath.lib.roi.EllipseROI;  ; getRoiType() - Method in class qupath.lib.roi.GeometryROI;  ; getRoiType() - Method in interface qupath.lib.roi.interfaces.ROI. Get the RoiType, used to distinguish between points, lines and areas. getRoiType() - Method in class qupath.lib.roi.LineROI;  ; getRoiType() - Method in class qupath.lib.roi.PointsROI;  ; getRoiType() - Method in class qupath.lib.roi.PolygonROI;  ; getRoiType() - Method in class qupath.lib.roi.PolylineROI;  ; getRoiType() - Method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:501735,interface,interface,501735,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"a<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11493,interface,interface,11493,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"able (supported) language can be found. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRendere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:421454,interface,interface,421454,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3890,message,message,3890,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"abled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. java.lang.Object; java.util.AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1080,interface,interfaces,1080,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,2,['interface'],['interfaces']
Integrability,"ace qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:137294,interface,interface,137294,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ace ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5860,interface,interface,5860,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ace ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6918,interface,interface,6918,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"acheHint, setClip, setCursor, setDepthTest, setDisable, setDisabled, setEffect, setEventDispatcher, setEventHandler, setFocused, setFocusTraversable, setHover, setId, setInputMethodRequests, setLayoutX, setLayoutY, setManaged, setMouseTransparent, setNodeOrientation, setOnContextMenuRequested, setOnDragDetected, setOnDragDone, setOnDragDropped, setOnDragEntered, setOnDragExited, setOnDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Method Details. createInstance; public static ExtensionControlPane createInstance(); throws IOException; Create an instance of the ExtensionControlPane UI pane. Returns:; A BorderPane subclass.; Throws:; IOException - If FXML or resources can't be found. handleGitHubURL; public static void handleGitHubURL(String url); Handle a URL that might be an extension hosted on GitHub. Parameters:; url - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:10973,interface,interface,10973,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['interface'],['interface']
Integrability,"ackages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page contains an alphabetic index of all classes and interfaces contained in the documentation, including annotation interfaces, enum classes, and record classes. Index; The Index contains an alphabetic index of all classes, interfaces, constructors, methods, and fields in the documentation, as well as summary pages such as All Packages, All Classes and Interfaces. This help file applies to API documentation generated by the standard doclet. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:4654,interface,interfaces,4654,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,3,['interface'],['interfaces']
Integrability,"act the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Returns:; Throws:; IOException. readTile; protected abstract BufferedImage readTile(TileRequest tileRequest); throws IOException; Read a single image tile. Parameters:; tileRequest - ; Returns:; Throws:; IOException. getTile; protected BufferedImage getTile(TileRequest tileRequest); throws IOException; Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. Parameters:; tileRequest - ; Returns:; Throws:; IOException. createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:5023,interface,interface,5023,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['interface'],['interface']
Integrability,"acted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8908,interface,interface,8908,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ad from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user interface is/should be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public V",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:15538,interface,interface,15538,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['interface'],['interface']
Integrability,"adTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImage in class AbstractImageServer<BufferedImage>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:6278,interface,interface,6278,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,6,['interface'],['interface']
Integrability,"adURLAsString(URL url,; int timeoutMillis); throws IOException; Read URL as String, with specified timeout in milliseconds.; ; The content type is checked, and an IOException is thrown if this doesn't start with text/plain. Parameters:; url - ; timeoutMillis - ; Returns:; Throws:; IOException. numNaNs; public static int numNaNs(double[] vals); Count the number of NaN values in an array. Parameters:; vals - ; Returns:. sum; public static long sum(long[] values); Compute the sum of elements in a long array (possibly representing a histogram). Parameters:; values - ; Returns:. generateDistinctName; public static String generateDistinctName(String base,; Collection<String> existingNames); Generate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:20493,depend,dependent,20493,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['depend'],['dependent']
Integrability,"added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8787,interface,interface,8787,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11506,interface,interface,11506,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"adians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36036,interface,interface,36036,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"age is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769715,interface,interface,769715,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"age(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Write a 2D image region using the default writer based on the file path. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.scripting.QP. Write an image region ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119690,interface,interface,1119690,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"age). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6194,message,message,6194,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"age); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10380,message,message,10380,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"age; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui. package qupath.lib.gui. The main QuPath user interface. Related Packages. Package; Description; qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. Classes. Class; Description; BuildInfo. Basic version information about the current QuPath build. ColorMapCanvas. Canvas to show the range of a ColorMap (i.e. ExtensionClassLoader. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager. Manage loading extensions for a QuPathGUI instance. FileCopier. Copy files to an output directory, prompting the user if necessary. JavadocViewer. Command to show javadocs in a WebView. QuPathApp. Launcher application to start QuPath. QuPathGUI. Main GUI for QuPath, written using JavaFX. SelectableItem<T>. Helper class for managing items when only on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html:1125,interface,interface,1125,javadoc/docs/qupath/lib/gui/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/package-summary.html,1,['interface'],['interface']
Integrability,"age; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class SystemMenuBar.SystemMenuBarOption. java.lang.Object; java.lang.Enum<SystemMenuBar.SystemMenuBarOption>; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. All Implemented Interfaces:; Serializable, Comparable<SystemMenuBar.SystemMenuBarOption>, Constable. Enclosing class:; SystemMenuBar. public static enum SystemMenuBar.SystemMenuBarOption; extends Enum<SystemMenuBar.SystemMenuBarOption>; Enum specifying when and where the system menubar should be used.; This matters whenever the system menubar differs from the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1124,interface,interfaces,1124,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['interface'],['interfaces']
Integrability,"age; public DefaultScriptLanguage(ScriptEngineFactory factory); Constructor for a ExecutableLanguage based on a ScriptEngineFactory.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; name - the language name; exts - the possible extensions for this language; completor - the auto-completion object for this language. Method Details. getDefaultAutoCompletor; protected ScriptAutoCompletor getDefaultAutoCompletor(String languageName); Default method to get a suitable auto completor for the given language name. Parameters:; languageName - ; Returns:. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in interface ExecutableLanguage; Parameters:; params - ; Returns:; Throws:; ScriptException. tryToInterpretMessage; protected String tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable). getDefaultScriptName; protected String getDefaultScriptName(). createContext; protected ScriptContext createContext(ScriptParameters params); Create a ScriptContext containing information from the ScriptParameters. Parameters:; params - ; Returns:. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. getImportStatements; public String getImportStatemen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:4456,interface,interface,4456,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['interface'],['interface']
Integrability,"ageOps.Normalize;  ; NORMALIZED - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Normalized bin counts, so that the sum of all counts is 1.0. normalizeFeature(int, double) - Method in class qupath.opencv.ml.objects.features.Normalizer. Normalize a single feature. normalizeFloats(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; Normalizer - Class in qupath.opencv.ml.objects.features. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. noSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if no objects are selected. nResolutions() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nResolutions() - Method in interface qupath.lib.images.servers.ImageServer. Number of resolutions for the image. nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Nucleus/cell area ratio (only relevant to cell objects). NULL_CLASS - Static variable in class qupath.lib.objects.classes.PathClass. Default PathClass that represents no cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:714002,interface,interface,714002,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:441823,interface,interface,441823,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; Overrides:; getAssociatedImageList in class AbstractImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public BufferedImage getAssociatedImage(String name); Description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:6108,interface,interface,6108,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['interface'],['interface']
Integrability,"ageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:3301,interface,interface,3301,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryStr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:441488,interface,interface,441488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ages.ImageData. Set the color deconvolution stain vectors for the current image type. setColorMap(ColorMaps.ColorMap) - Method in class qupath.lib.gui.ColorMapCanvas. Set the ColorMaps.ColorMap to display to the one with the specified list index. setColorMapper(ColorMaps.ColorMap) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set a new color mapper. setColorModel(ColorModel) - Method in class qupath.lib.gui.images.stores.ColorModelRenderer. Set the color model to use. setColorModel(ColorModel) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Optionally set a custom ColorModel. setColorRGB(Integer) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, use PathObject.setColor(Integer) instead. setComplete(boolean) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the tile that its processing is done. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; setContextMenu(ContextMenu) - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:920650,interface,interface,920650,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ages.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer name. getName() - Method in class qupath.opencv.dnn.OpenCVDnn. Get a user-readable name for this model, or null if no name is sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453480,interface,interface,453480,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata value. PathObjectHierarchy; readHierarchy(). Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. ImageData<T>; readImageData(). Read the ImageData associated with this entry, or create a new ImageData if none is currently present. String; removeMetadataValue(String key). Remove a metadata value. void; saveImageData(ImageData<T> imageData). Save the ImageData for this entry using the default storage location for the project. void; setDescription(String description). Set the description. void; setImageName(String name). Set the image name for this project entry. void; setThumbnail(T img). Set a thumbnail for the image. default boolean; updateServerURIs(Map<URI,URI> replacements). Deprecated.; use instead UriResource.updateURIs(Map). Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. getID; String getID(); Get a unique ID to represent this entry. Returns:. setImageName; void setImageName(String name); Set the image name for this project entry. Parameters:; name - . getImageName; String getImageName(); Get a name that may be used for this entry.; ; This may be derived automatically from the server path, or set explicitly to be something else. ; It may also be randomized to support blinded analysis. Returns:; See Also:. getOriginalImageName(); Project.setMaskImageNames(boolean); Project.getMaskImageNames(). getOriginalImageName; String getOriginalImageName(); Get the original image name, without any randomization. Most UI elements should prefer getImageName() to ; ensure that the randomization does its job. Returns:. getEntryPath; Path getEntryPath(); Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system.; ; If not nu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:3227,interface,interface,3227,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['interface'],['interface']
Integrability,"ains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6335,interface,interface,6335,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10555,interface,interface,10555,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"al ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7177,interface,interface,7177,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"al ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8145,interface,interface,8145,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"al ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9400,interface,interface,9400,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"al.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeatureComputer;  ; HaralickFeatures - Class in qupath.lib.analysis.features. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin - Class in qupath.lib.algorithms. Plugin for calculating Haralick texture features, within or around detections or tiles. HaralickFeaturesPlugin() - Constructor for class qupath.lib.algorithms.HaralickFeaturesPlugin. Default constructor. hasActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Returns true if a handle is currently active, for example being reposition. hasActiveToolTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the active tool. hasAl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:567029,interface,interface,567029,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"alBayesClassifierCV. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can be trained interactively (i.e. supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsDynamicMeasurements() - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. supportsFile(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Query whether a file represents a supported script. supportsFile(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Check if the script editor supports a particular file. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Query whether the classifier supports a particular image. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Query whether this transform can be applied to the specified image. supportsImage(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific image server, or false ; if it is incompatible. supportsImage(ImageServer<BufferedImage>) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Query whether this transform can be applied to the specified image. supportsImage(PixelType, int, boolean) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. supportsImageType(ImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1006226,interface,interface,1006226,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8997,interface,interface,8997,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"aleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8734,interface,interface,8734,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3792,interface,interface,3792,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"alibrated units. createTMAGrid; public static TMAGrid createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterPixels,; ImageRegion region); Create a new regular TMAGrid, fit within a specified region.; ; For the label string format, see see parseTMALabelString(String). Parameters:; hLabels - a String representing horizontal labels; vLabels - a String representing vertical labels; rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; diameterPixels - the diameter of each core, in pixels; region - bounding box and spacing for the grid (required); Returns:. relabelTMAGrid; public static boolean relabelTMAGrid(TMAGrid grid,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst); Relabel a TMA grid. This will only be effective if enough labels are supplied for the full grid - otherwise no changes will be made.; ; For a TMA core at column c and row r, the label format will be 'Hc-Vr' or 'Hc-Vr', where H is the horizontal label and V the vertical label, ; depending upon the status of the 'rowFirst' flag.; ; An examples of label would be 'A-1', 'A-2', 'B-1', 'B-2' etc. Parameters:; grid - the TMA grid to relabel; labelsHorizontal - a String containing labels for each TMA column, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); labelsVertical - a String containing labels for each TMA row, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; Returns:; true if there were sufficient horizontal and vertical labels to label the entire grid, false otherwise. convertToPoints; public static void convertToPoints(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean preferNucleus,; boolean deleteObjects); Convert a collection of PathObjects to Point annotations, based on ROI centroids, and add the points to the hierarchy. Parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:26519,depend,depending,26519,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['depend'],['depending']
Integrability,"alize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4495,interface,interface,4495,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"alog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConfirmDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimenta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964304,interface,interface,964304,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"alue. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void clearMetadata(); Clear all associated metadata. toString; public String toString(). Overrides:; toString in class PathObject. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:6499,interface,interface,6499,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,6,['interface'],['interface']
Integrability,"alueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:3916,depend,depending,3916,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['depend'],['depending']
Integrability,"alysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105904,interface,interface,105904,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"al in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5971,interface,interface,5971,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ame) for objects for which the specified measurement has a value below or equal to the threshold. belowEquals(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below or equal to the threshold. bigTiff() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that the image is written in BigTIFF format. bigTiff(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify whether the image should be written in BigTIFF format. BILINEAR - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Bilinear interpolation. binaryReconstruction(ByteProcessor, ByteProcessor, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. bindLocale() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; bindObjectClassifierNameInput(TextField, ObjectExpression<Project<BufferedImage>>) - Static method in class qupath.process.gui.commands.ml.ProjectClassifierBindings. Set styling for a text field to use object classifier names for the current project. bindPixelClassifierNameInput(TextField, ObjectExpression<Project<BufferedImage>>) - Static method in class qupath.process.gui.commands.ml.ProjectClassifierBindings. Set styling for a text field to use pixel classifier names for the current project. bindUserStylesheetToStyle(WebEngine) - Static method in class qupath.lib.gui.tools.WebViews. Bind the WebEngine.userStyleSheetLocationProperty() to a stylesheet determined based on QuPath's ; current style (e.g. bioformatsEnabled() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if Bio-Formats is enabled and may be used to read images. BioFormatsImageServer - Class in qupath.lib.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:56008,interface,interface,56008,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ame; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3766,interface,interface,3766,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ames of all unconnected output layers. getOutputLayers(Net, DnnShape...) - Static method in class qupath.opencv.dnn.DnnTools. Get the names of all unconnected output layers. getOutputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features expected in the output. getOutputPixelType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Pixel type of output; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qupath.lib.gui.QuPathGUI. Return the global OverlayOptions instance, used to control display within viewers by default. getOverlayOptions() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get the overlay options, which may influence the display of this overlay. getOverlayOptions() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the overlay options that control",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:468021,interface,interface,468021,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"an; isCircle(). Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. boolean; isCircle(double pixelWidth,; double pixelHeight). Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4039,interface,interface,4039,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"an; setAccelerator(String menuCommand,; String combo). Set an accelerator for the specified menu command. boolean; setAccelerator(MenuItem item,; KeyCombination combo). Set the accelerator for the specified menu item. boolean; setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo). Set the accelerator for the specified action. void; setProject(Project<BufferedImage> project). Set the active project, triggering any necessary GUI updates. void; setReadOnly(boolean readOnly). Specify whether QuPath should be in 'read-only' mode. void; setScriptEditor(ScriptEditor scriptEditor). Set a new ScriptEditor, which will be used from now on. BooleanProperty; showAnalysisPaneProperty();  ; BooleanProperty; showInputDisplayProperty(). Property to indicate whether the input display is currently showing. void; submitShortTask(Runnable runnable). Deprecated.; since v0.5.0; use getThreadPoolManager(). ObservableValue<Boolean>; uiBlocked(). Observable value indicating that the user interface is/should be blocked. ReadOnlyObjectProperty<QuPathViewer>; viewerProperty(). Property representing the viewer currently active. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showAnalysisPane; public BooleanProperty showAnalysisPaneProperty. See Also:. showAnalysisPaneProperty(). readOnly; public ReadOnlyBooleanProperty readOnlyProperty; Property indicating whether QuPath is in 'read-only' mode. See Also:. isReadOnly(); setReadOnly(boolean); readOnlyProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. getImageData(); imageDataProperty(). project; public ReadOnlyObjectProperty<Project<BufferedImage>> projectProperty; Read-only property representing the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:10527,interface,interface,10527,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['interface'],['interface']
Integrability,anProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.f,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:5238,interface,interface,5238,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"anager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix values for 3D images (z-stacks). MultiscaleFeatures.MultiscaleFeature. Image features, dependent on Gaussian scale. MultiscaleFeatures.MultiscaleResultsBuilder. Helper-class for computing pixel-features at a specified scale. MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Normalization. Methods for normalizing features. Normalizer. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:30789,depend,dependent,30789,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['depend'],['dependent']
Integrability,"and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... isEmptyRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns true if there are no objects to be painted within the requested region. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Always returns false. isEmptyRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Test whether a region is empty, i.e. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.LabeledImageServer. Returns true if there are no objects to be painted within the requested region. isEosin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""eosin"", ""eos"" or ""e"" (ignoring case). isEraser() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Query if there is a pen currently being used as an eraser. iseScrollGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; isFloat(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Returns true if a Mat is a floating point (rather than int) type. isFloatingPoint() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is a floating point representation. isFluorescence() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to fluorescence. isGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass represents a built-in intensity class. isH_DAB() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:621848,interface,interface,621848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"and optional args. buildServer(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; buildServer(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; buildServer(URI, String...) - Static method in class qupath.lib.scripting.QP. Build an ImageServer with the class BufferedImage. buildServer(ImageData<BufferedImage>) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build an ImageServer representing this density map. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration, int, int) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. bundle() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; buttons(String...) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the buttons to display in the dialog. buttons(ButtonType...) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the buttons to display in the dialog. byteOrder(ByteOrder) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  . C. cache - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; calculatePadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp. Calculate the required padding. calculatePreferredParallelism() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Make a semi-educated guess as to an appropriate number of threads to use. calibratedLocationString - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; calibrateImagePlus(ImagePlus, RegionRequest, ImageServer<BufferedImage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:82423,interface,interface,82423,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4686,interface,interface,4686,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public Lis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4546,interface,interface,4546,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ansforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. hasAlpha; protected boolean hasAlpha(). crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5513,interface,interface,5513,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,"anslated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6068,interface,interface,6068,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"an hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as oppose",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4705,interface,interface,4705,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"an hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. hasHe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4212,interface,interface,4212,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"an hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toStr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3920,interface,interface,3920,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"an supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:5256,interface,interface,5256,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"an supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5725,interface,interface,5725,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ap for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:442275,interface,interface,442275,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Return,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8047,interface,interface,8047,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"aralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:21362,integrat,integration,21362,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['integrat'],['integration']
Integrability,"arameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:386235,interface,interface,386235,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"arameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an existing pixel (packed RGB) additively using the color used to display a specified one. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; rgb - ; mode - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:13237,interface,interface,13237,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,6,['interface'],['interface']
Integrability,"arameters:; missing - . getCaseID; public String getCaseID(); Get the case ID metadata value. Returns:; See Also:. setCaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void clearMetadata(); Clear all associated metadata. toString; public String toString(). Overrides:; toString in class PathObject. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(Objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:6269,interface,interface,6269,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['interface'],['interface']
Integrability,"arameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:5630,interface,interface,5630,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"arameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:4283,interface,interface,4283,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['interface'],['interface']
Integrability,"arameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9057,message,message,9057,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"archy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102949,depend,depending,102949,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"archy for which QuPath should support undo/redo.; This is to workaround an inconvenient implementation issue, whereby trying to support undo with huge datasets could ; be a significant performance issue. Returns:. getRecentScriptsList; public static ObservableList<URI> getRecentScriptsList(); Get a list of the most recent scripts that were opened. Returns:. invertScrollingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:51859,depend,depends,51859,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9745,interface,interface,9745,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"arentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:3411,interface,interface,3411,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['interface'],['interface']
Integrability,"ashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useGrayscaleLut; public BooleanProperty useGrayscaleLutProperty; Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. See Also:. useGrayscaleLutProperty(). useInvertedBackground; public BooleanProperty useInvertedBackgroundProperty; Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). See Also:. setUseInvertedBackground(boolean); useInvertedBackgroundProperty(). changeTimestamp; public LongProperty changeTimestampProperty; Timestamp for the most recent change. This can be used to listen for ; display changes. See Also:. changeTimestampProperty(). switchToGrayscaleChannel; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty; Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToGrayscaleChannel(ChannelDisplayInfo); switchToGrayscaleChannelProperty(). Constructor Details. ImageDisplay; public ImageDisplay(); Constructor. Method Details. create; public static ImageDisplay create(ImageData<BufferedImage> imageData); throws IOException; Create a new image display, and set the specified image data. Parameters:; imageData - ; Returns:; Throws:; IOException. setImageData; public void setImageData(ImageData<BufferedImage> imageData,; boolean retainDisplaySettings); throws IOException; Set the ImageData to a new value. Parameters:; imageData - image data that should how be displayed; retainDisplaySettings - if true, retain the same display settings as for the previous image if possible ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:6799,interface,interfaces,6799,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['interface'],['interfaces']
Integrability,"ashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3132,depend,depending,3132,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['depend'],['depending']
Integrability,"ass qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the long text property of the action to an ObservableValue, bidirectionally if possible. longTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getLongText(). lookupAccelerator(String) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an accelerator. lookupAccelerator(KeyCombination) - Method in class qupath.lib.gui.QuPathGUI. Get the action or menu item associated with an key combination. lookupActionByText(String) - Method in class qupath.lib.gui.QuPathGUI. Search for an action based upon its text (name) prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:660100,message,messages,660100,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"ass.fromString(String, Integer). getPathClass(String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name and color. getPathClass(String, String...) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). getPathClass(List<String>) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). getPathClass(PathClassFactory.StandardPathClasses) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. getPathClassColor(PathClass) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color appropriate for displaying a PathClass. getPathClasses() - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the classifications set by this classifier. getPathClasses() - Method in interface qupath.lib.projects.Project. Get an unmodifiable list representing the PathClasses associated with this project. getPathClasses() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:479921,interface,interface,479921,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ass<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5923,message,message,5923,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['message']
Integrability,assFactory.StandardPathClasses. Deprecated.; Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.plugins.ParallelTileObject.Status. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.roi.interfaces.ROI.RoiType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.roi.RoiTools.CombineOp. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.process.gui.WandToolEventHandler.WandType. Returns the,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1084602,interface,interfaces,1084602,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"asses and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.commands. package qupath.lib.gui.commands. Commands shown within the main QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  . All Classes and InterfacesClassesEnum Classes. Class; Description; BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. ContextHelpViewer. Help window providing context-dependent help. CountingDialogCommand. Command to open up a counting panel to aid with creating Point annotations. ExportObjectsCommand. Command to export object(s) in GeoJSON format to an output file. InteractiveObjectImporter. Static methods to import object(s) from different sources. LogViewerCommand. A viewer for log messages. MeasurementExportCommand. Dialog box to export measurements. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. PathObjectGridView. Grid display of objects. PathObjectGridView.GridDisplaySize;  ; ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. UpdateUrisCommand<T extends UriResource>. Fix broken URIs by using relative paths or prompting the user to select files. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html:1305,message,messages,1305,javadoc/docs/qupath/lib/gui/commands/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/package-summary.html,2,"['depend', 'message']","['depending', 'messages']"
Integrability,"assifier using these parameters. buildServer(String, Class<T>, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Attempt to create ImageServer<T> from the specified path and arguments. buildServer(String, Class<T>, String...) - Static method in class qupath.lib.scripting.QP. Deprecated.; In the usual case where BufferedImage is the class, use QP.buildServer(String, String...) instead ; because it handles default args. buildServer(String, String...) - Static method in class qupath.lib.images.servers.ImageServers. Build a ImageServer for the specified URI path and optional args. buildServer(String, String...) - Static method in class qupath.lib.scripting.QP. Build an ImageServer with the class BufferedImage. buildServer(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; buildServer(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; buildServer(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Attempt to create ImageServer<T> from the specified path. buildServer(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Build a ImageServer for the specified URI and optional args. buildServer(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; buildServer(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; buildServer(URI, String...) - Static method in class qupath.lib.scripting.QP. Build an ImageServer with the class BufferedImage. buildServer(ImageData<BufferedImage>) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build an ImageServer representing this density map. buildServer(ImageData<BufferedImage>, ImageDataOp, PixelCalibration) - Static method in class qupath.opencv.ops.ImageOps. Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. buildSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:81165,interface,interface,81165,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"assifiers, which are instances of StatModel.; There are two main reasons to use these wrappers rather than StatModel directly:; ; Improved API consistency when exchanging between classifiers. For example, some require ; training data to be in a specified form (labels or one-hot encoding).; Easier serialization to JSON along with other QuPath objects via GsonTools. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:1461,Wrap,Wrapper,1461,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,1,['Wrap'],['Wrapper']
Integrability,"associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4543,interface,interface,4543,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"ass java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:; Throws:; Exception. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:2830,interface,interface,2830,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,7,['interface'],['interface']
Integrability,"ast value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3608,interface,interface,3608,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"asurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. getMeasurementValue(PathObject, String, boolean) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Deprecated.; use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. getMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified ROI, computing it if it is unavailable. getMeasurementValue(ROI, String, boolean) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:437979,interface,interface,437979,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"at PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9250,interface,interface,9250,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"at can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display mode for the histogram. HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. HistogramDisplay. Wrapper close to enable the generation and display of histograms relating to a data table. HtmlRenderer. Marker interface that indicates an executable language renders HTML. IconFactory. Factory class for creating icons. IconFactory.PathIcons. Default icons for QuPath commands. IJExtension. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast setti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:21114,interface,interface,21114,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"at contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6567,interface,interface,6567,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"at the tile resolution. getTileY() - Method in class qupath.lib.images.servers.TileRequest. Get the y-coordinate of the bounding box for this tile at the tile resolution. getTimepoint(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the time point, defined in ImageServerMetadata.getTimeUnit(), or Double.NaN if this is unknown. getTimepoint(int) - Method in class qupath.lib.images.servers.PixelCalibration. Get the time for the specified time point, or Double.NaN if this is unknown. getTimeToEvent() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Get the stored time to event (units are unspecified). getTimeUnit() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the time unit for a time series. getTimeUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get the time unit for a time series. getTMACore(int, int) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(int, int) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get the TMACoreObject for a specified grid location. getTMACore(String) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(String) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Retrieve a TMA core based upon its name. getTMACoreForPixel(TMAGrid, double, double) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:537322,interface,interface,537322,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"atModel. Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... supportsPyramidal() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsPyramidal() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsPyramidal() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsPyramidal() - Method in interface qupath.lib.images.writers.ImageWriter. Returns true if the writer is capable of writing pyramidal images. supportsPyramidal() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsRGB() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsRGB() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsRGB() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsRGB() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsRGB() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle RGB (it probably can...). supportsRGB() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsT() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsT() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsT() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsT() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsT() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle multiple timepoints. supportsT() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsZ() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsZ() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsZ() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsZ() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsZ() - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1012992,interface,interface,1012992,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ata<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). property",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:2317,interface,interface,2317,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,1,['interface'],['interface']
Integrability,"ataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatric",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:442941,interface,interface,442941,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ate a Rectangle corresponding to the x,y,width,height of an ImageRegion. getBounds(ImageRegion, Rectangle) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. getBounds(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to bounding box of a ROI. getBounds2D(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle2D corresponding to bounding box of a ROI. getBounds2D(ROI, Rectangle2D) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseRO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:339483,interface,interfaces,339483,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"ate a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:5817,interface,interface,5817,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ate a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4615,interface,interface,4615,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"ate a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4122,interface,interface,4122,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,4,['interface'],['interface']
Integrability,"ate a new stains object, identical to this one but for one StainVector having been changed. changeTimestampProperty() - Method in class qupath.lib.display.ImageDisplay. Timestamp for the most recent change. CHANNEL_ALL_OBJECTS - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Channel name for the channel with all object counts (not always present). CHANNEL_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; ChannelColor - Class in qupath.lib.display.settings. A simple class to store the color of an image channel. ChannelColor() - Constructor for class qupath.lib.display.settings.ChannelColor;  ; ChannelDisplayInfo - Interface in qupath.lib.display. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo - Interface in qupath.lib.display. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode - Enum Class in qupath.lib.display. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer - Class in qupath.lib.gui.images.servers. ImageServer that applies a color transform to an image. channelMaximum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the minimum of an image channel, ignoring NaNs. channelMean(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the mean of an image channel, ignoring NaNs. channelMinimum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the minimum of an image channel, ignoring NaNs. channels(int...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. channels(int...) - Method in class qupath.lib.images.writers.TileExporter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:93509,interface,interface,93509,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1110133,wrap,wrapInPointerScope,1110133,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapInPointerScope']
Integrability,"ated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:8910,interface,interface,8910,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"ated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4156,message,message,4156,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ated.; since v0.4.0. isEditable() - Method in class qupath.lib.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the collection of recorded frames is empty. isEmpty() - Method in interface qupath.lib.measurements.MeasurementList. Returns true if the list does not contain any measurements. isEmpty() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Check if the hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib.objects.PathObjectConnections. Returns true if the group is empty. isEmpty() - Method in class qupath.lib.plugins.workflow.Workflow. Returns true if the workflow does not contain any steps. isEmpty() - Method in interface qupath.lib.projects.Project. Test if the project contains any images. isEmpty() - Method in class qupath.lib.regions.Padding. Returns true of the padding is zero. isEmpty() - Method in class qupath.lib.roi.EllipseROI;  ; isEmpty() - Method in class qupath.lib.roi.RectangleROI;  ; isEmpty() - Method in class qupath.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:620064,interface,interface,620064,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParamete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:4263,interface,interface,4263,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['interface'],['interface']
Integrability,"ath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; initializeModel(Model) - Method in class qupath.opencv.dnn.OpenCVDnn. Initialize the model with the same preprocessing defined here (i.e. input(String, long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape as a long array for a single input with a specified name. input(String, DnnShape) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single input with a specified name. INPUT_DISPLAY - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601812,message,message,601812,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath.lib.plugins.parameters, ; qupath.lib.plugins.workflow, ; qupath.lib.projects, ; qupath.lib.regions, ; qupath.lib.roi, ; qupath.lib.roi.interfaces, ; qupath.lib.scripting, ; qupath.lib.scripting.languages, ; qupath.opencv, ; qupath.opencv.dnn, ; qupath.opencv.features, ; qupath.opencv.io, ; qupath.opencv.ml, ; qupath.opencv.ml.objects, ; qupath.opencv.ml.objects.features, ; qupath.opencv.ml.pixel, ; qupath.opencv.ops, ; qupath.opencv.tools, ; qupath.process.gui, ; qupath.process.gui.commands, ; qupath.process.gui.commands.density, ; qupath.process.gui.commands.ml, ; qupath.process.gui.commands.ui, ; qupathj. Class Hierarchy. java.lang.Object. qupath.opencv.dnn.AbstractDnnModel<T> (implements qupath.opencv.dnn.DnnModel). qupath.opencv.dnn.OpenCVDnn (implements qupath.lib.io.UriResource). qupath.lib.gui.images.stores.AbstractImageRenderer (implements qupath.lib.gui.images.stores.ImageRenderer). qupath.lib.display.ImageDisplay. qupath.lib.images.servers.AbstractImageServer<T> (implements qupath.lib.images.servers.ImageServer<T>). qupath.lib.images.servers.AbstractTileableImageServer. qupath.lib.images.servers.bioformats.BioFormatsIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:2590,interface,interfaces,2590,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['interface'],['interfaces']
Integrability,"ath.lib.images.servers.ImageServer. Set the metadata to use, e.g. setMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.LabeledImageServer. Throws an exception - metadata should not be set for a hierarchy image server directly. setMinDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMinDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the min display value for this channel. setMinHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the min height property for the specified regions. setMinimumRepaintSpacingMillis(long) - Method in class qupath.lib.gui.viewer.QuPathViewer. Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. setMinMaxAllowed(float, float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMinMaxAllowed(float, float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the maximum permissible range for the image display. setMinMaxDisplay(ChannelDisplayInfo, float, float) - Method in class qupath.lib.display.ImageDisplay. Set the min/max display values for a specified ChannelDisplayInfo. setMinWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the min width property for the specified regions. setMissing(boolean) - Method in class qupath.lib.objects.TMACoreObject. Set the missing flag for this core, for example because insufficient tissue is present. setName(String) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the name of this ViewTracker. setName(String) - Method in class qupath.lib.objects.PathObject. Set the stored object name. setNumBins(int) - Method in class qupath.lib.gui.charts.HistogramDisplay. Set the number of bins for the histogram. setNumericParameterValue(String,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:936729,interface,interface,936729,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Constructor for class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideImageServer - Class in qupath.lib.ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728836,interface,interface,728836,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ath.lib.objects.PathObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathObjectConnections;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathROIObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.TMACoreObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; readFile(File) - Method in class qupath.lib.gui.scripting.ScriptTab. Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). readFileAsString(File) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file into a single String. readFileAsString(String) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file given by the specified path into a single String. readHierarchy() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. readHierarchy(File) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readHierarchy(InputStream) - Static method in class qupath.lib.io.PathIO. Read a PathObjectHierarchy from a saved data file (omitting all other contents). readHierarchy(Path) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the ImageData associated with this entry, or create a new ImageData if none is currently present. readImageData(File, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from a File into an existing ImageData object, or create a new one if required. readImageData(InputStream, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:823105,interface,interface,823105,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anyth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:3306,interface,interface,3306,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['interface'],['interface']
Integrability,"ath.lib.roi.interfaces.ROI. Returns a org.locationtech.jts.geom.Geometry object. getGeometry() - Method in class qupath.lib.roi.PolygonROI;  ; getGeometryFactory() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getGitHubIssuesUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:398994,interface,interface,398994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProperty(). getImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the image data currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:404379,interface,interface,404379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"athClasses associated with this project. getPathClasses() - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getPathClasses() - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getPathClassUnclassified() - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. getPathMemoization() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the path to the directory where memoization files should be written, or null if no path is set. getPathObject() - Method in class qupath.lib.objects.classes.Reclassifier. Get the stored PathObject for which the PathClass may be set. getPathObjects() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get all the objects associated with this subdivision. getPathObjects() - Method in class qupath.lib.io.FeatureCollection. Get the objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:481011,wrap,wrapped,481011,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapped']
Integrability,"athObject) - Static method in class qupath.lib.scripting.QP. Insert object into the hierarchy, resolving its location and setting parent/child relationships. insertPathObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Insert an object into the hierarchy. insertPathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Insert a collection of objects into the hierarchy, firing a change event on completion. insertPixelClassifiersAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPExImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHierarchy(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Insert the selected objects in the hierarchy, resolving positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:606534,interface,interface,606534,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"athObject.toString() method. createListCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a ListCell for displaying a PathObject using a custom method to create a string representation of the object. createListSelectionView() - Static method in class qupath.lib.gui.tools.GuiTools. Create a new ListSelectionView. createLoadDensityMapCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a density map and display it in all viewers. createLoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.Open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:194852,message,messages,194852,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"athPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:3499,interface,interface,3499,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['interface'],['interface']
Integrability,"atic variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 45 degree rotation. put90(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:800226,interface,interface,800226,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ation. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:3065,interface,interface,3065,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interface']
Integrability,"ats.survival. Helper classes for survival analysis. qupath.lib.awt.common. Static classes and methods to help work with Java AWT. qupath.lib.classifiers. Classes and interfaces to support machine learning classifiers. qupath.lib.classifiers.object. Classes for object classification in QuPath. qupath.lib.classifiers.pixel. Core support for pixel classification. qupath.lib.color. Classes to assist with color, including stain separation and color transforms. qupath.lib.common. General-purpose helper classes. qupath.lib.display. Classes to control the display of images in a QuPathViewer. qupath.lib.display.settings. Classes to support storing and retrieving image display settings. qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.mea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:2700,interface,interface,2700,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interface']
Integrability,"atures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getDeterminant; public Mat getDeterminant(); Description copied from interface: MultiscaleFeatures.Hessian; Get the deter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1620,interface,interface,1620,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,2,['interface'],['interface']
Integrability,"ault minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:445247,interface,interface,445247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"aultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:3446,interface,interface,3446,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,2,['interface'],['interface']
Integrability,"aunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each oth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:3378,interface,interface,3378,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,2,['interface'],['interface']
Integrability,"ava.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:3324,interface,interface,3324,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,2,['interface'],['interface']
Integrability,"ave any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Overrides:; getLocationString in class AbstractOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. getDefaultLocationString; public static String getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t); Default method for getting a location string from an ImageServer using cached tiles.; If tiles are not cached, no string is returned.; ; May be used",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:10495,interface,interface,10495,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['interface'],['interface']
Integrability,"ave the data from a table to a text file, using the default delimiter from PathPrefs. saveTMAMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save TMA measurements for the current image. saveTMAMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save TMA measurements for the specified image. scalarMat(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 single-channel Mat with a specific value. scalarMatWithType(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 Mat with a specific value, with 1 or more channels. scale - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian subtraction. scale(double) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. scale(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.AreaROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.EllipseROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.GeometryROI;  ; scale(double, double, double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.LineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PointsROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolygonROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolylineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.RectangleROI;  ; scaleAllObjects(double) - Static method in class qupath.lib.scripting.QP. Resize the ROIs of all obj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:884219,interface,interface,884219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"awn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:6428,interface,interface,6428,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['interface'],['interface']
Integrability,"awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7022,interface,interface,7022,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ay change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:7700,interface,interface,7700,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ay need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:6517,interface,interface,6517,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['interface'],['interface']
Integrability,"ayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2008,wrap,wrapper,2008,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['wrap'],['wrapper']
Integrability,"b.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:2821,interface,interface,2821,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['interface'],['interface']
Integrability,"b.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Get a list of URIs required by this builder. getURIs() - Method in class qupath.lib.images.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:543694,interface,interface,543694,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"b.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:386881,interface,interface,386881,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"b.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.BuildInfo. Get the version, or null if the version is unknown. getVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get the version of the current extension. getVersion() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the semantic version. getVersion() - Static method in class qupath.lib.gui.QuPathGUI. Get the current QuPath version. getVersion() - Method in interface qupath.lib.projects.Project. The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). getVersion() - Method in class qupath.process.gui.ProcessingExtension;  ; getVersionedDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation, specifically for this software version. getVersionedDocsUrl(String) - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). getView() - Method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:549920,interface,interface,549920,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"bar, optionally creating a new menu if it is not present. getMenu(List<Menu>, String, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a reference to an existing menu, optionally creating a new menu if it is not present. getMenuBar() - Method in class qupath.lib.gui.QuPathGUI. Get the menubar for the main QuPath application. getMenuItem() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the menu item corresponding to this command. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:440848,interface,interface,440848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9599,depend,depends,9599,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,4,['depend'],['depends']
Integrability,"be used for caching. void; setColorModel(ColorModel model). Set the color model to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModelRenderer; public ColorModelRenderer(ColorModel colorModel); Constructor. Parameters:; colorModel - . Method Details. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Description copied from interface: ImageRenderer; Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgData, e.g. RGB/non-RGB, same number of channels,; same bit-depth. Specified by:; applyTransforms in interface ImageRenderer; Parameters:; imgInput - input image; imgOutput - output image, with the same width and height as the input; ; if null or the image size is inconsistent, a new RGB image should be created; Returns:; imgOutput, or a new RGB image created for the output. setColorModel; public void setColorModel(ColorModel model); Set the color model to use. Parameters:; model - . getColorModel; public ColorModel getColorModel(); Get the ColorModel for this renderer (may be null). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html:2131,interface,interface,2131,javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ColorModelRenderer.html,1,['interface'],['interface']
Integrability,"because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2391,interface,interface,2391,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,14,['interface'],['interface']
Integrability,"bing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified Reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:2686,interface,interface,2686,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['interface'],['interface']
Integrability,"bject; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1457,message,message,1457,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"bject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2906,interface,interface,2906,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['interface'],['interface']
Integrability,"bjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:5280,interface,interface,5280,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['interface'],['interface']
Integrability,"bjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3610,interface,interface,3610,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,6,['interface'],['interface']
Integrability,"bjectLabels. Create standardized ListCell and TreeCell instances for displaying a PathObject, ; or a generic pane to use elsewhere. PathObjectLabels.PathObjectMiniPane. Manage a small pane that can be used to display a PathObject. PathObjectPainter. Static methods to assist with painting PathObjects. PathObjectPredicates. Classes to define JSON-serializable Predicates for PathObjects. PathObjectPredicates.PathObjectPredicate. A JSON-serializable Predicate for use with PathObjects. PathObjectReader. Interface for classes capable of reading PathObjects from some source. PathObjects. Helper class to create PathObject. PathObjectSelectionListener. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel. Model for handling selection of single and multiple PathObjects. PathObjectTools. A collection of static methods to help work with PathObjects. PathOverlay. Interface defining an overlay to paint on top of a viewer. PathPlugin<T>. Primary interface for defining a 'plugin' command. PathPrefs. Central storage of QuPath preferences. PathPrefs.AutoUpdateType. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize. Enum to control font size. PathPrefs.ImageTypeSetting. Enum defining how setting the image type should be handled for new images. PathROIObject. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject. The root object used at the base of a PathObjectHierarchy. PathTableData<T>. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:41006,interface,interface,41006,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"ble - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5703,interface,interface,5703,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ble name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. Version; getVersion(). Get the version of the current extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProcessingExtension; public ProcessingExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getVersion; public Version getVersion(); Description copied from interface: QuPathExtension; Get the version of the current extension. Specified by:; getVersion in interface QuPathExtension; Returns:; See Also:. GeneralTools.getPackageVersion(Class). getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html:2247,interface,interface,2247,javadoc/docs/qupath/process/gui/ProcessingExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/ProcessingExtension.html,2,['interface'],['interface']
Integrability,"ble(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3339,wrap,wrapTextProperty,3339,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['wrap'],['wrapTextProperty']
Integrability,"ble pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8351,interface,interface,8351,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"blic Project<BufferedImage> getProject(); Get the value of projectProperty(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the value of imageDataProperty(). Returns:. viewerProperty; public ReadOnlyObjectProperty<QuPathViewer> viewerProperty(); Property representing the viewer currently active. Returns:; See Also:. getViewer(). closeViewer; public boolean closeViewer(QuPathViewer viewer); Close the image within a viewer, prompting to save changes if necessary. Parameters:; viewer - ; Returns:; True if the viewer no longer contains an open image (either because it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:32199,depend,depends,32199,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"blic boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7135,interface,interface,7135,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"blic double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:6996,interface,interface,6996,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1886,depend,dependencies,1886,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['depend'],['dependencies']
Integrability,"boolean; isEmptyRegion(RegionRequest request). Test whether a region is empty, i.e. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. default T; readBufferedImage(RegionRequest request). Deprecated.; since v0.4.0. default T; readRegion(double downsample,; int x,; int y,; int width,; int height). Read a 2D(+C) image region from the default ImagePlane (i.e. default T; readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDowns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:4948,interface,interface,4948,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['interface'],['interface']
Integrability,"boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3569,interface,interface,3569,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,bottom right of the ROI bounding box. alignCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Center tiles within the ROI bounding box. alignCenterLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignCenterRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the center left of the ROI bounding box. alignment(Tiler.TileAlignment) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set the tile alignment. alignTopCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top center of the ROI bounding box. alignTopLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the top left of the ROI bounding box. alignTopRight() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the top right of the ROI bounding box. ALL - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. All log messages. ALL_WINDOWS - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Use the system menubar for all windows. ALLOW_MEMOIZATION_PROPERTY - Static variable in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be writ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:34998,message,messages,34998,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9696,interface,interface,9696,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"bstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:3017,interface,interface,3017,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['interface'],['interface']
Integrability,"by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images sup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:2662,interface,interface,2662,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,['interface'],['interface']
Integrability,by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in int,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7595,interface,interface,7595,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"c.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8846,interface,interface,8846,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"c.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11610,interface,interface,11610,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"cale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7345,interface,interface,7345,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"caledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8675,interface,interface,8675,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11123,interface,interface,11123,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9714,message,message,9714,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"cate; extends Predicate<PathObject>; A JSON-serializable Predicate for use with PathObjects. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; PathObjectPredicates.PathObjectPredicate; and(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through AND. default PathObjectPredicates.PathObjectPredicate; negate();  ; PathObjectPredicates.PathObjectPredicate; or(PathObjectPredicates.PathObjectPredicate p). Combine with another PathObjectPredicates.PathObjectPredicate through OR. Methods inherited from interface java.util.function.Predicate; and, or, test. Method Details. and; PathObjectPredicates.PathObjectPredicate and(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through AND.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. or; PathObjectPredicates.PathObjectPredicate or(PathObjectPredicates.PathObjectPredicate p); Combine with another PathObjectPredicates.PathObjectPredicate through OR.; ; This should be used in preference of the Predicate.and(Predicate) method ; to retain a PathObjectPredicates.PathObjectPredicate as a result.; ; Providing no default implementation also has the effect of meaning that a ; PathObjectPredicates.PathObjectPredicate no longer works as a FunctionalInterface, ; which would otherwise make it too easy to inadvertently create a general Predicate. Parameters:; p - ; Returns:. negate; default PathObjectPredicates.PathObjectPredicate negate(). Specified by:; negate in interface Predicate<PathObject>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html:2547,interface,interface,2547,javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectPredicates.PathObjectPredicate.html,1,['interface'],['interface']
Integrability,"cate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3806,interface,interface,3806,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,"cate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4521,interface,interface,4521,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"cation. PixelClassifierTools() - Constructor for class qupath.opencv.ml.pixel.PixelClassifierTools;  ; PixelClassifierTools.CreateObjectOptions - Enum Class in qupath.opencv.ml.pixel. Options when creating objects from a pixel classifier. PixelClassifierTraining - Class in qupath.process.gui.commands.ml. Helper class for training a pixel classifier. PixelClassifierTraining(ImageDataOp) - Constructor for class qupath.process.gui.commands.ml.PixelClassifierTraining. Create a new pixel classifier helper, to support generating training data. PixelClassifierTraining.ClassifierTrainingData - Class in qupath.process.gui.commands.ml. Wrapper for training data. PixelClassifierUI - Class in qupath.process.gui.commands.ml. Helper class for generating standardized UI components for pixel classification. PixelClassifierUI() - Constructor for class qupath.process.gui.commands.ml.PixelClassifierUI;  ; PixelImageIJ - Class in qupath.imagej.tools. Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. PixelImageIJ(ImageProcessor) - Constructor for class qupath.imagej.tools.PixelImageIJ. Constructor. PixelProcessor<S,T,U> - Class in qupath.lib.experimental.pixels. A class for tiled image processing. PixelProcessor.Builder<S,T,U> - Class in qupath.lib.experimental.pixels. Builder class for a PixelProcessor. PixelProcessorUtils - Class in qupath.lib.experimental.pixels. Utility functions to help with the PixelProcessor class. PixelProcessorUtils() - Constructor for class qupath.lib.experimental.pixels.PixelProcessorUtils;  ; pixelSize(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the requested pixel size to use with requesting image regions. pixelSize(double, double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). pixelSize(PixelCalibration) - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:766187,wrap,wrapper,766187,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"cationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(MouseEvent e); Query whether parent clipping should be applied.; ; This might depend upon the MouseEvent. Parameters:; e - ; Returns:. refineROIByParent; protected ROI refineROIByParent(ROI currentROI); Apply clipping based on the current parent object.; ; Returns an empty ROI if this result of the clipping is an empty area. Parameters:; currentROI - ; Returns:. refineGeometryByParent; protected Geometry refineGeometryByParent(Geometry geometry). updatingConstrainingObjects; protected void updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions); New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation.; ; This method requests that the constraining objects are identified now based upon the specified mouse position.; It is useful when starting to draw with a tool that makes use of constraining objects. Parameters:; viewer - the viewer that may contain potential constraining objects; xx - x-coordinate in the image space of the starting point for the new object; yy - y-coordinate in the image space of the starting point for the new object; exclusions - objects not to consider (e.g. the new ROI being created). resetConstrainingObjects; protected void resetConstrainingObjects(); Reset the constraining objects.; These should be done as soon as they are no longer required, to prevent a memory leak by inadvertently; holding on to an object hierarchy too long. getCurrentParent; protected PathObject getCurrentParent(). mouseClicked; public void mouseClicked(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseExited; public void mouseExited(MouseEvent e). handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html:5404,interface,interface,5404,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,1,['interface'],['interface']
Integrability,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:12172,interface,interface,12172,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,27,['interface'],['interface']
Integrability,"ce on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singlet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:4825,interface,interface,4825,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['interface'],['interface']
Integrability,"ce, or the image is RGB. Returns:. isMutable; public boolean isMutable(); Description copied from interface: SingleChannelDisplayInfo; Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9235,interface,interface,9235,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"cements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt to update a URI to find an existing file using the specified search paths. UriUpdater<T>; makeReplacement(URI originalItem,; URI updatedItem). Add a single replacement to the replacement map. UriUpdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3246,wrap,wrap,3246,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['wrap'],['wrap']
Integrability,"ception as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8106,interface,interface,8106,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"cess.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object. createViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). createViewerAction(Consumer<QuPathViewer>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an QuPathViewer. createWindow(QuPathGUI) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createWorkflowDisplayDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog to show the workflow history for the current image data. createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries>) - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriter. Create a writer capable of writing an image with a collection of series. createWriter(OMEPyramidWriter.OMEPyramidSeries...) - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriter. Create a writer capable of writing an image with one or more series. createZoomCommand(QuPathGUI, int) - Static method in class qupath.lib.gui.commands.Commands. Create a zoom in/out command action. crop(BufferedImage, int, int, int, int) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a crop of the image using the specified bounding box. crop(Mat,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:235558,depend,depends,235558,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['depends']
Integrability,"cessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4074,interface,interface,4074,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"ce ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public Observa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4890,wrap,wrap,4890,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,2,['wrap'],['wrap']
Integrability,"ce qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal sc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4589,interface,interface,4589,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. recordingProperty; public BooleanProperty recordingProperty(); Return the recording property of this ViewTracker. Returns:; recording property; See Also:. isRecording(); setRecording(boolean). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. getFile; public File getFile(); Return the file associated with this ViewTracker. This can return ; null if it is not loc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:8878,interface,interface,8878,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"cified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a diffe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6984,interface,interface,6984,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"cified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6724,interface,interface,6724,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"cified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9186,interface,interface,9186,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"cified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:7253,interface,interface,7253,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"cified image. scalarMat(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 single-channel Mat with a specific value. scalarMatWithType(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 Mat with a specific value, with 1 or more channels. scale - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian subtraction. scale(double) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. scale(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.AreaROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.EllipseROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.GeometryROI;  ; scale(double, double, double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.LineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PointsROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolygonROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolylineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.RectangleROI;  ; scaleAllObjects(double) - Static method in class qupath.lib.scripting.QP. Resize the ROIs of all objects in the current object hierarchy. scaleAllObjects(PathObjectHierarchy, double) - Static method in class qupath.lib.scripting.QP. Resize the ROIs of all objects in the specified object hierarchy. scalebarFontSize - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scalebarFontSizeProperty() - Static method in class qupath.lib.gui.prefs.Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:884603,interface,interface,884603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"cify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the highest-resolution image (usually 1.0); scale - the scale used to define successive downsamples; Returns:; this builder; See Also:. scaledDownsampling(double). channels; public OMEPyramidWriter.Builder channels(int... channels); Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. Parameters:; channels - zero-based channel indices for all channels that should be exported, in the desired export order.; Returns:; this builder. build; public OMEPyramidWriter.OMEPyramidSeries build(); Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. Returns:; the series. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10985,depend,depend,10985,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,2,['depend'],['depend']
Integrability,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tools; Class CommandFinderTools. java.lang.Object; qupath.lib.gui.tools.CommandFinderTools. public class CommandFinderTools; extends Object; Helper tools for creating components that enable fast access to menu commands via a filtered list. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay. Property specifying where the command bar should be displayed relative to the main viewer window. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. static class ; CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. Constructor Summary; Constructors. Constructor; Description; CommandFinderTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:1098,wrap,wrap,1098,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,1,['wrap'],['wrap']
Integrability,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class FeatureCollection. java.lang.Object; qupath.lib.io.FeatureCollection. public class FeatureCollection; extends Object; Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1089,wrap,wrap,1089,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['wrap'],['wrap']
Integrability,"cked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathROIObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:3207,interface,interface,3207,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,2,['interface'],['interface']
Integrability,"class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:727805,interface,interface,727805,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"class qupath.lib.analysis.stats.RunningStatistics. Get the mean of all non-NaN values that were added. getMean() - Method in class qupath.opencv.dnn.OpenCVDnn. Get means which should be subtracted for preprocessing. getMeanFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute averaged features over all four rotations. getMeanValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the mean of all the values being histogrammed. getMeasurementList() - Method in class qupath.lib.objects.PathObject. Retrieve the list stored measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:437241,interface,interface,437241,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 45 degree rotation. put90(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:800054,interface,interface,800054,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. content(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog. contentText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:138672,interface,interface,138672,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"class qupath.lib.roi.RectangleROI;  ; updatePlaneRecursive(PathObject, ImagePlane) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object and any descendant objects, creating new object IDs and ignoring ; any additional measurements. updatePlaneRecursive(PathObject, ImagePlane, boolean, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriR",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1066196,interface,interface,1066196,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"class qupath.opencv.ml.PatchClassifierParams.Builder. Define a halo using a padding object. handle(DragEvent) - Method in class qupath.lib.gui.viewer.DragDropImportListener;  ; handle(MouseEvent) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; handleBackspace(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel proce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:565455,interface,interface,565455,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:8344,interface,interface,8344,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wrapper only supports integer values. isInteractive() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Returns the va",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623807,interface,interface,623807,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"control, so it may be added to a scene. IndexRange; getSelection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2834,wrap,wrapTextProperty,2834,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['wrap'],['wrapTextProperty']
Integrability,"coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5540,interface,interface,5540,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"cope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupath.opencv.ml.OpenCVClassifiers. Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. wrapTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; wrapTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request wordwrap. wrapTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; write(JsonWriter, ColorTransforms.ColorTransform) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; write(JsonWriter, T) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; writeClassifier(ObjectClassifier<T>, Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Write the classifier to a file. writeClassifier(PixelClassifier, Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Write a pixel classifier to a file. writeDensityMapImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a density map to the current image image. writeDensityMapImage(ImageData<BufferedImage>, DensityMap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1111126,wrap,wrapTextProperty,1111126,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapTextProperty']
Integrability,"copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10220,interface,interface,10220,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7437,interface,interface,7437,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:7388,interface,interface,7388,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9802,interface,interface,9802,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2486,message,message,2486,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5248,message,message,5248,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3712,message,message,3712,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"cripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors - package qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages - package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx - package qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers - package qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax - package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma - package qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools - package qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer - package qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays - package qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording - package qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools - package qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers - package qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images - package qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers - package qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats - package qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:811706,interface,interface,811706,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"cription copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:5979,interface,interface,5979,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"cription copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8322,interface,interface,8322,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"cription copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5993,interface,interface,5993,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"cription copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:12090,interface,interface,12090,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,3,['interface'],['interface']
Integrability,"cription copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10307,interface,interface,10307,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"cription copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7578,interface,interface,7578,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclass",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:4246,interface,interface,4246,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ct, Collection<PathObject>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in interface qupath.lib.objects.hierarchy.events.PathObjectSelectionListener. Fired when the selected objects have changed. selectedProperty() - Method in class qupath.lib.gui.SelectableItem. Property representing the item that has been selected (which may or may not be the same as SelectableItem.getItem()). selectedStyleProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current selected style. selectedTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; selectedTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently selected in the editor control. selectedTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; selectedTool() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; selectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property containing the currently-selected PathTool. SELECTION_MODE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SELECTION_MODE - Variable in class qupath.lib.gui.ToolManager;  ; selectionModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Convert drawing tools to select objects, rather than creating new objects. selectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are selected. selectObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:897514,interface,interface,897514,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ct; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4612,interface,interface,4612,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ctImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RearrangeRGBImageServe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:47391,interface,interface,47391,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"cted AbstractOverlay.LocationStringFunction; getLocationStringFunction();  ; double; getOpacity(). Get opacity, between 0 (completely transparent) and 1 (completely opaque). OverlayOptions; getOverlayOptions(). Get the overlay options, which may influence the display of this overlay. Color; getPreferredOverlayColor(). Return the preferred overlay color. boolean; isVisible(). Check overlay visibility status. protected void; setAlphaComposite(Graphics2D g2d);  ; void; setLocationStringFunction(AbstractOverlay.LocationStringFunction fun). Set a custom function to calculate a location string for the overlay. void; setOpacity(double opacity). Set opacity between 0 (completely transparent) and 1 (completely opaque). void; setPreferredOverlayColor(Color color). Set a preferred overlay color, which the overlay may or may not make use of. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.overlays.PathOverlay; paintOverlay. Constructor Details. AbstractOverlay; protected AbstractOverlay(OverlayOptions options). Method Details. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options, which may influence the display of this overlay. Returns:. getAlphaComposite; protected AlphaComposite getAlphaComposite(). setAlphaComposite; protected void setAlphaComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image, ; or a dark color on a light image. Parameters:; color - . getPreferredOverlayColor; public Color getPreferredOverlayColor(); Return the pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:2452,interface,interface,2452,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,1,['interface'],['interface']
Integrability,"cted) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4013,interface,interface,4013,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ctive viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:5029,interface,interface,5029,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['interface'],['interface']
Integrability,"ctor that takes a parameter map for display. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Constructor Details. DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; Map<String,?> parameterMap,; String script); Constructor that takes a parameter map for display.; ; The parameter map isn't embedded in the script by default - this script that is passed should be complete. Parameters:; name - ; parameterMap - ; script - . DefaultScriptableWorkflowStep; public DefaultScriptableWorkflowStep(String name,; String script); Create a workflow step using a provided script string that will be called as-is. Parameters:; name - ; script - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html:2302,interface,interface,2302,javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/DefaultScriptableWorkflowStep.html,12,['interface'],['interface']
Integrability,"cts,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that anal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3147,interface,interface,3147,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"cts.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if changes are still being made, so more events will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double) - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. isCompatible(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Test if this completion is compatible with the provided text. isCompatible(ImageDisplay) - Method in class qupath.lib.display.ImageDisplay. Check if an image display is 'compatible' with this one. isCompatibleMetadata(ImageServerMetadata) - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). isComplete() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setComplete() has been called. isCudaAvailable() - Static method in class qupath.opencv.dnn.DnnTools. Query whether CUDA is reported as available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:617076,interface,interface,617076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"culate the angle between two stain vectors, in degrees. computeArgMaxHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeConsoleStyles(String, boolean) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the console. computeCoordinateDistance(Coordinate, Collection<Coordinate>) - Static method in class qupath.lib.analysis.DistanceTools. Compute the shortest distance from a coordinate to one of a collection of target coordinates. computeCoordinateDistance(Coordinate, STRtree) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance to the nearest coordinate stored within an STRtree. computeDistance(Coordinate, Geometry, PointOnGeometryLocator) - Static method in class qupath.lib.analysis.DistanceTools. Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. computeDistance(Coordinate, Geometry, PointOnGeometryLocator, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the shortest distance from a coordinate to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:130716,interface,interface,130716,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEdi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8600,interface,interface,8600,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"cv.dnn.OpenCVDnn. Get means which should be subtracted for preprocessing. getMeanFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute averaged features over all four rotations. getMeanValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the mean of all the values being histogrammed. getMeasurementList() - Method in class qupath.lib.objects.PathObject. Retrieve the list stored measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. getMeasurementValue(PathObject, String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:437366,interface,interface,437366,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"c ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10533,interface,interface,10533,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"c InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4816,message,message,4816,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"c ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new pl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6256,interface,interface,6256,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"c double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:4911,interface,interface,4911,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"c double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default impleme",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5592,interface,interface,5592,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"d PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101063,depend,depending,101063,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"d assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Divide all pixels by a constant. dnn(DnnModel, int, int, Padding, String...) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a DnnModel to pixels to generate a prediction. DnnModel - Interface in qupath.opencv.dnn. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder - Interface in qupath.opencv.dnn. Builder to create a DnnModel from DnnModelParams. DnnModelParams - Class in qupath.opencv.dnn. Parameters to build a DnnModel. DnnModelParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:265723,interface,interface,265723,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:7830,interface,interface,7830,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"d by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9317,interface,interface,9317,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"d by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4996,interface,interface,4996,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"d class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:103357,depend,depending,103357,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"d for QuPath. H. H_DAB - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and DAB. H_E - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and eosin. halo(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define a halo that is symmetric in x and y. halo(Padding) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define a halo using a padding object. handle(DragEvent) - Method in class qupath.lib.gui.viewer.DragDropImportListener;  ; handle(MouseEvent) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; handleBackspace(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:565037,interface,interface,565037,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; Un",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9033,interface,interface,9033,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"d from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8807,interface,interface,8807,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"d in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. getServer() - Method in class qupath.lib.images.ImageData. Get the ImageServer. getServer(ImageRegion, double) - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Request the server for a specific downsample. getServerBounds() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an ImageRegion representing the full width and height of the current image. getServerBuilder() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a ImageServerBuilder.ServerBuilder that can be used to open this image. getServerBuilderFactory() - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory to handle ServerBuilders. getServerHeight() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. getServerPath() - Method in class qupath.lib.images.ImageData. Get the path of the ImageServer. getServerType() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getServerType() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.RenderedImageServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:511232,interface,interface,511232,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:404081,interface,interface,404081,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d in interface qupath.lib.projects.ProjectImageEntry. Get the original image name, without any randomization. getOriginalMetadata() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getOriginalMetadata() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getOriginalMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get the original metadata read during creation of the server. getOriginalMetadata() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getOutputChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. List representing the names & display colors for each output channel,; or for the output classifications if outputType == OutputType.Classification. getOutputChannelType() - Method in class qupath.opencv.ml.PatchClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:465776,interface,interface,465776,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d measurements for the object. getMeasurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getMeasurementName(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using names is preferred over indexing but MeasurementList.getMeasurementNames() can still be used. getMeasurementNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getMeasurementNames() - Method in interface qupath.lib.gui.measure.PathTableData. Get the names of all numeric measurements. getMeasurementNames() - Method in interface qupath.lib.measurements.MeasurementList. Get the names of all measurements currently in the list. getMeasurementNames() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the names of all measurements that may be returned. getMeasurements() - Method in class qupath.lib.objects.PathObject. Get a map-based view on PathObject.getMeasurementList(). getMeasurementValue(int) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; using MeasurementList.get(String) is preferred over using an index. getMeasurementValue(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; use MeasurementList.get(String) instead. getMeasurementValue(PathObject, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. getMeasurementValue(PathObject, String, boolean) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Deprecated.; use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. getMeasurementValue(ROI, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get the value of a single measu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:437793,interface,interface,437793,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. recordingProperty; public BooleanProperty recordingProperty(); Return the recording property of this ViewTracker. Returns:; recording property; See Also:. isRecording(); setRecording(boolean). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. getFile; public File getFile(); Return the file associated with this ViewTracker. This can return ; null if it is not local or if the recording cannot be saved. Returns:; file. setFile; public void setFile(File file); Set the file for this ViewTracker. Parameters:; file - . getName; public String getName(); Return the name of this ViewTracker. Returns:; name. setName; public void setName(String name); Set the name of this ViewTracker. Parameters:; name - . nameProperty; public StringProperty nameProperty(); Return the String property of this ViewTracker. Returns:; nameProperty; See Also:. getName(); setName(String). getStartTime; public long getStartTime(); Return the time associated with the first recorded frame. Returns:; start time. getLastTime; public long getLastTime(); Return the time associated with the last recorded frame. Returns:; last time. hasZAndT; public boo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:9551,interface,interface,9551,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"d per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). structureTensorEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the eigenvalues of the structure tensor (not yet implemented!). SubcellularDetection - Class in qupath.imagej.detect.cells. Experimental plugin to help with the quantification of subcellular structures. SubcellularDetection() - Constructor for class qupath.imagej.detect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in class qupath.lib.regions.Padding. Add another padding from this one. subtract(ROI, Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Subtract a collection of ROIs from another ROI. subtrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1000968,interface,interface,1000968,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"d regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8598,interface,interface,8598,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"d timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDownsamples; double[] getPreferredDownsamples(); Get an array of downsample factors supported by the server. Returns:. nResolutions; int nResolutions(); Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Returns:. getDownsampleForResolution; double getDownsampleForResolution(int level); Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int getHeight(); Height of the full-resolution image in pixels. Returns:. nChannels; int nChannels(); Number of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:5759,depend,depend,5759,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['depend'],['depend']
Integrability,"d, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maximum slider. See Also:. maxValueProperty(). minValue; public DoubleProperty minValueProperty; Value of the minimum slider. See Also:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:12854,interface,interface,12854,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['interface'],['interface']
Integrability,"d. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10904,interface,interface,10904,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"d. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class AreaROI. java.lang.Object; qupath.lib.roi.AreaROI. All Implemented Interfaces:; Serializable, ROI. public class AreaROI; extends Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top le",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:1203,depend,dependency,1203,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['depend'],['dependency']
Integrability,"d. getMenuPath() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get a String representation of the menu containing this command. getMessageType() - Method in class qupath.lib.gui.actions.InfoMessage. Type of the message. getMetadata() - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Get metadata that describes how the classifier should be called, and the kind of output it provides. getMetadata() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getMetadata() - Method in interface qupath.lib.images.servers.ImageServer. Get essential metadata associated with the ImageServer as a distinct object. getMetadata() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; getMetadata() - Method in class qupath.lib.objects.PathDetectionObject. Get a map of metadata values. getMetadata() - Method in class qupath.lib.objects.PathObject. Get a key/value pair map for object metadata. getMetadataKeys() - Method in interface qupath.lib.objects.MetadataStore. Get all metadata keys. getMetadataKeys() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataKeys() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable collection of the metadata map's keys. getMetadataMap() - Method in interface qupath.lib.objects.MetadataStore. Returns an unmodifiable map containing the metadata. getMetadataMap() - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataMap() - Method in interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.Metadat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:441318,interface,interface,441318,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"dImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Specified by:; getTileRequestManager in interface ImageServer<T>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:12068,interface,interface,12068,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,3,['interface'],['interface']
Integrability,"dImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. TiffWriterIJ; public TiffWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:3023,interface,interface,3023,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,1,['interface'],['interface']
Integrability,dLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (QuPath 0.5.0); ConvexHull (QuPath 0.5.0); DefaultROIComparator (QuPath 0.5.0); EllipseROI (QuPath 0.5.0); GeometryROI (QuPath 0.5.0); GeometryTools.GeometryConverter.Builder (QuPath 0.5.0); GeometryTools.GeometryConverter (QuPath 0.5.0); GeometryTools (QuPath 0.5.0); LineROI (QuPath 0.5.0); qupath.lib.roi (QuPath 0.5.0); qupath.lib.roi Class Hierarchy (QuPath 0.5.0); PointsROI (QuPath 0.5.0); PolygonROI (QuPath 0.5.0); PolylineROI (QuPath 0.5.0); RectangleROI (QuPath 0.5.0); RoiEditor (QuPath 0.5.0); ROIs (QuPath 0.5.0); RoiTools.CombineOp (QuPath 0.5.0); RoiTools (QuPath 0.5.0); ShapeSimplifier (QuPath 0.5.0). /scripting; . /languages; ; AutoCompletions.Completion (QuPath 0.5.0); AutoCompletions.CompletionTokenizer (QuPath 0.5.0); AutoCompletions (QuPath 0.5.0); ExecutableLanguage (QuPath 0.5.0); qupath.lib.scripting.languages,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:30491,interface,interfaces,30491,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['interface'],['interfaces']
Integrability,"dServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:2235,interface,interface,2235,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,['interface'],['interface']
Integrability,"dText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:5152,interface,interface,5152,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"dX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an Unsupp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6696,interface,interface,6696,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"dY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6885,interface,interface,6885,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"dden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; publi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4102,interface,interface,4102,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,4,['interface'],['interface']
Integrability,"de - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9957,interface,interface,9957,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"deProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHullsProperty(). Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessageProperty(). Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptionsProperty(). Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadgesProperty(). Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCoresProperty(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static Boole",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:21387,message,message,21387,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['message'],['message']
Integrability,"ded by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Thro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4813,interface,interface,4813,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ded, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:4561,depend,depending,4561,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,4,['depend'],['depending']
Integrability,"defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:4404,interface,interfaces,4404,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interfaces']
Integrability,"defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pix",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6473,interface,interface,6473,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8059,interface,interface,8059,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"der. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:5980,interface,interface,5980,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"derClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into quartiles. getQuPath() - Method in class qupath.lib.gui.actions.CommonActions. Get the QuPath instance associated with these actions. getQuPath() - Static method in class qupath.lib.gui.scripting.QPEx. Get the current QuPath instance. getQuPathVersion() - Method in class qupath.imagej.gui.IJExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.lib.extension.svg.SvgExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get a QuPath version for which this extension was written. getQuPathVersion() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getQuPathVersion() - Method in class qupath.process.gui.ProcessingExtension. Returns the version stored within this jar, because it is matched to the QuPath version. getRadius() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the radius for the density map, in calibrated units. getRange() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the range, i.e. getReaderOptions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:495265,interface,interface,495265,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4588,interface,interface,4588,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"dicating whether it should be editable or not. isMac() - Static method in class qupath.lib.common.GeneralTools. Return true if running on macOS. isMemorySufficient(RegionRequest, ImageData<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. isMissing() - Method in class qupath.lib.objects.TMACoreObject. Query the 'missing' flag for this core. isModified() - Method in class qupath.lib.gui.scripting.ScriptTab. Return. isModifiedProperty() - Method in class qupath.lib.gui.scripting.ScriptTab. Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. isMultipartExtension(String) - Static method in class qupath.lib.common.GeneralTools. Returns true for file extensions containing multiple parts (or 'dots'). isMutable() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isMutable() - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. isNegativeClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Negative"". isNotRGB() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if we can say with reasonable confidence that the image is not RGB. isNullClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. isNumericMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a numeric value only. isObjectClassificationEvent() - Method in class qupath.lib.objects.hie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:627307,interface,interface,627307,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"dinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:3985,interface,interface,3985,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,4,['interface'],['interface']
Integrability,"ding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:6794,interface,interface,6794,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:6646,interface,interface,6646,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"dler; public static OutputHandler<ImagePlus,ImagePlus,Object> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createDetectionConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createObjectConverter; public static OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,Object> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter that attempts to convert a range of; output types into objects.; ; The behavior depends upon whatever the Processor return.; For example, the converter is able to generate one or more objects from; ; an ImageJ Roi, or list or array of Roi objects; an ImageJ Overlay; a BinaryProcessor (creating a single object); a ByteProcessor or ShortProcessor (treated as a labeled image, to create 0 or more objects); another ImageProcessor with a threshold set (handled similar to a binary image); an ImagePlus, after extracting the ImageProcessor. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <U>; OutputHandler.OutputToObjectConverter<ImagePlus,ImagePlus,U> createObjectConverter(Class<U> cls,; Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter for one specify type.; See #createObjectConverter(Function) for more details; this method reduces ambiguity by handling only one; possible kind of output. Type Parameters:; U - ; Parameters:; cls - the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html:4214,depend,depends,4214,javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/ImageJProcessor.html,1,['depend'],['depends']
Integrability,"double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7673,interface,interface,7673,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ds being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:5910,interface,interface,5910,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ds being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHei",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6630,interface,interface,6630,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5721,interface,interface,5721,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ds supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static interface ; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. float; getMaxAllowed(). Get the max allowed display value. float; getMaxDisplay(). Get the max display value. default ColorTransformer.ColorTransformMethod; getMethod(). Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. float; getMinAllowed(). Get the min allowed display value. float; getMinDisplay(). Get the min display value. String; getName(). Get the channel name. int[]; getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Get the RGB values that would be used to display all the pixels of an image. int; getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode). G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:3914,interface,interface,3914,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['interface'],['interface']
Integrability,"ds. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:2397,message,messages,2397,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['message'],['messages']
Integrability,"d void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4275,interface,interface,4275,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['interface'],['interface']
Integrability,"d void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4255,interface,interface,4255,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,5,['interface'],['interface']
Integrability,"d | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ops; Interface ImageDataOp. All Superinterfaces:; UriResource. public interface ImageDataOp; extends UriResource; Request pixels from an image, potentially applying further transforms. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1258,interface,interface,1258,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html,2,['interface'],['interface']
Integrability,"e - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4183,interface,interface,4183,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"e Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9224,interface,interface,9224,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"e Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8998,interface,interface,8998,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"e a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu. AutomateMenuActions;  ; AwtTools. A collection of static methods useful when working with AWT shapes and ImageRegions. BioFormatsImageServer. QuPath ImageServer that uses the Bio-Formats library to read image data. BioFormatsOptionsExtension. A QuPath extension that adds options relating to the BioFormatsImageServer to the main QuPath preference pane. BioFormatsOptionsExtension.BioFormatsPreferences;  ; BioFormatsOptionsExtension.OmeTiffWriterAction;  ; BioFormatsServerBuilder. Builder for ImageServers that make use of the Bio-Formats library. BioFormatsServerOptions. Container for various options that can customize the behavio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:2943,wrap,wrapper,2943,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrapper']
Integrability,"e a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3901,interface,interface,3901,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,"e a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4616,interface,interface,4616,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"e and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19819,message,message,19819,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['message'],['message']
Integrability,"e any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:5421,interface,interface,5421,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"e caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:4638,interface,interface,4638,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['interface'],['interface']
Integrability,"e display settings. qupath.lib.experimental.pixels - package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images. qupath.lib.extension.svg - package qupath.lib.extension.svg. Write SVG images from QuPath using JFreeSVG (http://www.jfree.org/jfreesvg/). qupath.lib.geom - package qupath.lib.geom. Simple, immutable classes to represent points and dimensions. qupath.lib.gui - package qupath.lib.gui. The main QuPath user interface. qupath.lib.gui.actions - package qupath.lib.gui.actions. Classes to manage Actions. qupath.lib.gui.actions.annotations - package qupath.lib.gui.actions.annotations. Annotations that can be used to configure actions. qupath.lib.gui.actions.menus - package qupath.lib.gui.actions.menus. Classes to store actions that correspond to QuPath's main menus. qupath.lib.gui.charts - package qupath.lib.gui.charts. Classes for plotting and charting. qupath.lib.gui.commands - package qupath.lib.gui.commands. Commands shown within the main QuPath interface. qupath.lib.gui.commands.display - package qupath.lib.gui.commands.display. Extra package to organize the classes related to the Brightness/Contrast command. qupath.lib.gui.commands.objects - package qupath.lib.gui.commands.objects;  ; qupath.lib.gui.dialogs - package qupath.lib.gui.dialogs. Helper classes for creating dialogs, prompts and filt choosers within QuPath. qupath.lib.gui.extensions - package qupath.lib.gui.extensions. Interface to define QuPath extensions. qupath.lib.gui.images.servers - package qupath.lib.gui.images.servers. Custom ImageServers that depend upon the QuPath interface and image display settings. qupath.lib.gui.images.stores - package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. qupath.lib.gui.localization - package qupath.lib.gui.localization;  ; qupath.lib.gui.logging - package qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure - package qupath.lib.gui.measure. Classes related",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:809412,interface,interface,809412,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e hierarchy is empty (i.e. isEmpty() - Method in class qupath.lib.objects.PathObjectConnections. Returns true if the group is empty. isEmpty() - Method in class qupath.lib.plugins.workflow.Workflow. Returns true if the workflow does not contain any steps. isEmpty() - Method in interface qupath.lib.projects.Project. Test if the project contains any images. isEmpty() - Method in class qupath.lib.regions.Padding. Returns true of the padding is zero. isEmpty() - Method in class qupath.lib.roi.EllipseROI;  ; isEmpty() - Method in class qupath.lib.roi.RectangleROI;  ; isEmpty() - Method in class qupath.lib.roi.AreaROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.GeometryROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolygonROI. True if the bounding box has zero area. isEmpty() - Method in class qupath.lib.roi.PolylineROI. True if the bounding box has zero area. isEmpty() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if the ROI bounds have zero width and height. isEmpty() - Method in class qupath.lib.roi.LineROI;  ; isEmpty() - Method in class qupath.lib.roi.PointsROI. A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... isEmptyRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Returns true if there are no objects to be painted within the requested region. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractImageServer. Always returns false. isEmptyRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Test whether a region is empty, i.e. isEmptyRegion(RegionRequest) - Method in class qupath.lib.images.servers.LabeledImageServer. Returns true if there are no objects to be painted within the requested region. isEosin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is """,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:620781,interface,interfaces,620781,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"e if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9412,interface,interface,9412,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"e if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - Method in interface qupath.lib.images.PathImage. Get the pixel data (image). getImage(Parameters<S, ?>) - Method in interface qupath.lib.experimental.pixels.ImageSupplier. Get the image to process. getImageClass() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getImageClass() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getImageClass() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getImageClass() - Method in interface qupath.lib.images.servers.ImageServer. Get the class of the image representation returned by this ImageServer. getImageClass() - Method in class qupath.lib.images.writers.JpegWriter;  ; getImageClass() - Method in class qupath.lib.images.writers.PngWriter;  ; getImageClass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:403622,interface,interface,403622,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. See Also:. autoBrightnessContrastSaturationPercentProperty(). keepDisplaySettings; public static BooleanProperty keepDisplaySettingsProperty; Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). See Also:. keepDisplaySettingsProperty(). doubleClickToZoom; public static BooleanProperty doubleClickToZoomPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:31335,depend,depends,31335,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"e line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144434,depend,depends,144434,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depends']
Integrability,"e marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672923,interface,interface,672923,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multicha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:259691,interface,interface,259691,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e objects being wrapped. getPathObjects() - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjects() - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get an unmodifiable collection containing all the PathObjects contained within this group. getPathObjects() - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getPathObjectsForRegion(ImageRegion) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getPathObjectsForRegion(ImageRegion) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the objects with connections that may intersect the specified region. getPenManager() - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Get the current PenInputManager. getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:482004,interface,interface,482004,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e of ImageDisplay.useInvertedBackgroundProperty(). displayModeProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how the histogram is displayed, either using areas or bars. DisplaySettingUtils - Class in qupath.lib.display.settings. Utility class for working with image display and image display settings objects. DisplaySettingUtils() - Constructor for class qupath.lib.display.settings.DisplaySettingUtils;  ; displayToSettings(ImageDisplay, String) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Create a new image display settings object from the image display. dispose() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Dispose the OpenSlide object; this is equivalent to OpenSlide.close(). distance(double, double) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and a specified x and y location. distance(Point) - Method in class qupath.lib.geom.Point2;  ; distance(Point) - Method in interface qupath.lib.geom.Point. Calculate the distance to another point, with the same Point.dim(). distance(Point2) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and another point. DISTANCE_CENTROIDS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; distanceSq(double, double) - Method in class qupath.lib.geom.Point2. Calculate the squared distance between this point and a specified x and y location. distanceSq(Point) - Method in class qupath.lib.geom.Point2;  ; distanceSq(Point) - Method in interface qupath.lib.geom.Point. Calculate the squared distance to another point, with the same Point.dim(). distanceSq(OpenCVTools.IndexedPixel) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dime",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:263803,interface,interface,263803,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the curr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1551,message,message,1551,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['message'],['message']
Integrability,"e qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.BuildInfo. Get the version, or null if the version is unknown. getVersion() - Method in interface qupath.lib.gui.extensions.QuPathExtension. Get the version of the current extension. getVersion() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the semantic version. getVersion() - Static method in class qupath.lib.gui.QuPathGUI. Get the current QuPath version. getVersion() - Method in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:549292,interface,interface,549292,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools - package qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui - package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. QuPathApp - Class in qupath.lib.gui. Launcher application to start QuPath. QuPathApp() - Constructor for class qupath.lib.gui.QuPathApp;  ; QuPathExtension - Interface in qupath.lib.gui.extensions. Simple interface for QuPath extensions. QuPathGUI - Class in qupath.lib.gui. Main GUI for QuPath, written using JavaFX. qupathj - package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. QuPathPenManager - Class in qupath.lib.gui.viewer.tools. Helper class for managing pressure-sensitive input. QuPathPenManager() - Constructor for class qupath.lib.gui.viewer.tools.QuPathPenManager;  ; QuPathPenManager.PenInputManager - Interface in qupath.lib.gui.viewer.tools. Interface defining minimal behavior for a pen input device. QuPathResources - Class in qupath.lib.gui.localization. Load strings from the default resource bundle. QuPathResources() - Constructor for class qupath.lib.gui.localization.QuPathResources;  ; QuPathStyleManager - Class in qupath.lib.gui.prefs. Class to facilitate the use of different styles within QuPath. QuPathStyleManager() - Constructor for class qupath.lib.gui.prefs.QuPathStyleManager;  ; QuPathStyleManager.Fonts - Enum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:817088,interface,interface,817088,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaled",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:7217,interface,interface,7217,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"e rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends be",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3147,interface,interface,3147,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['interface'],['interface']
Integrability,"e specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9848,interface,interface,9848,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,e upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServer. Get the URIs for images required for this server. getURIs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; getURIs() - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Get a list of URIs required by this builder. getURIs() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.TransformingImageServer;  ; getURIs() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getURIs() - Method in interface qupath.lib.io.UriResource. Get all the URIs required for this resource. getURIs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the URIs associated with the model (e.g. getURIs() - Method in clas,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:544306,interface,interface,544306,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, this should not be overused, so as to prevent future conflicts. Specified by:; matchClassName in interface ImageServerBuilder<BufferedImage>; Parameters:; classNames - ; Returns:; true if there is any classname match, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:3467,interface,interface,3467,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,10,['interface'],['interface']
Integrability,"e value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3691,interface,interface,3691,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"e"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4821,interface,interface,4821,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"e() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; close() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; close() - Method in class qupath.lib.gui.SharedThreadPoolManager. Shutdown any threadpools created by this manager. close() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; close() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; close() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; close() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Close; this is important for cleanup. close() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager;  ; close() - Method in interface qupath.lib.measurements.MeasurementList. Close the list. close() - Method in interface qupath.opencv.dnn.DnnModel. Close this model if it will not be needed again. close() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; close() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; closeProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Close the current project open in the QuPathGUI. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that this viewer is closed. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; closeViewer(QuPathViewer) - Method in class qupath.lib.gui.QuPathGUI. Close the image within a viewer, prompting to save changes if necessary. closing(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological closing filter. closingByReconstruction(ImageProces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:115281,interface,interface,115281,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"e(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8352,interface,interface,8352,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"e). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:5188,message,message,5188,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWind",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9787,message,message,9787,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"e, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:10144,interface,interface,10144,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"e, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioFormatsServerBuilder; public BioFormatsServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:2888,interface,interface,2888,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,['interface'],['interface']
Integrability,"e, using the default delimiter from PathPrefs. saveTMAMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save TMA measurements for the current image. saveTMAMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save TMA measurements for the specified image. scalarMat(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 single-channel Mat with a specific value. scalarMatWithType(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 Mat with a specific value, with 1 or more channels. scale - Variable in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Smoothing scale for Gaussian subtraction. scale(double) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. scale(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.AreaROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.EllipseROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.GeometryROI;  ; scale(double, double, double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a scaled version of this ROI. scale(double, double, double, double) - Method in class qupath.lib.roi.LineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PointsROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolygonROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.PolylineROI;  ; scale(double, double, double, double) - Method in class qupath.lib.roi.RectangleROI;  ; scaleAllObjects(double) - Static method in class qupath.lib.scripting.QP. Resize the ROIs of all objects in the current object hierarchy. sc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:884244,interface,interfaces,884244,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"e,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3248,message,message,3248,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,2,['message'],['message']
Integrability,"e. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; Observabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3533,wrap,wrapTextProperty,3533,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['wrap'],['wrapTextProperty']
Integrability,"e. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the mes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5422,message,message,5422,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:11654,interface,interface,11654,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"e: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. splitConnectedRegions; public static List<SparseImageServer> splitConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap); throws IOException; Split a SparseImageServer into multiple servers, whereby each split server represents one connected region.; This can be useful whenever a sparse server contains (for example) multiple pieces of tissue with a substantial gap between them, ; because it allows each piece to be treated as a separate image. Parameters:; server - the sparse server to be split; distancePixels - the maximum separation between regions for them to be considered part of the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:5852,interface,interface,5852,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['interface'],['interface']
Integrability,"e: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of tasks to perform.; ; This will be called from AbstractPlugin.runPlugin(TaskRunner, ImageData, Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:4828,depend,depending,4828,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,4,['depend'],['depending']
Integrability,"e: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4984,interface,interface,4984,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"e; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx; Class CodeAreaControl. java.lang.Object; qupath.lib.gui.scripting.richtextfx.CodeAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. public class CodeAreaControl; extends Object; implements ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Code area control using RichTextFX. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSelectedText(). Gets the value of the selectedText property. IndexRange; getSel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:1136,wrap,wrapText,1136,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['wrap'],['wrapText']
Integrability,"e; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9944,interface,interface,9944,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"e>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJServerBuilder; public ImageJServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html:2181,interface,interface,2181,javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServerBuilder.html,1,['interface'],['interface']
Integrability,"e> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2934,interface,interface,2934,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['interface'],['interface']
Integrability,"eExtension;  ; OpenslideServerBuilder - Class in qupath.lib.images.servers.openslide. Builder for Openslide ImageServer. OpenslideServerBuilder() - Constructor for class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; Optical_density_sum - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Sum of red, green and blue optical densities. opticalDensitySum(int, double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. opticalDensitySum(int, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. options(OverlayOptions) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the overlay options to control display. or(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise OR of two arrays. or(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through OR. orElse(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one, but only call it if this one returns false. Original - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Original image. OTHER - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Other image type, not covered by any of the alternatives above. OTHER - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Other classification. OTHER - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Other classification. OTHER - Static variable in class qupath.lib.scripting.QP. Any other image type (neither brightfield nor fluorescence). OTHER_STRUCTURE_CHANGE - Enum constant in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:731475,interface,interface,731475,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"eFeatures.MultiscaleResultsBuilder. Set all Gaussian sigma values for the z-dimension filter. sigmoid() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Replace Mat values by 1.0/(1.0 + Math.exp(-value)). SIGNED_DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; SimpleImage - Interface in qupath.lib.analysis.images. A minimal interface for accessing pixel values in a single-channel image. SimpleImages - Class in qupath.lib.analysis.images. Create SimpleImage instances for basic pixel processing. SimpleImages() - Constructor for class qupath.lib.analysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:975801,interface,interface,975801,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"eObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface: TMAGrid; Get the TMACoreObject for a specified grid location. Specified by:; getTMACore in interface TMAGrid; Parameters:; row - ; col - ; Returns:. getTMACoreList; public List<TMACoreObject> getTMACoreList(); Description copied from interface: TMAGrid; Get an unmodifiable list of all TMA core objects. Specified by:; getTMACoreList in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(String coreName); Description copied from interface: TMAGrid; Retrieve a TMA core based upon its name.; ; The behavior is undefined if multiple cores have the same name. Specified by:; getTMACore in interface TMAGrid; Parameters:; coreName - ; Returns:. toStr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:2160,interface,interface,2160,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,2,['interface'],['interface']
Integrability,"ePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9449,interface,interface,9449,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Overrides:; addWorkflowStep in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:5321,depend,depending,5321,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['depend'],['depending']
Integrability,"eServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; createID() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; createID() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; createID() - Method in class qupath.lib.images.servers.SparseImageServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer. Returns a UUID. createImageChoicePane(QuPathGUI, List<ProjectImageEntry<BufferedImage>>, List<ProjectImageEntry<BufferedImage>>, String) - Static method in class qupath.lib.gui.dialogs.ProjectDialogs. Populates a given ListSelectionView with all the project entries. createImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore with a specified tile cache size, in bytes. createImageStack(ImageProcessor...) - Stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:185097,depend,depends,185097,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['depends']
Integrability,"eServerBuilder.ServerBuilder<BufferedImage> builder,; String order). Get a ServerBuilder that swaps red and blue channels for another (RGB) server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getOriginalMetadata, getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:2740,interface,interface,2740,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['interface'],['interface']
Integrability,"eTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . smoothMeasurements; public static void smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames); Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Parameters:; pathObjects - ; measurements - ; fwhmPixels - ; fwhmString - ; withinClass - ; useLegacyNames - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:5546,interface,interface,5546,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,4,"['depend', 'interface']","['depending', 'interface']"
Integrability,"eText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10334,interface,interface,10334,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"eWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:3769,interface,interface,3769,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ea. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3965,interface,interface,3965,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:5707,interface,interface,5707,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"ea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.fl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7338,interface,interface,7338,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"eaROI - Class in qupath.lib.roi. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ARGS - Static variable in class qupath.lib.scripting.ScriptAttributes. Optional string args passed to the script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:46211,wrap,wrappers,46211,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrappers']
Integrability,"ead during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOExcept",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2763,interface,interface,2763,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['interface'],['interface']
Integrability,"ead during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:2279,interface,interface,2279,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['interface'],['interface']
Integrability,"ead from the same image servers. Furthermore, 'unknown' image types; (i.e. not standard RGB/BGR/single-channel images) don't always behave nicely with Graphics objects; if we want to paint or scale them.; ; Using the ChannelDisplayInfo approach means that during repainting an (A)RGB image can be produced on-the-fly; without needing to create a new image with the desired ColorModel for painting.; This potentially ends up requiring a bit more computation that is really necessary - and it may be optimized; better in the future - but it was the simplest method I could come up with to provide the features I wanted...; ; Before v0.4.0, some methods supported a boolean parameter to specify whether or not to use color LUTs.; Since v0.4.0, this has been replaced by ChannelDisplayMode to support different ways of visualizing channels.; In particular, in some cases an inverted display is requested - where 'inverted' refers to the background ; (i.e. switching from black is zero to white is zero, or vice versa depending upon the default display). ; Because only additive combinations of RGB colors are permitted, requesting inversion means that the color used for the ; LUT should be inverted but everything else proceeds are normal. ; The calling code then has the job of inverting the resulting image, as done by ; ImageDisplay.applyTransforms(BufferedImage, BufferedImage, java.util.List, ChannelDisplayMode). Author:; Pete Bankhead; See Also:. ImageDisplay. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static interface ; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; boolean; doesSomething(). Returns true if this does something - anything - and false otherwise. Integer; getColor(). Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. float; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html:3306,depend,depending,3306,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.html,1,['depend'],['depending']
Integrability,"ead the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). readFileAsString(File) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file into a single String. readFileAsString(String) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file given by the specified path into a single String. readHierarchy() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. readHierarchy(File) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readHierarchy(InputStream) - Static method in class qupath.lib.io.PathIO. Read a PathObjectHierarchy from a saved data file (omitting all other contents). readHierarchy(Path) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the ImageData associated with this entry, or create a new ImageData if none is currently present. readImageData(File, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from a File into an existing ImageData object, or create a new one if required. readImageData(InputStream, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from an InputStream into an existing ImageData object, or creating a new one if required. readImageData(Path, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from a File into an existing ImageData object, or create a new one if required. readImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Read ImageJ Rois from a .roi or a RoiSet.zip file. readInputStreamAsString(InputStream) - Static method in class qupath.lib.common.GeneralTools.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:823643,interface,interface,823643,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9722,interface,interface,9722,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"earest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back af",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5305,interface,interface,5305,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"easurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6664,interface,interfaces,6664,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interfaces']
Integrability,"eate a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. SplitAnnotationsByLineCommand. Command to split annotations using lines. SplitAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. SplitProjectTrainingCommand. Divide a project into training, validation and test sets but flagging individual image entries. StainVector. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector.DefaultStains. Enum representing default stains. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. StringParameter. Parameter to represent a String value. SubcellularDetection. Experimental plugin to help with the quantification of subcellular structures. Subcommand. A subcommand for the command line interface. SummaryMeasurementTableCommand. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SvgExtension. Extension for SVG image export. SvgTools. Helper class for writing SVG images, in particular rendered PathObjects to create high-quality figures. SvgTools.SvgBuilder. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. SystemMenuBar. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar.SystemMenuBarOption. Enum specifying when and where the system menubar should be used. TaskRunner. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to hel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:55602,interface,interface,55602,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"eateTileObject; public static PathObject createTileObject(ROI roi,; PathClass pathClass); Create a tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; pathClass - ; Returns:; Since:; v0.5.0; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createTileObject; public static PathObject createTileObject(ROI roi); Create an unclassified tile object.; ; Tile objects represent a special case of a detection objects, were the ROI doesn't represent any particular structure ; (e.g. it is a superpixel or square tile representing a local collection of pixels used on the path to region segmentation). Parameters:; roi - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass,; MeasurementList measurements); Create a cell object with an optional classification and measurements list.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing ; the cell nucleus. Parameters:; roiCell - ; roiNucleus - ; pathClass - ; measurements - ; Returns:; See Also:. createDetectionObject(qupath.lib.roi.interfaces.ROI, qupath.lib.objects.classes.PathClass, qupath.lib.measurements.MeasurementList). createCellObject; public static PathObject createCellObject(ROI roiCell,; ROI roiNucleus,; PathClass pathClass); Create a cell object with an optional classification.; ; Cell objects represent a special case of a detection objects, where an additional ROI can be stored representing; the cell nucleus. Parameters:; roiCell - ; ro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html:7939,interface,interfaces,7939,javadoc/docs/qupath/lib/objects/PathObjects.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjects.html,1,['interface'],['interfaces']
Integrability,"ecated.; General class to represent something 'negative'. NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'negative'. nEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events, either observed or censored. NEVER - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Don't use the system menubar for any windows. NEVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilder(Collection<PathObject>) - Static method in class qupath.lib.analysis.DelaunayTools. Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. newInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Create a new instance. nFeatures() - Method in class qupath.lib.analysis.features.HaralickFeatures. Total number of Haralick features. nFeatures() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; nFeatures() - Method in class qupath.opencv.ml.objects.features.Normalizer. The total number of features supported by this Normalizer. nFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the number of recorded frames. nImages() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return an estimate of the number of images if known, or -1 if unknown. nImagesLargest() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return the number of images with the largest image size, if known, or -1 if unknown. nLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the number of resolution levels. nMissingValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of NaNs in the input array. NO - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""No"" option. nObjects() - Method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:710385,interface,interface,710385,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the convex hull for point annotations within the viewer. showProjectMetadataEditor(Project<?>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Show the metadata editor for the specified project. showScalebarProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the scalebar. showScalebarProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the scalebar. showScript(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor, opening an existing script file. showScript(String, String) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(String, String) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor, including a new script with the specified name. showScript(ScriptEditor, Workflow) - Static method in class qupath.lib.gui.panes.WorkflowCommandLogView. Show a script in the script editor based on the specified workflow. showScriptEditor(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show the script editor, or bring the window to the front if it is already open. showScriptInterpreter(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a script interpreter window for a Qupath instance. showSelection(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether selected objects are displayed. showStartupMessageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show a startup message when QuPath is launched. showTable(ImageData<BufferedImage>, Class<? extends PathObject>) - Method in class qupath.lib.gui.c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:970668,interface,interface,970668,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ecified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7214,interface,interface,7214,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ecified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8346,interface,interface,8346,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,2,['interface'],['interface']
Integrability,"ect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10756,interface,interface,10756,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"ect) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283231,message,message,283231,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ect. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7169,interface,interface,7169,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ect; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableG",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7584,message,message,7584,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['message']
Integrability,"ectProperty<ImageData<BufferedImage>>; imageDataProperty();  ; void; refresh(). Refresh the data in the grid view. void; show(). Create the stage and show the grid view. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. imageData; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty. See Also:. imageDataProperty(). Method Details. createGridView; public static PathObjectGridView createGridView(QuPathGUI qupath,; Function<PathObjectHierarchy,Collection<? extends PathObject>> objectExtractor); Create a grid view for a custom object extractor. Parameters:; qupath - QuPath instance; objectExtractor - function to select the objects to display; Returns:. createTmaCoreView; public static PathObjectGridView createTmaCoreView(QuPathGUI qupath); Create a grid view for TMA core objects. Parameters:; qupath - ; Returns:. createAnnotationView; public static PathObjectGridView createAnnotationView(QuPathGUI qupath); Create a grid view for annotations. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the stage used to show the grid view. Returns:. show; public void show(); Create the stage and show the grid view. refresh; public void refresh(); Refresh the data in the grid view. imageDataProperty; public ObjectProperty<ImageData<BufferedImage>> imageDataProperty(). Returns:; the imageData property. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html:3715,interface,interface,3715,javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/PathObjectGridView.html,3,['interface'],['interface']
Integrability,"ection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9447,message,message,9447,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that anal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2729,interface,interface,2729,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"ects for ignored classes (default is not to). includeOnlyColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dial",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601028,message,message,601028,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the URI, or none if the URI does not refer to a file. getPath() - Method in interface qupath.lib.projects.Project. Get a path to this project, or null if this project is not on a local file system. getPath() - Method in class qupath.lib.regions.RegionRequest. Get the requested ImageServer path, used as an identifier. getPathClass() - Method in class qupath.lib.objects.PathObject. Get the classification of the object. getPathClass() - Method in class qupath.lib.objects.PathROIObject;  ; getPathClass() - Method in class qupath.lib.objects.PathRootObject;  ; getPathClass(String) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; Get a PathClass, without specifying any color. getPathClass(String) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name. getPathClass(String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). getPathClass(String, Intege",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:477977,interface,interface,477977,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:5529,interface,interface,5529,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['interface'],['interface']
Integrability,"ects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:443319,interface,interface,443319,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ed (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:5525,interface,interface,5525,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['interface'],['interface']
Integrability,"ed by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal transla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5493,interface,interface,5493,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ed by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:6109,interface,interface,6109,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ed by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6440,interface,interface,6440,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ed by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9125,interface,interface,9125,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"ed by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8899,interface,interface,8899,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ed from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:2400,interface,interface,2400,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['interface'],['interface']
Integrability,"ed from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); throws IOException; Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:; Throws:; IOException. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Check if this provider matches one or more specified classnames.; ; The default implementation checks the full and simple name of the class.; Subclasses may override this behavior to support more intuitive names, ; e.g. ""bioformats"", ""openslide"", ""imagej"", ""imageio"".; However, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html:3214,interface,interface,3214,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerBuilder.html,2,['interface'],['interface']
Integrability,"ed output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Descr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2751,interface,interface,2751,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ed with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current counts transform. HistogramChart.DisplayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:5214,wrap,wrap,5214,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['wrap'],['wrap']
Integrability,"ed, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightnes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12598,interface,interface,12598,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"edImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws:; IOException. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height,; boolean doCache); throws IOException; Create an empty tile for this server, using the default color model. Parameters:; width - ; height - ; doCache - ; Returns:; Throws:; IOException. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; shou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:3097,interface,interface,3097,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['interface'],['interface']
Integrability,"edImageTools. Swap the order of pixels in an RGB image. switchToGrayscaleChannelProperty() - Method in class qupath.lib.display.ImageDisplay. Property indicating which channel should be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1016390,synchroniz,synchronizeViewersProperty,1016390,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['synchroniz'],['synchronizeViewersProperty']
Integrability,"eeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interfac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728274,interface,interface,728274,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"efault value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can be trained interactively (i.e. supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsDynamicMeasurements() - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. supportsFile(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Query whether a file represents a supported script. supportsFile(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Check if the script editor supports a particular file. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Query whether the classifier supports a particular image. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Query whether this transform can be applied to the specified image. supportsImage(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific image server, or false ; if it is incompatible. supportsImage(ImageServer<BufferedImage>) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Query whether this transform can be applied to the specified image. supportsImage(PixelType, int, boolean) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsImageType(ImageServer<BufferedImage>) - Method in class qupath.imagej.images",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1006392,interface,interface,1006392,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"efs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1018371,interface,interface,1018371,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"eful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. setDefaultProject; public static void setDefaultProject(Project<BufferedImage> project); Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current project in the user interface, when running interactively. Parameters:; project - . setDefaultImageData; public static void setDefaultImageData(ImageData<BufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:47600,interface,interface,47600,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['interface'],['interface']
Integrability,"el for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:3572,depend,depend,3572,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,1,['depend'],['depend']
Integrability,"eld Summary; Fields. Modifier and Type; Field; Description; StringProperty; openslidePathProperty;  . Constructor Summary; Constructors. Constructor; Description; OpenSlideExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getQuPathVersion, getVersion. Field Details. openslidePathProperty; @DirectoryPref(""pref.openslide.path""); public StringProperty openslidePathProperty. Constructor Details. OpenSlideExtension; public OpenSlideExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html:1681,interface,interface,1681,javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/ext/openslide/OpenSlideExtension.html,6,['interface'],['interface']
Integrability,"eld | ; Constr | ; Method. SEARCH. Package qupath.lib.display; Interface ChannelDisplayInfo.ModifiableChannelDisplayInfo. All Superinterfaces:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. Enclosing interface:; ChannelDisplayInfo. public static interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; extends ChannelDisplayInfo; Helper interface to indicate that the display ranges can be modified. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. setMinMaxAllowed; void setMinMaxAllowed(float minAllowed,; float maxAllowed); Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Parameters:; minAllowed - ; maxAllowed - . setMinDisplay; void setMinDisplay(float minDisplay); Set the min display value for this channel.; Note that it is *strongly* ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html:1331,interface,interface,1331,javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ChannelDisplayInfo.ModifiableChannelDisplayInfo.html,1,['interface'],['interface']
Integrability,"eld | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface SimpleProgressMonitor. All Known Implementing Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1312,message,message,1312,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['message'],['message']
Integrability,"elected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076395,interface,interface,1076395,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"elected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is availa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9196,message,message,9196,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"eleration effects when holding and releasing navigation key. static IntegerProperty; navigationSpeed. Percentage to scale navigation speed. static IntegerProperty; numCommandThreads. Property specifying the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBounds. Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadius. Radius of the circle used to draw individual points in a point annotation (in pixels). static BooleanProperty; returnToMoveMode. Request that the GUI returns to using the PAN tool after a ROI is drawn. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSize. Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeight. Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidth. Preferred line width for the scalebar. static StringProperty; scriptsPath. Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeed. Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionMode. Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptions. Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitle. Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptions. Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDs. Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:6715,interface,interface,6715,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability,"elerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'experimental' should be shown to the user. Returns:. showTMAOptionsProperty; public static BooleanProperty showTMAOptionsProperty(); Flag to indicate that the TMA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48855,interface,interface,48855,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability,"els (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:1473,interface,interface,1473,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,1,['interface'],['interface']
Integrability,"ely be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9324,interface,interface,9324,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. content(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog. contentText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath.lib.gui.commands. Help window providing context-dependent help. ContourTracing - Class in qupath.lib.analysis.images. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing() - Constructor for class qupath.lib.analy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:138939,interface,interface,138939,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"el model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator); Apply a detection model to generate rectangles surrounding distinct structures. Parameters:; model - the detection model; mat - the image; request - the region corresponding to the Mat; if provided, this is used to scale and translate detected regions; classifier - function to convert the classification label into a PathClass; creator - function to create an object (e.g. detection, annotation) from a ROI; Returns:; a list of created objects. blobFromImages; public static Mat blobFromImages(Mat... mats); Create an OpenCV blob from one or more mats. Parameters:; mats - ; Returns:. blobFromImage; public static Mat blobFromImage(Mat mat); Create an OpenCV blob from a single mat. Parameters:; mat - ; Returns:. blobFromImages; public static Mat blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. Parameters:; mat - input image; scaleFactor - scale factor; size - input width and height; mean - mean values for subtraction; swapRB - swap red and blue of the mean values; crop - center crop after resizing if needed; Returns:; a blob with axis order NCHW. blobFromImages; public static Mat blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop); Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. Parameters:; mats - input images; scaleFactor - scale factor; size - input width and height; mean - mean values for subtraction; swapRB - swap red and blue of the mean values; crop - center crop after resizing if needed; Returns:; a blob with axis order NCHW. imagesFromBlob; public static List<Mat> imagesFromBlob(Mat blob); Extract images from an OpenCV blob. Parameters:; blob - ; Returns:; a list of of images, with length depending upon batch size. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:15806,depend,depending,15806,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['depend'],['depending']
Integrability,"ementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968603,message,message,968603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally be provided; otherwise, a default ColorModel will be ; created for the image (with may not be particularly suitable). Parameters:; imp2 - ; z - ; t - ; colorModel - ; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:6859,interface,interface,6859,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"ements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. content(Node) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify a Node to display within the dialog. contentText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog content text. ContextHelpViewer - Class in qupath.lib.gui.commands. Help window providing context-dependent help. ContourTracing - Class in qupath.lib.analysis.images. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing() - Constructor for class qupath.lib.analysis.images.ContourTracing;  ; ContourTracing.ChannelThreshold - Class in qupath.lib.analysis.images. Helper class defining global thresholds to apply to a single image channel. CONTRAST - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ConvertCommand - Class in qupath.lib.images.writers.ome. Allows command line option to convert an input image to OME-TIFF. ConvertCommand() - Constructor for class qupath.lib.images.writers.ome.ConvertCommand;  ; convertDetectionsToPoints(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Convert detection objects to point annotations based upon their ROI centroids. convertLabelsToCells(ImageProcessor, ImageProcessor, double, double, double, ImagePlane) - Static method in class qupath.image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:139707,depend,dependent,139707,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['dependent']
Integrability,"ences(OutputStream); then it may be worthwhile to resetPreferences() first to handle the fact that preferences may not have been; saved because their default values were unchanged. Parameters:; stream - ; Throws:; IOException; InvalidPreferencesFormatException; See Also:. exportPreferences(OutputStream). numCommandThreadsProperty; public static IntegerProperty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:43807,interface,interface,43807,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability,"end of the line). double; getY1(). Get the first y co-ordinate (start of the line). double; getY2(). Get the second y co-ordinate (end of the line). int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:3768,interface,interfaces,3768,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interfaces']
Integrability,"ends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalization if the computed value is not finite. getModelType() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the type of the model that would be built with OpenCVDnn.buildModel(). getModelUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model. getModeRGB(int[]) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Get the mode from an array of (packed) RGB pixel values. getModificationTimestamp() - Method in interface qupath.lib.projects.Project. Request a timestamp from when the project was last synchronized. getMoreTranslucentColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly more) translucent version of the specified color. getMousePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getMousePosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current cursor position within this viewer, or null if the cursor is outside the viewer. getName() - Method in class qupath.ext.openslide.OpenSlideExtension;  ; getName() - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getName() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getName() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getName() - Method in class qupath.imagej.detect.tissue.Positive",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:446482,synchroniz,synchronized,446482,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['synchroniz'],['synchronized']
Integrability,"ener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Specified by:; requiresTileRegion in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. zPositionProperty; public IntegerProperty zPositionProperty(); Current z-position for the z-slice currently visible in the viewer. Returns:; See Also:. getZPosition(); setZPosition(int). tPositionProperty; public IntegerProperty tPositionProperty(); Current t-position for the timepoint currently visible in the viewer. Returns:; See Also:. getTPosition(); setTPosition(int). requestStopMoving; public void requestStopMoving(); Request that the viewer stop any panning immediately. See Also:. requestDecelerate(); requestStartMoving(double, double). requestDecelerate; public void requestDecelerate(); Request that a viewer decelerate any existing panning smoothly. See Also:. requestStartMoving(double, double); requestStopMoving(). requestStartMoving; public void requestStartMoving(double dx,; double dy); Request that the viewer start panning with a velocity ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:37560,interface,interface,37560,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"ension for displaying in the main GUI. static Image; getImageJIcon(int width,; int height). Try to read the ImageJ icon from its jar. static ImageJ; getImageJInstance(). Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). static String; getImageJPath(). Get the path for a local ImageJ installation, if set. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. static StringProperty; imageJPathProperty(). Property representing the path to a local ImageJ installation, or null if no path has been set. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. static void; setImageJPath(String path). Set the path for a local ImageJ installation, if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Property Details. imageJPath; public static StringProperty imageJPathProperty; Property representing the path to a local ImageJ installation, or null if no path has been set. See Also:. getImageJPath(); setImageJPath(String); imageJPathProperty(). Constructor Details. IJExtension; public IJExtension(). Method Details. setImageJPath; public static void setImageJPath(String path); Set the path for a local ImageJ installation, if required. This can be used to help load external ImageJ plugins. Parameters:; path - . getImageJPath; public static String getImageJPath(); Get the path for a local ImageJ installation, if set. Returns:. imageJPathProperty; public static StringProperty imageJPathProperty(); Property representing the path to a local ImageJ installation, or null if no path has been set. Returns:; See Also:. getImageJPath(); setImageJPath(String). getImageJInstance; public static ImageJ getImageJInstance(); Get an i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html:3307,interface,interface,3307,javadoc/docs/qupath/imagej/gui/IJExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.html,1,['interface'],['interface']
Integrability,"entation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in interface ExecutableLanguage; Parameters:; params - ; Returns:; Throws:; ScriptException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html:2500,interface,interface,2500,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,2,['interface'],['interface']
Integrability,"enting a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisCommand<T>. Fix broken URIs by using relative paths or prompting the user to select files. UriResource. Interface for objects that depend upon URIs. UriUpdater<T>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Urls. Class to return core QuPath URLs centrally. UserDirectoryManager. Helper class for managing a user directory, and associated subdirectories. Version. Helper class for working ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:59077,wrap,wrapped,59077,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrapped']
Integrability,"epresenting a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52948,interface,interface,52948,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"epresenting the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11438,interface,interface,11438,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"ept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<BufferedImage>, RegionRequest) - Method in interface qupath.opencv.ops.ImageDataOp. Apply the operation to the requested region ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:41036,interface,interface,41036,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"equest redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3631,interface,interface,3631,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"er ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10316,interface,interface,10316,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"er calls a runnable, with a specified name. Parameters:; command - the runnable to call; name - the name of the action, set as the text property; Returns:; a new Action. createAction; public static org.controlsfx.control.action.Action createAction(Runnable command); Create an action whose event handler calls a runnable. Parameters:; command - the runnable to call; Returns:; a new Action. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator). createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command,; String name); Create an action from a selectable icon. Type Parameters:; T - ; Parameters:; command - item to which the action's selected property should be bound; name - text to include in the action; Returns:. createSelectableCommandAction; public static <T>; org.controlsfx.control.action.Action createSelectableCommandAction(SelectableItem<T> command). createSelectableCommandAction; public static org.controlsfx.control.action.Action createSelectableCommandAction(ObservableBooleanValue value). installInfoMessage; public static void installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message); Install an optional info message to the action.; If the provided object expression is not empty, a badge will be added to nodes created from the action; and display the tooltip provided by the expression. Parameters:; action - the action to which the message should be added; message - an expression that can return a message; the expression should not be null, but the message can be. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:16612,message,message,16612,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,6,['message'],['message']
Integrability,"er manager, which gives access to all the viewers available within this QuPath instance. getVoronoiFaces() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces as JTS Geometry objects. getVoronoiROIs(Geometry) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces, convered to ROI objects. getWandSensitivity() - Static method in class qupath.process.gui.WandToolEventHandler. Query the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. getWandSigmaPixels() - Static method in class qupath.process.gui.WandToolEventHandler. Query the Gaussian sigma value used to smooth the image when applying the wand. getWandUseOverlays() - Static method in class qupath.process.gui.WandToolEventHandler. Query whether the wand tool should be influenced by pixel values painted on image overlays. getWidth() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getWidth() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image width. getWidth() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension width. getWidth() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getWidth() - Method in interface qupath.lib.images.servers.ImageServer. Width of the full-resolution image in pixels. getWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image width. getWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image width at this level. getWidth() - Method in class qupath.lib.regions.ImageRegion. Get the width of the region bounding box. getWindow(String) - Static method in class qupath.lib.gui.scripting.QPEx. Access a window currently open within QuPath by its title. getWrappedServer() - Method in class qupath.lib.images.servers.TransformingImageServer. Get underlying ImageServer, i.e. getWriter() - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:552641,interface,interface,552641,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"er. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2961,interface,interface,2961,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['interface'],['interface']
Integrability,"er. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2812,interface,interface,2812,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"er. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerCha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548245,interface,interface,548245,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"er. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3881,interface,interface,3881,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"er; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4012,interface,interface,4012,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"er; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3668,interface,interface,3668,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"er<BufferedImage> server,; int level); throws IOException; Add all regions for a specific level of an ImageServer.; Note that this results in all regions being read immediately.; Therefore it should only be used for 'small' images that can be held in main memory. Parameters:; server - the server whose tiles should be drawn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling acc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:6028,interface,interface,6028,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['interface'],['interface']
Integrability,"er> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:6119,interface,interface,6119,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,4,['interface'],['interface']
Integrability,"erBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server direc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:5229,interface,interface,5229,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"erList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Descr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3133,interface,interface,3133,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['interface'],['interface']
Integrability,"erList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Opti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2999,interface,interface,2999,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['interface'],['interface']
Integrability,"erLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; ObjectsMenuActions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; ObjectsMenuActions.Annotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:717970,interface,interface,717970,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"erManager);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ViewerManager; getViewerManager();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ZOOM_TO_FIT; @ActionIcon(ZOOM_TO_FIT); @ActionConfig(""ViewerActions.zoomToFit""); public final org.controlsfx.control.action.Action ZOOM_TO_FIT. SHOW_OVERVIEW; @ActionIcon(OVERVIEW); @ActionConfig(""ViewerActions.overview""); public final org.controlsfx.control.action.Action SHOW_OVERVIEW. SHOW_LOCATION; @ActionIcon(LOCATION); @ActionConfig(""ViewerActions.location""); public final org.controlsfx.control.action.Action SHOW_LOCATION. SHOW_SCALEBAR; @ActionIcon(SHOW_SCALEBAR); @ActionConfig(""ViewerActions.scalebar""); public final org.controlsfx.control.action.Action SHOW_SCALEBAR. TOGGLE_SYNCHRONIZE_VIEWERS; @ActionAccelerator(""shortcut+alt+s""); @ActionConfig(""ViewerActions.synchronize""); public final org.controlsfx.control.action.Action TOGGLE_SYNCHRONIZE_VIEWERS. VIEWER_GRID_1x1; @ActionConfig(""ViewerActions.grid1x1""); @ActionIcon(VIEWER_GRID_1x1); public final org.controlsfx.control.action.Action VIEWER_GRID_1x1. VIEWER_GRID_1x2; @ActionConfig(""ViewerActions.grid1x2""); @ActionIcon(VIEWER_GRID_1x2); public final org.controlsfx.control.action.Action VIEWER_GRID_1x2. VIEWER_GRID_2x1; @ActionConfig(""ViewerActions.grid2x1""); @ActionIcon(VIEWER_GRID_2x1); public final org.controlsfx.control.action.Action VIEWER_GRID_2x1. VIEWER_GRID_2x2; @ActionConfig(""ViewerActions.grid2x2""); @ActionIcon(VIEWER_GRID_2x2); public final org.controlsfx.control.action.Action VIEWER_GRID_2x2. VIEWER_GRID_3x3; @ActionConfig(""ViewerActions.grid3x3""); @ActionIcon(VIEWER_GRID_3x3); public final org.controlsfx.control.action.Action VIEWER_GRID_3x3. MATCH_VIEWER_RESOLUTIONS; @ActionConfig(""ViewerActions.matchResolutions""); public final org.controlsfx.control.action.Action MATCH_VIEWER_RESOLUTIONS. DE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html:2635,synchroniz,synchronize,2635,javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ViewerActions.html,1,['synchroniz'],['synchronize']
Integrability,"erManager;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; handleBackspace(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:565709,interface,interface,565709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"erName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3153,message,message,3153,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ere ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9892,interface,interface,9892,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"eredImage>, ROI, double, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size and using zero-padding if required. readPatch(ImageServer<BufferedImage>, ROI, double, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Read an image patch, optionally with a fixed size. readPathObjects() - Method in class qupath.imagej.images.servers.ImageJServer;  ; readPathObjects() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readPathObjects() - Method in interface qupath.lib.objects.PathObjectReader. Read a collection of objects from the source. readPoints(File) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a file. readPoints(InputStream) - Static method in class qupath.lib.io.PointIO. Read a list of point annotations from a stream. readPointsObjectList(File) - Static method in class qupath.lib.io.PointIO. Deprecated. readRegion(double, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region from the default ImagePlane (i.e. readRegion(double, int, int, int, int, int, int) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C) image region for a specified z-plane and timepoint. readRegion(RegionRequest) - Method in class qupath.imagej.images.servers.ImageJServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; readRegion(RegionRequest) - Method in class qupath.lib.images.servers.CroppedImageServer;  ; readRegion(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Read a 2D(+C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:827133,interface,interface,827133,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"eredImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2891,interface,interface,2891,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"erface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute maximum features from all four rotations. getMaxGreen() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the green channel (default = 255). getMaxHeight() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum height of the density map. getMaxNormalizedCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin, divided by the total counts across the entire",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:433849,interface,interface,433849,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"erface qupath.opencv.ops.ImageOp. Default implementation returns an empty list; classes should override this if necessary. getUrlString() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the URL for the main repo. getUseAlwaysExtensions() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Query the set of file extensions for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546502,interface,interface,546502,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"erface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8590,interface,interface,8590,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"erface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9217,interface,interface,9217,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2470,interface,interface,2470,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['interface'],['interface']
Integrability,"erface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.Co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11863,interface,interface,11863,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"erface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:4916,interface,interface,4916,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"erface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5109,interface,interface,5109,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"ermine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:3540,depend,depending,3540,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['depend'],['depending']
Integrability,"erredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help clean up after some forgotten servers. Overrides:; finalize in class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the serve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:7556,interface,interface,7556,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"errides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. getX; public double getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3155,interface,interface,3155,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,1,['interface'],['interface']
Integrability,"ers.BrushToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.process.gui.WandToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestStartMoving(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer start panning with a velocity determined by dx and dy. requestStopMoving() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer stop any panning immediately. requestUserDirectory(boolean) - Static method in class qupath.lib.gui.commands.Commands. Request the current user directory, optionally prompting the user to request a directory if none is available. requiresTileRegion(String, ImageRegion) - Method in interface qupath.lib.gui.images.stores.TileListener. Check if the listener requires a particular tile. requiresTileRegion(String, ImageRegion) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; RESET_DETECTION_CLASSIFICATIONS - Variable in class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; RESET_METADATA - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:859968,interface,interface,859968,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ers.LogisticRegressionClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Returns true (the default value). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier can be trained interactively (i.e. supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; supportsDynamicMeasurements() - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; the initial implementation of dynamic measurements was never used. supportsFile(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Query whether a file represents a supported script. supportsFile(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Check if the script editor supports a particular file. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.lib.classifiers.pixel.PixelClassifier. Query whether the classifier supports a particular image. supportsImage(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Query whether this transform can be applied to the specified image. supportsImage(ImageServer<?>) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the compression type supports a specific image server, or false ; if it is incompatible. supportsImage(ImageServer<BufferedImage>) - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Query whether this transform can be applied to the specified image. supportsImage(PixelType, int, boolean) - Method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns true if the comp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1006070,interface,interface,1006070,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ers:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singlet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:5240,interface,interface,5240,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['interface'],['interface']
Integrability,"ers:; pathObject - ; column - ; Returns:. isStringMeasurement; public boolean isStringMeasurement(String name); Query whether a named measurement returns a String value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a String (only), false otherwise. isNumericMeasurement; public boolean isNumericMeasurement(String name); Query whether a named measurement returns a numeric value only. Parameters:; name - the measurement name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:6826,interface,interface,6826,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"ers:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9870,interface,interface,9870,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ers:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. hasAlpha; protected boolean hasAlpha(). createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Paramet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:5939,interface,interface,5939,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,"ers:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3399,interface,interface,3399,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"ers:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape obj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5925,interface,interface,5925,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ersion of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4385,interface,interface,4385,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"erver<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTile",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:11143,interface,interface,11143,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,erverMetadata.ChannelType; qupath.lib.gui.actions.InfoMessage.MessageType; qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.lib.gui.logging.LogManager.LogLevel; qupath.lib.measurements.MeasurementList.MeasurementListType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature; qupath.lib.classifiers.Normalization; qupath.lib.analysis.features.ObjectMeasurements.Compartments; qupath.lib.analysis.features.ObjectMeasurements.Measurements; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType; qupath.opencv.dnn.OpenCVDnn.ModelType; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode; qupath.lib.plugins.ParallelTileObject.Status; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses; qupath.lib.io.PathIO.GeoJsonExportOptions; qupath.lib.objects.PathObjectFilter (implements java.util.function.Predicate<T>); qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType; qupath.lib.gui.prefs.PathPrefs.AutoUpdateType; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes; qupath.lib.gui.prefs.PathPrefs.FontSize; qupath.lib.gui.prefs.PathPrefs.ImageTypeSetting; qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions; qupath.lib.images.servers.PixelType; qupath.lib.gui.prefs.QuPathStyleManager.Fonts; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters (implements qupath.lib.gui.viewer.RegionFilter); qupath.lib.roi.interfaces.ROI.RoiType; qupath.lib.roi.RoiTools.CombineOp; qupath.lib.images.servers.RotatedImageServer.Rotation; qupath.lib.color.StainVector.DefaultStains; qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType; qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption; qupath.lib.objects.utils.Tiler.TileAlignment; qupath.lib.io.UriUpdater.UriStatus; qupath.process.gui.WandToolEventHandler.WandType. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:46146,interface,interfaces,46146,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['interface'],['interfaces']
Integrability,"erverMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. Collection<URI>; getURIs(). Get the URIs for images required for this server. protected ImageServer<T>; getWrappedServer(). Get underlying ImageServer, i.e. T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2519,interface,interface,2519,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,2,['interface'],['interface']
Integrability,"es are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Descript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8593,interface,interface,8593,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"es. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1629,interface,interface,1629,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['interface'],['interface']
Integrability,"es.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. nameProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the String property of this ViewTracker. nameProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanoseconds() - Method in class qupath.lib.common.Timeit. Report timings in nanoseconds. navigationAcceleration - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Apply acceleration/deceleration effects when holding and releasing navigation key. navigationSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; navigationSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale navigation speed. nBins() - Method in class qupath.lib.analysis.stats.Histogram. Total number of histogram bins. nCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of censored events. nChannels() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nChannels() - Method in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:707136,interface,interface,707136,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"es.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Constructor for class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideImageServer - Class in qupath.lib.images.servers.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:728968,interface,interface,728968,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"es.stores.DefaultImageRegionStore;  ; calculatePadding() - Method in class qupath.opencv.ops.ImageOps.PaddedOp. Calculate the required padding. calculatePreferredParallelism() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Make a semi-educated guess as to an appropriate number of threads to use. calibratedLocationString - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; calibrateImagePlus(ImagePlus, RegionRequest, ImageServer<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. calibrateObject(PathObject, Roi) - Static method in class qupath.imagej.tools.IJTools. Set the properties of a PathObject based upon an ImageJ Roi. calibration(PixelCalibration) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify pixel calibration, which is used to calibrate the x and y coordinates. canBeautify() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.beautify(String) is capable of beautifying the text, false otherwise. CANCEL - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""Cancel"" option. cancelDirection(boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Cancel either the x- or y-axis direction of the movement. cancelled() - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; cancelled() - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. canCompress() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Returns true if ScriptSyntax.compress(String) is capable of compressing the text, false otherwise. canRedo() - Method in class qupath.lib.gui.UndoRedoManager. True if it's possible to call redoOnce for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:83917,interface,interface,83917,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"es.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, OutputStream) - Method in class qupath.lib.images.writers.ome.OMETiffWriter. Write OME-TIFF image to an output stream. writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119238,interface,interface,1119238,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"es.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242226,interface,interface,242226,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"es; protected List<qupath.lib.gui.viewer.recording.ViewRecordingFrame> getFrames(); Return an unmodifiable list of all the frames stored by this view tracker. Returns:. isLastFrame; public boolean isLastFrame(qupath.lib.gui.viewer.recording.ViewRecordingFrame frame); Return whether the specified frame is the last one recorded. Parameters:; frame - ; Returns:; whether it is the last frame. getFrameIndexForTime; public int getFrameIndexForTime(long timestamp); Return the index of the frame visible at the specified timestamp (in ms).; If the timestamp is lower than the first recorded frame, 0 will be returned. Parameters:; timestamp - ; Returns:; index of frame. getFrameForTime; public qupath.lib.gui.viewer.recording.ViewRecordingFrame getFrameForTime(long timestamp); Return the frame visible at the specified timestamp (in ms). Parameters:; timestamp - ; Returns:; the corresponding frame. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:7799,interface,interface,7799,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"escription copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:10583,interface,interface,10583,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"escription copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3482,interface,interface,3482,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,2,['interface'],['interface']
Integrability,"escription copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:3927,interface,interface,3927,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"escription copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7795,interface,interface,7795,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"escription copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4694,interface,interface,4694,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"escription copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5535,interface,interface,5535,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"escription copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:8848,interface,interface,8848,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"escription; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1623,wrap,wrapper,1623,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['wrap'],['wrapper']
Integrability,"eselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3974,interface,interface,3974,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,"esource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1068166,interface,interface,1068166,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"esourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; containsObject(PathObject, PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Deprecated. containsROI(ROI, ROI) - Static method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:138336,interface,interface,138336,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"essarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:10596,interface,interface,10596,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"essing() - Method in class qupath.lib.plugins.ParallelTileObject. Returns true if setIsProcessing(true) has recently been called. isReadOnly() - Method in class qupath.lib.gui.QuPathGUI. Query whether QuPath is in 'read-only' mode. isRecording() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this is currently recording. isRedoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isRedoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'redo' can be applied to the control. isRedoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isResidual() - Method in class qupath.lib.color.StainVector. Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. isResizable() - Method in class qupath.lib.gui.ColorMapCanvas;  ; isRGB() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; isRGB() - Method in interface qupath.lib.images.servers.ImageServer. True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. isRGB() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if the pixels are stored in (A)RGB form. isRootObject() - Method in class qupath.lib.objects.PathObject. Returns true if the object is the 'root' of an object hierarchy. isRootObject() - Method in class qupath.lib.objects.PathRootObject;  ; isRotated() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if viewer.getRotation() != 0. isScalebarVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the scalebar is visible, false otherwise. isSelectable(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Specify that an Action has a meaningful 'selected' status. isSelected() - Method in class qupath.lib.gui.SelectableItem. Returns true if the value of the selected property equals SelectableIte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:631205,interface,interface,631205,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"et a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:6445,interface,interface,6445,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"et a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteract",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2915,interface,interface,2915,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['interface'],['interface']
Integrability,"et value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2313,interface,interface,2313,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"etBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9934,interface,interface,9934,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"etBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:3239,Wrap,WrappedBufferedImageServer,3239,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,2,['Wrap'],['WrappedBufferedImageServer']
Integrability,"etClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:3747,interface,interface,3747,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,2,['interface'],['interface']
Integrability,"etDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:5404,interface,interface,5404,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['interface'],['interface']
Integrability,"etDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column,; int decimalPlaces); Description copied from interface: PathTableData; Get a string value, converting to a fixed number of decimal places if the column is numeric. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; decimalPlaces - ; Returns:. getMetadataNames; public ReadOnlyListWrapper<String> getMetadataNames(); Get the names of all columns corresponding to metadata (String) values. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7852,interface,interface,7852,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,5,['interface'],['interface']
Integrability,"etModelType; public OpenCVDnn.ModelType getModelType(); Get the type of the model that would be built with buildModel(). Returns:. getMean; public Scalar getMean(); Get means which should be subtracted for preprocessing. Returns:; the mean value if specified, or null if OpenCV's default should be used (likely to be zero); See Also:. getScale(). getModelUri; public URI getModelUri(); Get the path to the model. Returns:. getConfigUri; public URI getConfigUri(); Get the path to the model configuration, if required. Returns:. getFramework; public String getFramework(); Get the framework used to create the model. Returns:. builder; public static OpenCVDnn.Builder builder(String pathModel); Create a new builder. Parameters:; pathModel - ; Returns:. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. getBlobFunction; public BlobFunction<Mat> getBlobFunction(); Description copied from class: AbstractDnnModel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:5618,interface,interface,5618,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['interface'],['interface']
Integrability,"etNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI. Get the number of points, as would be returned by ROI.getAllPoints(). getNumPoints() - Method in class qupath.lib.roi.LineROI. Returns 2 (since the line is defined by its end points). getNumPoints() - Method in class qupath.lib.roi.PointsROI;  ; getNumPoints() - Method in class qupath.lib.roi.RectangleROI. Returns 4 (since the rectangle is defined by its bounding box). getNumThreads() - Static method in class qupath.lib.common.Prefs. Get the requested number of threads to use for parallelization. getObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getObjectClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for object classifiers saved within this project. getObjectFileExtensions() - Static method in class qupath.lib.io.PathIO. Deprecated.; use PathIO.getObjectFileExten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:460331,interface,interfaces,460331,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"etPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2985,interface,interface,2985,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['interface'],['interface']
Integrability,"etResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. getRGB(float, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo. Get a suitable RGB value for displaying a pixel with the specified value. getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB values that would be used to display all the pixels of an image. getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getRGB(BufferedImage, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the RGB value that would be used to display a particular pixel. getRGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object, omitting the alpha component. getRGBThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getROI() - Method in class qupath.lib.objects.PathObject. Get the region of interest (ROI) for the object. getROI() - Method in class qupath.lib.objects.PathROIObject;  ; getROI() - Method in class qupath.lib.objects.PathRootObject;  ; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:500183,interface,interface,500183,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"etRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:9162,interface,interface,9162,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"etScale(); Get scale factors to be applied to preprocess input. Returns:; the scale value if specified, or null if default scaling should be used; See Also:. getMean(). getModelType; public OpenCVDnn.ModelType getModelType(); Get the type of the model that would be built with buildModel(). Returns:. getMean; public Scalar getMean(); Get means which should be subtracted for preprocessing. Returns:; the mean value if specified, or null if OpenCV's default should be used (likely to be zero); See Also:. getScale(). getModelUri; public URI getModelUri(); Get the path to the model. Returns:. getConfigUri; public URI getConfigUri(); Get the path to the model configuration, if required. Returns:. getFramework; public String getFramework(); Get the framework used to create the model. Returns:. builder; public static OpenCVDnn.Builder builder(String pathModel); Create a new builder. Parameters:; pathModel - ; Returns:. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:5481,interface,interface,5481,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['interface'],['interface']
Integrability,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11205,interface,interface,11205,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,10,['interface'],['interface']
Integrability,"etSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.Virtualize",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7105,interface,interface,7105,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"etadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242120,interface,interface,242120,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"etail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class JsonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler. All Implemented Interfaces:; ScriptStyler. public class JsonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on JSON syntax. Since:; v0.4.0; Author:; Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html:1213,interface,interface,1213,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/JsonStyler.html,5,['interface'],['interface']
Integrability,"etails. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; getScript in interface ScriptableWorkflowStep; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:3291,interface,interface,3291,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,12,['interface'],['interface']
Integrability,"etection objects (all subtypes). ROI. Accept any object that has a ROI. ROI_AREA. Accept any object that has an area ROI. ROI_LINE. Accept any object that has a line ROI. ROI_POINT. Accept any object that has a points ROI. TILES. Accept tiles. TMA_CORES. Accept TMA cores. UNLOCKED. Accept any object that is 'unlocked'. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(PathObject p);  ; String; toString();  ; static PathObjectFilter; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectFilter[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.Predicate; and, negate, or. Enum Constant Details. ANNOTATIONS; public static final PathObjectFilter ANNOTATIONS; Accept annotation objects. DETECTIONS; public static final PathObjectFilter DETECTIONS; Accept detection objects (no subtypes, e.g. cells). DETECTIONS_ALL; public static final PathObjectFilter DETECTIONS_ALL; Accept detection objects (all subtypes). CELLS; public static final PathObjectFilter CELLS; Accept cells. TILES; public static final PathObjectFilter TILES; Accept tiles. TMA_CORES; public static final PathObjectFilter TMA_CORES; Accept TMA cores. UNLOCKED; public static final PathObjectFilter UNLOCKED; Accept any object that is 'unlocked'. ROI; public static final PathObjectFilter ROI; Accept any object that has a ROI. ROI_LINE; public static final PathObjectFilter ROI_LINE; Accept any object that has a line ROI. ROI_AREA; public static final PathObjectFilter ROI_AREA; Accept any object that has an area ROI. ROI_POINT; public static fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html:2273,interface,interface,2273,javadoc/docs/qupath/lib/objects/PathObjectFilter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectFilter.html,1,['interface'],['interface']
Integrability,"eter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:4561,interface,interface,4561,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,16,['interface'],['interface']
Integrability,"eter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:4481,interface,interface,4481,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,"eters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3408,interface,interface,3408,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['interface'],['interface']
Integrability,"eters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10715,interface,interface,10715,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ethod Details. create; public static <T> ObjectClassifier<T> create(OpenCVClassifiers.OpenCVStatModel model,; PathObjectFilter filter,; FeatureExtractor<T> extractor,; List<PathClass> pathClasses); Create a new ObjectClassifier that uses an OpenCVClassifiers.OpenCVStatModel for classification. Type Parameters:; T - generic type, which matches that of an ImageData; Parameters:; model - the OpenCVClassifiers.OpenCVStatModel used to apply the prediction; filter - a filter used to select objects from a hierarchy; extractor - a feature extractor to determine features for each object; pathClasses - available classifications; the order is important, and relates to the classification output; Returns:. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:3077,interface,interface,3077,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['interface'],['interface']
Integrability,"ethod Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer). Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. List<String>; getFeatureNames();  ; Collection<String>; getMissingFeatures(ImageData<T> imageData,; PathObject pathObject). Check for missing features, returning the names. int; nFeatures();  . Method Details. getFeatureNames; List<String> getFeatureNames(). Returns:; the names of the features that can be extracted. nFeatures; int nFeatures(). Returns:; the number of features that can be extracted. extractFeatures; void extractFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; FloatBuffer buffer); Extract features from a collection of objects, adding the corresponding values to a FloatBuffer.; Each feature is a single numeric value. At the end, pathObjects.size() * nFeatures() features should be added ; to the buffer. Each object is processed in turn, with all features for that object added before the next object is processed. Parameters:; imageData - image data, used by some implementations to determine feature values (e.g. if these depend upon pixels).; pathObjects - objects for which features should be calculated; buffer - buffer into which feature values should be added. getMissingFeatures; Collection<String> getMissingFeatures(ImageData<T> imageData,; PathObject pathObject); Check for missing features, returning the names.; This is useful as a warning that the input for the feature extractor may not be valid.; Default implementation returns an empty list; however, implementations should attempt to provide a meaningful ; output if possible. Parameters:; imageData - image containing the objects to test; pathObject - object to test for missing feature; Returns:; a collection of feature names that correspond to missing features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html:1968,depend,depend,1968,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractor.html,2,['depend'],['depend']
Integrability,"ethod in class qupath.lib.gui.charts.ChartThresholdPane. Returns the value of ChartThresholdPane.isInteractiveProperty(). isInteractiveProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Property indicating whether thresholds can be adjusted interactively. isInterleaved(boolean) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; isLastFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the specified frame is the last one recorded. isLine() - Method in class qupath.lib.roi.AreaROI;  ; isLine() - Method in class qupath.lib.roi.EllipseROI;  ; isLine() - Method in class qupath.lib.roi.GeometryROI;  ; isLine() - Method in class qupath.lib.roi.LineROI;  ; isLine() - Method in class qupath.lib.roi.PointsROI;  ; isLine() - Method in class qupath.lib.roi.PolygonROI;  ; isLine() - Method in class qupath.lib.roi.PolylineROI;  ; isLine() - Method in class qupath.lib.roi.RectangleROI;  ; isLine() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI consists of line segments and does not enclose an area. isLinux() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Linux. isLocationVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the cursor location is visible, false otherwise. isLocked() - Method in class qupath.lib.objects.PathObject. Query the locked status. isLocked() - Method in class qupath.lib.objects.PathROIObject. Query the locked status for the object, indicating whether it should be editable or not. isMac() - Static method in class qupath.lib.common.GeneralTools. Return true if running on macOS. isMemorySufficient(RegionRequest, ImageData<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. isMissing() - Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:625734,interface,interface,625734,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class TextAreaControl. java.lang.Object; qupath.lib.gui.scripting.TextAreaControl. All Implemented Interfaces:; TextAppendable, EditableText, ScriptEditorControl<TextArea>. public class TextAreaControl; extends Object; implements ScriptEditorControl<TextArea>; Simple text area control (JavaFX) with basic operations and no styling support. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ReadOnlyIntegerProperty; caretPosition. Property for the current caret position. ObservableValue<String>; selectedText. Text currently selected in the editor control. StringProperty; text. Text currently in the editor control. BooleanProperty; wrapText. Request wordwrap. Constructor Summary; Constructors. Constructor; Description; TextAreaControl(boolean isEditable). Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea textArea,; boolean isEditable). Constructor to wrap an existing text area and wrap it in a TextAreaControl. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; appendText(String text). Append the specified text to the appendable. ReadOnlyIntegerProperty; caretPositionProperty(). Property for the current caret position. void; clear(). Request clear the contents of the control. void; copy(). Request copy the current selection. void; cut(). Request cut the current selection. void; deleteText(int startIdx,; int endIdx). Request deleting the text within the specified range. void; deselect(). Deselect any currently-selected text. int; getCaretPosition(). Gets the value of the caretPosition property. ContextMenu; getContextMenu(). Get the context menu for the control. TextArea; getRegion(). Get the region representing this control, so it may be added to a scene. String; getSele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:1200,wrap,wrap,1200,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['wrap'],['wrap']
Integrability,"ethod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Interface PathPlugin<T>. Type Parameters:; T - . All Known Subinterfaces:; PathInteractivePlugin<T>. All Known Implementing Classes:; AbstractDetectionPlugin, AbstractInteractivePlugin, AbstractPlugin, AbstractTileableDetectionPlugin, CellCountsCV, CoherenceFeaturePlugin, DelaunayClusteringPlugin, DetectCytokeratinCV, DilateAnnotationPlugin, DoGSuperpixelsPlugin, FillAnnotationHolesPlugin, FindConvexHullDetectionsPlugin, HaralickFeaturesPlugin, ImageJMacroRunner, IntensityFeaturesPlugin, LocalBinaryPatternsPlugin, PositiveCellDetection, PositivePixelCounterIJ, RefineAnnotationsPlugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1238,interface,interface,1238,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,2,['interface'],['interface']
Integrability,"ethod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1201,wrap,wrapper,1201,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['wrap'],['wrapper']
Integrability,"ethod; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1999,interface,interface,1999,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,6,['interface'],['interface']
Integrability,"ethods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgume",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:3539,interface,interface,3539,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['interface'],['interface']
Integrability,"eton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:4918,interface,interface,4918,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,2,['interface'],['interface']
Integrability,"eturned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:9589,interface,interface,9589,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"eturns a UUID. createID() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; createID() - Method in class qupath.lib.images.servers.LabeledImageServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; createID() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; createID() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; createID() - Method in class qupath.lib.images.servers.SparseImageServer. Returns a UUID. createID() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer. Returns a UUID. createImageChoicePane(QuPathGUI, List<ProjectImageEntry<BufferedImage>>, List<ProjectImageEntry<BufferedImage>>, String) - Static method in class qupath.lib.gui.dialogs.ProjectDialogs. Populates a given ListSelectionView with all the project entries. createImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:184938,depend,depends,184938,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['depends']
Integrability,"eturns true if the object is an annotation. isArea() - Method in class qupath.lib.roi.AreaROI;  ; isArea() - Method in class qupath.lib.roi.EllipseROI;  ; isArea() - Method in class qupath.lib.roi.GeometryROI;  ; isArea() - Method in class qupath.lib.roi.LineROI;  ; isArea() - Method in class qupath.lib.roi.PointsROI;  ; isArea() - Method in class qupath.lib.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615660,interface,interface,615660,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"eturns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). contains; public boolean contains(double x,; double y); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:7003,interface,interface,7003,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"eturns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8385,interface,interface,8385,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"eturns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9542,interface,interface,9542,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class BufferedImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.BufferedImageOverlay. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, PathOverlay. public class BufferedImageOverlay; extends AbstractImageOverlay; implements ChangeListener<ImageData<BufferedImage>>; An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer.; ; The scaling for the BufferedImage is determined by an associated ImageRegion. Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:1143,interface,interfaces,1143,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['interface'],['interfaces']
Integrability,"ex; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface ImageServerBuilder<T>. Type Parameters:; T - . All Known Implementing Classes:; BioFormatsServerBuilder, ImageJServerBuilder, JsonImageServerBuilder, OpenslideServerBuilder. public interface ImageServerBuilder<T>; Helper class for creating ImageServers from a given URI and optional argument list. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. static class ; ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. static interface ; ImageServerBuilder.ServerBuilder<T>. Interface that defines a class encapsulating all that is required to build an ImageServer. static class ; ImageServerBuilder.UriImageSupport<T>. Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ImageServer<T>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<T>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<T>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. default boolean; matchClassName(String... classNames",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html:1141,interface,interface,1141,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.html,1,['interface'],['interface']
Integrability,"extMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This is needed to have glyphs that behave well with css styles. ; ControlsFX's default implementation te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7807,message,message,7807,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['message']
Integrability,"extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; suppor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:4416,interface,interface,4416,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"extfx.stylers.PropertiesStyler. All Implemented Interfaces:; ScriptStyler. public class PropertiesStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html:1460,interface,interface,1460,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PropertiesStyler.html,1,['interface'],['interface']
Integrability,"e ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5364,interface,interface,5364,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"e ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:8507,interface,interface,8507,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"e getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All ot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8504,interface,interface,8504,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"e getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10860,interface,interface,10860,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"e pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9318,interface,interface,9318,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"e pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9092,interface,interface,9092,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"e qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected Ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:4149,interface,interface,4149,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['interface'],['interface']
Integrability,"f a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4263,interface,interface,4263,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,4,['interface'],['interface']
Integrability,"f a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2590,interface,interface,2590,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"f an image. int; getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode). Get the RGB value that would be used to display a particular pixel. float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. String; getValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a pixel's value. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isAdditive(). Returns true if this channel can be used additively to create a composite image display;; returns false if this channel wants all the color information to itself, so can't be displayed with others. boolean; isBrightnessContrastRescaled(). Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherite",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4052,depend,dependent,4052,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['depend'],['dependent']
Integrability,"f columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:412729,message,messages,412729,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"f cores and grid width. int; getGridHeight(). Number of cores along the vertical axis of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface: TMAGrid; Get the TMACoreObject for a specified grid location. Specified by:; getTMACore in interface TMAGrid; Parameters:; row - ; col - ; Returns:. getTMACoreList; public List<TMACoreObject> getTMACoreList(); Description copied from interface: TMAGrid; Get an unmodifiable list of all TMA core objects. Specified by:; getTMACoreList in interface TMAGrid; Returns:. getTMACore; public TMAC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:1876,interface,interface,1876,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,2,['interface'],['interface']
Integrability,"f stains. getName; public String getName(); Get the stains name. Returns:. getStainNumber; public int getStainNumber(StainVector stain); Get the number for a specific stain (1, 2 or 3). Parameters:; stain - ; Returns:. getMaxRed; public double getMaxRed(); Get the maximum value for the red channel (default = 255). Returns:. getMaxGreen; public double getMaxGreen(); Get the maximum value for the green channel (default = 255). Returns:. getMaxBlue; public double getMaxBlue(); Get the maximum value for the blue channel (default = 255). Returns:. getMatrixInverse; public double[][] getMatrixInverse(); Get matrix inverse, as useful for color deconvolution.; See static ColorDeconvolution classes for usage. Returns:. toString; public String toString(). Overrides:; toString in class Object. getColorDeconvolutionStainsAsString; public static String getColorDeconvolutionStainsAsString(ColorDeconvolutionStains stains,; int nDecimalPlaces); Get a String representation of the stains and background. Parameters:; stains - ; nDecimalPlaces - ; Returns:; See Also:. parseColorDeconvolutionStainsArg(String). parseColorDeconvolutionStainsArg; public static ColorDeconvolutionStains parseColorDeconvolutionStainsArg(String s); Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. Parameters:; s - ; Returns:; See Also:. getColorDeconvolutionStainsAsString(ColorDeconvolutionStains, int). parseStainValues; public static double[] parseStainValues(Locale locale,; String s); Parses 3 values, suitable for use as a stain vector. Parameters:; locale - ; s - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:10899,interface,interface,10899,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,2,['interface'],['interface']
Integrability,"f the object; as a mask. singleChannel(String, ColorTransforms.ColorTransform, Function<double[], Double>, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires one channel as input. SingleChannelDisplayInfo - Interface in qupath.lib.display. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand - Class in qupath.process.gui.commands. Command to (sub)classify objects based on a single measurement. SingleMeasurementClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SingleMeasurementClassificationCommand. Constructor. singleSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if only one object has been selected, accessible by getSelectedObject();. size - Variable in class qupath.lib.analysis.stats.RunningStatistics;  ; size() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Number of entries in the array. size() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of non-NaN values added. size() - Method in interface qupath.lib.measurements.MeasurementList. Returns the number of measurements in the list. size() - Method in class qupath.lib.plugins.workflow.Workflow. Total number of steps in the workflow. size() - Method in class qupath.opencv.dnn.DnnShape. Total number of elements in a blob with this shape; This is the product of the lengths returned by DnnShape.getShape() or DnnShape.UNKNOWN_SHAPE. size(double, double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred size of the chart. size(double, double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the preferred siz",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:980088,interface,interface,980088,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"f the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Specified by:; getTileOverlap in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:6497,interface,interface,6497,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,4,['interface'],['interface']
Integrability,"f writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:4907,interface,interface,4907,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"f writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:2561,interface,interface,2561,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"f writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2555,interface,interface,2555,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"f writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:5691,interface,interface,5691,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"fWriter. Write OME-TIFF image to an output stream. writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119395,interface,interface,1119395,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"face qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4679,interface,interface,4679,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"faultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3757,message,message,3757,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"faultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; JsonImageServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:1924,interface,interface,1924,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['interface'],['interface']
Integrability,"faultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; runTasks(Collection<? extends Runnable>) - Method in interface qupath.lib.plugins.TaskRunner. Pass a collection of parallelizable tasks to run. S. sameClassificationPredicate() - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects that share the same classification. samplesPerPixel(int[]) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; SANS_SERIF - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Preferred sans-serif font. saturation(int) - Static method in class qupath.lib.color.ColorTransformer. Extract saturation value from RGB-to-HSB transform. Saturation - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Saturation value (from RGB-HSB transform). saturationPercentProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. SAVE_DATA - Variable in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:879487,interface,interface,879487,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"feredImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:4002,depend,depend,4002,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,2,['depend'],['depend']
Integrability,"fferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:3641,interface,interface,3641,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['interface'],['interface']
Integrability,"fferedImage> server,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. PngWriter; public PngWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:2901,interface,interface,2901,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"ffineTransformation to an AffineTransform. CONVEX_HULL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CONVEX_POINTS - Variable in class qupath.lib.gui.actions.CommonActions;  ; ConvexHull - Class in qupath.lib.roi. Helper method for calculating the convex hull from a list of points. ConvexHull() - Constructor for class qupath.lib.roi.ConvexHull;  ; CoocurranceMatrices - Class in qupath.lib.analysis.features. Data structure to hold cooccurrence matrices for computation of Haralick features. CoocurranceMatrices(int) - Constructor for class qupath.lib.analysis.features.CoocurranceMatrices. Initialize coocurrence matrices. coordinateExtractor(Function<PathObject, Collection<Coordinate>>) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. copy() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; copy() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request copy the current selection. copy() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; COPY_ANNOTATION_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_FULL_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_VIEW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; copyAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; copyActions - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; CopyActions() - Constructor for class qupath.lib.gui.actions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:147897,interface,interface,147897,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"fied by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the soli",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10905,interface,interface,10905,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"fied pyramidal level. getLevel0Height() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the height of the full-resolution image (level 0). getLevel0Width() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the width of the full-resolution image (level 0). getLevelCount() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the total number of pyramid levels. getLevelHeight(int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the image height at the specified level. getLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list containing the resolution levels. getLevelWidth(int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get the image width at the specified level. getLibraryVersion() - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Get the version of the OpenSlide library. getLineCommentString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get the String that represents the start of a comment line. getLineObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with line ROIs from a collection of objects. getLineWidth() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get the threshold line width. getLivePrediction() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Query whether live prediction is turned on. getLoadedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getLocalizationDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where localization property files should be written. getLocalizedResourceManager() - Static method in class qupath.lib.gui.localization.QuPathResources. Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:428236,interface,interface,428236,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3169,interface,interface,3169,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,1,['interface'],['interface']
Integrability,flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4859,interface,interface,4859,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"fo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible range to something sensible.; Brightness/contrast/min/max sliders may make use of this. Specified by:; setMinMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:11812,interface,interface,11812,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"for building a LabeledImageServer. LineROI. ROI representing a straight line, defined by its end points. LoadResourceCommand<S>. Create commands for displaying pixel classifiers and density maps. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:27801,message,messages,27801,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['message'],['messages']
Integrability,"from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType in interface ImageServerBuilder<BufferedImage>; Returns:. matchClassName; public boolean matchClassName(String... classNames); Description copied from interface: ImageServerBuilder; Ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:2827,interface,interface,2827,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['interface'],['interface']
Integrability,"from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> ta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:3073,interface,interface,3073,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['interface'],['interface']
Integrability,"from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:3377,interface,interface,3377,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['interface'],['interface']
Integrability,"from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7248,interface,interface,7248,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEditorControl; Property for the current caret position. Specified by:; caretPo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11760,interface,interface,11760,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Num",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:5097,interface,interface,5097,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7351,interface,interface,7351,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"g Classes:; CommandLineTaskRunner.CommandLineProgressMonitor. public interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1410,message,message,1410,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['message'],['message']
Integrability,"g factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10641,interface,interface,10641,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"g is moderately important). warning() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a warning alert dialog. warning(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text. warning(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with static text and a count. warning(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message to show a count of warnings. warning(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message. warning(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a warning message with a count. WARNING - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; warnOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the WARN level. Watershed - Class in qupath.imagej.processing. Implementation of 2D watershed transform for ImageJ. Watershed - Class in qupath.lib.analysis.algorithms. Implementation of 2D watershed transform. Watershed() - Constructor for class qupath.imagej.processing.Watershed;  ; Watershed() - Constructor for class qupath.lib.analysis.algorithms.Watershed;  ; WatershedCellDetection - Class in qupath.imagej.detect.cells. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellDetection;  ; WatershedCellMembraneDetection - Class in qupath.imagej.detect.cells. Cell detection that takes into consideration membrane staining. WatershedCellMembraneDetection() - Constructor for class qupath.imagej.detect.cells.WatershedCellMembraneDetection. Default constructor. watershedExpandLabels(ImageProcessor, double, boolean) - Static method in class qupath.image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1103996,message,message,1103996,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"g the preferred number of threads QuPath should use for multithreaded commands. static BooleanProperty; paintSelectedBoundsProperty(). Specify whether the bounding box of selected objects should be painted. static IntegerProperty; pointRadiusProperty(). Radius of the circle used to draw individual points in a point annotation (in pixels). static void; resetPreferences(). Reset the preferences to their defaults. static BooleanProperty; returnToMoveModeProperty(). Request that the GUI returns to using the PAN tool after a ROI is drawn. static boolean; savePreferences(). Save the preferences. static ObjectProperty<PathPrefs.FontSize>; scalebarFontSizeProperty(). Preferred font size for the scalebar in the viewer. static ObjectProperty<FontWeight>; scalebarFontWeightProperty(). Preferred font weight in the viewer. static DoubleProperty; scalebarLineWidthProperty(). Preferred line width for the scalebar. static StringProperty; scriptsPathProperty(). Path to a directory containing scripts for quick-access through the user interface. static IntegerProperty; scrollSpeedProperty(). Percentage to scale scroll speed for zooming etc. static BooleanProperty; selectionModeProperty(). Convert drawing tools to select objects, rather than creating new objects. static BooleanProperty; showExperimentalOptionsProperty(). Flag to indicate that menu items marked 'experimental' should be shown to the user. static BooleanProperty; showImageNameInTitleProperty(). Property specifying if QuPath should show the image title in the main window title. static BooleanProperty; showLegacyOptionsProperty(). Flag to indicate that the legacy options should be shown to the user - normally not desirable. static BooleanProperty; showMeasurementTableObjectIDsProperty(). Specify whether measurement tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnailsProperty(). Specify whether measurement tables should show thumbnail images by default or not. static Boolean",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:20252,interface,interface,20252,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['interface'],['interface']
Integrability,"g the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8126,interface,interface,8126,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"g towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6870,interface,interface,6870,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"g what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. makeSnapshot(QuPathGUI, QuPathViewer, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. makeSnapshotFX(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot as a JavaFX Image, using the current viewer if a viewer is required. makeSnapshotFX(QuPathGUI, QuPathViewer, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot as a JavaFX Image. makeTiles(ROI, int, int, boolean) - Static method in class qupath.lib.roi.RoiTools. Make fixed-size rectangular tile ROIs for a specified area. makeUnsignedByteArrayWrapper(byte[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a byte array, returning values as doubles. makeUnsignedShortArrayWrapper(short[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a short array, returning values as doubles. makeViewerSnapshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the current viewer. makeViewerSnapshot(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the specified viewer. manageChildMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Request that a menubar is managed as a child menubar. manageMainMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Request that a menubar is managed as a main menubar. MANAGER - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; MAPS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; MARKDOWN - Static variable in class qupath.lib.gui.scripting.richt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:669866,wrap,wrapper,669866,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"g) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the convex hull for point annotations within the viewer. showProjectMetadataEditor(Project<?>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Show the metadata editor for the specified project. showScalebarProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the scalebar. showScalebarProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the scalebar. showScript(File) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(File) - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor, opening an existing script file. showScript(String, String) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showScript(String, String) - Method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:969667,message,message,969667,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"g, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:3889,interface,interface,3889,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['interface'],['interface']
Integrability,"g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.contro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:5249,message,message,5249,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['message'],['message']
Integrability,"g.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1399,message,message,1399,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,1,['message'],['message']
Integrability,"gProperty; Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. See Also:. invertScrollingProperty(). invertZSlider; public static BooleanProperty invertZSliderProperty; Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. See Also:. invertZSliderProperty(). gridStartX; public static DoubleProperty gridStartXProperty; Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartXProperty(). gridStartY; public static DoubleProperty gridStartYProperty; Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). See Also:. gridStartYProperty(). gridSpacingX; public static DoubleProperty gridSpacingXProperty; Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingXProperty(). gridSpacingY; public static DoubleProperty gridSpacingYProperty; Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). See Also:. gridSpacingYProperty(). gridScaleMicrons; public static BooleanProperty gridScaleMicronsProperty; Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. See Also:. gridScaleMicronsProperty(). autoBrightnessContrastSaturationPercent; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty; Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. See Also:. autoBrightnessContrastSaturationPercentProperty(). keepDisplaySettings; public static BooleanProperty keepDisplaySettingsProperty; Retain display settings (channel colors, brightness/contrast) when ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:31135,depend,depends,31135,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"garithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long te",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659302,message,message,659302,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ge of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4076,interface,interface,4076,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ge qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. PredictionFunction<T>. Prediction function, typically used with a deep learning framework. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html:1771,Wrap,Wrapper,1771,javadoc/docs/qupath/opencv/dnn/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html,1,['Wrap'],['Wrapper']
Integrability,"ge to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream). Write an image region to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:3113,interface,interface,3113,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"ge); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10532,message,message,10532,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ge>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:2313,interface,interface,2313,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['interface'],['interface']
Integrability,"geData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.HierarchyOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Paint the overlay to a graphics object. paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; paintOverlay(Graphics2D, ImageRegion, double, ImageData<BufferedImage>, boolean) - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintRegion(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Paint an image region. paintRegionARGB(int[], long, long, int, int, int) - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Similar to ImageRegionRenderer.paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). paintSelectedBoun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:741469,interface,interface,741469,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"geData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTiles; public void readAllTiles(); Read all the tiles.; This is useful for a classifier that can be applied in full to an image without causing memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this serve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:4412,depend,dependent,4412,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['depend'],['dependent']
Integrability,"geData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysProm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2741,interface,interface,2741,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['interface'],['interface']
Integrability,"geOps.Filters. Apply a 2D median filter. median(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the median pixel value in a Mat, ignoring NaNs. MEDIAN - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Median value. MEDIUM - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; MEDIUM - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; MEMBRANE - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Cell boundary, with interior removed. memoizationTimeMillis - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; MEMORY_MONITORY - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; memoryReport(CharSequence) - Static method in class qupath.opencv.tools.OpenCVTools. Create a brief report on memory use, based on JavaCPP's Pointer class. menu() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig;  ; MenuActions - Interface in qupath.lib.gui.actions.menus. Common interface to define the contents of a menu in terms of actions. menuPathProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getMenuPath(). Menus - Class in qupath.lib.gui.actions.menus. Generate actions for installation in QuPath's main menubar. Menus() - Constructor for class qupath.lib.gui.actions.menus.Menus;  ; menusToMarkdown() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. menusToMarkdown(QuPathGUI, Writer) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Write a markdown representation of the menus for inclusion in the documentation. MenuTools - Class in qupath.lib.gui.tools. Static methods to help with creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:686094,interface,interface,686094,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"gePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4431,interface,interface,4431,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"geServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076837,interface,interface,1076837,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7583,interface,interface,7583,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['interface'],['interface']
Integrability,"geServers. Helper class for working with ImageServer objects. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelType. Image bit-depths and types. RearrangeRGBImageServer. Simple image server to swap the red and blue channels of an RGB image. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. ServerTools. Static methods helpful when dealing with ImageServers. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:5549,wrap,wrapper,5549,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,3,['wrap'],"['wrapped', 'wrapper', 'wraps']"
Integrability,"ged(QuPathViewer, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; imageDataChanged(QuPathViewer, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; ImageDataOp - Interface in qupath.opencv.ops. Request pixels from an image, potentially applying further transforms. imageDataProperty() - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; imageDataProperty() - Method in class qupath.lib.gui.QuPathGUI. Read-only property containing the image open within the currently-active viewer. imageDataProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Property for the image data currently being displayed within this viewer. imageDataProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Read-only property containing the image open within the currently-active viewer. ImageDataServer<T> - Interface in qupath.opencv.ops. An ImageServer that wraps an ImageData. ImageDetailsPane - Class in qupath.lib.gui.panes. A panel used for displaying basic info about an image, e.g. ImageDetailsPane(ObservableValue<ImageData<BufferedImage>>) - Constructor for class qupath.lib.gui.panes.ImageDetailsPane. Constructor. ImageDisplay - Class in qupath.lib.display. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplay() - Constructor for class qupath.lib.display.ImageDisplay. Constructor. imageDisplayObjectProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. The current image display. imageDisplayProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Property for the image display that should be shown and managed by this pane. imageDisplayProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. The image display to which the sliders are applied. ImageDisp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:588219,wrap,wraps,588219,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wraps']
Integrability,"ger;  ; selectedObjectChanged(QuPathViewer, PathObject) - Method in interface qupath.lib.gui.viewer.QuPathViewerListener. Called when the primary selected object has changed in a viewer. selectedObjectChanged(QuPathViewer, PathObject) - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; selectedObjectChanged(QuPathViewer, PathObject) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; selectedPathObjectChanged(PathObject, PathObject, Collection<PathObject>) - Method in interface qupath.lib.objects.hierarchy.events.PathObjectSelectionListener. Fired when the selected objects have changed. selectedProperty() - Method in class qupath.lib.gui.SelectableItem. Property representing the item that has been selected (which may or may not be the same as SelectableItem.getItem()). selectedStyleProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current selected style. selectedTextProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; selectedTextProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently selected in the editor control. selectedTextProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; selectedTool() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; selectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property containing the currently-selected PathTool. SEL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:896953,interface,interface,896953,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ges.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getConnectedObjects(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; getConnectionGroups() - Method in class qupath.lib.objects.PathObjectConnections. Get an unmodifiable list containing all connections groups. getConnections(PathObject) - Method in class qupath.lib.objects.PathObjectConnections. Get all the connections to a specified PathObject. getContents(Parent, Collection<Node>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively. getContentsOfType(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:361087,interface,interface,361087,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:7908,interface,interface,7908,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5963,interface,interface,5963,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). createServerBuilder; protected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:4349,depend,depend,4349,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['depend'],['depend']
Integrability,"getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. BioFormatsOptionsExtension; public BioFormatsOptionsExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns the version stored within this jar, because it is matched to the QuPath version. Specified by:; getQuPathVersion in interface QuPathExtension; Returns:; a semantic version corresponding to a QuPath version, e.g. ""0.3.0"".; See Also:. Version. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html:2322,interface,interface,2322,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsOptionsExtension.html,12,['interface'],['interface']
Integrability,"getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. sup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:3840,interface,interface,3840,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"getEntry(ImageData<T> imageData); Request a ProjectImageEntry associated with an ImageData. Parameters:; imageData - ; Returns:. removeImage; void removeImage(ProjectImageEntry<?> entry,; boolean removeAllData); Remove an image from the project, optionally including associated data. Parameters:; entry - ; removeAllData - . removeAllImages; void removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData); Remove multiple images from the project, optionally including associated data. Parameters:; entries - ; removeAllData - . syncChanges; void syncChanges(); throws IOException; Save the project. Throws:; IOException. getImageList; List<ProjectImageEntry<T>> getImageList(); Get a list of image entries for the project. Returns:. getName; String getName(); Get the name of the project. Returns:. getCreationTimestamp; long getCreationTimestamp(); Request a timestamp from when the project was created. Returns:. getModificationTimestamp; long getModificationTimestamp(); Request a timestamp from when the project was last synchronized. Returns:; See Also:. syncChanges(). getScripts; default ResourceManager.Manager<String> getScripts(); Get a manager for scripts saved within this project. Returns:; See Also:. getResources(String, Class, String). getObjectClassifiers; default ResourceManager.Manager<ObjectClassifier<T>> getObjectClassifiers(); Get a manager for object classifiers saved within this project. Returns:; See Also:. getResources(String, Class, String). getPixelClassifiers; default ResourceManager.Manager<PixelClassifier> getPixelClassifiers(); Get a manager for pixel classifiers saved within this project. Returns:; See Also:. getResources(String, Class, String). getResources; default <S,; R extends S> ResourceManager.Manager<R> getResources(String location,; Class<S> cls,; String ext); Get a manager for objects of a specified class within this project. Type Parameters:; S - ; Parameters:; location - a location relative to the project where the re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:7574,synchroniz,synchronized,7574,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['synchroniz'],['synchronized']
Integrability,"getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a builder capable of creating a server like this one. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getSeries; public int getSeries(); Get the series index, as used by Bio-Formats. Returns:. readTile; public BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>; Throws:; Exception. getMetadataStore; public OMEPyramidStore getMetadataStore(); Get the MetadataStore, as used by Bio-Formats. This can be used to query metadata values not otherwise accessible. Returns:. dumpMetadata; public String dumpMetadata(); Retrieve a string representation of the metadata OME-XML. Returns:. getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<BufferedImage>; O",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:5895,interface,interface,5895,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['interface'],['interface']
Integrability,"getPixelCalibration() - Method in interface qupath.lib.images.PathImage. Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. getPixelCalibration() - Method in interface qupath.lib.images.servers.ImageServer. Get the PixelCalibration object from the current metadata. getPixelCalibration() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel height, in the stored units. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel height in microns, if available - or Double.NaN otherwise. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel height in microns, or Double.NaN if this is unknown. getPixelHeightUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel height unit. getPixelLayer(ImageData<?>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Request the pixel layer from an ImageData. getPixels(SimpleImage, boolean) - Static method in class qupath.lib.analysis.images.SimpleImages. Get the pixel values for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:482794,interface,interface,482794,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:3226,depend,depend,3226,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,2,['depend'],['depend']
Integrability,"getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. getTilesToRequest(ImageServer<?>, Shape, double, int, int, List<RegionRequest>) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). getTileWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:535053,interface,interface,535053,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ge getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<TextArea>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<TextArea>; Returns:. requestFocus; public void requestFocus(); Description copied from interface: ScriptEditorControl; Request that the control is focused. Specified by:; requestFocus in interface ScriptEditorControl<TextArea>. caretPositionProperty; public ReadOnlyIntegerProperty caretPositionProperty(); Description copied from interface: ScriptEdito",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:10466,interface,interface,10466,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ginal ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9558,interface,interface,9558,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ging MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in interface qupath.lib.plugins.PathTask. Perform optional post-processing after a task has completed. TaskRunner - Interface in qupath.lib.plugins. A minimal interface for a class capable of running tasks in parallel, giving feedback to the user. TaskRunnerFX - Class in qupath.lib.gui. Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerFX(QuPathGUI) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor. TaskRunnerFX(QuPathGUI, int) - Constructor for class qupath.lib.gui.TaskRunnerFX. Constructor specifying the number of threads. TaskRunnerUtils - Class in qupath.lib.plugins. A utility class to help with the creation of TaskRunner instances. TemporaryObject - Interface in qupath.lib.objects. Marker interface used to indicate that child objects shouldn't be added to any cache for display. test(ImageData<?>, RegionRequest) - Method in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters;  ; test(PathObject) - Method in enum class qupath.lib.objects.PathObjectFilter;  ; text(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the text property of the action. text(Obser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1017749,interface,interface,1017749,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"gins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:3413,interface,interface,3413,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['interface'],['interface']
Integrability,"gins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:3802,interface,interface,3802,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['interface'],['interface']
Integrability,"gionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. recordingProperty; public BooleanProperty recordingProperty(); Return the recording property of this ViewTracker. Returns:; recording property; See Also:. isRecording(); setRecording(boolean). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:8704,interface,interface,8704,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"gionFilters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.Sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1015,interface,interfaces,1015,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['interface'],['interfaces']
Integrability,"green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:4249,interface,interface,4249,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"gth(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:6340,interface,interface,6340,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"guage. cuda() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available. cuda16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available, with 16-bit floating point. currentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current selection. cut() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; cutAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; CYAN - Static variable in class qupath.lib.common.ColorTools. Packed int representing cyan. CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:239022,interface,interface,239022,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"gy Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Histogram. Class for storing histogram data & basic statistics. HistogramChart. JavaFX chart for displaying histograms. HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. HistogramChart.DisplayMode. Display",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:19845,adapter,adapters,19845,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['adapter'],['adapters']
Integrability,"h - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7682,interface,interface,7682,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"h between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9056,interface,interface,9056,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"h size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested color and brightness/contrast setting. ChannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. Charts. Helper class for generating interactive charts. Charts.BarChartBuilder. Builder for creating scatter charts. Charts.PieChartBuilder. Builder for creating pie charts. Charts.ScatterChartBuilder. Builder for creating scatter charts. ChartThresholdPane. Pane that can be used to contain an XYChart, adding adjustable thresholds to be displayed. ChartTools. Collection of static methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChoiceParam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:6118,interface,interface,6118,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"h static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the messag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2273,message,message,2273,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"h(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7398,interface,interface,7398,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"h, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; clo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:4416,interface,interface,4416,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"h. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3457,interface,interface,3457,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"h.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) - Static method in class qupath.lib.awt.common.BufferedImageTools. Duplicate a BufferedImage. duplicateAllSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate all the selected objects in a hierarchy. duplicateObjects(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Duplicate the specified objects, assigning new IDs for each object. duplicateObjects(PathObjectHierarchy, Collection<PathObject>, boolean) - Static method in class qupath.lib.objects.PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:274070,interface,interface,274070,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"h.lib.images.writers.ImageWriter. Returns true if the writer is capable of writing pyramidal images. supportsPyramidal() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsRGB() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsRGB() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsRGB() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsRGB() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsRGB() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle RGB (it probably can...). supportsRGB() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsT() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsT() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsT() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsT() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsT() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle multiple timepoints. supportsT() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; supportsZ() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; supportsZ() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; supportsZ() - Method in class qupath.lib.images.writers.JpegWriter;  ; supportsZ() - Method in class qupath.lib.images.writers.PngWriter;  ; supportsZ() - Method in interface qupath.lib.images.writers.ImageWriter. Check if writer can handle multiple z-slices. supportsZ() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; SvgBuilder() - Constructor for class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a new builder, which will later be customized. SvgBuilder(QuPathViewer) - Constructor for class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a builder initialized according to the current viewer. SvgExtension - Class in qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1013490,interface,interface,1013490,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hClass classifications assigned. selectObjectsByPathClass(PathObjectHierarchy, PathClass...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified PathClass classifications assigned. selectObjectsByPlane(int, int) - Static method in class qupath.lib.scripting.QP. Selected objects in the current hierarchy occurring on the specified z-slice and timepoint. selectObjectsByPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Selected objects in the specified hierarchy occurring on the specified plane (z-slice and timepoint). selectObjectsByPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Selected objects in the current hierarchy occurring on the specified plane (z-slice and timepoint). selectObjectsOnCurrentPlane(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Select all the objects on the current plane of the viewer. selectRange(int, int) - Method in interface qupath.lib.gui.scripting.EditableText. Set the range of the selected text. selectRange(int, int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; selectRange(int, int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; selectTiles() - Static method in class qupath.lib.scripting.QP. Select all tile objects in the current hierarchy. selectTiles(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all tile objects in the specified hierarchy. selectTMACores() - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores(boolean) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the current hierarchy, optionally including missing cores. selectTMACores(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Select all TMA core objects in the specified hierarchy, excluding missing cores.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:901955,interface,interface,901955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hObject; (assuming that the object is part of a hierarchy with a root). getAncestorTMACore(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. getAnnotatedActions(Object) - Static method in class qupath.lib.gui.actions.ActionTools. Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. getAnnotationObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all annotation objects in the hierarchy. getAnnotationObjects() - Static method in class qupath.lib.scripting.QP. Get a list of the current annotation objects. getArea() - Method in class qupath.lib.roi.EllipseROI;  ; getArea() - Method in class qupath.lib.roi.RectangleROI;  ; getArea() - Method in class qupath.lib.roi.AreaROI;  ; getArea() - Method in class qupath.lib.roi.GeometryROI;  ; getArea() - Method in interface qupath.lib.roi.interfaces.ROI. Get the area of this ROI. getArea() - Method in class qupath.lib.roi.LineROI;  ; getArea() - Method in class qupath.lib.roi.PointsROI;  ; getArea() - Method in class qupath.lib.roi.PolygonROI;  ; getArea() - Method in class qupath.lib.roi.PolylineROI;  ; getArea(ROI) - Static method in class qupath.lib.roi.RoiTools. Get an Area object representing a ROI. getAreaObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with area ROIs from a collection of objects. getARGB(Color) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a packed int (ARGB) representation of a Color object. getArgs() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the args array. getArgs() - Method in class qupath.lib.scripting.ScriptParameters. Get an optional array of string arguments passed to the script. getArray() - Method in class qupath.lib.color.Stai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:329150,interface,interface,329150,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2601,interface,interface,2601,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['interface'],['interface']
Integrability,"hObject pathObject). Returns true if the specified PathObject is contained within this group. List<Set<PathObject>>; getConnectedClusters(). Get a list of PathObjects that are connected to each other in this triangulation. Collection<double[]>; getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections). Deprecated. Collection<PathObject>; getConnectedNodes(PathObject pathObject,; Collection<PathObject> list). Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). List<PathObject>; getConnectedObjects(PathObject pathObject). Get all the connections to a specified PathObject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:2292,interface,interface,2292,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,2,['interface'],['interface']
Integrability,"haComposite(Graphics2D g2d). isVisible; public boolean isVisible(); Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Returns:. setPreferredOverlayColor; public void setPreferredOverlayColor(Color color); Set a preferred overlay color, which the overlay may or may not make use of.; The aim is to provide a means to suggest drawing with a light color on a dark image, ; or a dark color on a light image. Parameters:; color - . getPreferredOverlayColor; public Color getPreferredOverlayColor(); Return the preferred overlay color. Returns:; See Also:. setPreferredOverlayColor(Color). getOpacity; public double getOpacity(); Get opacity, between 0 (completely transparent) and 1 (completely opaque). Returns:. setOpacity; public void setOpacity(double opacity); Set opacity between 0 (completely transparent) and 1 (completely opaque). Parameters:; opacity - . setLocationStringFunction; public void setLocationStringFunction(AbstractOverlay.LocationStringFunction fun); Set a custom function to calculate a location string for the overlay. Parameters:; fun - . getLocationStringFunction; protected AbstractOverlay.LocationStringFunction getLocationStringFunction(). getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Specified by:; getLocationString in interface PathOverlay; Parameters:; imageData - ; x - x-coordinate, in the image space (not the viewer component space); y - y-coordinate, in the image space (not the viewer component space); z - z-index for the region currently being viewed; t - t-index for the region currently being viewed; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html:4257,interface,interface,4257,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractOverlay.html,2,['interface'],['interface']
Integrability,"hanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveVie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11073,synchroniz,synchronizeViewersProperty,11073,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewersProperty']
Integrability,"hannelTransformFeatureServer. A TransformingImageServer that applies color transforms to generate channels. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CroppedImageServer. ImageServer that treats a particular sub-region of another ImageServer as a full image, ; i.e. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. ImageChannel. The name and display color for a single image channel. ImageServer<T>. Generic ImageServer, able to return pixels and metadata. ImageServerBuilder<T>. Helper class for creating ImageServers from a given URI and optional argument list. ImageServerBuilder.AbstractServerBuilder<T>. Abstract ServerBuilder implementation that handles metadata. ImageServerBuilder.DefaultImageServerBuilder<T>. Default ImageServerBuilder.ServerBuilder that requires a URI and (optional) array of String arguments to create an ImageServer ; with the help of a ImageServerBuilder. ImageServerBuilder.ServerBuilder<T>. Interface that defines a class encapsulating all that is required to build an ImageServer. ImageServerBuilder.UriImageSupport<T>. Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. ImageServerMetadata. Class for storing primary ImageServer metadata fields. ImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:2487,interface,interface,2487,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['interface'],['interface']
Integrability,"hannels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:10437,interface,interface,10437,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"hat deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:241889,interface,interface,241889,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hat takes an existing metadata object as a starting point, ; but allows individual properties to be overridden. Builder(PixelCalibration) - Constructor for class qupath.lib.images.servers.PixelCalibration.Builder. Create a new builder, initialized values of an existing PixelCalibration. buildFilePath(String, String...) - Static method in class qupath.lib.scripting.QP. Build a file path from multiple components. buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform>) - Static method in class qupath.opencv.ops.ImageOps. Create an ImageDataOp, optionally using a specified collection of input channels. buildImageDataOp(ColorTransforms.ColorTransform...) - Static method in class qupath.opencv.ops.ImageOps. Create an ImageDataOp, optionally using a specified array of input channels. BuildInfo - Class in qupath.lib.gui. Basic version information about the current QuPath build. buildModel() - Method in class qupath.opencv.dnn.OpenCVDnn. Build a model. buildModel(DnnModelParams) - Method in interface qupath.opencv.dnn.DnnModelBuilder. Build a DnnModel if possible, or return null otherwise. buildModel(DnnModelParams) - Static method in class qupath.opencv.dnn.DnnModels. Build a DnnModel from the given parameters. buildModel(DnnModelParams) - Method in class qupath.opencv.dnn.OpenCVDnnModelBuilder;  ; buildModel(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn. Build a model, specifying the OpenCVDnn.ModelType. buildNet() - Method in class qupath.opencv.dnn.OpenCVDnn. Build the OpenCV Net. buildOriginal() - Method in class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder;  ; buildOriginal() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; buildParameters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Build a DensityMaps.DensityMapParameters object containing the main density map parameters. buildPatchClassifierParams(BioimageIoSpec.BioimageIoModel, int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:78524,interface,interface,78524,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"he ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.projects.Project. Get a list of image entries for the project. getImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a name that may be used for this entry. getImageObjectClassificationString(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. getImagePlane() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the ImagePlane for this subdivision. getImagePlane() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImagePlane currently being displayed, including z and t positions. getImagePlane() - Method in class qupath.lib.images.servers.TileRequest. Get the ImagePlane for this request. getImagePlane() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice and time point for this region as an ImagePlane. getImagePlane() - Method in class qupath.lib.roi.AreaROI;  ; getImagePlane() - Method in class qupath.lib.roi.EllipseROI;  ; getImagePlane() - Method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:406447,interface,interface,406447,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"he current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:8754,interface,interface,8754,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"he new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more effic",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:10439,interface,interface,10439,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"he object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:105525,interface,interface,105525,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"he preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:4146,interface,interface,4146,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"he range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:267993,interface,interface,267993,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"he script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:46433,wrap,wrapper,46433,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"he scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; name - the language name; exts - the possible extensions for this language; completor - the auto-completion object for this language. Method Details. getDefaultAutoCompletor; protected ScriptAutoCompletor getDefaultAutoCompletor(String languageName); Default method to get a suitable auto completor for the given language name. Parameters:; languageName - ; Returns:. execute; public Object execute(ScriptParameters params); throws ScriptException; Description copied from interface: ExecutableLanguage; Execute the given script String. Specified by:; execute in interface ExecutableLanguage; Parameters:; params - ; Returns:; Throws:; ScriptException. tryToInterpretMessage; protected String tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable). getDefaultScriptName; protected String getDefaultScriptName(). createContext; protected ScriptContext createContext(ScriptParameters params); Create a ScriptContext containing information from the ScriptParameters. Parameters:; params - ; Returns:. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. getImportStatements; public String getImportStatements(Collection<Class<?>> classes); Get the import statements as a String, to add at the beginning of the executed script. Parameters:; classes ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:4546,interface,interface,4546,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['interface'],['interface']
Integrability,"he system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; void pluginCompleted(String message); Notify the monitor that the plugin has completed its work. This is ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1777,message,message,1777,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['message'],['message']
Integrability,"he value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachVie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11576,interface,interface,11576,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"here connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) corresponds to color represented by this stain vector. getColor() - Method in interface qupath.lib.display.ChannelDisplayInfo. Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. getColor() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColor() - Method in class qupath.lib.display.settings.ChannelSettings. Get the color used to display the channel, or null if a color is not relevant. getColor() - Method in class qupath.lib.images.servers.ImageChannel. Color used to display the output channel. getColor() - Method in class qupath.lib.objects.classes.PathClass. Get the color that should be used to display objects with this classification. getColor() - Method in class qupath.lib.objects.PathObject. Return any stored color as a packed RGB value. getColor(double, double, double) - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get a packed ARGB representation of the (interpolated) color at the specified value,. getColorDeconvolutionStains() - Method in class qupath.lib.images.ImageData. Get the stains defined for this image, or null if this is not a brightfield image suitable for color deconvolution. getColorDeconvolutionStainsAsString(ColorDeconvolutionStains, int) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Get a String representation of the stains and background. getColorForObject(PathObject) - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the display color for a specified object, according to the settings of this mapper. getColorMap() - Method in class qupath.lib.gui.ColorMapCanvas. Return the currently displayed ColorMaps.ColorMap. getColorMapper() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the color mapper, which is effectively a lookup table. getColorMaps() - Static method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:355769,interface,interface,355769,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"herited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:4822,interface,interface,4822,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"herwise. setGridSize; public boolean setGridSize(int nRows,; int nCols); Set the grid to have a specific number of rows and columns. Parameters:; nRows - ; nCols - ; Returns:. addRow; public void addRow(QuPathViewer viewer). addColumn; public void addColumn(QuPathViewer viewer). splitViewer; public void splitViewer(QuPathViewer viewer,; boolean splitVertical). resetGridSize; public void resetGridSize(). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10175,interface,interface,10175,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['interface'],['interface']
Integrability,"hey are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:5048,interface,interface,5048,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"hing for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Specified by:; requiresTileRegion in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. zPositionProperty; public IntegerProperty zPositionProperty(); Current z-position for the z-slice currently visible in the viewer. Returns:; See Also:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36897,interface,interface,36897,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"his core, for example because insufficient tissue is present.; 'Missing' cores are typically ignored during analysis. Parameters:; missing - . getCaseID; public String getCaseID(); Get the case ID metadata value. Returns:; See Also:. setCaseID(String). setCaseID; public void setCaseID(String caseID); Set the case ID metadata value. This is typically used to store a patient identifier, ; and must be unique for the patient (but multiple cores may have the same ID if they correspond ; to the same patient). Parameters:; caseID - . putMetadataValue; public Object putMetadataValue(String key,; String value); Description copied from interface: MetadataStore; Store a new metadata value. Specified by:; putMetadataValue in interface MetadataStore; Parameters:; key - ; value - ; Returns:. getMetadataString; public String getMetadataString(String key); Description copied from interface: MetadataStore; Get a metadata value, cast as a String if possible. Specified by:; getMetadataString in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataValue; public Object getMetadataValue(String key); Description copied from interface: MetadataStore; Get a metadata value of any kind. Specified by:; getMetadataValue in interface MetadataStore; Parameters:; key - ; Returns:. getMetadataKeys; public Set<String> getMetadataKeys(); Description copied from interface: MetadataStore; Get all metadata keys. Specified by:; getMetadataKeys in interface MetadataStore; Returns:. getMetadataMap; public Map<String,String> getMetadataMap(); Description copied from interface: MetadataStore; Returns an unmodifiable map containing the metadata. Specified by:; getMetadataMap in interface MetadataStore; Returns:. clearMetadata; public void clearMetadata(); Clear all associated metadata. toString; public String toString(). Overrides:; toString in class PathObject. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html:6127,interface,interface,6127,javadoc/docs/qupath/lib/objects/TMACoreObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/TMACoreObject.html,1,['interface'],['interface']
Integrability,"hms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526955,interface,interface,526955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hod in class qupath.lib.gui.QuPathGUI. Open the image represented by the specified ProjectImageEntry. openInBrowser(String) - Static method in class qupath.lib.gui.QuPathGUI. Try to launch a browser window for a specified URL. opening(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological opening filter. openingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply opening by reconstruction, with the specified minimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:727364,wrap,wrapper,727364,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"hod in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Compute the intersection of a Geometry and a specified bounding box. consumeOutput() - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create a basic do-nothing output handler that consumes the output with no changes. contains(double, double) - Method in class qupath.lib.roi.AreaROI;  ; contains(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; contains(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; contains(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Test is the ROI contains specified x, y coordinates. contains(double, double) - Method in class qupath.lib.roi.LineROI;  ; contains(double, double) - Method in class qupath.lib.roi.PointsROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; contains(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:136674,interface,interface,136674,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hod in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is contained within this group. containsObject(PathObject) - Method in class qupath.opencv.features.DelaunayTriangulation;  ; cont",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:138174,interface,interface,138174,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hod in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Get a set of the scripting languages supported by this styler. getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; getLanguageNames() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; getLanguageNames() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Get a set of the scripting languages supported by this syntax. getLaplacian() - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getLaplacian() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getLargestImageHeight() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the height of the largest image, if known. getLargestImageWidth() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the width of the largest image, if known. getLastChangeTimestamp() - Method in class qupath.lib.display.ImageDisplay. Get a timestamp the last known changes for the object. getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getLastChangeTimestamp() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getLastChangeTimestamp() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Timestamp of the last change (probably in milliseconds). getLastResultsDescription() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:422104,interface,interface,422104,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"hod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class DefaultPathObjectComparator. java.lang.Object; qupath.lib.objects.DefaultPathObjectComparator. All Implemented Interfaces:; Comparator<PathObject>. public class DefaultPathObjectComparator; extends Object; implements Comparator<PathObject>; Default comparator to enable objects to be sorted in a more predictable manner.; ; The aim is to help sorted lists to keep non-detection objects near the top, ; and thereafter to sort by classification and ROI location (y coordinate first, then x) according to; the DefaultROIComparator.; ; Note: The precise comparison is undefined and subject to change/optimization.; This is intended for more reproducible behavior while QuPath is running, but it not ; guaranteed to apply the same comparison across software versions. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultPathObjectComparator();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compare(PathObject o1,; PathObject o2);  ; static Comparator<PathObject>; getInstance(). Get shared comparator instance to sort PathObjects repeatably. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface java.util.Comparator; equals, reversed, thenComparing, thenComparing, thenComparing, thenComparingDouble, thenComparingInt, thenComparingLong. Constructor Details. DefaultPathObjectComparator; public DefaultPathObjectComparator(). Method Details. compare; public int compare(PathObject o1,; PathObject o2). Specified by:; compare in interface Comparator<PathObject>. getInstance; public static Comparator<PathObject> getInstance(); Get shared comparator instance to sort PathObjects repeatably. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html:1692,interface,interface,1692,javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectComparator.html,2,['interface'],['interface']
Integrability,"hod; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class jav",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:2044,message,message,2044,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"hods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RegionFilter.StandardRegionFilters valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the argument is null. toString; public String toString(). Overrides:; toString in class Enum<RegionFilter.StandardRegionFilters>. test; public boolean test(ImageData<?> imageData,; RegionRequest region). Specified by:; test in interface BiPredicate<ImageData<?>,RegionRequest>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:4352,interface,interface,4352,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['interface'],['interface']
Integrability,"holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6803,interface,interface,6803,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interface']
Integrability,"hor:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:1512,synchroniz,synchronized,1512,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['synchroniz'],['synchronized']
Integrability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2676,interface,interface,2676,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['interface'],['interface']
Integrability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2542,interface,interface,2542,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['interface'],['interface']
Integrability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & opera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2516,interface,interface,2516,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"hort one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2527,interface,interface,2527,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"hould be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Parameters:; model - . getName; public String getName(); Get a user-read",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3380,interface,interface,3380,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['interface'],['interface']
Integrability,"hould be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1016603,message,message,1016603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"how logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109502,wrap,wrap,1109502,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"hreads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected Ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:5949,interface,interface,5949,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['interface'],['interface']
Integrability,"ht); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8635,interface,interface,8635,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:3968,interface,interface,3968,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3717,interface,interface,3717,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"i.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupath.lib.images.servers.ImageServerBuilder.Uri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:341346,interface,interfaces,341346,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"i.e. getNormalizedCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the normalized histogram count for the specified bin. getNucleusOrMainROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. getNucleusROI() - Method in class qupath.lib.objects.PathCellObject. Get the nucleus ROI for this cell. getNucleusROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. getNullClass() - Static method in class qupath.lib.objects.classes.PathClass. Get the value of PathClass.NULL_CLASS, used to represent no classification. getNumBins() - Method in class qupath.lib.gui.charts.HistogramDisplay. Get the requested number of bins used for the histogram. getNumericValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getNumericValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get the numeric value from an object for the specific measurement. getNumNaNs() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get count of the number of NaN values added. getNumPoints() - Method in class qupath.lib.roi.AreaROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.GeometryROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolygonROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.PolylineROI. Default implementation, calls ROI.getAllPoints() and then caches the result. getNumPoints() - Method in class qupath.lib.roi.EllipseROI. Returns 4 (since the ellipse is defined by its bounding box). getNumPoints() - Method in interface qupath.lib.roi.interfaces.ROI.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:459374,interface,interface,459374,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"i.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:241993,interface,interface,241993,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,i.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objec,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:452187,interface,interface,452187,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is availabl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3496,message,message,3496,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7220,message,message,7220,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ialog. static String; promptForFilePathOrURL(String title,; String defaultPath,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt user to select a file or input a URL. static List<File>; promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts). Deprecated.; Prompt to open a list of files. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; String filterName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:2705,message,message,2705,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109117,interface,interface,1109117,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features - package qupath.opencv.features. Classes for feature calculation usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814489,interface,interfaces,814489,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"ib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:3069,interface,interface,3069,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"ib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3020,interface,interface,3020,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['interface'],['interface']
Integrability,"ible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. recordingProperty; public BooleanProperty recordingProperty(); Return the recording property of this ViewTracker. Returns:; recording property; See Also:. isRecording(); setRecording(boolean). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. getFile; public File getFile(); Return the file associated with this ViewTracker. This can return ; null if it is not local or if the recording cannot be saved. Returns:; file. setFile; public void setFile(File file); Set the file for this ViewTracker. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:8974,interface,interface,8974,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"ic Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4815,message,message,4815,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ic boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3860,message,message,3860,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ic methods to help when working with JavaFX charts, ; and adapting these for QuPath's purposes. ChartTools() - Constructor for class qupath.lib.gui.charts.ChartTools;  ; CHECK_URIS - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; checkExtensions(String, String...) - Static method in class qupath.lib.common.GeneralTools. Check whether a path ends with one of a number of specified extensions (case insensitive). checkForUpdate() - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:98320,interface,interface,98320,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ication. replaceClassification(PathObjectHierarchy, PathClass, PathClass) - Static method in class qupath.lib.scripting.QP. Apply a new classification to all objects with a specified original classification in the provided hierarchy. replaceCurlyQuotes(String) - Static method in class qupath.lib.common.GeneralTools. Replace different kinds of 'curly quote' in a String with straight quotes. replaceGremlins(String, CharSequence) - Static method in class qupath.lib.common.GeneralTools. Replace non-printable characters from a String with a specified replacement (may be null). replaceLastStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Replace the most recently added step with this one. replaceNaNs(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that replaces NaNs with a specified value. replaceNaNs(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace NaNs in a floating point array. replaceSelection(String) - Method in interface qupath.lib.gui.scripting.EditableText. Insert the specified text, replacing any existing selection. replaceSelection(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; replaceSelection(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; replaceValues(Mat, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace a specific value in an array. requestAutomaticUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request an automated update check in a background thread. requestCancelDirection(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Requests that the viewer cancels either the x- or y-axis direction. requestDecelerate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that a viewer decelerate any existing panning smoothly. requestedPixelSize(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a pixel size in calibrated units",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:855930,interface,interface,855930,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ication. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6233,message,message,6233,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ic BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty). See Also:. getActiveViewer(); setActiveViewer(QuPathViewer); activeViewerProperty(). synchronizeViewers; public ReadOnlyBooleanProperty synchronizeViewersProperty. See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean); synchronizeViewersProperty(). Method Details. create; public static ViewerManager create(QuPathGUI qupath); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:5709,synchroniz,synchronizeViewers,5709,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,2,['synchroniz'],"['synchronizeViewers', 'synchronizeViewersProperty']"
Integrability,"ic ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<TextArea>. paste; public void paste(); Description copied f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6852,interface,interface,6852,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"id computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:7101,interface,interface,7101,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"id. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5269,interface,interface,5269,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"id; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3539,interface,interface,3539,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"id; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Constructor.; ; An ImageData is required because some forms of classification may required additional image properties ; (e.g. image type, stains), not simply an ImageServer. Parameters:; imageData - ; classifier - . PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String customID,; ColorModel colorModel); Constructor. Parameters:; imageData - ; classifier - ; customID - optionally provide a custom ID (path). This is when the default (based upon the ImageData and PixelClassifier isn't sufficient), ; e.g. because the classifier can change output based upon ImageData status.; colorModel - optional colormodel. Method Details. readAllTi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:3210,interface,interface,3210,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['interface'],['interface']
Integrability,"id; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4439,message,message,4439,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"idden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Overrides:; runPlugin in class AbstractPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:5306,interface,interface,5306,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,4,['interface'],['interface']
Integrability,"ideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_associated_image(long, String, int[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_icc_profile(long, byte[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_read_region(long, int[], long, long, int, long, long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; OpenSlide.OpenSlideDisposedException - Exception Class in qupath.lib.images.servers.openslide.jna. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideDisposedException() - Constructor for exception class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException;  ; OpenSlideExtension - Class in qupath.ext.openslide;  ; OpenSlideExtension() - Constructor for class qupath.ext.openslide.OpenSlideExtension;  ; OpenslideImageServer - Class in qupath.lib.images.servers.openslide. ImageServer implementation using OpenSlide. OpenslideImageServer(URI, String...) - Constructor for class qupath.lib.images.servers.openslide.OpenslideImageServer. Create an ImageServer using OpenSlide for the specified file. OpenSlideJNA - Interface in qupath.lib.images.servers.openslide.jna. JNA interface for OpenSlide. OpenSlideLoader - Class in q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:729231,interface,interface,729231,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"idity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3603,interface,interfaces,3603,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interfaces']
Integrability,"idth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied fro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10181,interface,interface,10181,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"idth of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8356,interface,interface,8356,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ied by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9322,interface,interface,9322,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ied by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7630,interface,interface,7630,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ied by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description copied from interface: ImageServer; Number of channels (3 for RGB). Specified by:; nChannels in interface ImageServer<T>; Returns:. nZSlices; public int nZSlices(); Description copied from interface: ImageServer; Number of slices in a z-stack. Specified by:; nZSlices in interface ImageServer<T>; Returns:. nTimepoints; public int nTimepoints(); Description copied from interface: ImageServer; Number of time points in a time series. Specified by:; nTimepoints in interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:10316,interface,interface,10316,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"ied by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7919,interface,interface,7919,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ied by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:5733,interface,interface,5733,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"ied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Integer getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:4284,interface,interface,4284,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"ied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:9671,interface,interface,9671,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ield; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class WrappedBufferedImageServer. java.lang.Object; qupath.lib.images.servers.AbstractImageServer<BufferedImage>; qupath.lib.images.servers.AbstractTileableImageServer; qupath.lib.images.servers.WrappedBufferedImageServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class WrappedBufferedImageServer; extends AbstractTileableImageServer; Implementation of an ImageServer that simply wraps an existing BufferedImage.; ; This may help whenever requiring a server, but only having a BufferedImage. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WrappedBufferedImageServer(String imageName,; BufferedImage img). Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels). Create an ImageServer<BufferedImage> using an image that has been provided directly. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:1142,Wrap,WrappedBufferedImageServer,1142,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,1,['Wrap'],['WrappedBufferedImageServer']
Integrability,"ield; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default input layer name. This should be used when the input layer name is known or ; unimportant (e.g. the common case of a single input). See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default output layer name. This should be used when the output layer name is known or ; unimportant (e.g. the common case of a single output). See Also:. Constant Field Values. Method Details. predict; Map<String,Mat> predict(Map<String,Mat> blobs); Prediction function that can take multiple inputs. Parameters:; blobs - ; Returns:. predict; default Mat predict(Mat mat); Prediction function that takes a single input and gives a single output. Parameters:; mat - ; Returns:. batchPredict; default List<Mat> batchPredict(List<? extends Mat> mats); Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs.; Each input is expected to have a single output. Parameters:; mats - ; Returns:. close; default void close(); throws Exception; Close this model if it will not be needed again.; Subclasses that require cleanup may override this.; The default implementation does nothing. Specified by:; close in interface AutoCloseable; Throws:; Exception. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:3522,interface,interface,3522,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,2,['interface'],['interface']
Integrability,"ierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image data for the script. setImageData(ImageData<?>, Collection<? extends PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set the ImageData and a collection of objects to measure. setImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the current image for this viewer. setImageData(ImageData<BufferedImage>, boolean) - Method in class qupath.lib.display.ImageDisplay. Set the ImageData to a new value. setImageJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. setImageType(ImageData.ImageType) - Method in class qupath.lib.images.ImageData. Set the image type. setImageType(ImageData.ImageType) - Static method in class qupath.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setInten",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:929770,interface,interface,929770,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ies. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6155,message,message,6155,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14481,depend,depending,14481,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depending']
Integrability,"if the spacebar was pressed when this component was focussed, and is still being held down. isStandalone() - Method in class qupath.lib.gui.QuPathGUI. Query whether this is a standalone QuPathGUI instance, as flagged during startup. isStringMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a String value only. isStructureChangeEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the hierarchy structure has changed, e.g. isSubtractMode(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a TIFF image. isTile() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents an image tile. isTitle - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; isTitle() - Method in class qupath.lib.plugins.parameters.EmptyParameter. Returns true if the parameter should be considered a title. isTMACore() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents a TMA core. isTMADearrayed() - Static method in class qupath.lib.scripting.QP. Returns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:633952,interface,interface,633952,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:4347,synchroniz,synchronizeViewersProperty,4347,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewersProperty']
Integrability,"ified by:; paste in interface ScriptEditorControl<TextArea>. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:8909,interface,interface,8909,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. JpegWriter; public JpegWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can hand",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html:3206,interface,interface,3206,javadoc/docs/qupath/lib/images/writers/JpegWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/JpegWriter.html,2,['interface'],['interface']
Integrability,"ify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4775,interface,interface,4775,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the wr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:3557,interface,interface,3557,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"igation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorDeconvolutionStains.DefaultColorDeconvolutionStains. java.lang.Object; java.lang.Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. All Implemented Interfaces:; Serializable, Comparable<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>, Constable. Enclosing class:; ColorDeconvolutionStains. public static enum ColorDeconvolutionStains.DefaultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1118,interface,interfaces,1118,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['interface'],['interfaces']
Integrability,"igation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:1091,interface,interface,1091,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['interface'],['interface']
Integrability,"ighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3405,interface,interface,3405,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"iginY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6737,interface,interface,6737,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"iginY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10515,interface,interface,10515,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ildObjects(); Get a collection of child objects.; ; In the current implementation, this is immutable - it cannot be modified directly. Returns:. getChildObjects; public Collection<PathObject> getChildObjects(Collection<PathObject> children); Get a collection containing all child objects. Parameters:; children - optional collection to which the children should be added; Returns:; collection containing all child object (the same as children if provided). getDescendantObjects; public Collection<PathObject> getDescendantObjects(Collection<PathObject> descendants); Get a collection containing all descendant objects. Parameters:; descendants - optional collection to which the descendants should be added; Returns:; collection containing all descendant object (the same as descendants if provided). getChildObjectsAsArray; public PathObject[] getChildObjectsAsArray(); Get a defensive copy of child objects as an array.; ; Why? Well perhaps you want to iterate through it and getChildObjects() may result in synchronization problems if ; the list is modified by another thread. In such a case a defensive copy may already be required, and it is more efficient to request ; it here. Returns:. getPathClass; public abstract PathClass getPathClass(); Get the classification of the object. Returns:. setPathClass; public void setPathClass(PathClass pc); Set the classification of the object, without specifying any classification probability. Parameters:; pc - . resetPathClass; public boolean resetPathClass(); Reset the classification (i.e. set it to null). Returns:; true if the classification has changed, false otherwise (i.e. it was already null). setClassifications; public void setClassifications(Collection<String> classifications); Set the PathClass from a collection of names according to the rules:; ; If the collection is empty, reset the PathClass; If the collection has one element, set it to be the name of the PathClass; If the collection has multiple element, create and set a derived",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:15397,synchroniz,synchronization,15397,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['synchroniz'],['synchronization']
Integrability,"ildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:2194,interface,interface,2194,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['interface'],['interface']
Integrability,"ilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:6693,interface,interface,6693,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['interface'],['interface']
Integrability,"ile). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; name - ; Returns:; See Also:. getExtension(File); getNameWithoutExtension(File). stripInvalidFilenameChars; public static String stripInvalidFilenameChars(String name); Strip characters that would make a String invalid as a filename.; This test is very simple, and may not catch all problems; the behavior of the method may ; improve in future versions.; ; Note that the test is not platform-dependent, and may be stricter than absolutely necessary - ; for example, by removing newline characters.; This can result in some filenames that would be valid on the current platform ; being modified. This can however be necessary to help retain cross-platform portability. Parameters:; name - ; Returns:; the (possibly-shortened) filename without invalid characters. isValidFilename; public static boolean isValidFilename(String name); Returns true if the output of stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. Parameters:; name - ; Returns:; true if the name is expected to be valid, false otherwise; See Also:. stripInvalidFilenameChars(String). getNameWithoutExtension; public static String getNameWithoutExtension(File file); Get the file name with extension removed.; Note that this generally means removing the text including and after the final dot,; but also handles specific multi-part file extensions as well. Parameters:; file - ; Returns:; See Also:. stripExtension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:9845,depend,dependent,9845,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['depend'],['dependent']
Integrability,"images.servers.ImageServerMetadata. Get the time point, defined in ImageServerMetadata.getTimeUnit(), or Double.NaN if this is unknown. getTimepoint(int) - Method in class qupath.lib.images.servers.PixelCalibration. Get the time for the specified time point, or Double.NaN if this is unknown. getTimeToEvent() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Get the stored time to event (units are unspecified). getTimeUnit() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the time unit for a time series. getTimeUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get the time unit for a time series. getTMACore(int, int) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(int, int) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get the TMACoreObject for a specified grid location. getTMACore(String) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(String) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Retrieve a TMA core based upon its name. getTMACoreForPixel(TMAGrid, double, double) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extract a list of TMA cores from an object hierarchy. getTMAGrid() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToke",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:537539,interface,interface,537539,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. resetValue; void resetValue(); Set last value to null (so default can be used). getValue; S getValue(); Get the current set value (may be null). Returns:; See Also:. setValue(S); getValueOrDefault(). getValueOrDefault; S getValueOrDefault(); Get the current set value, or any default if no value has been set. Returns:; See Also:. setValue(S); getValue(). getPrompt; String getPrompt(); Get some prompt text that may be displayed to a user. Returns:. isValidInput; boolean isValidInput(S value); Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setHidden; void setHidden(boolean hidden); Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Parameters:; hidden - . isHidden; boolean isHidden(); Test is the 'hidden' flag is set for the parameter. Returns:. duplicate; Parameter<S> duplicate(); Create a new Parameter with the same text and value. Returns:. hasHelpText; boolean hasHelpText(); Query whether getHelpText() returns a meaningful String (as opposed to null). Returns:. getHelpText; String getHelpText(); Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:3270,depend,depending,3270,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,2,['depend'],['depending']
Integrability,"in and DAB. H_E - Enum constant in enum class qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. Hematoxylin and eosin. halo(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define a halo that is symmetric in x and y. halo(Padding) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define a halo using a padding object. handle(DragEvent) - Method in class qupath.lib.gui.viewer.DragDropImportListener;  ; handle(MouseEvent) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; handle(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; handleBackspace(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a backspace. handleDrop(QuPathViewer, List<T>) - Method in interface qupath.lib.gui.viewer.DragDropImportListener.DropHandler. Handle drop onto a viewer. handleGitHubURL(String) - Static method in class qupath.lib.gui.ExtensionControlPane. Handle a URL that might be an extension hosted on GitHub. handleLeftParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:565159,interface,interface,565159,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getChangedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The objects that were affected by whichever changes were made. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int),MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:349272,interface,interfaces,349272,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:508951,interface,interface,508951,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"in class qupath.opencv.tools.OpenCVTools. Get the minimum value in an image, across all pixels (regardless of channels), ignoring NaNs. minimum(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Get the per-element minimum value between an array and a scalar. minimum(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the per-element minimum value for two arrays. minimumFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D minimum filter (erosion) to all channels of an image. minimumPyramidDimension - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; MiniViewerManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Constructor for class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. MiniViewers - Class in qupath.lib.gui.commands. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers() - Constructor for class qupath.lib.gui.commands.MiniViewers;  ; MiniViewers.MiniViewerManager - Class in qupath.lib.gui.commands. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. minMax() - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the minimum and maximum values of the image to fall into the range 0 - 1. minMax(double, double) - Static method in class qupath.opencv.ops.ImageOps.Normalize. Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. minPyramidDimensionProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Minimum image width or height before pyramidalizing (if required). minus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Subtract a constant from an array. minus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Subtract one ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:694089,depend,depending,694089,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['depending']
Integrability,"in counts. read(JsonReader) - Method in class qupath.lib.images.servers.ColorTransforms.ColorTransformTypeAdapter;  ; read(JsonReader) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdapter;  ; readAllMats(String) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz file. readAllMats(String, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz file, optionally squeezing singleton dimensions. readAllMats(Path) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz path. readAllMats(Path, boolean) - Static method in class qupath.opencv.tools.NumpyTools. Read a all Mats from an .npy or .npz path, optionally squeezing singleton dimensions; This will be a single Mat for .npy but may be multiple for .npz. readAllTiles() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Read all the tiles. readBufferedImage(RegionRequest) - Method in interface qupath.lib.images.servers.ImageServer. Deprecated.; since v0.4.0. Implementations of ImageServer should override ImageServer.readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. readClassifier(Path) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Read the classifier from a file. readClassifier(Path) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Read a standard pixel classifier from a file. readCSV(File) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). readCSV(String) - Static method in class qupath.lib.io.TMAScoreImporter. Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). readCSV(Scanner) - Static metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:820514,interface,interface,820514,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"in has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; public void pluginCompleted(String message); Description copied from interface: SimpleProgressMonitor; Notify the monitor that the plugin has completed its work. This is c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:2159,interface,interface,2159,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,3,"['interface', 'message']","['interface', 'message']"
Integrability,"in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padded accordingly. Parameters:; region - ; Returns:; a list of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:7246,interface,interface,7246,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"inDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the min display value.; This is used to control the brightness/contrast when painting. Specified by:; getMinDisplay in interface ChannelDisplayInfo; Returns:. getMaxDisplay; public float getMaxDisplay(); Description copied from interface: ChannelDisplayInfo; Get the max display value.; This is used to control the brightness/contrast when painting. Specified by:; getMaxDisplay in interface ChannelDisplayInfo; Returns:. updateRGBAdditive; public int updateRGBAdditive(BufferedImage img,; int x,; int y,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12779,interface,interface,12779,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"inY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:8500,interface,interface,8500,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"inate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8735,interface,interface,8735,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"ind of ImageServer this builds. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServerBuilder; matchClassName. Constructor Details. JsonImageServerBuilder; public JsonImageServerBuilder(). Method Details. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String args (may be ignored); Returns:. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws Exception; Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:; Throws:; Exception. getName; public String getName(); Description copied from interface: ImageServerBuilder; Get a human-readable name for the kind of ImageServer this builds. Specified by:; getName in interface ImageServerBuilder<BufferedImage>; Returns:. getDescription; public String getDescription(); Description copied from interface: ImageServerBuilder; Get a short, human-readable description for display in a GUI. Specified by:; getDescription in interface ImageServerBuilder<BufferedImage>; Returns:. getImageType; public Class<BufferedImage> getImageType(); Description copied from interface: ImageServerBuilder; Returns the base class for the images supported by this server. ; Typically this is BufferedImage.class. Specified by:; getImageType i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html:2711,interface,interface,2711,javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/JsonImageServerBuilder.html,1,['interface'],['interface']
Integrability,"ineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; public void pluginCompleted(String message); Description copied from interface: SimpleProgressMonitor; Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Specified by:; pluginCompleted in interface SimpleProgressMonitor; Parameters:; message - message to show upon completion. cancelled; public boolean cancelled(); Description copied from interface: SimpleProgressMonitor; Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. Specified by:; cancelled in interface SimpleProgressMonitor; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:2716,interface,interface,2716,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,10,"['interface', 'message']","['interface', 'message']"
Integrability,"ing 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationExceptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6089,interface,interface,6089,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"ing - Class in qupath.opencv.ml.objects.features. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing() - Constructor for class qupath.opencv.ml.objects.features.Preprocessing;  ; Preprocessing.PCAProjector - Class in qupath.opencv.ml.objects.features. Helper class to apply PCA projection. preprocessor(FeaturePreprocessor) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a FeaturePreprocessor to pixels, considering each channel as features. PRETTY_JSON - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request pretty-printing for the JSON. previousSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property storing the previous tool that was selected. PROBABILITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. process(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.Processor. Processing method. PROCESSING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile currently being processed. ProcessingCV - Class in qupath.opencv.tools. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingCV() - Constructor for class qupath.opencv.tools.ProcessingCV;  ; ProcessingExtension - Class in qupath.process.gui. General-purpose processing and machine learning commands. ProcessingExtension() - Constructor for class qupath.process.gui.ProcessingExtension;  ; ProcessingExtension.ObjectClassificationCommands - Class in qupath.process.gui;  ; ProcessingExtension.OpenCVCommands - Class in qupath.process.gui. Commands based on OpenCV. ProcessingExtension.OtherCommands - Class in qupath.process.gui;  ; ProcessingExtension.PixelClassificationCommands - Class in qupath.process.gui;  ; processObjects(ImageData<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:782785,interface,interface,782785,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ing a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEvent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:29303,interface,interface,29303,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"ing box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally be provided; otherwise, a default ColorModel will be ; created for the image (with may not be particularly suitable). Parameters:; imp2 - ; z - ; t - ; colorModel - ; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:5960,interface,interface,5960,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['interface'],['interface']
Integrability,"ing box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:7990,interface,interface,7990,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:3990,synchroniz,synchronizeViewers,3990,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"ing the possible extensions for this language. getExtensionsDirectory() - Method in class qupath.lib.gui.ExtensionClassLoader. Directory containing extensions. getExtensionsPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where extensions should be stored. getEyeFixatedIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getEyePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getFeature(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the value of the specified feature. getFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Request the variable importance values from the last trained RTrees classifier, if available. getFeatureName(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the name of the specified feature. getFeatureNames() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; getFeatureOp() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get an ImageDataOp used for feature calculation. getFile() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the file associated with this ViewTracker. getFile() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the underlying file. getFile() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get a File object representing the local image file - or null if no file could be found. getFile() - Method in class qupath.lib.scripting.ScriptParameters. Get the file where the script is located. getFilesOnly() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Returns true if Bio-Formats is restricted to support only local files, not other URLs. getFill() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:392035,interface,interface,392035,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3684,interface,interfaces,3684,javadoc/docs/qupath/lib/roi/RectangleROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html,1,['interface'],['interfaces']
Integrability,"ing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:3865,interface,interfaces,3865,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interfaces']
Integrability,"ing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3614,interface,interfaces,3614,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interfaces']
Integrability,ing); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText prope,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4960,interface,interface,4960,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"ingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - . Method Details. run; public void run(). Specified by:; run in interface Runnable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:2538,interface,interface,2538,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,2,['interface'],['interface']
Integrability,"ingStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:523308,interface,interface,523308,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ing message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String text); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4881,message,message,4881,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"ing title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:7434,message,message,7434,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:3455,interface,interface,3455,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['interface'],['interface']
Integrability,"iningObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1069939,depend,depend,1069939,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['depend']
Integrability,"ins. Create a ColorDeconvolutionStains for a default stain combination, and default max values (255 for all channels). makeDefaultStainVector(StainVector.DefaultStains) - Static method in class qupath.lib.color.StainVector. Get a default stain vector. makeDoubleArrayWrapper(double[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a double array, returning values (predictably) as doubles. makeFileInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file path relative to the current project, and create a File object. makeFloatArrayWrapper(float[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a float array, returning values as doubles. makeFullScreenshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the full screen. makeIntArrayWrapper(int[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for an int array, returning values as doubles. makeInverseAnnotation() - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the current ImageData and its current selected objects. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Make an inverse annotation for the selected objects, storing the command in the history workflow. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the specified ImageData and current selected objects. makeInverseAnnotation(ImageData<?>, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). makeInverseAnnotation(ImageData<?>, PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the specified ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:664510,wrap,wrapper,664510,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"int(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4045,interface,interface,4045,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:801791,interface,interface,801791,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3710,interface,interface,3710,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"interface qupath.lib.projects.ProjectImageEntry. Get an unmodifiable view of the underlying metadata map. getMetadataNames() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Get the names of all columns corresponding to metadata (String) values. getMetadataStore() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the MetadataStore, as used by Bio-Formats. getMetadataString(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value, cast as a String if possible. getMetadataString(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataSummaryString() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a formatted string representation of the metadata map's contents. getMetadataValue(String) - Method in interface qupath.lib.objects.MetadataStore. Get a metadata value of any kind. getMetadataValue(String) - Method in class qupath.lib.objects.TMACoreObject;  ; getMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:442842,interface,interface,442842,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9603,interface,interface,9603,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description. All Packages; The All Packages page contains an alphabetic index of all packages contained in the documentation. All Classes and Interfaces; The All Classes and Interfaces page cont",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:3594,interface,interface,3594,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['interface'],['interface']
Integrability,"interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Boolean getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(Boolean value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:4355,interface,interface,4355,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['interface'],['interface']
Integrability,interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selection. Specified by:; cut in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. paste; public void paste(); Description copied from interface: ScriptEditorControl; Request paste from the system clipboard. Specified by:; paste in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. clear; public void clear(); Description copied from interface: EditableText; Request clear the contents of th,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:7806,interface,interface,7806,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"ion copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:4647,interface,interface,4647,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ion copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8384,interface,interface,8384,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"ion copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:6163,interface,interface,6163,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ion copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calculations), but; since the area itself isn't necessarily polygonal then tracing through the points does *not* necessarily ; result in the same shape as that which the area represents. Specified by:; getAllPoints in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:; Throws:; UnsupportedOperationException - because AreaROI is a legacy class that is no longer supported. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:9947,interface,interface,9947,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"ion copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:5971,interface,interface,5971,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"ion objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. MeasureMenuActions;  ; MenuActions. Common interface to define the contents of a menu in terms of actions. Menus. Generate actions for installation in QuPath's main menubar. MenuTools. Static methods to help with creating and populating JavaFX menus. MetadataStore. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MiniViewers. Command to open a small viewer window, which displays a detail from ; the current image depending on where the cursor is over the image. MiniViewers.MiniViewerManager. A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. MorphologicalReconstruction. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MoveToolEventHandler. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler.ViewerMover. Helper class for panning a QuPathViewer (reasonably) smoothly. MultiscaleFeatures. Calculate pixel-based features in both 2D and 3D. MultiscaleFeatures.Hessian. Helper class for storing and computing pixel features from Hessian matrices. MultiscaleFeatures.Hessian2D. Hessian matrix values for 2D images. MultiscaleFeatures.Hessian3D. Hessian matrix ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:29722,depend,depending,29722,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['depend'],['depending']
Integrability,"ion of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4308,interface,interface,4308,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['interface'],['interface']
Integrability,"ion. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:412501,message,message,412501,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['message'],"['message', 'messages']"
Integrability,"ion. setLocationStringFunction(AbstractOverlay.LocationStringFunction) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a custom function to calculate a location string for the overlay. setLocked(boolean) - Method in class qupath.lib.objects.PathObject. Set locked status, if possible. setLocked(boolean) - Method in class qupath.lib.objects.PathROIObject. Set locked flag, indicating that the object ROI should not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. setMemoizationTimeMillis(int) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the number of milliseconds that must ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:934050,interface,interface,934050,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ion.Action insertAllDefaultImportAction. insertPixelClassifiersAction; protected org.controlsfx.control.action.Action insertPixelClassifiersAction. insertObjectClassifiersAction; protected org.controlsfx.control.action.Action insertObjectClassifiersAction. insertDetectionMeasurementsAction; protected org.controlsfx.control.action.Action insertDetectionMeasurementsAction. findAction; protected org.controlsfx.control.action.Action findAction. smartEditingAction; protected org.controlsfx.control.action.Action smartEditingAction. smartEditing; protected BooleanProperty smartEditing. Constructor Details. DefaultScriptEditor; public DefaultScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - current QuPath instance. Method Details. supportsFile; public boolean supportsFile(File file); Query whether a file represents a supported script.; Currently, this test looks at the file extension only. Specified by:; supportsFile in interface ScriptEditor; Parameters:; file - the file to test; Returns:; true if the file is likely to contain a supported script, false otherwise. getStage; public Stage getStage(); Get the stage for this script editor. Returns:. scriptRunning; public ObservableValue<Boolean> scriptRunning(); Observable value indicating whether a script is currently running or not.; This can be used (for example) to determine whether a user action should be blocked until the script has completed. Returns:. promptToSetFontSize; protected void promptToSetFontSize(); Update the font size for the script editor and console. addNewScript; public void addNewScript(String script,; ScriptLanguage language,; boolean doSelect); Create a new script in the specified language. Parameters:; script - text of the script to add; language - language of the script; doSelect - if true, select the script when it is added. getNewConsole; protected ScriptEditorControl<?> getNewConsole(). getNewEditor; protected ScriptEditorControl<?> getNewEditor(). currentLanguageProperty; protect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html:8183,interface,interface,8183,javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/DefaultScriptEditor.html,1,['interface'],['interface']
Integrability,"ion.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283353,message,message,283353,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ion; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString(String bundleName,; String key). hasBundleForLocale; public static boolean hasBundleForLocale(String bundle,; Locale locale). hasDefaultBundleForLocale; public static boolean hasDefaultBundleForLocale(Locale locale). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:2024,interface,interface,2024,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,2,['interface'],['interface']
Integrability,"ion; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.opencv.dnn. package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. Related Packages. Package; Description; qupath.opencv. Detection plugins using OpenCV. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. BlobFunction<T>. Convert OpenCV Mats into blobs (tensors) for use with a deep learning framework. DnnModel. General interface for implementing a deep learning model in a pipeline using OpenCV. DnnModelBuilder. Builder to create a DnnModel from DnnModelParams. DnnModelParams. Parameters to build a DnnModel. DnnModelParams.Builder. Builder for DnnModelParams. DnnModels. Helper class for building new DnnModels. DnnObjectClassifier. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnShape. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools. Tools for working with OpenCV's DNN module. DnnTools.DNNLayer. Helper class to summarize a DNN layer. OpenCVDnn. Wrapper for an OpenCV Net, including essential metadata about how it should be used. OpenCVDnn.Builder. Helper class to build an OpenCVDnn. OpenCVDnn.ModelType. Enum representing different classes of Model supported by OpenCV. OpenCVDnnModelBuilder. A DnnModelBuilder implementation that uses OpenCV's DNN module ; to build a Net. OpenCVModelObjectClassifier. Initial implementation of a patch-based ObjectCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html:1146,interface,interface,1146,javadoc/docs/qupath/opencv/dnn/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/package-summary.html,2,['interface'],['interface']
Integrability,"ion<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the name of the command. getTextField(Parameter<?>, int) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; getThickStrokeWidth(double) - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). getThis() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getThis() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getThis() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:530316,message,message,530316,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"ionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; hierarchy - . resetIntensityClassifications; public static void resetIntensityClassifications(); Reset the intensity classifications for all detections in the current hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:104119,depend,depending,104119,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['depend'],['depending']
Integrability,"ionRequest, ImageData<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. isMissing() - Method in class qupath.lib.objects.TMACoreObject. Query the 'missing' flag for this core. isModified() - Method in class qupath.lib.gui.scripting.ScriptTab. Return. isModifiedProperty() - Method in class qupath.lib.gui.scripting.ScriptTab. Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. isMultipartExtension(String) - Static method in class qupath.lib.common.GeneralTools. Returns true for file extensions containing multiple parts (or 'dots'). isMutable() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isMutable() - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. isNegativeClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass has the name ""Negative"". isNotRGB() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if we can say with reasonable confidence that the image is not RGB. isNullClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass is null, its name is null or if it is equal ; to the special case of 'Unclassified' path object. isNumericMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a numeric value only. isObjectClassificationEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the event indicates that object classifications have changed. isObjectMeasurementEvent() - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:627467,depend,dependent,627467,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['dependent']
Integrability,"ionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:6657,interface,interface,6657,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['interface'],['interface']
Integrability,"ior to returning the values. static <T> FeatureExtractor<T>; createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca). Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. static TypeAdapterFactory; getTypeAdapterFactory(). Get the TypeAdapterFactory default used for FeatureExtractor objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FeatureExtractors; public FeatureExtractors(). Method Details. getTypeAdapterFactory; public static TypeAdapterFactory getTypeAdapterFactory(); Get the TypeAdapterFactory default used for FeatureExtractor objects.; This is intended for internal use by QuPath, and should be registered with GsonTools. Returns:. createMeasurementListFeatureExtractor; public static <T> FeatureExtractor<T> createMeasurementListFeatureExtractor(List<String> measurements); Create a FeatureExtractor that determines features for the MeasurementList of the PathObject. Parameters:; measurements - list containing the measurement names; Returns:; the new FeatureExtractor. createNormalizingFeatureExtractor; public static <T> FeatureExtractor<T> createNormalizingFeatureExtractor(FeatureExtractor<T> extractor,; Normalizer normalizer); Wrap an existing FeatureExtractor to apply normalization prior to returning the values. Parameters:; extractor - original (base) feature extractor; normalizer - Normalizer to apply to initial features; Returns:; the new FeatureExtractor. createPCAProjectFeatureExtractor; public static <T> FeatureExtractor<T> createPCAProjectFeatureExtractor(FeatureExtractor<T> extractor,; Preprocessing.PCAProjector pca); Wrap an existing FeatureExtractor to apply PCA projection prior to returning the values. Parameters:; extractor - original (base) feature extractor; pca - Preprocessing.PCAProjector to apply to initial features; Returns:; the new FeatureExtractor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html:2530,Wrap,Wrap,2530,javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/FeatureExtractors.html,2,['Wrap'],['Wrap']
Integrability,"ipting.richtextfx.stylers; Class MarkdownStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. All Implemented Interfaces:; ScriptStyler. public class MarkdownStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Markdown syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. String; getBaseStyle(). Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. getBaseStyle; public String getBaseStyle(); Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. Specified by:; getBaseStyle in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be us",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html:1359,interface,interface,1359,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/MarkdownStyler.html,1,['interface'],['interface']
Integrability,"iption copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:6846,interface,interface,6846,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"iption() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnota",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:379981,interface,interface,379981,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"iption; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static LogManager.LogLevel valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to dec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1940,message,messages,1940,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['message'],['messages']
Integrability,"irect Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; public List<AutoCompletions.Completion> getCompletions(String text,; int pos); Description copied from interface: ScriptAutoCompletor; Get a list of possible auto-completions for the given text ; with the caret at the specified position. Specified by:; getCompletions in interface ScriptAutoCompletor; Parameters:; text - the full text; pos - the current caret position; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html:2257,interface,interface,2257,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,2,['interface'],['interface']
Integrability,"is as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4393,interface,interface,4393,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"is behavior may change in a future version of QuPath to preserve image type. Parameters:; channelNames - channels to export; Returns:; this exporter. overlap; public TileExporter overlap(int overlap); Define tile overlap (both x and y) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlap - ; Returns:; this exporter. overlap; public TileExporter overlap(int overlapX,; int overlapY); Define tile overlap (x and y separately) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlapX - ; overlapY - ; Returns:; this exporter. downsample; public TileExporter downsample(double downsample); Define resolution as a downsample value. Parameters:; downsample - ; Returns:; this exporter; See Also:. requestedPixelSize(double). requestedPixelSize; public TileExporter requestedPixelSize(double pixelSize); Define resolution as a pixel size in calibrated units. The actual units depend upon those stored within the server. Parameters:; pixelSize - ; Returns:; this exporter. includePartialTiles; public TileExporter includePartialTiles(boolean includePartialTiles); Specify whether incomplete tiles at image boundaries should be included.; ; If true, then when tiling the entire image some tiles may not have the specified tile width or height, ; or alternatively when creating tiles based upon object centroids then some zero-padding may be required ; to ensure the center is preserved along with the tile dimensions.; Default is false. Parameters:; includePartialTiles - ; Returns:; this exporter; See Also:. tileSize(int, int); parentObjects(Predicate); parentObjects(Collection); useROIBounds(boolean). region; public TileExporter region(RegionRequest region); Define the region to be processed, including downsample. Default is the full image. Parameters:; region - ; Returns:; this exporter; See Also:. region(ImageRegion). region; public TileExporter region(ImageRegion region); Define",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:7509,depend,depend,7509,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,2,['depend'],['depend']
Integrability,"is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Specified by:; getName in interface PathPlugin<BufferedImage>; Overrides:; getName in class WatershedCellDetection; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2722,interface,interface,2722,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['interface'],['interface']
Integrability,"is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10389,interface,interface,10389,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"is of the grid. int; getGridWidth(). Number of cores along the horizontal axis of the grid. TMACoreObject; getTMACore(int row,; int col). Get the TMACoreObject for a specified grid location. TMACoreObject; getTMACore(String coreName). Retrieve a TMA core based upon its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface: TMAGrid; Get the TMACoreObject for a specified grid location. Specified by:; getTMACore in interface TMAGrid; Parameters:; row - ; col - ; Returns:. getTMACoreList; public List<TMACoreObject> getTMACoreList(); Description copied from interface: TMAGrid; Get an unmodifiable list of all TMA core objects. Specified by:; getTMACoreList in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(String coreName); Description copied from interface: TMAGrid; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:1960,interface,interface,1960,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,2,['interface'],['interface']
Integrability,"is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; getHelpText in interface Parameter<S>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4738,interface,interface,4738,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,32,['interface'],['interface']
Integrability,"isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Returns:. getSelectionStart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:3139,interface,interface,3139,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,"isplay. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Descrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2620,interface,interface,2620,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['interface'],['interface']
Integrability,"isplay. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:57696,wrap,wrapper,57696,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrapper']
Integrability,"isplay.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsAr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:351007,interface,interface,351007,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"isplay.DirectServerChannelInfo;  ; getImageServerTypeAdapterFactory(boolean) - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. getImageSupport(URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. getImageSupport(ImageServerBuilder<BufferedImage>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServers. Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. getImageType() - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; getImageType() - Method in class qupath.lib.images.ImageData. Get the image type. getImageType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getImageType() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Returns the base class for the images supported by this server. getImageType() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getImageType() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getImageWidth() - Method in class qupath.lib.images.servers.TileRequest. Get the width of the bounding box for this tile in the full resolution image. getImageX() - Method in class qupath.lib.images.servers.TileRequest. Get the x-coordinate of the bounding box for this tile in the full resolution image. getImageY() - Method in class qupath.lib.images.servers.TileRequest. Get the y-coordinate of the bounding box for this tile in the full resolution image. getImportStatementGenerator() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get an DefaultScriptLanguage.ImportStatementGenerator. getImportStatementGenerator() - Method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:410102,interface,interface,410102,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"isplaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the default type (selected when the dialog is shown); Returns:; true if the type was changed, false otherwise. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. propertyChange; public void propertyChange(PropertyChangeEvent evt). Specified by:; propertyChange in interface PropertyChangeListener. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:2516,interface,interface,2516,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,2,['interface'],['interface']
Integrability,"ist of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:2610,interface,interfaces,2610,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['interface'],['interfaces']
Integrability,"istogrammed. Returns:. getSum; public double getSum(); Get the sum of all the values being histogrammed. Returns:. nValues; public long nValues(); Number of values represented in the histogram (i.e. the length of the input array). Returns:. nMissingValues; public long nMissingValues(); Number of NaNs in the input array. Returns:. getBinIndexForValue; public int getBinIndexForValue(double value,; double binWidth); Get the index of the bin that should contain the specified value. ; This assumes that all bins have the same width (binWidth). Parameters:; value - ; binWidth - ; Returns:; bin index; See Also:. getBinIndexForValue(double). getMaxCount; public long getMaxCount(); Get the highest count found for any bin. Returns:; getMaxNormalizedCount(). getMaxNormalizedCount; public double getMaxNormalizedCount(); Get the highest count found for any bin, divided by the total counts across the entire histogram. Returns:; getMaxCount(). nBins; public int nBins(); Total number of histogram bins. Returns:. getCountSum; public long getCountSum(); Sum of all histogram counts. Returns:. toString; public String toString(). Overrides:; toString in class Object. getMeasurementValues; public static double[] getMeasurementValues(Collection<PathObject> pathObjects,; String measurementName); Extract a specific measurement for each PathObject in a collection, storing the result in an array.; ; The order of entries in the array will depend upon the iteration order of the collection (usually a list). Parameters:; pathObjects - ; measurementName - ; Returns:; See Also:. makeMeasurementHistogram(Collection, String, int). makeMeasurementHistogram; public static Histogram makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins); Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. Parameters:; pathObjects - ; measurementName - ; nBins - ; Returns:; See Also:. getMeasurementValues(Collection, String). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:9493,depend,depend,9493,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html,1,['depend'],['depend']
Integrability,"it never did contain one, or ; the image was successfully closed), false otherwise (e.g. if the user thwarted the close request). getLogViewerCommand; public LogViewerCommand getLogViewerCommand(); Get the log viewer associated with this QuPath instance. Returns:; Since:; v0.5.0. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current ImageData as a parameter.; The action will also be disabled if no image data is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. showInputDisplayProperty; public BooleanProperty showInputDisplayProperty(); Property to indicate whether the input display is currently showing. Returns:; input display property. createViewerAction; public org.controlsfx.control.action.Action createViewerAction(Consumer<QuPathViewer> command); Create an Action that depends upon an QuPathViewer.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; Returns:; an Action with appropriate properties set. createImageDataAction; public org.controlsfx.control.action.Action createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name); Create an Action that depends upon an ImageData.; When the action is invoked, it will be passed the current QuPathViewer as a parameter.; The action will also be disabled if no viewer is present. Parameters:; command - the command to run; name - text of the action; Returns:; an Action with appropriate properties set. createProjectAction; public org.controlsfx.control.action.Action createProjectAction(Consumer<Project<BufferedImage>> command); Create an Action that depends upon a Project.; When the action is invoked, it will be passed the current P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:32788,depend,depends,32788,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7506,message,message,7506,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['message']
Integrability,"it, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected Ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:3968,interface,interface,3968,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['interface'],['interface']
Integrability,"ited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Constructor Details. TextAreaControl; public TextAreaControl(boolean isEditable); Constructor to create a new text area and wrap it in a TextAreaControl. Parameters:; isEditable - whether the text area should be editable or not. TextAreaControl; public TextAreaControl(TextArea textArea,; boolean isEditable); Constructor to wrap an existing text area and wrap it in a TextAreaControl. Parameters:; textArea - the text area to wrap; isEditable - whether the text area should be editable or not. Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:4689,wrap,wrap,4689,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['wrap'],['wrap']
Integrability,"iterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.JpegWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.PngWriter;  ; writeImage(ImageServer<BufferedImage>, RegionRequest, String) - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; writeImage(ImageServer<T>, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(ImageServer<T>, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImage(ImageServer<T>, RegionRequest, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified output stream. writeImage(ImageServer<T>, RegionRequest, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write an image region to a specified path. writeImage(T, OutputStream) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Write a 2D image region using the default writer based on the file pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1119558,interface,interface,1119558,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ithin a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padded accordingly. Parameters:; region - ; Returns:; a list of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:7554,interface,interface,7554,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"ition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specifie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9508,interface,interface,9508,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"ition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:9908,interface,interface,9908,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"its name. List<TMACoreObject>; getTMACoreList(). Get an unmodifiable list of all TMA core objects. int; nCores(). Total number of cores in the TMA grid. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static TMAGrid create(List<TMACoreObject> cores,; int gridWidth); Create a new TMAGrid based on a list of cores and grid width.; ; It is assumed that the grid height may be calculated as cores.size() / gridWidth. Parameters:; cores - ; gridWidth - ; Returns:. nCores; public int nCores(); Description copied from interface: TMAGrid; Total number of cores in the TMA grid. Specified by:; nCores in interface TMAGrid; Returns:. getGridWidth; public int getGridWidth(); Description copied from interface: TMAGrid; Number of cores along the horizontal axis of the grid. Specified by:; getGridWidth in interface TMAGrid; Returns:. getGridHeight; public int getGridHeight(); Description copied from interface: TMAGrid; Number of cores along the vertical axis of the grid. Specified by:; getGridHeight in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(int row,; int col); Description copied from interface: TMAGrid; Get the TMACoreObject for a specified grid location. Specified by:; getTMACore in interface TMAGrid; Parameters:; row - ; col - ; Returns:. getTMACoreList; public List<TMACoreObject> getTMACoreList(); Description copied from interface: TMAGrid; Get an unmodifiable list of all TMA core objects. Specified by:; getTMACoreList in interface TMAGrid; Returns:. getTMACore; public TMACoreObject getTMACore(String coreName); Description copied from interface: TMAGrid; Retrieve a TMA core based upon its name.; ; The behavior is undefined if multiple cores have the same name. Specified by:; getTMACore in interface TMAGrid; Parameters:; coreName - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html:2256,interface,interface,2256,javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/DefaultTMAGrid.html,16,['interface'],['interface']
Integrability,"itten.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:5352,interface,interface,5352,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"ixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getTransform; public AffineTransform getTransform(); Get the affine transform for this server. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:5425,interface,interface,5425,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,2,['interface'],['interface']
Integrability,"ixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); thro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html:5909,interface,interface,5909,javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/TiffWriterIJ.html,2,['interface'],['interface']
Integrability,"ixelSize in interface ImageWriter<BufferedImage>; Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Specified by:; getDetails in interface ImageWriter<BufferedImage>; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:5924,interface,interface,5924,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"ixels as an an ImageProcessor from a single band of a BufferedImage. Parameters:; img - ; band - ; Returns:. convertToImagePlus; public static PathImage<ImagePlus> convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request); throws IOException; Convert a BufferedImage into a PathImage<ImagePlus>.; ; An ImageServer and a RegionRequest are required to appropriate calibration. Parameters:; title - a name to use as the ImagePlus title.; server - the ImageServer from which the image was requested; img - the image to convert - if null this will be requested from server.; request - the region to request, or that was requested to provide img; Returns:; Throws:; IOException. convertToImagePlus; public static PathImage<ImagePlus> convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>.; ; The PathImage element wraps up handy metadata that can be used for translating ROIs. Parameters:; server - ; request - ; Returns:; Throws:; IOException. createPathImage; public static PathImage<ImagePlus> createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:22933,wrap,wraps,22933,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['wrap'],['wraps']
Integrability,"ize, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getCropRegion; public ImageRegion getCropRegion(); Get the region being cropped, in terms of the bounding box within the base ImageServer. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:5489,interface,interface,5489,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['interface'],['interface']
Integrability,"ject stored in this group. Collection<PathObject>; getPathObjects(). Get an unmodifiable collection containing all the PathObjects contained within this group. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.objects.PathObjectConnectionGroup; getPathObjectsForRegion. Constructor Details. DelaunayTriangulation; public DelaunayTriangulation(List<PathObject> pathObjects,; double pixelWidth,; double pixelHeight,; double distanceThresholdPixels,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:2973,interface,interface,2973,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,2,['interface'],['interface']
Integrability,"ject; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. KEY_OBJECT_CONNECTIONS; public static final String KEY_OBJECT_CONNECTIONS; Key to use when storing object connections as a property of an ImageData object. See Also:. Constant Field Values. Constructor Details. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(); Default constructor. DefaultPathObjectConnectionGroup; public DefaultPathObjectConnectionGroup(PathObjectConnectionGroup connections); Create a connections group, copying the connections from an existing group.; This may be useful if the other PathObjectConnectionGroup is not itself serializable. Parameters:; connections - . Method Details. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjectsForRegion; public Collection<PathObject> getPathObjectsForRegion(ImageRegion region); Description copied from interface: PathObjectConnectionGroup; Get all the objects with connections that may intersect the specified region. Specified by:; getPathObjectsForRegion in interface PathObjectConnectionGroup; Parameters:; region - ; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html:3009,interface,interface,3009,javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/DefaultPathObjectConnectionGroup.html,1,['interface'],['interface']
Integrability,"jectClassifier using an OpenCV-compatible DNN. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OpenCVTools. Collection of static methods to help with using OpenCV from Java. OpenCVTools.IndexedPixel. Class representing the indices of a pixel and its value. OpenCVTypeAdapters. Helper classes for combining OpenCV's JSON serialization with Gson's. OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. OpenSlide. Minimal Java wrapper for OpenSlide. OpenSlide.OpenSlideDisposedException. Exception thrown whenever a request is made after the OpenSlide object has been closed. OpenSlideExtension;  ; OpenslideImageServer. ImageServer implementation using OpenSlide. OpenSlideJNA. JNA interface for OpenSlide. OpenSlideLoader. Static helper class to manage loading the OpenSlide library. OpenslideServerBuilder. Builder for Openslide ImageServer. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; OverlayActions. Actions that interact with OverlayOptions. OverlayOptions. Default class for storing overlay display options. OverlayOptions.DetectionDisplayMode. Display modes for cells and other detections. Padding. Requested padding for a 2D image. PaneTools; Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. Parameter<S>. Interface defining algorithm parameters, which need to be displayed to users somehow. ParameterChangeListener. Interf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:36059,interface,interface,36059,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"jectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_BASE_DIR - Static variable in class qupath.lib.scripting.QP. Placeholder for the path to the current project. PROJECT_CLOSE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_LOCATION - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Default location to use when storing density maps in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.object.ObjectClassifier. Default location to use when storing object classifiers in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.pixel.PixelClassifier. Default location to use when storing object classifiers in a project. PROJECT_NEW - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_NEW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; projectActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ProjectActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; ProjectBrowser - Class in qupath.lib.gui.panes. Component for previewing and selecting images within a project. ProjectBrowser(QuPathGUI) - Constructor for class qupath.lib.gui.panes.ProjectBrowser. Constructor. ProjectClassifierBindings - Class in qupath.process.gui.commands.ml. Class to help with formatting text fields for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:785418,interface,interface,785418,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"jects from the child list of this object. removeColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the column containing the specified viewer, notifying the user if this isn't possible. REMOVED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been removed. removeEmptyParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Remove all empty parameters from this list. removeFileDropHandler(DragDropImportListener.DropHandler<File>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a File DropHandler. removeFragments(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. removeGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Remove a connections group. removeImage(ProjectImageEntry<?>, boolean) - Method in interface qupath.lib.projects.Project. Remove an image from the project, optionally including associated data. removeInteriorRings(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry that have an area < a specified threshold. removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a JSON DropHandler. removeListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a hierarchy change listener. removeMeasurements(Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the current image data. removeMeasurements(String...) - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements with the specified names. removeMeasurements(PathObjectHierarc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:845109,interface,interface,845109,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"k afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10884,interface,interface,10884,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"k using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:3749,interface,interface,3749,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"kgroundProperty(); Property that specifies whether the background should be inverted (i.e. to make fluorescence resemble brightfield, and vice versa). Returns:; See Also:. setUseInvertedBackground(boolean). useInvertedBackground; public boolean useInvertedBackground(); Get the value of useInvertedBackgroundProperty(). Returns:. displayMode; public ObjectBinding<ChannelDisplayMode> displayMode(); Get the value of useInvertedBackgroundProperty(). Returns:. setUseInvertedBackground; public void setUseInvertedBackground(boolean useInvertedBackground); Set the value of useInvertedBackgroundProperty(). Parameters:; useInvertedBackground - . useColorLUTs; public boolean useColorLUTs(); The opposite of useGrayscaleLuts(). Returns:. getLastChangeTimestamp; public long getLastChangeTimestamp(); Get a timestamp the last known changes for the object.; ; This is useful to abort painting if the display changes during a paint run. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Overrides:; getLastChangeTimestamp in class AbstractImageRenderer; Returns:. changeTimestampProperty; public LongProperty changeTimestampProperty(); Timestamp for the most recent change. This can be used to listen for ; display changes. Returns:. refreshChannelOptions; public void refreshChannelOptions(); Refresh the channel options. This may be used if an underlying property of the image has changed, such ; as the channel names or lookup tables. switchToGrayscaleChannelProperty; public ObjectProperty<ChannelDisplayInfo> switchToGrayscaleChannelProperty(); Property indicating which channel should be used if useGrayscaleLutProperty() is turned on.; This is useful to develop more intuitive interfaces and prevent surprises when switching to grayscale mode.; ; Settings this value does not have any immediate effect on whether channels are selected or not, but rather it; is only used when switching to grayscale mode. Returns:; Since:; v0.5.0; See Also:. getSwitchToGrayscaleChannel(); setSwitchToG",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:9463,interface,interface,9463,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['interface'],['interface']
Integrability,"kip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1048,wrap,wrapper,1048,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,1,['wrap'],['wrapper']
Integrability,"l resolution of the current image, or 0 if no image is currently open. getServerPath() - Method in class qupath.lib.images.ImageData. Get the path of the ImageServer. getServerType() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getServerType() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getServerType() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getServerType() - Method in interface qupath.lib.images.servers.ImageServer. A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). getServerType() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getServerType() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; getServerURIs() - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.getURIs(). getServerWidth() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:512623,interface,interface,512623,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"l to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283779,message,message,283779,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"l units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getCropRegion; public ImageRegion getCropRegion(); Get the region being cropped, in terms of the bounding box within the base ImageServer. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of ser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:4827,interface,interface,4827,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['interface'],['interface']
Integrability,"l units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:4830,interface,interface,4830,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['interface'],['interface']
Integrability,"l units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:4150,interface,interface,4150,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['interface'],['interface']
Integrability,"l units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:5321,interface,interface,5321,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['interface'],['interface']
Integrability,"l units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getTransform; public AffineTransform getTransform(); Get the affine transform for this server. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:4651,interface,interface,4651,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['interface'],['interface']
Integrability,"lLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35350,interface,interface,35350,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"lMap(Collection<ImageData<BufferedImage>>, Map<PathClass, Integer>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get a classifier training map, using a predefined label map (which determines which classifications to use). CreateTrainingImageCommand - Class in qupath.process.gui.commands. Command to generate a SparseImageServer from multiple image regions across a project. CreateTrainingImageCommand() - Constructor for class qupath.process.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object. createViewer() - Method in class qupath.lib.gui.viewer.ViewerManager. Create a viewer, adding it to the stored array but not adding it to any component (which is left up to the calling code to handle). createViewerAction(Consumer<QuPathViewer>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an QuPathViewer. createWindow(QuPathGUI) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createWorkflowDisplayDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog to show the workflow history for the current image data. createWriter(Collection<OMEPyramidWriter.OMEPyramidSeries>) - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriter. Create a writer capable of writing an image with a collection of series. createWriter(OMEPyramidWriter.OME",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:235112,interface,interface,235112,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lTileObject. Returns true if setComplete() has been called. isCudaAvailable() - Static method in class qupath.opencv.dnn.DnnTools. Query whether CUDA is reported as available by OpenCV. isDAB(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""dab"" or ""d"" (ignoring case). isDefaultStyle() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Check if the default JavaFX style is used. isDerivedClass() - Method in class qupath.lib.objects.classes.PathClass. Returns true if #getParentClass() != null. isDerivedFrom(PathClass) - Method in class qupath.lib.objects.classes.PathClass. Returns true if this class, or any ancestor class, is equal to the specified parent class. isDetection() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a detection. isDirectory(String) - Static method in class qupath.lib.scripting.QP. Query if a file path corresponds to a directory. isDynamic() - Method in interface qupath.lib.measurements.Measurement. Deprecated. isEditable() - Method in class qupath.lib.objects.PathDetectionObject. Always returns false - detection objects shouldn't be edited. isEditable() - Method in class qupath.lib.objects.PathObject. Flag indicating that the object is editable. isEditable() - Method in class qupath.lib.objects.PathROIObject. Deprecated.; since v0.4.0. isEditable() - Method in class qupath.lib.objects.PathRootObject. The root object is never locked. isEmpty() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Returns true if there are no events included. isEmpty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Query if the table is empty, i.e. isEmpty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether the collection of recorded frames is empty. isEmpty() - Method in interface qupath.lib.measurements.MeasurementList. Returns true if the list does not contain any meas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:618691,interface,interface,618691,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaControl(boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea, boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to wrap an existing text area and wrap it in a TextAreaControl. textFieldPrompt(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. textProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing the message text. textProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; textProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently in the editor control. textProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; textProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getText(). theme - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; thin(Mat) - Static method in class qupath.opencv.tools.Thinning. Thin the binary image in Mat. Thinning - Class in qupath.opencv.tools. Implementation of the 3D binary thinning algorithm of; ; Lee et al. Thinning() - Constructor for class qupath.opencv.tools.Thinning;  ; ThreadTools - Class in qupath.lib.common. Create a thread factory that supports adding a prefix to the name and setting daemon status. ThreadTools() - Constructor for class qupath.lib.common.ThreadTools;  ; threshold(double) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.Classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1020303,interface,interface,1020303,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lass qupath.lib.gui.scripting.TextAreaControl;  ; getSelectionEnd() - Method in interface qupath.lib.gui.scripting.EditableText. Get the ending position for any selection (exclusive). getSelectionEnd() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSelectionLength() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selection length, or 0 if there is no selection. getSelectionModeAction() - Method in class qupath.lib.gui.ToolManager. Return the action associated with 'selection mode'. getSelectionModel() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the selection model for the channels. getSelectionModel() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the selection model, which handles the selection status of objects. getSelectionStart() - Method in interface qupath.lib.gui.scripting.EditableText. Get the starting position for any selection (inclusive). getSelectionStart() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl;  ; getSemanticVersion() - Static method in class qupath.lib.common.GeneralTools. Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the separator used in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. getServer() - Method in class qupath.lib.images.ImageData. Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:509879,interface,interface,509879,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lass qupath.lib.objects.PathObjectTools. Update the ROI plane for a single object, and any descendant objects. updateProgress(int, String, ImageRegion) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; updateProgress(int, String, ImageRegion) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int[], ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.comm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1066564,interface,interface,1066564,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lass qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:547724,interface,interface,547724,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lass with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic glob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:52695,interface,interface,52695,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"lass() - Method in interface qupath.lib.images.writers.ImageWriter. Get the class of supported images. getImageClass() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getImageData() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the underlying ImageData used for classification. getImageData() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getImageData() - Method in class qupath.lib.display.ImageDisplay. Get the current image data. getImageData() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image data. getImageData() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.imageDataProperty(). getImageData() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the image data currently being displayed within thie viewer. getImageData() - Method in class qupath.lib.scripting.ScriptParameters. Get the current ImageData that should be used with the script. getImageData() - Method in interface qupath.opencv.ops.ImageDataServer. Get the ImageData wrapped by the ImageDataServer. getImageDisplay() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageDisplay object used to determine how the image is converted to RGB for display. getImageHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile in the full resolution image. getImageJIcon(int, int) - Static method in class qupath.imagej.gui.IJExtension. Try to read the ImageJ icon from its jar. getImageJInstance() - Static method in class qupath.imagej.gui.IJExtension. Get an instance of ImageJ, or start one, for interactive use (with GUI displayed). getImageJPath() - Static method in class qupath.imagej.gui.IJExtension. Get the path for a local ImageJ installation, if set. getImageList() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of images (ProjectImageEntry). getImageList() - Method in interface qupath.lib.proj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:405366,interface,interface,405366,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1166,message,message,1166,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['message'],['message']
Integrability,"lasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be display",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:2795,interface,interface,2795,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"lasses to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6906,interface,interfaces,6906,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interfaces']
Integrability,"lassify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be inclu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:3119,depend,depending,3119,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,1,['depend'],['depending']
Integrability,"late magnitude of projection of pixel OD onto stain OD. getStainRejection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of rejection of pixel OD onto stain OD. getStains(boolean) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a collection of all the stains. getStartTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the first recorded frame. getStartX() - Method in class qupath.lib.gui.viewer.GridLines. Starting x coordinate for any counting grid (usually 0). getStartY() - Method in class qupath.lib.gui.viewer.GridLines. Starting y coordinate for any counting grid (usually 0). getStaticImportStatements(Collection<Class<?>>) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Get the static import statements as a String, to add at the beginning of the executed script. getStaticImportStatments(Collection<Class<?>>) - Method in interface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getStatistic() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:521603,interface,interface,521603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"late(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Get the x coordinate of the ROI centroid;; ; Warning: If the centroid computation was too difficult (i.e. the area is particularly elaborate),; then the center of the bounding box will be used instead! (However this should not be relied upon as it is liable to change in later versions). Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Get the y coordinate of the ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:5068,interface,interface,5068,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"lause license). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RichScriptEditorExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. RichScriptEditorExtension; public RichScriptEditorExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the extension for displaying in the main GUI.; ; This could also contain licensing information. Specified by:; getDescription in interface QuPathExtension; Returns:. getQuPathVersion; public Version getQuPathVersion(); Returns th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html:1793,interface,interface,1793,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditorExtension.html,1,['interface'],['interface']
Integrability,"layed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; public void updateProgress(int increment,; String message,; ImageRegion region); Description copied from interface: SimpleProgressMonitor; Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Specified by:; updateProgress in interface SimpleProgressMonitor; Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; public void pluginCompleted(String message); Description copied from interface: SimpleProgressMonitor; Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Specified by:; pluginCompleted in interface SimpleProgressMonitor; Parameters:; message - message to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:2374,message,message,2374,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,2,"['interface', 'message']","['interface', 'message']"
Integrability,"ld be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditive in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - . getImageData; protected ImageData<BufferedImage> getImageData(). getImageServer; protected ImageServer<BufferedImage> getImageServer(). setMinMaxAllowed; public void setMinMaxAllowed(float minAllowed,; float maxAllowed); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the maximum permissible range for the image display.; ; For an 8-bit image, that should be 0 and 255.; ; For a 16-bit image, fewer bits might actually be used... therefore the full range of 0-2^16-1 may be too much.; ; Also, for a 32-bit floating point image the limits are rather harder to define in a general way.; This method makes it possible to restrict the permissible r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:10166,interface,interface,10166,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"le, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430585,message,messages,430585,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['messages']
Integrability,"le, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap. WrappedBufferedImageServer; public WrappedBufferedImageServer(String imageName,; BufferedImage img,; List<ImageChannel> channels); Create an ImageServer<BufferedImage> using an image that has been provided directly. Parameters:; imageName - a name to display (may be null); img - the BufferedImage to wrap; channels - the ImageChannels, required in case the preferred channel colors cannot be obtained from the image itself. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html:3233,wrap,wrap,3233,javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/WrappedBufferedImageServer.html,2,['wrap'],['wrap']
Integrability,"le. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; public ROI duplicate(); Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4887,interface,interface,4887,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"leChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. getRGB; public int getRGB(float value,; ChannelDisplayMode mode); Get a suitable RGB value for displaying a pixel with the specified value. Parameters:; value - ; mode - ; Returns:. getRGB; public int getRGB(BufferedImage img,; int x,; int y,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB value that would be used to display a particular pixel. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; mode - ; Returns:. getValueAsString; public String getValueAsString(BufferedImage img,; int x,; int y); Description copied from interface: ChannelDisplayInfo; Get a string representation of a pixel's value.; This might be a single number, or 3 numbers for an RGB image where the channel includes all values. Specified by:; getValueAsString in interface ChannelDisplayInfo; Parameters:; img - ; x - ; y - ; Returns:. getRGB; public int[] getRGB(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Get the RGB values that would be used to display all the pixels of an image. Specified by:; getRGB in interface ChannelDisplayInfo; Parameters:; img - ; rgb - ; mode - ; Returns:. updateRGBAdditive; public void updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode); Description copied from interface: ChannelDisplayInfo; Update an array of existing pixels (packed RGB) additively using the colors to display a specified image.; May throw an UnsupportedOperationException if isAdditive() returns false;. Specified by:; updateRGBAdditiv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:9426,interface,interface,9426,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"leText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorCont",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:10311,interface,interface,10311,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"leX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:4391,interface,interface,4391,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['interface'],['interface']
Integrability,"leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified ImageServer can be successfully written.; ; Reasons why it might not be are the number of channels and/or bit-depth. Specified by:; supportsImageType in interface ImageWriter<BufferedImage>; Parameters:; server - ; Returns:. getImageClass; public Class<BufferedImage> getImageClass(); Description copied from interface: ImageWriter; Get the class of supported images. Specified by:; getImageClass in interface ImageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:3990,interface,interface,3990,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"lean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing paths. relativeToUserDirectory() - Method in class qupath.lib.gui.FileCopier. Specify that the copying is relative to the QuPath user directory. RELOAD_DATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; reloadImageData(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Reload the specified image data from a previously saved version,if available. remove(String) - Method in interface qupath.lib.measurements.MeasurementList. Remove a named measurement. remove(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Remove a resource within the project. REMOVE_COLUMN - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; REMOVE_FRAGMENTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; REMOVE_ROW - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RemoveActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeAllImages(Collection<ProjectImageEntry<T>>, boolean) - Method in interface qupath.lib.projects.Project. Remove multiple images from the project, optionally including associated data. removeByAreas(ByteProcessor, double, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects containing < minPixels or > maxPixels. removeChildObject(PathObject) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:842876,interface,interface,842876,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:4101,interface,interface,4101,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"lean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region.; . Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. getObjectsForRegion; public List<PathObject> getObjectsForRegion(ImageRegion region); Get the objects to be painted that fall within a specified region.; Note that this does not take into consideration line thickness, and therefore results are not guaranteed ; to match isEmptyRegion(RegionRequest); in other worse, an object might fall outside the region ; but still influence an image type because of thick lines being drawn.; If thicker lines should influence the result, the region should be padded accordingly. Parameters:; region - ; Returns:; a list of objects with ROIs that intersect the specified region. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:7088,interface,interface,7088,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['interface'],['interface']
Integrability,"lean undoOnce(); Request to 'undo' the last observed hierarchy change for the current active viewer. Returns:; true if any changes were made, false otherwise. totalBytes; public long totalBytes(); The total number of bytes used for all viewers. Returns:. clear; public void clear(); Clear all undo/redo stacks (useful when memory is low). redoOnce; public boolean redoOnce(); Request to 'redo' the last 'undone' hierarchy change for the current active viewer. Returns:; True if any changes were made, false otherwise. canUndo; public ReadOnlyBooleanProperty canUndo(); True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. canRedo; public ReadOnlyBooleanProperty canRedo(); True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. Returns:. changed; public void changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue). Specified by:; changed in interface ChangeListener<QuPathViewer>. imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:4382,interface,interface,4382,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['interface'],['interface']
Integrability,"lear the contents of the control. Specified by:; clear in interface EditableText. appendText; public void appendText(String text); Description copied from interface: TextAppendable; Append the specified text to the appendable. Specified by:; appendText in interface EditableText; Specified by:; appendText in interface TextAppendable; Parameters:; text - the text to be appended. getCaretPosition; public int getCaretPosition(); Gets the value of the caretPosition property. Specified by:; getCaretPosition in interface EditableText; Property description:; Returns:; the value of the caretPosition property; See Also:. caretPositionProperty(). insertText; public void insertText(int pos,; String text); Description copied from interface: EditableText; Request inserting the specified text. Specified by:; insertText in interface EditableText; Parameters:; pos - position to insert the text; text - the text to insert. deleteText; public void deleteText(int startIdx,; int endIdx); Description copied from interface: EditableText; Request deleting the text within the specified range. Specified by:; deleteText in interface EditableText; Parameters:; startIdx - ; endIdx - . deselect; public void deselect(); Description copied from interface: EditableText; Deselect any currently-selected text. Specified by:; deselect in interface EditableText. getSelection; public IndexRange getSelection(); Description copied from interface: ScriptEditorControl; Get the range of the currently-selected text. Specified by:; getSelection in interface ScriptEditorControl<TextArea>; Returns:. selectRange; public void selectRange(int startIdx,; int endIdx); Description copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:9095,interface,interface,9095,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"lectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. requestFocus; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11300,interface,interface,11300,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"lection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2895,interface,interface,2895,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['interface'],['interface']
Integrability,"lectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). Method Details. textProperty; public StringProperty textProperty(); Description copied from interface: ScriptEditorControl; Text currently in the editor control. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the text property; See Also:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); text",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:4597,interface,interface,4597,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"ledArea(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledArea(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get scaled area of the ROI, for use with calibrated pixel sizes. getScaledArea(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledArea(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.AreaROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:504945,interface,interfaces,504945,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeatureComputer;  ; HaralickFeatures - Class in qupath.lib.analysis.features. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin - Class in qupath.lib.algorithms. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:566557,interface,interface,566557,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:9376,interface,interface,9376,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"les, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getManager; public SparseImageServer.SparseImageServerManager getManager(); Get the manager, which defines from whence the regions originate. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:4094,interface,interface,4094,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['interface'],['interface']
Integrability,"lest region that completely contains a specified ROI. createJavaCompletion(Class<?>) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a class. createJavaCompletion(Class<?>, Field) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a field. createJavaCompletion(Class<?>, Method) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a method. createJavaCompletion(Class<?>, String, String) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion with fixed display and completion text. createJsonTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of fields within a JsonElement. createLicensesWindow(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing license information for QuPath and its third party dependencies. createLike(PathObject, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Create a new object with the same type and classification as the input object, but a new ROI and ID. createLike(PathObject, ROI, ROI) - Static method in class qupath.lib.objects.PathObjectTools. Create a new object with the same type and classification as the input object, but a new ROI and ID. createLinearFunction(double, double) - Static method in class qupath.lib.color.ColorModelFactory. Create a linear function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createLinearFunction(PixelType) - Static method in class qupath.lib.color.ColorModelFactory. Create a linear function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createLineEventHandler() - Static metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:192378,depend,dependencies,192378,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['depend'],['dependencies']
Integrability,"level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getPreviousURI() - Method in interface qupath.lib.projects.Project. Sometimes projects move (unfortunately). getProbabilityColorModel32Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 32-bit (pseudo-)probabilities for multiple channels. getProbabilityColorModel8Bit(List<ImageChannel>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing 8-bit pseudo-probabilities for multiple channels. getProbabilityThreshold(WritableRaster) - Static method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Get a suitable threshold assuming a raster contains probability values. getProject() - Method in class qupath.lib.gui.QuPathGUI. Get the value of QuPathGUI.projectProperty(). getProject() - Static method in class qupath.lib.scripting.QP. Get the current project. getProject() - Method in class qupath.lib.scripting.ScriptParameters. Get the current project that should be used with the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:491355,interface,interface,491355,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"le getX(); Get the x coordinate of this point. Returns:. getY; public double getY(); Get the y coordinate of this point. Returns:. distanceSq; public double distanceSq(double x,; double y); Calculate the squared distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(double x,; double y); Calculate the distance between this point and a specified x and y location. Parameters:; x - ; y - ; Returns:. distance; public double distance(Point2 p); Calculate the distance between this point and another point. Parameters:; p - ; Returns:. get; public double get(int dim); Description copied from interface: Point; Get the value of the ordinate for the specified dimension. Specified by:; get in interface Point; Parameters:; dim - ; Returns:. dim; public int dim(); Description copied from interface: Point; Number of values used to represent this point.; ; For an x,y coordinate pair this should return 2. Specified by:; dim in interface Point; Returns:. toString; public String toString(). Overrides:; toString in class Object. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Throws:; IOException; ClassNotFoundException. distanceSq; public double distanceSq(Point p); Description copied from interface: Point; Calculate the squared distance to another point, with the same Point.dim(). Specified by:; distanceSq in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distance(Point). distance; public double distance(Point p); Description copied from interface: Point; Calculate the distance to another point, with the same Point.dim(). Specified by:; distance in interface Point; Parameters:; p - ; Returns:; See Also:. Point.distanceSq(Point). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html:3294,interface,interface,3294,javadoc/docs/qupath/lib/geom/Point2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/geom/Point2.html,7,['interface'],['interface']
Integrability,"le x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9723,interface,interface,9723,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"lib.color.ColorMaps. Get a default, general-purpose ColorMaps.ColorMap. getDefaultColorModel() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getDefaultColorModel() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get an appropriate colormodel that may be used. getDefaultColorModel() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getDefaultColorModel(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. This does not guarantee a ColorModel will be returned!; If it is not, then a default grayscale LUT should be used. getDefaultCreateFunction() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default function used to create TaskRunner instances. getDefaultDragDropListener() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. getDefaultExtension() - Method in interface qupath.lib.images.writers.ImageWriter. Get the default extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultPara",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:369260,interface,interface,369260,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lib.experimental.pixels.OutputHandler.OutputToObjectConverter<S,T,U>; qupath.lib.plugins.parameters.ParameterChangeListener; qupath.lib.plugins.parameters.Parameterizable; qupath.lib.images.PathImage<T>; qupath.lib.objects.PathObjectConnectionGroup; qupath.lib.objects.PathObjectReader; qupath.lib.gui.viewer.overlays.PathOverlay; qupath.lib.plugins.PathPlugin<T>. qupath.lib.plugins.PathInteractivePlugin<T>. qupath.lib.gui.measure.PathTableData<T>; qupath.lib.gui.viewer.tools.PathTool; qupath.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:41987,interface,interfaces,41987,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['interface'],['interfaces']
Integrability,lib.gui.extensions.GitHubProject.GitHubRepo. Get the name. getName() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A readable name for the extension. getName() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get the release name (any text). getName() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the name of the image. getName() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly name for the style. getName() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getName() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the name of this ViewTracker. getName() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the name of the tool. getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getName() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getName() - Method in interface qupath.lib.images.servers.ColorTransforms.ColorTransform. Get a displayable name for the transform. getName() - Method in class qupath.lib.images.servers.ImageChannel. Name of the output channel. getName() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a human-readable name for the kind of ImageServer this builds. getName() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the image name. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measu,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:451547,interface,interface,451547,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"licate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. toString; public String toString(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4521,interface,interface,4521,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"licate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4028,interface,interface,4028,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,4,['interface'],['interface']
Integrability,"lic boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3582,interface,interface,3582,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"lidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:4379,interface,interface,4379,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"lines (annotations, TMA cores). getThis() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getThis() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getThis() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getThreadPoolManager() - Method in class qupath.lib.gui.QuPathGUI. Get a SharedThreadPoolManager to help with submitting tasks in other threads. getThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived 3+ classification, indicating strong positivity. getThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getThreePlus(PathClass). getThresholds() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Get a list of all thresholds. getThumbnail() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get a thumbnail representing the image as displayed by this viewer. getThumbnail() - Method in interface qupath.lib.projects.ProjectImageEntry. Request a thumbnail for the image. getThumbnail(ImageServer<BufferedImage>, int, int, boolean) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getThumbnailDownsampleFactor(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getThumbnailRGB(ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Get an RGB thumbnail for an image server, suitable for showing as a project thumbnail. getTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. getTileCacheSize() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Get the tile cache size, in bytes. getTileHeight() - Method in class qupath.lib.images.servers.TileRequest. Get the height of the bounding box for this tile at the tile resolution.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:532049,interface,interface,532049,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:9462,interface,interface,9462,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"lingProperty; public static BooleanProperty invertScrollingProperty(); Invert the scrolling direction of the mouse applied to the viewer.; This can be helpful when the scrolling direction feels unnatural... perhaps because of how the 'natural' system preference is set. Returns:. invertZSliderProperty; public static BooleanProperty invertZSliderProperty(); Invert the z-slider for the viewer. This can help if the location of the zero position seems counterintuitive. Returns:. gridStartXProperty; public static DoubleProperty gridStartXProperty(); Starting x coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridStartYProperty; public static DoubleProperty gridStartYProperty(); Starting y coordinate for any counting grid (usually 0). This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingXProperty; public static DoubleProperty gridSpacingXProperty(); Horizontal spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridSpacingYProperty; public static DoubleProperty gridSpacingYProperty(); Vertical spacing between lines for any counting grid. This depends upon gridScaleMicronsProperty(). Returns:. gridScaleMicronsProperty; public static BooleanProperty gridScaleMicronsProperty(); Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. Returns:. autoBrightnessContrastSaturationPercentProperty; public static DoubleProperty autoBrightnessContrastSaturationPercentProperty(); Controls percentage of saturated pixels to apply when automatically setting brightness/contrast.; ; A value of 1 indicates that approximately 1% dark pixels and 1% bright pixels should be saturated. Returns:. keepDisplaySettingsProperty; public static BooleanProperty keepDisplaySettingsProperty(); Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:52230,depend,depends,52230,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['depend'],['depends']
Integrability,"listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. wrapStatModel(StatModel) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109988,wrap,wrap,1109988,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrap']
Integrability,"litConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:3399,interface,interface,3399,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['interface'],['interface']
Integrability,"lization;  ; qupath.lib.gui.logging. Support for logging. qupath.lib.gui.measure. Classes related to extracting, calculating and displaying measurements. qupath.lib.gui.panes. Panes used to display information in the QuPath interface. qupath.lib.gui.prefs. Custom preferences. qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. qupath.lib.gui.tma. Display, summarize and query tissue microarray analysis results. qupath.lib.gui.tools. Assorted helper classes for the QuPath interface. qupath.lib.gui.viewer. QuPath image viewing and display. qupath.lib.gui.viewer.overlays. Support for overlays, which may be painted on top of QuPathViewers. qupath.lib.gui.viewer.recording. Record and display field of view changes made within a QuPathViewer. qupath.lib.gui.viewer.tools. Drawing and navigation tools for the QuPath toolbar. qupath.lib.gui.viewer.tools.handlers;  ; qupath.lib.images. Defines the ImageData class to represent the key data associated with an analyzed image. qupath.lib.images.servers. Supports accessing pixels and metadata in QuPath. qupath.lib.images.servers.bioformats. Read images using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:4633,interface,interface,4633,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['interface'],['interface']
Integrability,"lize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. isTitle; protected boolean isTitle. lastValue; protected String lastValue. Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3256,interface,interface,3256,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1622,wrap,wrap,1622,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,5,['wrap'],['wrap']
Integrability,"ll, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each other in this triangulation.; ; Warning: This list is recomputed on every call, therefore references should be cached by the caller if necessary; to avoid too much recomputation. Returns:. addClusterMeasurements; public void addClusterMeasurements(); Compute mean measurements from clustering all connected objects. addNodeMeasurements; public void addNodeMeasurements(); Add Delaunay measurements to each pathObject. containsObject; public boolean containsObject(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Returns true if the specified PathObject is contained within this group. Specified by:; containsObject in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:4907,interface,interface,4907,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,4,['interface'],['interface']
Integrability,"ll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:3399,interface,interface,3399,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['interface'],['interface']
Integrability,"llection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should not be used to manipulate an object after construction. ; Indeed, some implementations may throw an UnsupportedOperationException if called too late. Specified by:; updateURIs in interface UriResource; Parameters:; replacements - replacement map, where the key gives the current URI and the value gives its replacement.; Returns:; true if URIs were changed, false otherwise; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:6256,interface,interface,6256,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,12,['interface'],['interface']
Integrability,"llection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2833,interface,interface,2833,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['interface'],['interface']
Integrability,"lled once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; message - optional message that may be displayed to reflect the current progress status.; region - optional region of the image that has been changed; in interactive mode, this region may be repainted. pluginCompleted; void pluginCompleted(String message); Notify the monitor that the plugin has completed its work. This is called automatically by updateProgress if progress >= 1,; but may also be called if the plugin was cancelled or otherwise terminated abnormally. Parameters:; message - message to show upon completion. cancelled; boolean cancelled()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1994,message,message,1994,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,2,['message'],['message']
Integrability,"lor.ColorTransformer. Extract mean of RGB values from a packed RGB pixel. RichScriptEditor - Class in qupath.lib.gui.scripting.richtextfx. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditor. Constructor. RichScriptEditorExtension - Class in qupath.lib.gui.scripting.richtextfx. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). RichScriptEditorExtension() - Constructor for class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; RIGID_OBJECT_EDITOR - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; ROI - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a ROI. ROI - Interface in qupath.lib.roi.interfaces. Base interface for defining regions of interest (ROIs) within QuPath. ROI_AREA - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has an area ROI. ROI_LINE - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a line ROI. ROI_POINT - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that has a points ROI. ROI.RoiType - Enum Class in qupath.lib.roi.interfaces. Enum representing the major different types of ROI. roiBounds() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. roiBounds(double, double) - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. RoiEditor - Class in qupath.lib.roi. Helper class for interactively modifying existing ROIs. RoiLabeling - Class in qupath.imagej.pr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:869327,interface,interface,869327,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lorModelRenderer;  ; applyTransforms(BufferedImage, BufferedImage) - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean) - Static method in class qupath.lib.display.ImageDisplay. Deprecated.; use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area (possibly with holes). areaContains(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Returns true if pathROI is an area that contains x & y somewhere within it. AreaROI - Class in qupath.lib.roi. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ARGS - Static variable in class qupath.lib.scripting.ScriptAttributes. Optional string args passed to the script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:44999,interface,interfaces,44999,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"lorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.analysis.heatmaps.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.color.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). createButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing only",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:163751,interface,interface,163751,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"low you to navigate to specific declarations and summary pages, including: All Packages, All Classes and Interfaces. Search; You can search for definitions of modules, packages, types, fields, methods, system properties and other terms defined in the API. These items can be searched using part or all of the name, optionally using ""camelCase"" abbreviations, or multiple search terms separated by whitespace. Some examples:. ""j.l.obj"" matches ""java.lang.Object""; ""InpStr"" matches ""java.io.InputStream""; ""math exact long"" matches ""java.lang.Math.absExact(long)"". Refer to the Javadoc Search Specification for a full description of search features. Kinds of Pages; The following sections describe the different kinds of pages in this collection. Overview; The Overview page is the front page of this API document and provides a list of all packages with a summary for each. This page can also contain an overall description of the set of packages. Package; Each package has a page that contains a list of its classes and interfaces, with a summary for each. These pages may contain the following categories:. Interfaces; Classes; Enum Classes; Exception Classes; Annotation Interfaces. Class or Interface; Each class, interface, nested class and nested interface has its own separate page. Each of these pages has three sections consisting of a declaration and description, member summary tables, and detailed member descriptions. Entries in each of these sections are omitted if they are empty or not applicable. Class Inheritance Diagram; Direct Subclasses; All Known Subinterfaces; All Known Implementing Classes; Class or Interface Declaration; Class or Interface Description. Nested Class Summary; Enum Constant Summary; Field Summary; Property Summary; Constructor Summary; Method Summary; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:1656,interface,interfaces,1656,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['interface'],['interfaces']
Integrability,"lowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); Get the channel number. Returns:. getName; public String getName(); Description copied from interface: ChannelDisplayInfo; Get the channel name. This may also be returned by the toString() method. Returns:. getColorModel; protected ColorModel getColorModel(ChannelDisplayMode mode); Get a ColorModel to use with a specified ChannelDisplayMode when converting a value to RGB. Parameters:; mode - ; Returns:. setLUTColor; public void setLUTColor(int r,; int g,; int b); Set the 'maximum' color, which defines the lookup table to use. Parameters:; r - red component (0-255); g - green component (0-255); b - blue component (0-255). getValue; public float getValue(BufferedImage img,; int x,; int y); Description copied from interface: SingleChannelDisplayInfo; Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; public float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Description copied from interface: SingleChannelDisplayInfo; Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. doesSomething; public boolean doesSomething(); Description copied from interface: ChannelDisplayInfo; Returns true if this does something - anything - and false otherwise.; For example, this will return false if we have an RGB image wit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:6634,interface,interface,6634,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvectors, returned in the same order as the eigenvalues. getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. getErrorWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the error writer for script output. getEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get an unmodifiable list of all events. getEventsAtTime(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events at a specified time (exactly). getEventType() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the hierarchy event type. getExcludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:388722,interface,interface,388722,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ls created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoCloseable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:2979,interface,interface,2979,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,1,['interface'],['interface']
Integrability,"ls for BufferedImages. ColorToolsFX. Helper class for converting between packed RGB colors and Java's AWT representation, as well as creating some ColorModels for BufferedImages. ColorTransformer. Static methods for computing a range of color transforms for packed RGB values. ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. ColorTransforms. Color transforms that may be used to extract single-channel images from BufferedImages. ColorTransforms.ColorTransform. Interface defining a color transform that can extract a float values from a BufferedImage. ColorTransforms.ColorTransformTypeAdapter. TypeAdapter to support serializing a ColorTransforms.ColorTransform. CommandFinderTools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools.CommandBarDisplay. Available modes for displaying the command bar. CommandFinderTools.CommandEntry. Helper class to wrap summary data for a command to display in the list. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. Commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. CommonActions. Default actions associated with a specific QuPath instance. ContextHelpViewer. Help window providing context-dependent help. ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. ConvertCommand. Allows command line option to convert an input image to OME-TIFF. ConvexHull. Helper method for calculating the convex hull from a list of points. CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. CountingDialogCommand. Command to open up a counting panel to aid with creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:9966,wrap,wrap,9966,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['wrap'],['wrap']
Integrability,"ls,; boolean limitByClass); Compute Delaunay triangulation - optionally omitting links above a fixed distance. Parameters:; pathObjects - ; pixelWidth - ; pixelHeight - ; distanceThresholdPixels - - Note, this is in *pixels* (and not scaled according to pixelWidth & pixelHeight); limitByClass - . Method Details. getConnectedObjects; public List<PathObject> getConnectedObjects(PathObject pathObject); Description copied from interface: PathObjectConnectionGroup; Get all the connections to a specified PathObject stored in this group.; ; If containsObject(pathObject) returns null, this will return an empty list (and not null). Specified by:; getConnectedObjects in interface PathObjectConnectionGroup; Parameters:; pathObject - ; Returns:. getPathObjects; public Collection<PathObject> getPathObjects(); Description copied from interface: PathObjectConnectionGroup; Get an unmodifiable collection containing all the PathObjects contained within this group. Specified by:; getPathObjects in interface PathObjectConnectionGroup; Returns:. getConnectedNodes; @Deprecated; public Collection<double[]> getConnectedNodes(Collection<PathObject> pathObjects,; Collection<double[]> connections); Deprecated.; Get connected nodes. Returned as a list where pairs are consecutive, i.e.; get(i) links to get(i+1); (although get(i+1) doesn't necessarily link to get(i+2)...). Parameters:; pathObjects - ; connections - ; Returns:. getConnectedNodes; public Collection<PathObject> getConnectedNodes(PathObject pathObject,; Collection<PathObject> list); Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). Parameters:; pathObject - ; list - ; Returns:. getConnectedClusters; public List<Set<PathObject>> getConnectedClusters(); Get a list of PathObjects that are connected to each other in this triangulation.; ; Warning: This list is recomputed on every call, therefore references should be cached by the caller if necessary; to av",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html:3540,interface,interface,3540,javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayTriangulation.html,2,['interface'],['interface']
Integrability,"ls. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:3590,interface,interface,3590,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"ls. readPathObjects; public Collection<PathObject> readPathObjects(); Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available. dumpMetadata; public String dumpMetadata(); Get a String representing the image metadata.; ; Currently, this reflects the contents of the ImageJ 'Show info' command, which is tied to the 'current' slice ; and therefore not complete for all slices of a multichannel/multidimensional image.; This behavior may change in the future. Returns:; a String representing image metadata in ImageJ's own form. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:4132,depend,depend,4132,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['depend'],['depend']
Integrability,"ls.MultiscaleFeatures.Hessian3D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian3D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 3D images (z-stacks). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvalues, ranked from highest to lowest. Specified by:; getEigenvalues in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvalues sorted by absol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html:1461,interface,interface,1461,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian3D.html,2,['interface'],['interface']
Integrability,"lso:. getText(); setText(String). setText; public void setText(String text); Sets the value of the text property. Specified by:; setText in interface EditableText; Property description:; Parameters:; text - the value for the text property; See Also:. getText(); textProperty(). getText; public String getText(); Gets the value of the text property. Specified by:; getText in interface EditableText; Property description:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Descript",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6292,interface,interface,6292,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"lt stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static methods for computing statistics from images, with or without a corresponding la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:995972,interface,interface,995972,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ltiple QuPathViewer instances in a UI region. ViewerPlusDisplayOptions. A group of properties determining what should be displayed for each viewer. ViewMenuActions;  ; ViewTracker. Default ViewTracker implementation. ViewTrackerControlPane. Panel for viewing ViewTracker controls. ViewTrackerDataMap. Class for storing the values of a data map as well as generating a proper BufferedImage with the appropriate pixel type. WandToolEventHandler. Wand tool, which acts rather like the brush - except that it expands regions ; (sometimes rather too eagerly?) based upon local pixel values. WandToolEventHandler.WandPreferences;  ; WandToolEventHandler.WandType. Enum reflecting different color images that may be used by the Wand tool. Watershed. Implementation of 2D watershed transform for ImageJ. Watershed. Implementation of 2D watershed transform. WatershedCellDetection. Default command for cell detection within QuPath, assuming either a nuclear or cytoplasmic staining. WatershedCellMembraneDetection. Cell detection that takes into consideration membrane staining. WatershedNucleiCV. Alternative (incomplete) attempt at nucleus segmentation. WebViews. Helper class for creating a WebView in a standardized way. WelcomeStage. Welcome page when launching QuPath. Workflow. A collection of steps that relate to how an image has been - or should be - processed. WorkflowCommandLogView. Show logged commands, and optionally generate a script. WorkflowListener. Interface for listening to changes in Workflows, e.g. WorkflowStep. Basic interface for a loggable workflow step. WrappedBufferedImageServer. Implementation of an ImageServer that simply wraps an existing BufferedImage. XmlLanguage. Class for representing XML in QuPath. XmlStyler. Styling to apply to a CodeArea for XML. YamlLanguage. Class for the representation of YAML syntax in QuPath. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ZipWriterIJ. ImageWriter implementation to write zipped TIFF images using ImageJ. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:61700,interface,interface,61700,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['interface', 'wrap']","['interface', 'wraps']"
Integrability,"ltiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsPyramidal; public boolean supportsPyramidal(); Description copied from interface: ImageWriter; Returns true if the writer is capable of writing pyramidal images. Specified by:; supportsPyramidal in interface ImageWriter<BufferedImage>; Returns:. supportsPixelSize; public boolean supportsPixelSize(); Description copied from interface: ImageWriter; Returns true if the writer is capable of storing pixel size information. Specified by:; supportsPixelSize in interface ImageWriter<BufferedImage>; Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Specified by:; supportsRGB in interface ImageWriter<BufferedImage>; Returns:. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; request - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified output stream. Specified by:; writeImage in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html:5422,interface,interface,5422,javadoc/docs/qupath/lib/images/writers/PngWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/PngWriter.html,2,['interface'],['interface']
Integrability,"lue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Double>; Parameters:; val - ; Returns:. duplicate; public Parameter<Double> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Double getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Double getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public Double getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:4184,interface,interface,4184,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['interface'],['interface']
Integrability,"lue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548000,interface,interface,548000,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"lugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . smoothMeasurements; public static void smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames); Using the centr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3989,interface,interface,3989,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['interface'],['interface']
Integrability,"lutionStains (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.color; Enum Class ColorDeconvolutionStains.DefaultColorDeconvolutionStains. java.lang.Object; java.lang.Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains. All Implemented Interfaces:; Serializable, Comparable<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>, Constable. Enclosing class:; ColorDeconvolutionStains. public static enum ColorDeconvolutionStains.DefaultColorDeconvolutionStains; extends Enum<ColorDeconvolutionStains.DefaultColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1042,interface,interface,1042,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['interface'],['interface']
Integrability,"ly abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:4902,interface,interface,4902,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['interface'],['interface']
Integrability,"ly abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:5669,interface,interface,5669,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['interface'],['interface']
Integrability,"ly property representing the shared scripts directory.; This is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9135,depend,depends,9135,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['depend'],['depends']
Integrability,"ly to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptStyler; Parameters:; text - the text to process styling for; Returns:; stylespans the StyleSpans to apply. computeConsoleStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeConsoleStyles(String text,; boolean logConsole); Description copied from interface: ScriptStyler; Compute styling for the specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:1599,interface,interface,1599,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['interface'],['interface']
Integrability,"ly using 'non-square' pixels. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double xx,; double yy); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; xx - ; yy - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. isCircle; public boolean isCircle(); Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. Returns:. isCircle; public boolean isCircle(double pixelWidth,; double pixelHeight); Query if the width and height of the ellipse bounding box are the same, optionally using 'non-square' pixels. Parameters:; pixelWidth - ; pixelHeight - ; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:4296,interface,interface,4296,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"lysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3606,interface,interface,3606,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['interface'],['interface']
Integrability,"lysis.features.ObjectMeasurements.ShapeFeatures. Length of the shape; for area geometries, this provides the perimeter. leq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold. leq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold between two arrays. levels(Collection<ImageServerMetadata.ImageResolutionLevel>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify resolution levels, where the largest image should come first. levelsFromDownsamples(double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify downsample values for pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageInclu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:651981,interface,interfaces,651981,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"lysis.heatmaps.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBand(String, int, double, double, double) - Static method in class qupath.lib.color.ColorModels. Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). createButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing only the graphic and not any text. createCellObject(ROI, ROI) - Static method in class qupath.lib.objects.PathObjects. Create a cell object. createCellObject(ROI, ROI, PathClass)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:163910,interface,interface,163910,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"m class, in; the order they are declared. values() - Static method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.io.UriUpdater.UriStatus. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Method in interface qupath.lib.measurements.MeasurementList. Get all measurement values as a double array. values() - Static method in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns an array containi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1092582,interface,interface,1092582,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"m constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the specified level. LogRankTest - Class in qupath.lib.analysis.stats.survival. Helper class to apply a log-rank test. LogRankTest() - Constructor for class qupath.lib.analysis.stats.survival.LogRankTest;  ; LogRankTest.LogRankResult - Class in qupath.lib.analysis.stats.survival. Simple structure used to manage the result of a log rank test. logToFile(File) - Static method in class qupath.lib.gui.logging.LogManager. Request logging to the specified file. LogTools - Class in qupath.lib.common. Helper class for logging. LogTools() - Constructor for class qupath.lib.common.LogTools;  ; LogViewerCommand - Class in qupath.lib.gui.commands. A viewer for log messages. LogViewerCommand(Window) - Constructor for class qupath.lib.gui.commands.LogViewerCommand. Constructor. longText(String) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the long text property of the action. longText(ObservableValue<String>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuild",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:659424,message,message,659424,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"m interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public S getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(S value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:4586,interface,interface,4586,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,4,['interface'],['interface']
Integrability,"m interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea> getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. copy; public void copy(); Description cop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:6696,interface,interface,6696,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['interface'],['interface']
Integrability,"m interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. createID; public String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns a build",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:4299,interface,interface,4299,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['interface'],['interface']
Integrability,"mage. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Attempt to resolve the parent-child relationships between all objects within the hierarchy. resolveHierarchy() - Static method in class qupath.lib.scripting.QP. Resolve the location of annotations in the current hierarchy by setting parent/child relationships. resolveHier",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:865058,interface,interface,865058,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"mage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:3241,depend,depends,3241,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['depend'],['depends']
Integrability,"mageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3385,interface,interface,3385,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['interface'],['interface']
Integrability,"mageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3880,interface,interface,3880,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['interface'],['interface']
Integrability,"mageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVDnn;  ; updateURIs(Map<URI, URI>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.opencv.ops.ImageOp. Default implementation makes no changes; classes should override this if necessary. UpdateUrisCommand<T> - Class in qupath.lib.gui.commands. Fix broken URIs by using relative paths or prompting the user to select files. updateZ(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated z value. updatingConstrainingObjects(QuPathViewer, double, double, Collection<Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1068016,interface,interface,1068016,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"mageIJ; extends Object; implements SimpleModifiableImage; Very simple wrapper that allows some non-ImageJ-oriented QuPath commands to access ImageProcessor pixel values. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelImageIJ(ImageProcessor ip). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelImageIJ; public PixelImageIJ(ImageProcessor ip); Constructor. Parameters:; ip - ImageProcessor to wrap. Method Details. getValue; public float getValue(int x,; int y); Description copied from interface: SimpleImage; Get the value of a single pixel as a float. Specified by:; getValue in interface SimpleImage; Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. setValue; public void setValue(int x,; int y,; float val); Description copied from interface: SimpleModifiableImage; Set the value of a single pixel. Specified by:; setValue in interface SimpleModifiableImage; Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getWidth; public int getWidth(); Description copied from interface: SimpleImage; Get the image width. Specified by:; getWidth in interface SimpleImage; Returns:. getHeight; public int getHeight(); Description copied from interface: SimpleImage; Get the image height. Specified by:; getHeight in interface SimpleImage; Returns:. getArray; public float[] getArray(boo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html:1528,wrap,wrap,1528,javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/PixelImageIJ.html,1,['wrap'],['wrap']
Integrability,"mageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. LabeledImageServer. A special ImageServer implementation that doesn't have a backing image, but rather; constructs tiles from a PathObjectHierarchy where pixel values are integer labels corresponding ; stored and classified annotations. LabeledImageServer.Builder. Helper class for building a LabeledImageServer. PixelCalibration. Class used to represent pixel sizes. PixelCalibration.Builder. Builder class for PixelCalibration objects. PixelType. Image bit-depths and types. RearrangeRGBImageServer. Simple image server to swap the red and blue channels of an RGB image. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. ServerTools. Static methods helpful when dealing with ImageServers. SparseImageServer. An ImageServer that combines regions from multiple separate ImageServers, ; repositioning these as necessary to generate one larger field of view. SparseImageServer.Builder. Builder to create a new SparseImageServer. SparseImageServer.SparseImageServerManager. Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html:4848,wrap,wraps,4848,javadoc/docs/qupath/lib/images/servers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/package-summary.html,1,['wrap'],['wraps']
Integrability,"mageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:11331,interface,interface,11331,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"mageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:4867,interface,interface,4867,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"mageWriter<BufferedImage>; Returns:; ImageServer.getImageClass(). writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to wr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:6341,interface,interface,6341,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['interface'],['interface']
Integrability,"mages required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. hasAlpha; protected boolean hasAlpha(). createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Description copied from class: AbstractTileableImageServer; Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Overrides:; createDefaultRGBImage in class AbstractTileableImageServer; Parameters:; width - ; height - ; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:6095,interface,interface,6095,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['interface'],['interface']
Integrability,"mages.servers.ImageJServer;  ; close() - Method in class qupath.lib.gui.ExtensionClassLoader;  ; close() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; close() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; close() - Method in class qupath.lib.gui.SharedThreadPoolManager. Shutdown any threadpools created by this manager. close() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; close() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; close() - Method in class qupath.lib.images.servers.LabeledImageServer;  ; close() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Close; this is important for cleanup. close() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer;  ; close() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager;  ; close() - Method in interface qupath.lib.measurements.MeasurementList. Close the list. close() - Method in interface qupath.opencv.dnn.DnnModel. Close this model if it will not be needed again. close() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; close() - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; close() - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; closeProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Close the current project open in the QuPathGUI. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that this viewer is closed. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; closeViewer(QuPathViewer) - Method in class qupath.lib.gui.QuPathGUI. Close the image within a viewer, prompting to save changes if necessary. closing(int) - Static method in class qupath.open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:115194,interface,interface,115194,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"mages.servers.openslide.OpenslideServerBuilder;  ; Optical_density_sum - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Sum of red, green and blue optical densities. opticalDensitySum(int, double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. opticalDensitySum(int, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Extract optical density sum value from a packed RGB pixel. options(OverlayOptions) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the overlay options to control display. or(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise OR of two arrays. or(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through OR. orElse(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one, but only call it if this one returns false. Original - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Original image. OTHER - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Other image type, not covered by any of the alternatives above. OTHER - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Other classification. OTHER - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Other classification. OTHER - Static variable in class qupath.lib.scripting.QP. Any other image type (neither brightfield nor fluorescence). OTHER_STRUCTURE_CHANGE - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A more complex structural change was made than simply either adding or removing objects. ou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:731663,interface,interface,731663,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"mages.servers.openslide.jna.OpenSlide. Dispose the OpenSlide object; this is equivalent to OpenSlide.close(). distance(double, double) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and a specified x and y location. distance(Point) - Method in class qupath.lib.geom.Point2;  ; distance(Point) - Method in interface qupath.lib.geom.Point. Calculate the distance to another point, with the same Point.dim(). distance(Point2) - Method in class qupath.lib.geom.Point2. Calculate the distance between this point and another point. DISTANCE_CENTROIDS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; DISTANCE_TO_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; distanceSq(double, double) - Method in class qupath.lib.geom.Point2. Calculate the squared distance between this point and a specified x and y location. distanceSq(Point) - Method in class qupath.lib.geom.Point2;  ; distanceSq(Point) - Method in interface qupath.lib.geom.Point. Calculate the squared distance to another point, with the same Point.dim(). distanceSq(OpenCVTools.IndexedPixel) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the euclidean distance to another pixel, based upon the inds array and assuming unit spacing for all dimensions. distanceToAnnotations2D(ImageData<?>, boolean) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between all detections and the closest annotation, for all annotation classifications. DistanceTools - Class in qupath.lib.analysis. Static methods for calculating distances between objects. DistanceTools() - Constructor for class qupath.lib.analysis.DistanceTools;  ; div(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Divide array elements by a constant. div(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Per-element division of two arrays. divide(double...) - Static method in class qupath.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:264473,interface,interface,264473,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"map. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap; public static ColorMaps.ColorMap getDefaultColorMap(); Get a default, general-purpose ColorMaps.ColorMap. Returns:; See Also:. setDefaultColorMap(ColorMap). setDefaultColorMap; public static void setDefaultColorMap(ColorMaps.ColorMap colorMap); Set the default ColorMaps.ColorMap. Parameters:; colorMap - ; See Also:. getDefaultColorMap(). getColorMaps; public static Map<String,ColorMaps.ColorMap> getColorMaps(); Get an unmodifiable map representing all the currently-available colormaps. Returns:; the available colormaps. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; double[] r,; double[] g,; double[] b); Create a colormap using floating point values for red, green and blue.; These should be in the range 0-1. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int[] r,; int[] g,; int[] b); Create a colormap using integer values for red, green and blue.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int r,; int g,; int b); Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. gammaColorMap; public static ColorMaps.ColorMap gammaColorMap(ColorMaps.ColorMap map,; double gamma); Apply gamma to a colormap.; The resulting colormap normalizes the input value according to the specified min and max, ; then applies value = Math.pow(value, gamma) before passing this to the ; wrapped ColorMaps.ColorMap. Parameters:; map - base colormap; gamma - gamma value; Returns:; transformed colormap. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:4997,wrap,wrapped,4997,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['wrap'],['wrapped']
Integrability,"may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Returns true if there are no objects to be painted within the requested region. Specified by:; isEmptyRegion in interface ImageServer<BufferedImage>; Overrides:; isEmptyRegion in class AbstractImageServer<BufferedImage>; Parameters:; request - ; Returns:. close; public void close(). Specified by:; close in interface AutoCloseable; Overrides:; close in class AbstractImageServer<BufferedImage>. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Throws an exception - metadata should not be set for a hierarchy image server directly. Any changes should be made to the underlying; image server for which this server represents an object hierarchy. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - . createDefaultRGBImage; protected BufferedImage ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:5583,interface,interface,5583,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['interface'],['interface']
Integrability,"memory issues ; (e.g. a density map), particularly if it is is dependent upon a changing property of the image ; (e.g. its object hierarchy).; After calling this method, tiles will be returned from an internal cache rather than being computed anew. getDefaultColorModel; protected ColorModel getDefaultColorModel(); throws IOException; Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:; Throws:; IOException. createID; protected String createID(); Returns a random UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. getImageData; public ImageData<BufferedImage> getImageData(); Get the underlying ImageData used for classification. Returns:. getClassifier; public PixelClassifier getClassifier(); Get the PixelClassifier performing the classification. Returns:. getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:5347,interface,interface,5347,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['interface'],['interface']
Integrability,"ment name; Returns:; true if the measurement returns a number, false otherwise. getMeasurementNames; public ReadOnlyListWrapper<String> getMeasurementNames(); Description copied from interface: PathTableData; Get the names of all numeric measurements. Specified by:; getMeasurementNames in interface PathTableData<PathObject>; Returns:. getDoubleValues; public double[] getDoubleValues(String column); Description copied from interface: PathTableData; Get all double values for all items. Specified by:; getDoubleValues in interface PathTableData<PathObject>; Parameters:; column - ; Returns:. getNumericValue; public double getNumericValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get the numeric value from an object for the specific measurement. Specified by:; getNumericValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getItems; public ObservableList<PathObject> getItems(); Description copied from interface: PathTableData; Get internal list of the items used to provide measurements. Specified by:; getItems in interface PathTableData<PathObject>; Returns:. getBackingListEntries; public ObservableList<PathObject> getBackingListEntries(); Access the underlying entries, for which getEntries provides a filtered view. Returns:. getAllNames; public List<String> getAllNames(); Description copied from interface: PathTableData; Return an ordered list of all names, including both numeric measurements and String values. Specified by:; getAllNames in interface PathTableData<PathObject>; Returns:. getStringValue; public String getStringValue(PathObject pathObject,; String column); Description copied from interface: PathTableData; Get a string representation of the value.; ; For this method, numbers should be formatted according to the Locale. Specified by:; getStringValue in interface PathTableData<PathObject>; Parameters:; pathObject - ; column - ; Returns:. getStringValue; public String getStr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:7301,interface,interface,7301,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['interface'],['interface']
Integrability,"mentation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:6033,interface,interface,6033,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Dialogs; public Dialogs(); Deprecated. Method Details. showConfirmDialog; public static boolean showConfirmDialog(String title,; String tex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4779,message,message,4779,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"meters - Class in qupath.lib.analysis.heatmaps. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType - Enum Class in qupath.lib.analysis.heatmaps. Density map types. DensityMapUI - Class in qupath.process.gui.commands.density. UI elements associated with density maps. DensityMapUI() - Constructor for class qupath.process.gui.commands.density.DensityMapUI;  ; deregister() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Deregister listeners. deregisterTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; deregisterTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Deregister the tool from the viewer. describe(Class<?>) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified class. describe(Object) - Static method in class qupath.lib.scripting.QP. List the fields and methods of a specified object. deselect() - Method in interface qupath.lib.gui.scripting.EditableText. Deselect any currently-selected text. deselect() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deselect() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; deselectAll() - Static method in class qupath.lib.scripting.QP. Clear the selection for the current hierarchy, so that no objects of any kind are selected. deselectAll(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the selection, so that no objects of any kind are selected. deselectObject(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure that the specified object is removed from the selection. deselectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are deselected. DETACH_VIEWER - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:250459,interface,interface,250459,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"meters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Paramet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:4662,message,message,4662,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"meters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10018,interface,interface,10018,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['interface'],['interface']
Integrability,"method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Overrides:; runPlugin in class AbstractPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:5033,interface,interface,5033,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['interface'],['interface']
Integrability,"method in class qupath.lib.scripting.QP. Apply an affine transform to all objects in the current hierarchy, retaining parent-child relationships between objects. transformSelectedObjects(PathObjectHierarchy, AffineTransform) - Static method in class qupath.lib.scripting.QP. Apply an affine transform to all objects in the specified hierarchy, retaining parent-child relationships between objects. transformsToOp(Collection<? extends BioimageIoSpec.Processing>) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms sequentially. transformToOp(BioimageIoSpec.Processing) - Static method in class qupath.opencv.ml.BioimageIoTools. Create an ImageOp that applies the specified transforms, if possible. translate(double, double) - Method in class qupath.lib.roi.AreaROI;  ; translate(double, double) - Method in class qupath.lib.roi.EllipseROI;  ; translate(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; translate(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Create a translated version of this ROI. translate(double, double) - Method in class qupath.lib.roi.LineROI;  ; translate(double, double) - Method in class qupath.lib.roi.PointsROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1052892,interface,interface,1052892,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"minima within a specified Roi, using morphological reconstruction. INACTIVE_SERVER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INCLUDE_IGNORED - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Generate objects for ignored classes (default is not to). includeOnlyColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current displ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:600730,message,message,600730,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"mns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text. info(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with static text and a count. info(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a information message to show a count of messages. info(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message. info(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an information message with a count. INFO - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Information only. INFO - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Info logging (default). INFO - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INFO - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; infoMessage() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand. Get a string expression to draw attention to any warnings associated with the current display settings. InfoMessage - Class in qupath.lib.gui.actions. An informative message that should be shown to the user. InfoMessage.MessageType - Enum Class in qupath.lib.gui.actions. The type of message, which can be used for styling. information() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an information alert dialog. initializeForServer(ImageServer<BufferedImage>) - Method in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:601173,message,message,601173,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"mptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5826,message,message,5826,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['message'],['message']
Integrability,"n class qupath.lib.gui.QuPathGUI. Get the common actions associated with this QuPath instance. getComparator() - Static method in class qupath.lib.scripting.languages.AutoCompletions. Get a comparator to order completions. getCompatibleObjects(ImageData<T>) - Method in class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; getCompatibleObjects(ImageData<T>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Get the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:359821,interface,interface,359821,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n class qupath.lib.gui.Urls. Get a URL pointing to the main GitHub issues page. getGitHubRepoUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath GitHub repo. getGreen() - Method in class qupath.lib.color.StainVector. Get the green component of the (normalized) stain vector. getGreen() - Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399277,interface,interface,399277,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964796,message,message,964796,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['message'],['message']
Integrability,"n class qupath.lib.gui.viewer.QuPathViewer. Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. getCenterPixelY() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. getCentroidDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the centroids of two ROIs. getCentroidDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. getCentroidX() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidX() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidX() - Method in class qupath.lib.roi.AreaROI. Get the x coordinate of the ROI centroid;. getCentroidX() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the ROI centroid. getCentroidX() - Method in class qupath.lib.roi.LineROI;  ; getCentroidX() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidX() - Method in class qupath.lib.roi.PolylineROI. The centroid for a Polyline here is represented by the centroid of its bounding box. getCentroidY() - Method in class qupath.lib.roi.EllipseROI;  ; getCentroidY() - Method in class qupath.lib.roi.RectangleROI;  ; getCentroidY() - Method in class qupath.lib.roi.AreaROI. Get the y coordinate of the ROI centroid;. getCentroidY() - Method in class qupath.lib.roi.GeometryROI;  ; getCentroidY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the ROI centroid. getCentroidY() - Method in class qupath.lib.roi.LineROI;  ; getCentroidY() - Method in class qupath.lib.roi.PointsROI;  ; getCentroidY() - Method in class qupath.lib.roi.PolygonROI;  ; getCentroidY() - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:348534,interface,interfaces,348534,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"n class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:400206,interface,interface,400206,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project. getScriptsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where shared script files should be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-selected object from t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:506161,interface,interface,506161,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get a list of ServerBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:342152,interface,interface,342152,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n connection with the analysis of a single image. ImageData(ImageServer<T>) - Constructor for class qupath.lib.images.ImageData. Create a new ImageData with ImageType.UNKNOWN and a new PathObjectHierarchy. ImageData(ImageServer<T>, ImageData.ImageType) - Constructor for class qupath.lib.images.ImageData. Create a new ImageData with a specified type and creating a new object hierarchy. ImageData(ImageServer<T>, PathObjectHierarchy) - Constructor for class qupath.lib.images.ImageData. Create a new ImageData with ImageType.UNKNOWN. ImageData(ImageServer<T>, PathObjectHierarchy, ImageData.ImageType) - Constructor for class qupath.lib.images.ImageData. Create a new ImageData with a specified object hierarchy and type. ImageData.ImageType - Enum Class in qupath.lib.images. Enum representing possible image types. imageDataChanged(QuPathViewer, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.UndoRedoManager;  ; imageDataChanged(QuPathViewer, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in interface qupath.lib.gui.viewer.QuPathViewerListener. Called with the image data within a viewer has changed. imageDataChanged(QuPathViewer, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; imageDataChanged(QuPathViewer, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; ImageDataOp - Interface in qupath.opencv.ops. Request pixels from an image, potentially applying further transforms. imageDataProperty() - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; imageDataProperty() - Method in class qupath.lib.gui.QuPathGUI. Read-only property containing the image open within the currently-active viewer. imageDataProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Property for the image data currently being displayed within this viewer. imageDataProperty() - Method in class qupath.lib.gui.vie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:587095,interface,interface,587095,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n copied from interface: ImageWriter; Write an image region to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; String pathOutput); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified path. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; pathOutput - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; region - ; stream - ; Throws:; IOException. writeImage; public void writeImage(BufferedImage img,; OutputStream stream); throws IOException; Description copied from interface: ImageWriter; Write a full image to a specified output stream. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; img - ; stream - ; Throws:; IOException. writeImage; public void writeImage(ImageServer<BufferedImage> server,; OutputStream stream); throws IOException; Write OME-TIFF image to an output stream. Note that this must be able to write the image in-memory first, ; and therefore is not suitable for very large images. Specified by:; writeImage in interface ImageWriter<BufferedImage>; Parameters:; server - ; stream - ; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:6766,interface,interface,6766,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,8,['interface'],['interface']
Integrability,"n copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3290,interface,interface,3290,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"n could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2987,interface,interface,2987,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['interface'],['interface']
Integrability,"n enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilder(Collection<PathObject>) - Static method in class qupath.lib.analysis.DelaunayTools. Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. newInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Create a new instance. nFeatures() - Method in class qupath.lib.analysis.features.HaralickFeatures. Total number of Haralick features. nFeatures() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; nFeatures() - Method in class qupath.opencv.ml.objects.features.Normalizer. The total number of features supported by this Normalizer. nFrames() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the number of recorded frames. nImages() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return an estimate of the number of images if known, or -1 if unknown. nImagesLargest() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return the number of images with the largest image size, if known, or -1 if unknown. nLevels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the number of resolution levels. nMissingValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of NaNs in the input array. NO - Enum constant in enum class qupath.lib.gui.dialogs.Dialogs.DialogButton. Deprecated.; ""No"" option. nObjects() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Number of objects in the hierarchy, excluding the root. nObjects() - Static method in class qupath.lib.scripting.QP. Get a count of the total number of objects in the current hierarchy. nObserved() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of observed (not censored) events. NONE - Enum constant in enum class qupath.lib.classifiers.Normalization. Do not normalize features. NONE - Enum constant i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:710885,interface,interface,710885,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any annotations. ANY_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:40786,interface,interface,40786,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. Image writers, using ImageJ as the writing library. qupath.imagej.processing - package qupath.imagej.processing. Static methods that add further processing methods when working with ImageJ images. qupath.imagej.superpixels - package qupath.imagej.superpixels. Classes to generate superpixels. qupath.imagej.tools - package qupath.imagej.tools. Helper classes and static methods for working with ImageJ images. qupath.lib.algorithms - package qupath.lib.algorithms. Feature calculation plugins. qupath.lib.analysis - package qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms - package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805904,interface,interface,805904,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n interface ImageServer<T>; Returns:. getMetadata; public ImageServerMetadata getMetadata(); Description copied from interface: ImageServer; Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Specified by:; getMetadata in interface ImageServer<T>; Returns:; See Also:. ImageServer.getOriginalMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); Description copied from interface: ImageServer; Set the metadata to use, e.g. to change the pixel size in microns. Specified by:; setMetadata in interface ImageServer<T>; Parameters:; metadata - . getAssociatedImageList; public List<String> getAssociatedImageList(); Description copied from interface: ImageServer; Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:10860,interface,interface,10860,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['interface'],['interface']
Integrability,"n interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied from interface: Parameter; Get a description of the meaning of the Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:4575,interface,interface,4575,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"n interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be displayed to a user. Specified by:; getPrompt in interface Parameter<S>; Returns:. setValue; public boolean setValue(String value); Description copied from interface: Parameter; Set the Parameter to have a specified value. Specified by:; setValue in interface Parameter<S>; Parameters:; value - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. hasHelpText; public boolean hasHelpText(); Description copied from interface: Parameter; Query whether getHelpText() returns a meaningful String (as opposed to null). Specified by:; hasHelpText in interface Parameter<S>; Returns:. getHelpText; public String getHelpText(); Description copied",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:4283,interface,interface,4283,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['interface'],['interface']
Integrability,"n interface QuPathViewerListener; Parameters:; viewer - the viewer whose image has changed; imageDataOld - the image previously open in the viewer; imageDataNew - the image now open in the viewer. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerList",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:10861,synchroniz,synchronizeViewers,10861,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,2,['synchroniz'],['synchronizeViewers']
Integrability,"n interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getNumPoints; public int getNumPoints(); Returns 4 (since the ellipse is defined by its bounding box).; Note this behavior may change. Specified by:; getNumPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal).; This behavior may change. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:6395,interface,interface,6395,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['interface'],['interface']
Integrability,"n the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getSynchronizeViewers; public boolean getSynchronizeViewers(); Gets the value of the synchronizeViewers property. Property description:; Returns:; the value of the synchronizeViewers property; See Also:. setSynchronizeViewers(boolean); synchronizeViewersProperty(). setSynchronizeViewers; public void setSynchronizeViewers(boolean synchronizeViewers); Sets the value of the synchronizeViewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerTo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:11206,synchroniz,synchronizeViewers,11206,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['synchroniz'],['synchronizeViewers']
Integrability,"n to a specified output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest request,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. ZipWriterIJ; public ZipWriterIJ(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Returns:. getDetails; public String getDetails(); Description copied from interface: ImageWriter; Get further details of the writer, which may be displayed to a user. Returns:. supportsRGB; public boolean supportsRGB(); Description copied from interface: ImageWriter; Check if writer can handle RGB (it probably can...). Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Returns:. writeImage; public void writeImage(ImagePlus imp,; OutputStream stream); throws IOException. Throws:; IOException. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public boolean supportsZ(); Description copied from interface: ImageWriter; Check if writer can handle multiple z-slices. Specified by:; supportsZ in interface ImageWriter<BufferedImage>; Returns:. supportsImageType; public boolean supportsImageType(ImageServer<BufferedImage> server); Description copied from interface: ImageWriter; Test whether images provided by a specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html:3362,interface,interface,3362,javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/writers/ZipWriterIJ.html,1,['interface'],['interface']
Integrability,"n, indicating weak positivity. getOnePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getOnePlus(PathClass). getOpacity() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get the global opacity for overlay drawing. getOpacity() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get opacity, between 0 (completely transparent) and 1 (completely opaque). getOpenCVPixelType(PixelType) - Static method in class qupath.opencv.tools.OpenCVTools. Get the OpenCV type code corresponding to a PixelType. getOpenCVTypeAdaptorFactory() - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. getOrDefault(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Get the specified measurement, or the provided default value if it is not contained in the list. getOriginalImageName() - Method in interface qupath.lib.projects.ProjectImageEntry. Get the original image name, without any randomization. getOriginalMetadata() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getOriginalMetadata() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.ChannelDisplayTransformServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.AffineTransformImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getOriginalMetadata() - Method in class qupath.lib.images.servers.CroppedImageServer;  ; getOrigina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:464761,interface,interface,464761,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"n. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:9296,interface,interface,9296,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['interface'],['interface']
Integrability,"n:; Returns:; the value of the text property; See Also:. setText(String); textProperty(). selectedTextProperty; public ObservableValue<String> selectedTextProperty(); Description copied from interface: ScriptEditorControl; Text currently selected in the editor control. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; the selectedText property; See Also:. getSelectedText(). getSelectedText; public String getSelectedText(); Gets the value of the selectedText property. Specified by:; getSelectedText in interface EditableText; Property description:; Returns:; the value of the selectedText property; See Also:. selectedTextProperty(). getRegion; public TextArea getRegion(); Description copied from interface: ScriptEditorControl; Get the region representing this control, so it may be added to a scene. Specified by:; getRegion in interface ScriptEditorControl<TextArea>; Returns:. isUndoable; public boolean isUndoable(); Description copied from interface: ScriptEditorControl; Returns true if 'undo' can be applied to the control. Specified by:; isUndoable in interface ScriptEditorControl<TextArea>; Returns:. isRedoable; public boolean isRedoable(); Description copied from interface: ScriptEditorControl; Returns true if 'redo' can be applied to the control. Specified by:; isRedoable in interface ScriptEditorControl<TextArea>; Returns:. undo; public void undo(); Description copied from interface: ScriptEditorControl; Request undo. Specified by:; undo in interface ScriptEditorControl<TextArea>. redo; public void redo(); Description copied from interface: ScriptEditorControl; Request redo. Specified by:; redo in interface ScriptEditorControl<TextArea>. copy; public void copy(); Description copied from interface: ScriptEditorControl; Request copy the current selection. Specified by:; copy in interface ScriptEditorControl<TextArea>. cut; public void cut(); Description copied from interface: ScriptEditorControl; Request cut the current selecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:6737,interface,interface,6737,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['interface'],['interface']
Integrability,"n; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3226,interface,interface,3226,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['interface'],['interface']
Integrability,"n;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV. Returns zero - indicating no overlap... getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - Method in interface qupath.lib.images.servers.TileRequ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:534514,interface,interface,534514,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"nCVClassifiers.EMClusterer;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. getNearestNeighbo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:455764,interface,interface,455764,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"nCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:3633,interface,interface,3633,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['interface'],['interface']
Integrability,"nDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplayObject; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty; The current image display. See Also:. imageDisplayObjectProperty(). resourceManager; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty; The resource manager used to handle saving/loading. See Also:. resourceManagerProperty(). Constructor Details. BrightnessContrastSettingsPane; public BrightnessContrastSettingsPane(). Method Details. imageDisplayObjectProperty; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty(); The current image display. Returns:. resourceManagerProperty; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty(); The resource manager used to handle saving/loading. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:11961,interface,interface,11961,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['interface'],['interface']
Integrability,"nMaxAllowed in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minAllowed - ; maxAllowed - . isBrightnessContrastRescaled; public boolean isBrightnessContrastRescaled(); Description copied from interface: ChannelDisplayInfo; Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. Specified by:; isBrightnessContrastRescaled in interface ChannelDisplayInfo; Returns:. setMinDisplay; public void setMinDisplay(float minDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the min display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMinDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; minDisplay - ; See Also:. ImageDisplay. setMaxDisplay; public void setMaxDisplay(float maxDisplay); Description copied from interface: ChannelDisplayInfo.ModifiableChannelDisplayInfo; Set the max display value for this channel.; Note that it is *strongly* advised to use ImageDisplay.setMinMaxDisplay instead ; since this helps ensure that the ImageDisplay fires appropriate events etc. Specified by:; setMaxDisplay in interface ChannelDisplayInfo.ModifiableChannelDisplayInfo; Parameters:; maxDisplay - ; See Also:. ImageDisplay. getMinAllowed; public float getMinAllowed(); Description copied from interface: ChannelDisplayInfo; Get the min allowed display value.; This is only a hint. Specified by:; getMinAllowed in interface ChannelDisplayInfo; Returns:. getMaxAllowed; public float getMaxAllowed(); Description copied from interface: ChannelDisplayInfo; Get the max allowed display value.; This is only a hint. Specified by:; getMaxAllowed in interface ChannelDisplayInfo; Returns:. getMinDisplay; public float getMinDisplay(); Description copied from interface: ChannelDisplayInfo; Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:12303,interface,interface,12303,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['interface'],['interface']
Integrability,"nPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:4669,interface,interface,4669,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['interface'],['interface']
Integrability,"nPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:5436,interface,interface,5436,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['interface'],['interface']
Integrability,"nable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getTransform; public AffineTransform getTransform(); Get the affine transform for this server. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Description copied from class: AbstractImageServer; Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Specified by:; createServerBuilder in class AbstractImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:5269,interface,interface,5269,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['interface'],['interface']
Integrability,"nal Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getSuffix(); Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). Returns:. hasSuffix; public boolean hasSuffix(); Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. Returns:. toString; public String toString(). Overrides:; toString in class Object. parse; public static Version parse(String versionString); throws IllegalArgumentException; Parse a Version object representing a semantic version number from a String.; ; The version should be in the form x.y.z or x.y.z-additional, where additional ; should be a dot-separated patch version identifier. In the case that it is hyphen-separated, the hyphens will ; be replaced by dots. Parameters:; versionString - the version String to be parsed; Returns:; a Version parsed from this string, or UNKNOWN if the string is null or blank.; Throws:; IllegalArgumentException - if no version could be parsed from the String. compareTo; public int compareTo(Version o). Specified by:; compareTo in interface Comparable<Version>. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:4438,interface,interface,4438,javadoc/docs/qupath/lib/common/Version.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html,1,['interface'],['interface']
Integrability,"napshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. makeSnapshotFX(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot as a JavaFX Image, using the current viewer if a viewer is required. makeSnapshotFX(QuPathGUI, QuPathViewer, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.tools.GuiTools. Make a snapshot as a JavaFX Image. makeTiles(ROI, int, int, boolean) - Static method in class qupath.lib.roi.RoiTools. Make fixed-size rectangular tile ROIs for a specified area. makeUnsignedByteArrayWrapper(byte[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a byte array, returning values as doubles. makeUnsignedShortArrayWrapper(short[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a short array, returning values as doubles. makeViewerSnapshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the current viewer. makeViewerSnapshot(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the specified viewer. manageChildMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Request that a menubar is managed as a child menubar. manageMainMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Request that a menubar is managed as a main menubar. MANAGER - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; MAPS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; MARKDOWN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for markdown. MarkdownLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of JSON syntax in Qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:670035,wrap,wrapper,670035,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['wrap'],['wrapper']
Integrability,"nates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Beware this method! This will return all polygon points (useful e.g. for convex hull calcul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:8462,interface,interface,8462,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['interface'],['interface']
Integrability,"nce MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; static LocalNormalization.SmoothingScale; get2D(double sigma). Get a 2D Gaussian scale. static LocalNormalization.SmoothingScale; get3DAnisotropic(double sigma). Get a 3D anisotropic Gaussian scale. static LocalNormalization.SmoothingScale; get3DIsotropic(double sigma). Get a 3D isotropic Gaussian scale. double; getSigma(). Get the sigma value. double; getSigmaZ(PixelCalibration cal). Get the sigma value for the z dimension. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. get2D; public static LocalNormalization.SmoothingScale get2D(double sigma); Get a 2D Gaussian scale. Parameters:; sigma - sigma value for x and y; Returns:. get3DAnisotropic; public static LocalNormalization.SmoothingScale get3DAnisotropic(double sigma); Get a 3D anisotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. get3DIsotropic; public static LocalNormalization.SmoothingScale get3DIsotropic(double sigma); Get a 3D isotropic Gaussian scale. Parameters:; sigma - sigma value for x, y and z; Returns:. getSigma; public double getSigma(); Get the sigma value. Returns:. getSigmaZ; public double getSigmaZ(PixelCalibration cal); Get the sigma value for the z dimension.; This is interpreted depending upon the scale type:; ; if 2D, the result is 0; if 3D anisotropic, the result is equivalent to getSigma(); if 3D anisotropic, the result is equivalent to getSigma() scaled for isotropic according to the pixel calibration information. Parameters:; cal - pixel calibration; this is only relevant is the scale type is 3D isotropic.; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html:2155,depend,depending,2155,javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.SmoothingScale.html,2,['depend'],['depending']
Integrability,"nceTools. Compute the (unsigned) shortest distance from a coordinate to a target geometry, or zero if the coordinate occurs ; within. computeDistance(Coordinate, Geometry, PointOnGeometryLocator, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the shortest distance from a coordinate to a target geometry. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.JsonStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PlainStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PropertiesStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler;  ; computeEditorStyles(String) - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Compute styling for the specified text, considering it will be used in the main editor. computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler;  ; computeEditorStyles(String) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler;  ; computeFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute features. computeLocalBinaryPatterns16(SimpleImage, double) - Static method in class qupath.lib.analysis.features.LocalBinaryPatterns. Compute local binary pattern descriptor for a SimpleImage. computeLogRankTest(KaplanMeierData, KaplanMeierData) - Static method in class qupath.lib.analysis.stats.survival.LogRankTest. Compare KaplanMeier objects using log-rank test. computeRunningStatistics(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a RunningStatistics object using all the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:132396,interface,interface,132396,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ncv.tools.OpenCVTools. Apply a circular 2D mean filter to all channels of an image. MEASURE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; MEASURE_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_DETECTIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_TMA_CORES - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_TMA - Variable in class qupath.lib.gui.actions.CommonActions;  ; measureHaralick(SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Compute mean Haralick features from a SimpleImage, with optional masking. measurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Extract the specified measurement from a PathObject. Measurement - Interface in qupath.lib.measurements. Basic interface to define a measurement. MeasurementExportCommand - Class in qupath.lib.gui.commands. Dialog box to export measurements. MeasurementExportCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.MeasurementExportCommand. Creates a simple GUI for MeasurementExporter. MeasurementExporter - Class in qupath.lib.gui.tools. Helper class for exporting the measurements of one or more entries in a project. MeasurementExporter() - Constructor for class qupath.lib.gui.tools.MeasurementExporter;  ; MeasurementFactory - Class in qupath.lib.measurements. Deprecated. MeasurementFactory() - Constructor for class qupath.lib.measurements.MeasurementFactory. Deprecated.;  ; MeasurementList - Interface in qupath.lib.measurements. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType - Enum Class in qupath.lib.measurements. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:682023,interface,interface,682023,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"nd of the line). getYouTubeUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the QuPath YouTube channel. getYSum() - Method in class qupath.lib.regions.Padding. Get the total vertical padding (sum of x1 and x2). getZ() - Method in class qupath.lib.images.servers.TileRequest. Get the z-slice index for this request. getZ() - Method in class qupath.lib.regions.ImagePlane. Get the z-slice index. getZ() - Method in class qupath.lib.regions.ImageRegion. Get the z-slice index for the region. getZ() - Method in class qupath.lib.roi.AreaROI;  ; getZ() - Method in class qupath.lib.roi.EllipseROI;  ; getZ() - Method in class qupath.lib.roi.GeometryROI;  ; getZ() - Method in class qupath.lib.roi.LineROI;  ; getZ() - Method in class qupath.lib.roi.PointsROI;  ; getZ() - Method in class qupath.lib.roi.PolygonROI;  ; getZ() - Method in class qupath.lib.roi.PolylineROI;  ; getZ() - Method in class qupath.lib.roi.RectangleROI;  ; getZ() - Method in interface qupath.lib.roi.interfaces.ROI. Get z-stack slice index. getZoomToFitDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; getZPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible z-slice. getZSpacing() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the z-spacing, in the stored units. getZSpacingMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the z-spacing in microns, if available - or Double.NaN otherwise. getZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the z-spacing in microns, or Double.NaN if this is unknown. getZSpacingUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred z-spacing unit. GITHUB - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GitHubProject - Interface in qupath.lib.gui.extensions. Helper class to represent a project hosted",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:556247,interface,interfaces,556247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"nd the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.pl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:400483,interface,interface,400483,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"nd the text property of the action to an ObservableValue, bidirectionally if possible. TEXT_DETECTION_DB - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to TextRecognitionModel. TextAppendable - Interface in qupath.lib.gui.logging. Interface to indicate anything for which text can be appended. TextAreaControl - Class in qupath.lib.gui.scripting. Simple text area control (JavaFX) with basic operations and no styling support. TextAreaControl(boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to create a new text area and wrap it in a TextAreaControl. TextAreaControl(TextArea, boolean) - Constructor for class qupath.lib.gui.scripting.TextAreaControl. Constructor to wrap an existing text area and wrap it in a TextAreaControl. textFieldPrompt(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. textProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing the message text. textProperty() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; textProperty() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Text currently in the editor control. textProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; textProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getText(). theme - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; thin(Mat) - Static method in class qupath.opencv.tools.Thinning. Thin the binary image in Mat. Thinning - Class in qupath.opencv.tools. Implementation of the 3",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1019856,wrap,wrap,1019856,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['wrap'],['wrap']
Integrability,"ndardRegionFilters. Standard classification regions (hopefully all you will ever need). RegionRequest. Class for defining an image region that can also be used to request these region from an ImageServer. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ResourceManager. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. RoiEditor. Helper class for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (ROIs). RoiTools. A collection of static methods for working with ROIs. RoiTools.CombineOp. Methods of combining two ROIs. RotatedImageServer. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer.Rotation. Enum for rotations in increments of 90 degrees. RunningStatistics. Helper class for computing basic statistics from values as they are added. RunSavedClassifierWorkflowStep. WorkflowStep for running a saved PathObjectClassifier. SaveResourcePaneBuilder<T>. Small JavaFX pane to support saving object/pixel classifiers an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:49786,interface,interface,49786,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"nding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10208,interface,interface,10208,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['interface'],['interface']
Integrability,"ndsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsY() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsY() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsY() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the y coordinate for the top left of the ROI bounding box. getBoundsY() - Method in class qupath.lib.roi.LineROI;  ; getBoundsY() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:341321,interface,interface,341321,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ne the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the highest-resolution image (usually 1.0); scale - the scale used to define successive downsamples; Returns:; this builder; See Also:. scaledDownsampling(double). channels; public OMEPyramidWriter.Builder channels(int... channels); Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. Parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10483,depend,depend,10483,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,2,['depend'],['depend']
Integrability,"ned as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 2 (since the line is defined by its end points). Specified by:; getNumPoints in interface ROI; Returns:. getX1; public double getX1(); Get the first x co-ordinate (start of the line). Returns:. getY1; public double getY1(); Get the first y co-ordinate (start of the line). Returns:. getX2; public double getX2(); Get the second x co-ordinate (end of the line). Returns:. getY2; public double getY2(); Get the second y co-ordinate (end of the line). Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:5150,interface,interface,5150,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['interface'],['interface']
Integrability,"ner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:4373,interface,interface,4373,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['interface'],['interface']
Integrability,"ner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict(Map<String, T>) - Method in interface qupath.opencv.dnn.PredictionFunction. Call a function that takes one or more inputs to produce zero or more outputs. predict(Mat) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. predict(Mat) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that takes a single input and gives a single output. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer. Default implementation calling. predict(Mat, Mat, Mat) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier. Default implementation calling. predict(Mat, Mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:775360,interface,interface,775360,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ner; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected); Description copied from interface: PathObjectSelectionListener; Fired when the selected objects have changed. Specified by:; selectedPathObjectChanged in interface PathObjectSelectionListener; Parameters:; pathObjectSelected - the primary selected object; previousObject - the previous primary selected object; allSelected - all currently selected objects (including the primary). requiresTileRegion; public boolean requiresTileRegion(String serverPath,; ImageRegion region); Description copied from interface: TileListener; Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:36421,interface,interface,36421,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['interface'],['interface']
Integrability,"nes a class encapsulating all that is required to build an ImageServer. ImageServerBuilder.UriImageSupport<T>. Helper class to summarize which ImageServers can be build by a particular ImageServerBuilder ; for a given URI, and a level of confidence. ImageServerMetadata. Class for storing primary ImageServer metadata fields. ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLangua",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:25188,interface,interface,25188,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"nes the result by subtracting corresponding values. splitViewer(QuPathViewer, boolean) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; sqrt() - Static method in class qupath.opencv.ops.ImageOps.Core. Calculate the square root of all pixel values. SQUARE - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Square cap. Stain_1 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. First stain after color deconvolution. Stain_2 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Second stain after color deconvolution. Stain_3 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Third stain after color deconvolution. StainVector - Class in qupath.lib.color. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector() - Constructor for class qupath.lib.color.StainVector. Default constructor, required for Externalizable interface. StainVector.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:994846,interface,interface,994846,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"new ImageServerMetadata object. ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. ImageServerProvider. Service provider for creating ImageServers from a given path - which may be a file path or URL. ImageServers. Helper class for working with ImageServer objects. ImageSupplier<S>. A functional interface for supplying an image region for processing. ImageWriter<T>. Interface for defining class that can write images. ImageWriterTools. Static methods to access ImageWriter objects and write images. ImmutableDimension. An immutable alternative to Java's AWT Dimension. InfoMessage. An informative message that should be shown to the user. InfoMessage.MessageType. The type of message, which can be used for styling. IntensityFeaturesPlugin. Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles. InteractiveObjectImporter. Static methods to import object(s) from different sources. Interpolation. Methods to help with requesting interpolated values. IntParameter. Parameter to represent an integer numeric value. JavadocViewer. Command to show javadocs in a WebView. JpegWriter. ImageWriter implementation to write JPEG images using ImageIO. JsonImageServerBuilder. ImageServerBuilder that constructs an ImageServer from a JSON representation. JsonLanguage. Class for the representation of JSON syntax in QuPath. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LabeledImageServer. A special ImageServer implementation that doe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:25570,message,message,25570,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['message'],['message']
Integrability,"nfirm dialog (OK/Cancel). Parameters:; title - ; text - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; Node node); Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. Parameters:; title - ; node - ; Returns:. showMessageDialog; public static boolean showMessageDialog(String title,; String message); Deprecated.; Show a standard message dialog. Parameters:; title - ; message - ; Returns:. showConfirmDialog; public static boolean showConfirmDialog(String title,; Node node); Deprecated.; Show a confirm dialog (OK/Cancel). Parameters:; title - ; node - ; Returns:. showYesNoDialog; public static boolean showYesNoDialog(String title,; String text); Deprecated.; Show a Yes/No dialog. Parameters:; title - ; text - ; Returns:. showYesNoCancelDialog; public static Dialogs.DialogButton showYesNoCancelDialog(String title,; String text); Deprecated.; Show a Yes/No/Cancel dialog. Parameters:; title - dialog box title; text - prompt message; Returns:; a Dialogs.DialogButton indicating the response (YES, NO, CANCEL). showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Deprecated.; Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showInputDialog; public static Double showInputDialog(String title,; String message,; Double initialInput); Deprecated.; Show an input dialog requesting a numeric value. Only scientific notation and digits ; with/without a decimal separator (e.g. ""."") are permitted. Parameters:; title - ; message - ; initialInput - ; Returns:; Number input by the user, or NaN if no valid number was entered, or null if cancel was pressed. showInputDialog; public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInpu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:6796,message,message,6796,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"nfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of values. isMutable; boolean isMutable(); Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData.; ; For example, a transform based on color deconvolution should be flagged as mutable because stain vectors change, ; while a simple channel separation is not considered mutable (since the pixel values for the underlying image remain constant in QuPath). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:2538,depend,dependent,2538,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,1,['depend'],['dependent']
Integrability,"ng box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8209,interface,interface,8209,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['interface'],['interface']
Integrability,"ng classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (so default can be used). Specified by:; resetValue in interface Parameter<S>. getValueOrDefault; public String getValueOrDefault(); Description copied from interface: Parameter; Get the current set value, or any default if no value has been set. Specified by:; getValueOrDefault in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValue(). getPrompt; public String getPrompt(); Description copied from interface: Parameter; Get some prompt text that may be d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3900,interface,interface,3900,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,2,['interface'],['interface']
Integrability,"ng clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:3748,interface,interface,3748,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['interface'],['interface']
Integrability,"ng message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an information message with static text and a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3598,message,message,3598,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['message'],['message']
Integrability,"ng on the ImagePlus of an PathImage<ImagePlus>. convertToImagePlus(String, ImageServer<BufferedImage>, BufferedImage, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Convert a BufferedImage into a PathImage<ImagePlus>. convertToImagePlus(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. convertToImageProcessor(BufferedImage, int) - Static method in class qupath.imagej.tools.IJTools. Extract pixels as an an ImageProcessor from a single band of a BufferedImage. convertToJson(Map<String, ?>) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a Map to a one-line JSON representation, omitting hidden parameters. convertToJson(ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a ParameterList a one-line JSON representation, omitting hidden parameters. convertToObjects(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter. Convert the output of a pixel processor to a list of PathObjects. convertToOpticalDensitySum(ColorProcessor, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Calculate optical density values for the red, green and blue channels, then add these all together. convertToPathObject(Roi, double, double, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi. convertToPathObject(Roi, double, Function<ROI, PathObject>, ImagePlus) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. convertToPathObject(ImagePlus, ImageServer<?>, Roi, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Deprecated.; use instead IJTools.convertToPathObject(Roi, d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:144182,interface,interface,144182,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ng other nodes recursively. getContentsOfType(Parent, Class<T>, boolean) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. getContextMenu() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getContextMenu() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the context menu for the control. getContextMenu() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getConvexHull() - Method in class qupath.lib.roi.AreaROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.GeometryROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolygonROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.PolylineROI. Default implementation using JTS. getConvexHull() - Method in class qupath.lib.roi.EllipseROI;  ; getConvexHull() - Method in interface qupath.lib.roi.interfaces.ROI. Get a ROI representing the convex hull of this ROI. getConvexHull() - Method in class qupath.lib.roi.LineROI;  ; getConvexHull() - Method in class qupath.lib.roi.PointsROI;  ; getConvexHull() - Method in class qupath.lib.roi.RectangleROI;  ; getConvexHull(List<Point2>) - Static method in class qupath.lib.roi.ConvexHull. TODO: Consider a more efficient convex hull calculation. getCoreClasses() - Static method in class qupath.lib.gui.scripting.QPEx. Get a list of core classes that are likely to be useful for scripting. getCoreClasses() - Static method in class qupath.lib.scripting.QP. Get a list of core classes that are likely to be useful for scripting. getCount() - Method in class qupath.lib.gui.actions.InfoMessage. Counts associated with the message, or -1 if the count is null. getCountsForBin(int) - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram counts for the specified bin. getCountsTransform() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:362788,interface,interface,362788,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ng with ObjectClassifiers. FeaturePreprocessor. Create a preprocessor for an image or training matrix. FeaturePreprocessor.Builder. Builder to create a custom FeaturePreprocessor. FileCopier. Copy files to an output directory, prompting the user if necessary. FileFormatInfo. Helper class that, given a path, determines some basic file format information without enlisting; the help of an external library or performing extensive parsing of the data. FileFormatInfo.ImageCheckType. Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. FileMenuActions;  ; FillAnnotationHolesPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. FindConvexHullDetectionsPlugin<T>. Plugin to identify/remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:18739,interface,interface,18739,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['interface'],['interface']
Integrability,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:3564,interface,interface,3564,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,2,['interface'],['interface']
Integrability,"ngle2D to the x,y,width,height of a ROI. getBoundsHeight() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsHeight() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the height of the ROI bounding box. getBoundsHeight() - Method in class qupath.lib.roi.LineROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsHeight() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsWidth() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the width of the ROI bounding box. getBoundsWidth() - Method in class qupath.lib.roi.LineROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsWidth() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsX() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsX() - Method in class qupath.lib.roi.RectangleROI;  ; getBoundsX() - Method in class qupath.lib.roi.AreaROI;  ; getBoundsX() - Method in class qupath.lib.roi.GeometryROI;  ; getBoundsX() - Method in interface qupath.lib.roi.interfaces.ROI. Returns the x coordinate for the top left of the ROI bounding box. getBoundsX() - Method in class qupath.lib.roi.LineROI;  ; getBoundsX() - Method in class qupath.lib.roi.PointsROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsX() - Method in class qupath.lib.roi.PolylineROI;  ; getBoundsY() - Method in class qupath.lib.roi.EllipseROI;  ; getBoundsY(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:340118,interface,interfaces,340118,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interfaces']
Integrability,"ng timestamp); Return the frame visible at the specified timestamp (in ms). Parameters:; timestamp - ; Returns:; the corresponding frame. visibleRegionChanged; public void visibleRegionChanged(QuPathViewer viewer,; Shape shape); Description copied from interface: QuPathViewerListener; Called when the visible region has changed in a viewer. Specified by:; visibleRegionChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer whose visible region has changed.; shape - shape representing the new visible region (in image pixel coordinates).; This is rectangular, but may also be rotated. getMousePointIfRequired; protected Point2D getMousePointIfRequired(). getActiveToolIfRequired; protected PathTool getActiveToolIfRequired(). getEyePointIfRequired; protected Point2D getEyePointIfRequired(). getEyeFixatedIfRequired; protected Boolean getEyeFixatedIfRequired(). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. recordingProperty; public BooleanProperty recordingProperty(); Return the recording property of this ViewTracker. Returns:; recording property; See Also:. isRecording(); setRecording(boolean). imageDataChanged; public void imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew); Description copied from interface: QuPathViewerListener; Called with the image data within a viewer has changed. Specified by:; imageDataChanged",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html:8566,interface,interface,8566,javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/recording/ViewTracker.html,1,['interface'],['interface']
Integrability,"nherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, getServerType, readBufferedImage, readRegion, readRegion. Constructor Details. TransformingImageServer; protected TransformingImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:2885,wrap,wrapped,2885,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,2,['wrap'],['wrapped']
Integrability,"nherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; public TilerPlugin(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:2976,interface,interface,2976,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['interface'],['interface']
Integrability,"nimum filter radius. openingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. openSavedData(QuPathViewer, File, boolean, boolean) - Method in class qupath.lib.gui.QuPathGUI. Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open. OpenSlide - Class in qupath.lib.images.servers.openslide.jna. Minimal Java wrapper for OpenSlide. openslide_close(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_detect_vendor(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_dimensions(long, String, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_associated_image_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_error(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_icc_profile_size(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_count(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_dimensions(long, int, long[], long[]) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_level_downsample(long, int) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_names(long) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_property_value(long, String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_get_version() - Method in interface qupath.lib.images.servers.openslide.jna.OpenSlideJNA;  ; openslide_open(String) - Method in interface qupath.lib.images.servers.openslide.jna.OpenS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:727910,interface,interface,727910,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"ning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Dep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10412,message,message,10412,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['message'],['message']
Integrability,"nits are unspecified). getTimeUnit() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the time unit for a time series. getTimeUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get the time unit for a time series. getTMACore(int, int) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(int, int) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get the TMACoreObject for a specified grid location. getTMACore(String) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(String) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Retrieve a TMA core based upon its name. getTMACoreForPixel(TMAGrid, double, double) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extract a list of TMA cores from an object hierarchy. getTMAGrid() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. getTool(String) - Static method in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:537966,interface,interface,537966,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
Integrability,"nnotations. ANY_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classification. apply(Mat) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat) - Method in interface qupath.opencv.ops.ImageOp. Apply operation to the image. apply(Mat) - Method in class qupath.opencv.ops.ImageOps.PaddedOp;  ; apply(Mat, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor. Apply preprocessing in-place. apply(Mat, DoubleUnaryOperator) - Static method in class qupath.opencv.tools.OpenCVTools. Apply an operation to the pixels of an image. apply(ImageData<Buf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:40911,interface,interface,40911,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['interface'],['interface']
